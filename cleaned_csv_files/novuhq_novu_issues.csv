issue_id,issue_number,issue_title,issue_body,comment_id,comment_body
2673254420,7071,🐛 Bug Report: ExpressJS Quickstart = Directory Import error on Nodejs v20 and Deno v2,"### 📜 Description

I have an expressjs NodeJS (v20) project with type: module and got import errors following the quickstart guide for express.

https://docs.novu.co/quickstart/express

We are hoping to move to Deno v2 (TypeScript) soon, so I ran the project in Deno + TypeScript and got error:

`error: [ERR_UNSUPPORTED_DIR_IMPORT] Directory import 'file:///<user>/backend/node_modules/.deno/@novu+shared@2.1.2/node_modules/@novu/shared/dist/esm/config' is not supported resolving ES modules imported from 'file:///<user>/backend/node_modules/.deno/@novu+shared@2.1.2/node_modules/@novu/shared/dist/esm/index.js'`

### 👟 Reproduction steps

Run expressjs in Node.js v20 and set `""type"": ""module"",`.

OR

Setup expressjs in Deno V2 using TypeScript

Quickstart guide for express and has export error in both.

### 👍 Expected behavior

No export error.

### 👎 Actual Behavior with Screenshots

Terminal error is pasted above:

### Novu version

Novu SaaS

@novu/framework@2.5.1

EDIT:

This error does not occur on @novu/framework@2.3.0

### npm version

NA

### node version

v20.18.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2658312617,6994,🐛 Bug Report: Incompatibility between nest-swagger-ui and @novu/framework,"### 📜 Description

When the swagger explorer tries to check the controller of the nest integration and their metadata, it failes with the following error:
![image](https://github.com/user-attachments/assets/70b8a13a-aff3-4c19-ae87-7cad2e8ea431)


### 👟 Reproduction steps

NestJs Repository with additional dependency: @nestjs/swagger & swagger-ui-express

I guess the origin of this error is maybe, that decorator data is not exported at build process. (but I am not sure to be honest)

### 👍 Expected behavior

Should be able to fetch metadata from the classes and reuse them.

### 👎 Actual Behavior with Screenshots

![image](https://github.com/user-attachments/assets/047d5948-8db9-4e6b-a602-ee5265cd76b4)

### Novu version

@novu/framework@2.5.0

### npm version

7

### node version

18

### 📃 Provide any additional context for the Bug.

Potential fix:
https://stackoverflow.com/questions/58596139/nestjs-swagger-issue

Use emitDecoratorMetadata in tsconfig.json

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2654974353,6982,🐛 Bug Report: Node <=18 - `Unknown BridgeError: crypto is not defined`,"### 📜 Description

When using Node 18 that doesn't contain the global `crypto` WebCrypto API, Framework 2.4.0 fails to be invoked with `strictAuthentication: true` during the HMAC validation.

```bash
[Error]: Unknown BridgeError: crypto is not defined
    at bt.handleError (/app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:6281)
    at bt.handleAction (/app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:4889)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:3618 {
  data: {
    stack: 'ReferenceError: crypto is not defined\n' +
      '    at Or (/app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:1:11777)\n' +
      '    at bt.validateHmac (/app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:6587)\n' +
      '    at bt.handleAction (/app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:4619)\n' +
      '    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
      '    at async /app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:3618'
  },
  statusCode: 500,
  code: 'BridgeError'
}
```

### 👟 Reproduction steps

1. Install `@novu/framework`@2.4.0, serve a workflow with a Node 18 or less runtime.
2. Attempt to sync the Workflow with `strictAuthentication: true`

### 👍 Expected behavior

Sync should be successfull

### 👎 Actual Behavior with Screenshots

Sync fails with error:

```bash
[Error]: Unknown BridgeError: crypto is not defined
    at bt.handleError (/app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:6281)
    at bt.handleAction (/app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:4889)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:3618 {
  data: {
    stack: 'ReferenceError: crypto is not defined\n' +
      '    at Or (/app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:1:11777)\n' +
      '    at bt.validateHmac (/app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:6587)\n' +
      '    at bt.handleAction (/app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:4619)\n' +
      '    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
      '    at async /app/node_modules/@novu/framework/dist/cjs/servers/express.cjs:95:3618'
  },
  statusCode: 500,
  code: 'BridgeError'
}
```

### Novu version

Novu SaaS

### npm version

_No response_

### node version

18

### 📃 Provide any additional context for the Bug.

A polyfill for global `crypto` should be added in Node environments with version 18 or less.

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2651981917,6954,🐛 Bug Report: @novu/framework: 2.4.0 Breaking imports,"### 📜 Description

version 2.4.0 no longer exports the type Workflow, causing imports to break in typescript

### 👟 Reproduction steps

install latest @novu/framework
Try importinng the Workflow type

### 👍 Expected behavior

Type should be exported and should be accessible in client code, where type inference may not be straight forward, for example in a custom monorepo

### 👎 Actual Behavior with Screenshots

![image](https://github.com/user-attachments/assets/614d4cd1-5934-4908-947d-43f72fffcd1b)


### Novu version

Novu SaaS

### npm version

9.5.1

### node version

18.16.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2648357872,6916,🚀 Feature: Use OAuth 2.0 for outlook 365 email integration,"### 🔖 Feature description

Currently Novu uses basic auth for outlook 365 based on [nodemailer](https://github.com/novuhq/novu/blob/next/packages/providers/src/lib/email/outlook365/outlook365.provider.ts#L33).

### 🎤 Why is this feature needed ?

Microsoft will drop the support of basic auth in September 2025

![image](https://github.com/user-attachments/assets/c25820e2-2af4-4167-9908-19adda818516)


### ✌️ How do you aim to achieve this?

By adding support of Oauth 2.0 and option to select this in integration store form

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2640240729,6881,🐛 Bug Report: Next 15 fails to build with Novu serve(),"### 📜 Description

Trying to build for production

### 👟 Reproduction steps

1. Install Novu with a Next 15 app as described in the Novu setup guide
2. Create the route handler using Novu's serve() function as explained in the docs
3. Try building your app

### 👍 Expected behavior

Build successfully

### 👎 Actual Behavior with Screenshots

Fails to compile
![CleanShot 2024-11-07 at 03 20 22](https://github.com/user-attachments/assets/24438420-da0e-4691-9ad1-37ebfb77543f)


### Novu version

Novu SaaS

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

After NextJS 15 the typing changed for Route Handlers. The second argument is now of type ""RouteContext"", which causes this error.

Inngest, another open source project with very similar structure to Novu, has resolved the issue for their product. The relevant source code from Inngest (and how they fixed the issue) can be found here: https://github.com/inngest/inngest-js/blob/main/packages/inngest/src/next.ts

Using their source I was able to create a custom Novu serve() function and get this working, but it would be nice to have this out-of-the-box with Novu.


### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2631575166,6834,🐛 Bug Report: email step in queued when generating email attachment for 6 seconds,"### 📜 Description

using sendgrid provider to send email with attachments, when rendering a large attachment for around 6 seconds, the email can't be sent and stuck.

### 👟 Reproduction steps

In sendgrid provider, when rending a large attachment, the time spent for rendering is around 6 seconds; Novu can't send the email and stuck in email step.

```
export const myWorkflow = workflow(
 'WorkflowName', 
  async ({ step, payload, subscriber }) => {
    await step.email(
      'send-email',
      async () => {
        const content = ListingOrderQcAcceptedEmailSeller(
          payload.emailData.content,
        );

        return {
          subject: payload.emailData.subject,
          body: render(content),
        };
      },
      {
        providers: {
          sendgrid: async () => {
          
            console.time('process');
            const pdfContent = await convertHtml2Pdf(
              render(
                TaxInvoiceProducePlusFreight(
                  payload.emailData.attachmentList[0].content,
                ),
              ),
            );
            console.timeLog('process');
            console.timeEnd('process');
            const attachments = [];
            attachments.push(
              getAttachment({
                fileName: payload.emailData.attachmentList[0].fileName,
                content: pdfContent,
              }),
            );

            // @ts-ignore
            return {
              attachments,
            };
          },
        },
      },
    ),
  },
  {
    payloadSchema,
  },
);
```

### 👍 Expected behavior

It should send email with attachment.

### 👎 Actual Behavior with Screenshots

stuck in email sending.
![Screenshot 2024-11-04 at 11 01 38 AM](https://github.com/user-attachments/assets/369ec0cb-0ad3-48e4-b3f5-3670e946b738)


### Novu version

Novu SAAS

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

it actually did not send the email with attachments.

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2628665969,6822,🚀 Feature: Customized Preference System exposed to bridge,"### 🔖 Feature description

With the new version v2 and the introduced bridge processing, novu could also introduce a custom preference system, where devs can define schemas for the preferences like the existing control/payload schema, which are then exposed to the customer and to the workflows as well.

### 🎤 Why is this feature needed ?

Several different requests like customized digest for workflows are already requested and I think with this system, the chance to support more of them out of the box is even higher. 
When used with topics (#6789) the dev can define relations between topics and workflows much more specific

Use Cases I could think of:
- Customized digest
- Customized E-Mail behavior, f.ex. setting if email should include personal data or should be anonymized
- Define for each topic (f.ex. asset or post) which workflow (by preference system), should be used (like github customized notifications for each repo)

### ✌️ How do you aim to achieve this?

1. Define Preference Schema at workflows / maybe also on topics (#6789)
2. pass them as variables to the workflow

### 🔄️ Additional Information

Example:
```
workflow(""xxx"", async ({ step, subscriber, preferences, topic }) => {
  const { name: topicName, control: topicControl, preferences: topicPreferences } = topic ?? {};;
  await step.digest(""custom-digest"", () => ({ unit: (topicPreferences?.interval ?? preferences.interval) === 'daily' ? 'day' : 'week', amount: 1 })
}, {
   preferenceSchema: z.object({
      interval: z.enum([""daily"", ""weekly""]).default(""daily""),
   })
})
```

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2620388939,6789,🚀 Feature: Topic Processors,"### 🔖 Feature description

Novu topics could be extended with several new functionality to improve the targeted delivery audience by integrating custom processors into the @novu/framework package over the bridgeUrl with the user provided backend.
Some of the provided concept-ideas may also be aplicable to introduce in the ui as well.

### 🎤 Why is this feature needed ?

Novu topics are by desing currently not secured, not strictly tied to a product database and sycing topics in advance is a huge task exspecialy for larger and existing systems, therefore this integration would help to fetch/validate data at runtime and only when its required. 
With such integration, users can also be more confident to use those topics, exspecialy for privacy related content and ensure the targeted users are the wanted ones.
This would also reduce complexity when using a microservice architecture. when querying subscribers beforehand.

### ✌️ How do you aim to achieve this?

I will explain some concepts, which may or may not make sense :)

Integrate the user provided backend with processors like when using workflows. Several different processors, which can be tied to a topic name.

*Processing Types:*
- *beforeTrigger*: this could be used to determine if additional users should be added to the topic
- *validateSubscribers*: this could be used to validate if the subscriber is still valid or if he/she has to be removed from the topic, could also be used to execute it in batch, if the subscribers are very many, when a subscriber is registering themselfs to the topic, this can be used as a validator
- *onAddSubscriber*: could be used to do additional things, after a subscriber is added
- *onRemoveSubscriber*: could be used to do additional things, after a subscriber is removed

*Topic Variables*: Defining a controll/payload schema could help to pass some some additional properties to the processors. f.ex. to determine which subscribers to fetch. As an alternative to variables the processors coul use wildcards. But for type saftly, i would suggest using a schema here.

*Timeouts/TTL*: Each Data returned by a processor should have a ttl, so in a production use-case the amount of executions is also limited/reduced.

*Invalidation*: With this aproach, existing processor data could be manualy invalidated to enforce a new run for the topic, when triggered next time. F.ex. someone is leaving an organization => invalidate all related topics.

*Subscription Status*: to overwrite some of the processors and remove the need to save additional data in the user-provided backend, subscriptions could have 3 status: 1. subscribed, 2. unsubscribed, 3. unknown => this would enable users to unsubscibe, even when the topicProcessor provides them => users could keep their custom preferences

*Preferences & Self-Service*: as mentioned within #6822 users can be enabled to define preferences and the validator function above can be used to determine, if they can self-register with the topic. This would enable frontend to register users to notifications, even if the topic has not been triggered/setup before.

*Example:*
```
topic(
    'organization',
{
   async beforeTrigger ({ payload, control }) => {
      // custom processors
      // return an object of subscribers
      return { subscribers: [] }
   },
   async validateSubscribers ({ payload, control, subscribers, isBatch }) => {
      // custom processors
      return { invalidSubscriberIds: [] };
   },
   async onAddSubscribers({ payload, control, subscribers, isBatch }) => {
      // custom processors
   },
   async onRemoveSubscribers({ payload, control, subscribers, isBatch }) => {
      // custom processors
   },
},
{
   payloadSchema: z.object({
      organizationId: z.string(),
      role: z.enum(['DEFAULT', 'ADMIN']).default('DEFAULT'),
   }),
   controlSchema: z.object({
      fetchType: z.enum([""DEFAULT"",""CUSTOM""]).default([""DEFAULT""]),
   }),
   ttl: 6 * 60 * 60 * 1000,
});
```

### 🔄️ Additional Information

As discussed before via email, with @jainpawan21 this topic may already be on your timeline. I wanted to take the oportunity to share some of our current thoughts on this one, so maybe some others could share their opionions as well. 


I would love to participate on discussions and maybe contribute at some points.

Thanks for your work and always for the support :)

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2615621300,6777,🐛 Bug Report: @novu/frameworks throws no reasonable error when having invalid configuration,"### 📜 Description

We had an error, which was releated, to an invalid configuration of our env variables: NOVU_API_URL and NOVU_SECRET_KEY.
We had used the @novu/node lib before and therefore had env in place which met the naming from this lib. (NOVU_BACKEND_URL/NOVU_API_KEY)

This resulted in a misconfiguration (our fault, we could have been reading better :) ) with a strange/wrong debugging experience.
We had to take a deep dive why the following error was present and we were not able to pin down the exact origin for a few hours.

### 👟 Reproduction steps

1. Deploy self-hosted version
2. Deploy bridge server without proper env configuration

### 👍 Expected behavior

The system tried to reach the cloud url of novu instead of the self-hosted on, which is correct, but the error should represent, that the endpoint could not be reached with this configuration. like a 401 error or similar. The errors in the console of @novu/framework should also be more detailed.

Other suggestions: 
- we would also suggest to use a similar naming across libs for the same thing :)
- manualy configurable keys, without need to just use the env vars.

### 👎 Actual Behavior with Screenshots
The error present at the ui was:
Workflow with id: order-recieved has an invalid state. Step with id: in-app has invalid result. Please provide the correct step result.
![Unbekannt](https://github.com/user-attachments/assets/d7656893-907d-4bb1-aa36-0b831c4c3e2c)
The console just shows, that the step could not be hydrated.
![image](https://github.com/user-attachments/assets/dbafd520-ca63-4bb0-a771-776fd9bf9e2b)
The ui shows this weird error. We think this is due to the fact, that the step before could not be handled because of the misconfiguration.
![Unbekannt](https://github.com/user-attachments/assets/eb8a2980-8850-4db7-bd2a-beab874d6637)

### Novu version

Self Hosted

### npm version

k.A.

### node version

20

### 📃 Provide any additional context for the Bug.

selfhosted@2.0.0
@novu/framework@2.3.0 also tested on @novu/framework@2.0.0

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None


### Our workflow
```
workflow(
        'order-recieved',
        async ({ step, payload, subscriber }) => {
            await step.inApp('in-app', async () => {
                return {
                    subject: tolgee.t('inApp.orderRecieved.subject', {
                        internal_number: payload.order?.internal_number,
                        language: subscriber?.locale,
                    }),
                    body: tolgee.t('inApp.orderRecieved.body', {
                        internal_number: payload.order?.internal_number,
                        language: subscriber?.locale,
                    }),
                }
            });

            await step.push('send-push', async () => {
                return {
                    subject: tolgee.t('push.orderRecieved.subject', {
                        internal_number: payload.order?.internal_number,
                        language: subscriber?.locale,
                    }),
                    body: tolgee.t('push.orderRecieved.body', {
                        internal_number: payload.order?.internal_number,
                        language: subscriber?.locale,
                    }),
                }
            });

            await step.email('send-email', async () => {
                // TODO: support other order types
                if (payload.order.type !== 'SHOP_PURCHASE_ORDER')
                    throw new Error(`processing of incorrect order type could not be performed. ${payload.order.type}`)

                // the eshop should only support those 3 languages
                const language = ['de', 'en', 'fr'].includes(subscriber?.locale || '') ? subscriber?.locale : 'en';
                await ConfigUtil.init();
                const subject = '...';
                const body = '...';
                return {
                    subject: subject,
                    body: body,
                };
            });
        })
```",,
2612664892,6769,🐛 Bug Report: Framework - cant import NovuModule  from '@novu/framework/dist/servers/nest';,"### 📜 Description

I am trying to integrate NovuModule into my existing NestJS application, found that Novu released NestJS feature on 10/10/2024,  followed the instructions to integrate NovuModule, but cant import NovuModule from ""@novu/framework/nest"".

### 👟 Reproduction steps

Followed the instructions from https://docs.novu.co/quickstart/nestjs, tried to import NovuModule from ""@novu/framework/nest"", seems Novu did not export NovuModule properly, below are npm dependencies.
``` 
 ""@novu/framework"": ""^2.3.0"",
   ""xero-node"": ""^5.1.0"",
    ""zod"": ""^3.23.8"",
   ""zod-to-json-schema"": ""^3.23.5""
```

Cannot find module '@novu/framework/nest' or its corresponding type declarations.
  There are types at '/Users/xx/SourceCode/api/node_modules/@novu/framework/dist/servers/nest.d.ts', but this result could not be resolved under your current 'moduleResolution' setting. Consider updating to 'node16', 'nodenext', or 'bundler'.ts(2307)

### 👍 Expected behavior

should be able use nest NovuModule

### 👎 Actual Behavior with Screenshots


![Screenshot 2024-10-25 at 9 22 31 AM](https://github.com/user-attachments/assets/0e1d5743-c19f-454d-9b75-3f0aa68c98a0)


### Novu version

Novu framework 2.3.0

### npm version

10.8.2

### node version

20.17.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2607638728,6750,🌟 Feedback Needed: Rebuilding the workflow editor experience,"## Context
Recently, we have re-built our content and workflow execution engine by introducing the new [Framework SDK](https://docs.novu.co/sdks/framework/typescript/overview),  the goal was to establish a flexible and customizable foundation so that simple use cases can be done with a GUI, and advanced use cases can be done from code with great Developer Experience.

Right, we are looking to redesign the dashboard interface for the workflow editor and other pages based on the learnings we have so far to provide an even better no-code experience while still allowing the rest to extend with framework-based workflow definitions and run-time.

## What's next?
The design and implementation of the new dashboard are currently in motion. We are trying to incorporate as much learning as we can into the new UX flow.

<img width=""1920"" alt=""Cover-dashboard"" src=""https://github.com/user-attachments/assets/2e1e40ca-0396-4cf6-9822-8d01d76a7e92"">

Also, we have partnered with Arik from [Maily](https://maily.to/) to create the best email editing experience that could've easily been extended with custom components and embed it into the new step editor experience. Check the [Live Maily Playground](https://maily.to/playground).

## How you can help?

As a comment to this issue, write any feedback you have with the current workflow management experience focusing on:
- No-Code and Code email editor experience
- Working with more complex content forms (Digest, etc..)
- Overall UX challenges you are facing with the existing design
- Anything else!


",,
2606701544,6747,🐛 Bug Report: Docker Image v2.0.0 Environment Variables Not Applied to Frontend URLs,"### 📜 Description

The web container in the self-hosted Docker setup doesn't properly apply the environment variables to the frontend application URLs. When changing environment variables like `REACT_APP_API_URL` or `REACT_APP_WS_URL`, the frontend application continues to use the default/build-time URLs (e.g localhost:3000 for API) instead of the runtime environment variables.

### 👟 Reproduction steps

1. Use the official docker-compose.yml file for Novu v2.0.0
2. Set custom environment variables for the web container:

```yaml
web:
    environment:
      REACT_APP_API_URL: ""http://custom-domain.com:3000""
      REACT_APP_WS_URL: ""http://custom-domain.com:3002""
```

3. Run docker-compose up -d
4. Access the web interface at localhost:4200
5. Open browser developer tools and inspect network requests
6. Observe that API and WebSocket requests are still being made to the default URLs instead of the custom domain

### 👍 Expected behavior

The web container should use the provided environment variables for API and WebSocket URLs, allowing proper configuration for custom domains and different deployment scenarios.

### 👎 Actual Behavior with Screenshots

The web container ignores the environment variables and continues to use the default URLs hardcoded during the image build. Network requests in browser developer tools show connections being attempted to default URLs instead of the configured custom domain.

### Novu version

2.0.0

### npm version

10.8.2

### node version

v20.18.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2602563194,6735,🐛 Bug Report: nestjs bootstrap fails due swagger being unable to serialize operations,"### 📜 Description

Nestjs application fails to bootstrap because of invalid swagger definition

### 👟 Reproduction steps

i have a minimal reproduction using v2.3.0

my app imports module has 


```
SecretsModule,
        NovuModule.registerAsync({
            imports: [SecretsModule],
            inject: [NovuConfig, SystemConfig],
            useFactory: (novuConfig: NovuConfig, systemConfig: SystemConfig) => ({
                apiPath: '/novu',
                workflows: [],
                client: new Client({
                    secretKey: novuConfig.apiKey,
                    strictAuthentication: systemConfig.isProduction(),
                }),
            }),

```

in my main.ts i have

   ```
 const apiDocsConfig = new DocumentBuilder()
        .setTitle('Finvo API')
        .setDescription('APIs for Finvo')
        .setVersion('1.0.0')
        .addBearerAuth()
        .build();
    function operationIdFactory(controllerKey: string, methodKey: string) {
    const strippedMethodKey = methodKey.replace('reserved', '');
    const strippedControllerKey = controllerKey.replace('Controller', '');
    return `${strippedControllerKey}${capitalize(strippedMethodKey)}`;
}
    SwaggerModule.setup(`docs`, app, SwaggerModule.createDocument(app, apiDocsConfig, { operationIdFactory }), {
        swaggerOptions: {
            operationsSorter: 'alpha',
            tagsSorter: 'alpha',
            persistAuthorization: true,
        },
        customSiteTitle: 'Finvo API',
        yamlDocumentUrl: `/docs/yaml`,
    });
```

### 👍 Expected behavior

application to bootstrap, and optionally swagger to have valid documentation

### 👎 Actual Behavior with Screenshots

![image](https://github.com/user-attachments/assets/6b8c684b-7953-4280-9a33-e2fac87836de)


### Novu version

Novu SaaS

### npm version

2.3.0

### node version

20.18.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2566640970,6631,🐛 Bug Report: @novu/js - Updating the read state of a Notification results in an empty instance,"### 📜 Description

Hello,

With an `InApp` notification created with the `data` (https://docs.novu.co/sdks/framework/typescript/steps/inbox) key inside, updating the read state (using `notification.read()` or `notification.unread()`) results to an empty Notification instance.


### 👟 Reproduction steps

Front-end reproduction (with samples Workflows to reproduce the issue): https://stackblitz.com/edit/sb1-gov1vt?file=main.js

```js
// taken from the Stackblitz repro for quick review
import { Novu } from '@novu/js';

const novu = new Novu({
  subscriberId: import.meta.env.VITE_NOVU_SUB_ID,
  applicationIdentifier: import.meta.env.VITE_NOVU_APP_ID,
  backendUrl: 'https://api.novu.co',
  socketUrl: 'https://ws.novu.co',
});

const notifications = await novu.notifications.list();
const [notificationToUpdate] = notifications.data.notifications ?? [];
const updatedNotification = await notificationToUpdate.read();

console.log('updatedNotification', updatedNotification);
```

### 👍 Expected behavior

This is a valid Notification instance with data inside:

<img width=""531"" alt=""image"" src=""https://github.com/user-attachments/assets/7c77a8e1-3599-45ee-af85-9f3192b53959"">


### 👎 Actual Behavior with Screenshots

This is bad Notification instance with no data inside:

<img width=""722"" alt=""image"" src=""https://github.com/user-attachments/assets/88326583-e06d-4bd6-a064-fca437db077a"">

### Novu version

Novu SaaS

### npm version

NA

### node version

NA

### 📃 Provide any additional context for the Bug.

The Novu API response when calling `https://api.novu.co/v1/inbox/notifications/<NOTIFICATION_ID>/read` returns the following payload:

<img width=""562"" alt=""image"" src=""https://github.com/user-attachments/assets/464885cc-ade5-46e0-9bff-23ef975fd02a"">

No `data` key exists and I think this is the root cause. The `@novu/client` reads the `.data` key from `response.json()` to create a Notification which overlaps with `Notification.data` definition (https://docs.novu.co/sdks/framework/typescript/steps/inbox):

https://github.com/novuhq/novu/blob/e900c02d0842a97f6e488abfb2c3e189af0fbeb8/packages/client/src/http-client/http-client.ts#L83

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2564059770,6611,🚀 Feature: Add return types to @novu/node,"### 🔖 Feature description

It seems like @novu/node returns `AxiosResponse<any, any>` for all of the network requests. [Subscriber.ts](https://github.com/novuhq/novu/blob/next/packages/node/src/lib/subscribers/subscribers.ts)

Can we get it to be with proper return types?

Your api is well documented https://docs.novu.co/api-reference/subscribers/get-subscriber.


### 🎤 Why is this feature needed ?

I need proper types when developing or else everything goes to hell. 

### ✌️ How do you aim to achieve this?

You should be able to return codegen to generate all of the response types and the methods as well

I've used hay-api before, and its really simple: https://heyapi.vercel.app/openapi-ts/get-started.html
Just hook this script into your build process, it will generate a `services.gen.ts` with proper types. It'll generate the .ts. api based your openapi schema. Call those functions instead of axios directly.  

```
import { defineConfig } from '@hey-api/openapi-ts';

export default defineConfig({
  client: '@hey-api/client-fetch',
  input: 'path/to/openapi.json',
  output: 'libs/node/src/generated',
}); 
```


### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2547635504,6573,🐛 Bug Report: novu/api:0.24.3 missing node_modules deps,"### 📜 Description

ghcr.io/novuhq/novu/api:0.24.3 seems to miss module '@novu/shared/utils in the official image to selfhost it

### 👟 Reproduction steps

- Upgrade image from 0.24.0 (working)  to 0.24.3 (failing)
-  Container will show ""Cannot find module '@novu/shared/utils' in ""/usr/src/app/node_modules/.pnpm/@novu+node@0.24.2/node_modules/@novu/node/build/main/index.js""


### 👍 Expected behavior

- 0.24.3 apì image should contain the required dependency@version and container should become ready

### 👎 Actual Behavior with Screenshots

![image](https://github.com/user-attachments/assets/049d7237-79cd-485c-815c-63063180d01a)


### Novu version

0.24.3 (api)

### npm version

NA

### node version

NA

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2542046203,6552,📚 Docs Feedback: Add informations about how to use Novu with NestJs,"### Duplicates

- [X] I have searched the existing issues

### Related page

https://docs.nestjs.com/middleware

### Kind of issue

Missing information

### Issue description

NestJs is like a superset of express, therefore a user can leverage the middleware implementation similar to express.

Afterwards you find some of our implemented code to use for your documentation:

## the express middleware, using require, because we are using commonjs
``` novu.middleware.ts

import { Injectable, NestMiddleware } from '@nestjs/common';
import { Request, Response, NextFunction } from 'express';
import { serve } from '@novu/framework/dist/servers/express';
import workflows from './workflows';

@Injectable()
export class NovuMiddleware implements NestMiddleware {
    use(req: Request, res: Response, next: NextFunction) {
        // Using require instead of import syntax, because novu export is not commonjs
        require(""@novu/framework/express"").serve({
            workflows,
        } as Parameters<typeof serve>['0'])(req, res, next)
    }
}
```

## Probably the right implementation
``` novu.middleware.ts

import { Injectable, NestMiddleware } from '@nestjs/common';
import { Request, Response, NextFunction } from 'express';
import { serve } from '@novu/framework/express';
import workflows from './workflows';

@Injectable()
export class NovuMiddleware implements NestMiddleware {
    use(req: Request, res: Response, next: NextFunction) {
        serve({
            workflows,
        })(req, res, next)
    }
}
```

## app.module.ts
``` app.module.ts

import { MiddlewareConsumer, Module } from '@nestjs/common';
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { NovuMiddleware } from './shared/novu/novu.middleware';

@Module({
  controllers: [AppController],
  providers: [AppService],
})
export class AppModule {
  configure(consumer: MiddlewareConsumer) {
    consumer
      .apply(NovuMiddleware)
      .forRoutes('/api/novu');
  }
}
```

### Context 🔦

_No response_",,
2541448302,6548,🐛 Bug Report: Subscriber level preference does not work,"### 📜 Description

I have a subscriber (ID: 66e0d1f3cf609b1343ed9e8e) and a workflow (ID: 66ecdd18a17d00ef6f792cab) configured to send email and push notifications. I've explicitly set the subscriber's email and push channel preferences to false using the code below.

However, when I trigger workflow 66ecdd18a17d00ef6f792cab for this subscriber, I still receive both email and push notifications, contrary to my expectation.


```
const novu = new Novu(""MY_KEY"");

novu.notificationTemplates.getOne(""66ecdd18a17d00ef6f792cab"").then((p) => {
  console.log(p.data);
});
novu.subscribers
  .updatePreference(""66e0d1f3cf609b1343ed9e8e"", ""66ecdd18a17d00ef6f792cab"", {
    channel: { type: ""email"", enabled: false },
    enabled: true,
  })
  .then((r) => {
    // console.log(r.data);
  });
novu.subscribers
  .updatePreference(""66e0d1f3cf609b1343ed9e8e"", ""66ecdd18a17d00ef6f792cab"", {
    channel: { type: ""push"", enabled: false },
    enabled: true,
  })
  .then((r) => {
    // console.log(r.data);
  });
```


```
code to trigger the workflow
async function sendEmail() {
  await novu.trigger(""WORKFLOW_NAME"", { //  WORKFLOW_NAME is the name for template id 66ecdd18a17d00ef6f792cab
    to: {
      subscriberId: ""66e0d1f3cf609b1343ed9e8e"",
      email: ""dummy-email@email.com"", // fake email for reporting issue purpose
    },
    payload: {
      // Any custom payload data goes here
      data: {
        emailData: {subject: 'subject', body: 'body'},
        pushData: {
          subject: ""Push notification subject"",
          body: ""Push notification body"",
        },
      },
    },
    bridgeUrl: ""https://xxxxxx-c8dd-465c-b066-1184b307c8bd.novu.sh/api/novu"",
  });
```


### 👟 Reproduction steps

1. invoke subscriber updatePreferences api to set email and push channel to false for subscriber for a workflow.
2. invoke novu.trigger function to trigger the above workflow and subscriber;

### 👍 Expected behavior

 Since the subscriber's preferences indicate they should not receive email and push notifications, triggering the workflow should not result in any notifications being sent to them.


### 👎 Actual Behavior with Screenshots

When I trigger workflow 66ecdd18a17d00ef6f792cab for this subscriber, I still receive both email and push notifications, contrary to my expectation.

### Novu version

local installation @novu/node version 2.0.1

### npm version

10.7.0

### node version

v18.20.4

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2508561791,6449,🐛 Bug Report: API request content-length is limit to 100KB,"### 📜 Description

Right now, Novu API can only accept request size 100 KB at most. A simple trigger event is around 70 KB, but with `attachments`, it can easily exceed 100 KB, leading to code 413 Payload too large.

Not a NestJS expert, but I think the code below does not initialize Nest App with correct `bodyParser` and `rawBody` configuration, leading to an unexpected behavior.

https://github.com/novuhq/novu/blob/0269ddc5e1ca905adf76d1014e583de1a8c21672/apps/api/src/bootstrap.ts#L63

Quick NestJS reference: https://docs.nestjs.com/faq/raw-body#body-parser-size-limit



### 👟 Reproduction steps

Use a simple trigger event with attachments.

```ts
await novu.trigger(""workflow-id"", {
  to: ""subscriber-id"",
  payload: {
    // Practically total file size is limit around 30 KB, because the request itself is around 70 KB.
    attachments: [bufferData] 
  }
}) 
```

### 👍 Expected behavior

There are 2 possible ways.

1. Allow a safe, fixed limit for an API request size.
2. Expose a configuration (e.g., via environment variable), so developers can customize limits on their own. Why? Each notification/message provider has their own size limit, so developers can set the limit at their own judgment. For example, Gmail is capped at 25 MB per request.

### 👎 Actual Behavior with Screenshots

Here is a sample error emitted by Novu API service.

```
{
    ""level"": 50,
    ""time"": 1725558183913,
    ""pid"": 18,
    ""serviceName"": ""@novu/api"",
    ""serviceVersion"": ""0.24.0"",
    ""platform"": ""Docker"",
    ""tenant"": ""OS"",
    ""context"": ""ExceptionsHandler"",
    ""err"": {
        ""type"": ""Error"",
        ""message"": ""request entity too large"",
        ""stack"": ""PayloadTooLargeError: request entity too large\n    
        at readStream (/usr/src/app/node_modules/.pnpm/raw-body@2.5.2/node_modules/raw-body/index.js:163:17)\n    
        at getRawBody (/usr/src/app/node_modules/.pnpm/raw-body@2.5.2/node_modules/raw-body/index.js:116:12)\n    
        at read (/usr/src/app/node_modules/.pnpm/body-parser@1.20.2/node_modules/body-parser/lib/read.js:79:3)\n    
        at jsonParser (/usr/src/app/node_modules/.pnpm/body-parser@1.20.2/node_modules/body-parser/lib/types/json.js:138:5)\n    
        at Layer.handle [as handle_request] (/usr/src/app/node_modules/.pnpm/express@4.18.2/node_modules/express/lib/router/layer.js:95:5)\n    
        at trim_prefix (/usr/src/app/node_modules/.pnpm/express@4.18.2/node_modules/express/lib/router/index.js:328:13)\n    
        at /usr/src/app/node_modules/.pnpm/express@4.18.2/node_modules/express/lib/router/index.js:286:9\n    
        at Function.process_params (/usr/src/app/node_modules/.pnpm/express@4.18.2/node_modules/express/lib/router/index.js:346:12)\n    
        at next (/usr/src/app/node_modules/.pnpm/express@4.18.2/node_modules/express/lib/router/index.js:280:10)\n    
        at initialize (/usr/src/app/node_modules/.pnpm/passport@0.6.0/node_modules/passport/lib/middleware/initialize.js:98:5)\n    
        at Layer.handle [as handle_request] (/usr/src/app/node_modules/.pnpm/express@4.18.2/node_modules/express/lib/router/layer.js:95:5)\n    
        at trim_prefix (/usr/src/app/node_modules/.pnpm/express@4.18.2/node_modules/express/lib/router/index.js:328:13)\n    
        at /usr/src/app/node_modules/.pnpm/express@4.18.2/node_modules/express/lib/router/index.js:286:9\n    
        at Function.process_params (/usr/src/app/node_modules/.pnpm/express@4.18.2/node_modules/express/lib/router/index.js:346:12)\n    
        at next (/usr/src/app/node_modules/.pnpm/express@4.18.2/node_modules/express/lib/router/index.js:280:10)\n    
        at cors (/usr/src/app/node_modules/.pnpm/cors@2.8.5/node_modules/cors/lib/index.js:188:7)""
    },
    ""msg"": ""request entity too large""
}
```


### Novu version

Self-host, Docker, v0.24.0

### npm version

NA (using the official v0.24.0 images)

### node version

NA (using the official v0.24.0 images)

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2478379431,6372,🐛 Bug Report:  useUpdateUserGlobalPreferences -  Cannot read properties of undefined (reading 'preference'),"### 📜 Description

I work on a React/Typescript app and i'm currently implementing a custom notification interface based on all the hooks available through the package (@novu/notification-center).

I'm facing an error using the following hook : ""useUpdateUserGlobalPreferences"" and more precisely the ""updateUserGlobalPreferences"" method available throught this hook

### 👟 Reproduction steps

1. Setup a React environment

2. Install @novu/notification-center package (2.0.0-canary.0)

3. Create a component using the hook ""useUpdateUserGlobalPreferences"", for example : 
```
import { ReactElement, useEffect } from 'react';
import { useFetchUserGlobalPreferences, useUpdateUserGlobalPreferences } from '@novu/notification-center';

function UserNotificationsSettingsForm(): ReactElement {
  const { refetch, data } = useFetchUserGlobalPreferences();
  const { updateUserGlobalPreferences } = useUpdateUserGlobalPreferences();

  useEffect(() => {
    refetch();
  }, []);

  const handleUpdateUserGlobalPreferences = () => {
    updateUserGlobalPreferences({
      preferences: [
        {
          channelType: 'email',
          enabled: false,
        },
      ],
      enabled: true,
    });
  };

  return (
    <div>
      <button type=""button"" onClick={() => handleUpdateUserGlobalPreferences()}>
        Update Preferences
      </button>
    </div>
  );
}

export default UserNotificationsSettingsForm;
```

5. Call the ""updateUserGlobalPreferences"" method (in the example, with a simple button click)

### 👍 Expected behavior

It should update user global preferences and return success (or nothing)

### 👎 Actual Behavior with Screenshots

It actually encounter an error in the ""useUpdateUserGlobalPreferences.js"" file as mentionned in this error message : 
![image](https://github.com/user-attachments/assets/648a2e11-fc76-4991-a14d-7bd8db1ba1c7)

It seems that the function tries to reach a key in the ""object"" named ""old"" but this is impossible because of the type of ""old"" wich seems to be an array : 
![image](https://github.com/user-attachments/assets/baed3e77-dea4-4fc5-bd1e-c15b3a1b4ab7)



### Novu version

2.0.0-canary.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

The value of ""data"" object given by the hook ""useFetchUserGlobalConfiguration"" is the following : 
`[
    {
        ""preference"": {
            ""enabled"": true,
            ""channels"": {
                ""email"": true,
                ""sms"": true,
                ""in_app"": true,
                ""chat"": true,
                ""push"": true
            }
        }
    }
]`

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2471587850,6346,🐛 Bug Report: @novu/framework cannot be used in Cloudflare Pages,"### 📜 Description

We get build errors when deploying to CF pages because the package imports unsupported node dependencies.

Even though we are not using the JSON Schema features of @novu/framework, we still get these import errors. Is it possible to ask for conditional importing of the problematic dependencies?


### 👟 Reproduction steps

1. Install @novu/framework on a SvelteKit project using @sveltejs/cloudflare-adapter.
2. Create a workflow using the `workflow` import from @novu/framework.
3. Create `api/novu/+server.ts` and import the `serve` function from @novu/framework/sveltekit
4. Run build script / build project

### 👍 Expected behavior

Not throw build errors because we're not relying on JSON Schema to create our workflows.

### 👎 Actual Behavior with Screenshots

<img width=""1120"" alt=""image"" src=""https://github.com/user-attachments/assets/529bc3ca-38b7-4ecb-8db4-852c3ca2526d"">

### Novu version

Novu SaaS

### npm version

NA

### node version

NA

### 📃 Provide any additional context for the Bug.

@novu/framework version: 2.0.0-canary.5

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2468375747,6332,🐛 Bug Report: Cannot find module '@novu/framework/next' or its corresponding type declarations.ts,"### 📜 Description

Cannot find module '@novu/framework/next' or its corresponding type declarations.ts

### 👟 Reproduction steps
import { serve } from ""@novu/framework/next"";

""@novu/framework"": ""2.0.0-canary.5""

### 👍 Expected behavior

Typescript support

### 👎 Actual Behavior with Screenshots

Unable to import from '@novu/framework/next'

### Novu version

2.0.0-canary.5

### npm version

10.5.0

### node version

v18.20.1

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2411396787,6084,🐛 Bug Report: QuickStart Steps for Express Js produce Error,"### 📜 Description

Follow QuickStart Steps For Express Server

start the express server and BOOM



### 👟 Reproduction steps

follow quickStart Express steps

start express and BOOM



### 👍 Expected behavior

it should start the express on 4000 port easily

### 👎 Actual Behavior with Screenshots

TypeError: e is not iterable
    at ne.addWorkflows (D:\practical\expressServer\node_modules\@novu\framework\dist\express.js:21:12052)
    at new ae (D:\practical\expressServer\node_modules\@novu\framework\dist\express.js:25:2598)
    at kr (D:\practical\expressServer\node_modules\@novu\framework\dist\express.js:25:6079)
    at file:///D:/practical/expressServer/app.js:11:22
    at ModuleJob.run (node:internal/modules/esm/module_job:218:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:329:24)
    at async loadESM (node:internal/process/esm_loader:28:7)
    at async handleMainPromise (node:internal/modules/run_main:113:12)

Node.js v20.11.1

### Novu version

2.0.0-canary.7

### npm version

9.7.1

### node version

 20.11.1

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2375903645,5840,🐛 Bug Report: Class constructor EventEmitter cannot be invoked without 'new',"### 📜 Description

Hi. I recently deployed my nuxt app to Cloudflare and I get this error every time I try to register a new subscriber.
`Class constructor EventEmitter cannot be invoked without 'new'`

Here's my function code
```ts
export const registerSubscriber = async (subscriber: User) => {
  const [firstName, lastName] = subscriber.name.split("" "");
  await novu.subscribers.identify(subscriber.id, {
    firstName,
    lastName,
    email: subscriber.email,
    ...(subscriber.picture && { avatar: subscriber.picture }),
  });
};
```

Probably has something to do with Cloudflare?

### 👟 Reproduction steps

- Create an app with nuxtHub.
- Add novu/node.
- Write util function to register subscribers.
- Call earlier created function in server route.

### 👍 Expected behavior

No error and the subscriber should be registered successfully 

### 👎 Actual Behavior with Screenshots

Error `Class constructor EventEmitter cannot be invoked without 'new'`

My App:

![image](https://github.com/novuhq/novu/assets/82246456/ce44764f-f770-4326-a57d-ead604a2583a)
Nuxt Hub/ Cloudflare logs:

![image](https://github.com/novuhq/novu/assets/82246456/7a9a1fed-bd1d-4340-b78c-8a327c0d0010)

### Novu version

Novu SaaS

### npm version

NA

### node version

NA

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2374677990,5831,🐛 Bug Report: Tooltip not visible in workflow edit module,"### 📜 Description

When Editing a step in workflow, Tooltip for Add Variant, Set Conditions, Delete is not visible and hidden. 

### 👟 Reproduction steps

1. Create a new workflow
2. Add a provider (SMS, Email, etc)
3.Edit Step
4. Hover over the top right 3 buttons

### 👍 Expected behavior

Tooltip should be visible

<img width=""310"" alt=""Screenshot 2024-06-26 at 1 44 01 PM"" src=""https://github.com/novuhq/novu/assets/73997189/23bbbbfe-316b-48a7-a4e0-5ee2d0719059"">


### 👎 Actual Behavior with Screenshots

Tooltip is not visible.

https://github.com/novuhq/novu/assets/73997189/f09dbc69-d6b8-4757-bc5a-7257dc5fe1d0

<img width=""1792"" alt=""Screenshot 2024-06-26 at 1 57 35 PM"" src=""https://github.com/novuhq/novu/assets/73997189/b4dc76ca-004f-469d-8ba0-e5eb0d8ccdd1"">


### Novu version

SelfHosted

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2372230165,5818,🚀 Feature: Bulk Cancel Events,"### 🔖 Feature description

ability to provide multiple transactionIds within cancel method/endpoint to be able to cancel them using a bulk endpoint to reduce load

### 🎤 Why is this feature needed ?

Some of our services require cancel triggered events beforehand async.
The total count of the cancel can vary alot, so a bulk method would be very suiteable for this manner.

### ✌️ How do you aim to achieve this?

An additional endpoint for bulk or ability to provide multiple transactionIds withi the current endpoint

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2346024295,5706,🐛 Bug Report: GetStream missing / or lacks properties in POST requests,"### 📜 Description

**getStream** requires other or potentially more fields in order to make request to make sense?

https://getstream.io/chat/docs/rest/#product:chat-sendmessagehttps://getstream.io/chat/docs/rest/#product:chat-sendmessage

My assumption is that the above API path is the common usage for getStream. 

It requires body property ""message"" that contains multiple properties.
Currently the Novu provider only sends the data ""text""

https://github.com/novuhq/novu/blob/next/packages/providers/src/lib/getstream/getstream.provider.ts#L24


### 👟 Reproduction steps

N/A

### 👍 Expected behavior

Allow for more or other property fields to be sent to getStream

### 👎 Actual Behavior with Screenshots

N/A

### Novu version

Novu SaaS

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2344559660,5703,🐛 Bug Report: Inconsistent Documentation Regarding APNs Overrides in ITriggerOverrideFCM,"### 📜 Description


The documentation for the `overrides` field in the Novu SDK [([link to Novu SDK documentation on FCM triggers])](https://docs.novu.co/channels-and-providers/push/fcm#sdk-trigger-example) suggests that it supports overriding properties for APNs (Apple Push Notification service). However, attempts to use the `apns` property within the `overrides` field result in a TypeScript error:

```typescript
Object literal may only specify known properties, and 'apns' does not exist in type 'ITriggerOverrideFCM'.ts
```

Investigation reveals that the codebase for `ITriggerOverrideFCM` does not currently include an `apns` property definition.


### 👟 Reproduction steps

```typescript
import { Novu } from ""@novu/node"";

const novu = new Novu(""<NOVU_API_KEY>"");

novu.trigger(""<WORKFLOW_TRIGGER_IDENTIFIER>"", {
  to: {
    subscriberId: ""<SUBSCRIBER_ID>"",
  },
  payload: {
    abc: ""def"", // If the notification is a data notification, the payload will be sent as the data
  },
  overrides: {
    fcm: {
      // type: 'data' => will turn this into an FCM data notification, where the payload is sent as a data notification. If the type is not set, you can use the ""data"" override to send notification messages with optional data payload
      type: ""data"",

      // URL of an image to be displayed in the notification.
      imageUrl: ""https://domain.com/image.png"",

      // If type is not set, you can use the ""data"" override to send notification messages with optional data payload
      data: {
        key: ""value"",
      },

      // Check FCM Overrides section above for these types
      apns: {}
    },
  },
});


``` 
### 👍 Expected behavior

Based on the Novu SDK documentation for ITriggerOverrideFCM and the overrides field (specifically the mention of APNs support), I expected the following:

- The overrides field would accept an object literal containing properties for overriding various trigger configurations.
- One of the supported properties within the overrides object literal would be apns.
- Using the apns property would allow me to specify modifications for the APNs portion of the trigger configuration. This might involve overriding properties like notification content, sound, badge count, etc., specifically for APNs devices.

By following these expectations, I would have been able to configure APNs overrides for FCM triggers within my application using the Novu SDK.

### 👎 Actual Behavior with Screenshots


When attempting to use the `apns` property within the `overrides` field of the `ITriggerOverrideFCM` type, the following behavior occurred:

* **TypeScript error**: The TypeScript compiler throws an error stating:

```typescript
Object literal may only specify known properties, and 'apns' does not exist in type 'ITriggerOverrideFCM'.ts
```

This error indicates that the `ITriggerOverrideFCM` type definition does not recognize `apns` as a valid property within the `overrides` object literal.

* **No APNs overrides possible:** Due to the error, you cannot configure any overrides specific to APNs notifications when using the `ITriggerOverrideFCM` type. 


### Novu version

0.24.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2338628252,5689,🐛 Bug Report: Missing additional fields in Custom SMTP provider,"### 📜 Description

I have a need to set some of the more advanced properties when sending emails using the Custom SMTP provider (nodemailer).

In particular, I need to add custom headers and also to control the envelope sender/from address to ensure proper bounce/reply-to handling.

For example, I need to be able to do this (sample event trigger payload):

```
{
   ""name"": ""email-workflow"",
    ""to"": {
         ""subscriberId"": ""1234"",
         ""firstName"": ""User"",
         ""lastName"": ""One"",
         ""email"": ""user1@example.com""
    },
   ""payload"": {
       ""email_body"": ""<b>This is the body of the email</b>"",
       ""email_subject"": ""This is a test""
    },
    ""overrides"": {
       ""email"": {
         ""headers"": {    <---- NEW
            ""X-Custom-Header"": ""123456789""
         },
         ""envelope"": {  <--- NEW
               ""from"": ""bounces+user1=example.com@mycorp.com
         },
         ""senderName"": ""Sender User"",
         ""replyTo"": ""director1@example.com"",  
         ""html"": ""<h1>This should be the HTML part of the email</h1>"",
         ""text"": ""This should be in plain text in the email"",
         ""layoutIdentifier"": ""empty""
     }
  }
}
```

Looking through the code (`packages/providers/src/lib/nodemailer/nodemailer.provider.ts`) , it appears that this is already partially handled as the `IEmailOptions` interface has support for `replyTo` and `headers`.  It just needs to be passed through to the nodemailer in the Custom STMP provider.

It appears that the headers are already handled in other providers, eg: sendgrid, so it should be a simple copy/paste from there, I think, like:


```
private createMailData(options: IEmailOptions): SendMailOptions {
    const sendMailOptions: SendMailOptions = {
....
      to: options.to,
      subject: options.subject,
      headers: options.headers    <-- new
      envelope: options.envelope <-- new
    };

    if (options.replyTo) {
      sendMailOptions.replyTo = options.replyTo;
    }

    return sendMailOptions;
  }

```

Adding support for the envelope options would require extending IEmailOptions with additional fields, similar to the header using something like `envelope?: Record<string, string>;`.

nodemailer supports envelope options here: https://nodemailer.com/message/#routing-options and https://nodemailer.com/smtp/envelope/




### 👟 Reproduction steps

N/A

### 👍 Expected behavior

Custom fields/headers should be passed through to the SMTP server

### 👎 Actual Behavior with Screenshots

Desired fields/headers are not passed through to the mail server

### Novu version

0.24.0 (docker)

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

Seems a similar request was made here: https://github.com/novuhq/novu/issues/1949

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2336756581,5684,🐛 Bug Report: Integration with Nuxt 500 error - self hosted version,"### 📜 Description

When go step by step with documentation and include all data to component I get an error:

`[nuxt] [request error] [unhandled] [500] Cannot read properties of undefined (reading 'querySelectorAll')
  at uw (F:\Projekty\FindInvestor\@novu\notification-center-vue:6956:22)
  at TF (F:\Projekty\FindInvestor\@novu\notification-center-vue:7965:11)
  at F:\Projekty\FindInvestor\@novu\notification-center-vue:8038:9
  at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
  at async ViteNodeRunner.runModule (/F:/Projekty/FindInvestor/node_modules/vite-node/dist/client.mjs:356:5)
  at async ViteNodeRunner.directRequest (/F:/Projekty/FindInvestor/node_modules/vite-node/dist/client.mjs:340:5)
  at async ViteNodeRunner.cachedRequest (/F:/Projekty/FindInvestor/node_modules/vite-node/dist/client.mjs:189:14)
  at async ViteNodeRunner.dependencyRequest (/F:/Projekty/FindInvestor/node_modules/vite-node/dist/client.mjs:233:12)
  at async F:\Projekty\FindInvestor\plugins\novu.ts:2:31
  at async ViteNodeRunner.runModule (/F:/Projekty/FindInvestor/node_modules/vite-node/dist/client.mjs:356:5)`

### 👟 Reproduction steps

1. Install dependency
2. Make plugin
3. Make component with all data from documentation
4. Run project

### 👍 Expected behavior

Working without errors

### 👎 Actual Behavior with Screenshots

![code](https://github.com/novuhq/novu/assets/28571858/a45b7b7a-935d-49cd-8c40-a1e2878a52b5)
![code](https://github.com/novuhq/novu/assets/28571858/36d3b38c-2b20-4d22-8242-8f3d034cc2b0)
![code](https://github.com/novuhq/novu/assets/28571858/7903e9a9-8897-414a-9fad-d8061bd77091)


### Novu version

0.24.1

### npm version

yarn 1.22.21

### node version

20.2.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2300934515,5588,🐛 Bug Report: Angular ^17.0.0 - flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering,"### 📜 Description

I'm trying to integrate Novu (""@novu/notification-center-angular"": ""^0.24.1"") with my Angular (^17.0.0) project, it compiles ok, but all of a sudden I get this error logged in the console, I reproduced the error in a fresh new Angular project and it's throwing the same error. The Novu widget works perfectly, by the way.

Log:

![Screenshot 2024-05-16 at 18 50 56](https://uploads.linear.app/f13f1996-c9b0-4fea-8ee7-2c3faf6a832d/c35f6948-16da-4607-8c29-0cab5644e0a7/f21b9079-b2c9-4799-9501-f1ebdfdff945?signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXRoIjoiL2YxM2YxOTk2LWM5YjAtNGZlYS04ZWU3LTJjM2ZhZjZhODMyZC9jMzVmNjk0OC0xNmRhLTQ2MDctOGMyOS0wY2FiNTY0NGUwYTcvZjIxYjkwNzktYjJjOS00Nzk5LTk1MDEtZjFlYmRmZGZmOTQ1IiwiaWF0IjoxNzE1ODgwMDc1LCJleHAiOjMzMjg2NDQwMDc1fQ.Zb1ojw4vXSzsY3zuThsUknIrkPjsJHwFpHRIFhjGPZY ""=1319x"")

![Screenshot 2024-05-16 at 18 51 10](https://uploads.linear.app/f13f1996-c9b0-4fea-8ee7-2c3faf6a832d/cf35120b-50e8-45f6-b15f-8f8c044ff21e/e9e3fcba-fea0-4c5e-a9f6-bc2c5f6062d8?signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXRoIjoiL2YxM2YxOTk2LWM5YjAtNGZlYS04ZWU3LTJjM2ZhZjZhODMyZC9jZjM1MTIwYi01MGU4LTQ1ZjYtYjE1Zi04ZjhjMDQ0ZmYyMWUvZTllM2ZjYmEtZmVhMC00YzVlLWE5ZjYtYmMyYzVmNjA2MmQ4IiwiaWF0IjoxNzE1ODgwMDc1LCJleHAiOjMzMjg2NDQwMDc1fQ.8AJHeRjcYLYRpWGhRmD61yVSUi9-Z6S09Qi4jjlr8GY ""=661x"")

As I'm using the standalone component system approach, I'm importing Novu dependencies in the component itself:

```
// app.component.ts

import { Component, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterOutlet } from '@angular/router';
import { NotificationCenterModule } from '@novu/notification-center-angular';
import { environment } from '../environments/environment';

@Component({
  selector: 'app-root',
  standalone: true,
  schemas: [CUSTOM_ELEMENTS_SCHEMA],
  imports: [CommonModule, RouterOutlet, NotificationCenterModule],
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css'],
})
export class AppComponent {
  title = 'novu17';

  subscriberId = environment.subscriberId;
  applicationIdentifier = environment.applicationIdentifier;

  styles = {
    bellButton: {
      root: {
        svg: {
          color: 'white',
          width: '45px',
          height: '40px',
          fill: 'white',
        },
      },
      dot: {
        rect: {
          fill: 'rgb(221, 0, 49)',
          strokeWidth: '0.2',
          stroke: 'white',
          width: '3.5px',
          height: '3.5px',
        },
        left: '40%',
      },
    },
    header: {
      root: {
        backgroundColor: '',
        '&:hover': { backgroundColor: '' },
        '.some_class': { color: '' },
      },
    },
    layout: {
      root: {
        backgroundColor: '',
      },
    },
    popover: {
      arrow: {
        backgroundColor: '',
        border: '',
      },
    },
  };

  sessionLoaded = (data: unknown) => {
    console.log('loaded', { data });
  };
}```

// HTML:
```

```
width=""40""
alt=""Angular Logo""
src=""""
```

/>
  Welcome

```
  [subscriberId]=""subscriberId""
  [applicationIdentifier]=""applicationIdentifier""
  [sessionLoaded]=""sessionLoaded""
  [styles]=""styles""
>


aria-label=""Angular on twitter""
target=""_blank""
rel=""noopener""
href=""https://twitter.com/angular""
title=""Twitter""
```

> 

```
  id=""twitter-logo""
  height=""24""
  data-name=""Logo""
  xmlns=""http://www.w3.org/2000/svg""
  viewBox=""0 0 400 400""
>
  
  



aria-label=""Angular on YouTube""
target=""_blank""
rel=""noopener""
href=""https://youtube.com/angular""
title=""YouTube""
```

> 

```
  id=""youtube-logo""
  height=""24""
  width=""24""
  data-name=""Logo""
  xmlns=""http://www.w3.org/2000/svg""
  viewBox=""0 0 24 24""
  fill=""#fff""
>
```

\`

// package.json:

`{ ""name"": ""novu17"", ""version"": ""0.0.0"", ""scripts"": { ""ng"": ""ng"", ""start"": ""ng serve"", ""build"": ""ng build"", ""watch"": ""ng build --watch --configuration development"", ""test"": ""ng test"" }, ""private"": true, ""dependencies"": { ""@angular/animations"": ""^17.0.0"", ""@angular/common"": ""^17.0.0"", ""@angular/compiler"": ""^17.0.0"", ""@angular/core"": ""^17.0.0"", ""@angular/forms"": ""^17.0.0"", ""@angular/platform-browser"": ""^17.0.0"", ""@angular/platform-browser-dynamic"": ""^17.0.0"", ""@angular/router"": ""^17.0.0"", ""@novu/notification-center-angular"": ""^0.24.1"", ""rxjs"": ""~7.8.0"", ""tslib"": ""^2.3.0"", ""zone.js"": ""~0.14.2"" }, ""devDependencies"": { ""@angular-devkit/build-angular"": ""^17.0.0"", ""@angular/cli"": ""^17.0.0"", ""@angular/compiler-cli"": ""^17.0.0"", ""@types/jasmine"": ""~5.1.0"", ""jasmine-core"": ""~5.1.0"", ""karma"": ""~6.4.0"", ""karma-chrome-launcher"": ""~3.2.0"", ""karma-coverage"": ""~2.2.0"", ""karma-jasmine"": ""~5.1.0"", ""karma-jasmine-html-reporter"": ""~2.1.0"", ""typescript"": ""~5.2.2"" } }`

// tsconfig.json:

\`/\* To learn more about this file see: [https://angular.io/config/tsconfig](https://angular.io/config/tsconfig). \*/
{
  ""compileOnSave"": false,
  ""compilerOptions"": {
    ""outDir"": ""./dist/out-tsc"",
    ""forceConsistentCasingInFileNames"": true,
    ""strict"": true,
    ""noImplicitOverride"": true,
    ""noPropertyAccessFromIndexSignature"": true,
    ""noImplicitReturns"": true,
    ""noFallthroughCasesInSwitch"": true,
    ""esModuleInterop"": true,
    ""sourceMap"": true,
    ""declaration"": false,
    ""downlevelIteration"": true,
    ""experimentalDecorators"": true,
    ""moduleResolution"": ""node"",
    ""importHelpers"": true,
    ""target"": ""ES2022"",
    ""module"": ""ES2022"",
    ""useDefineForClassFields"": false,
    ""lib"": \[
      ""ES2022"",
      ""dom""
    \]
  },
  ""angularCompilerOptions"": {
    ""enableI18nLegacyMessageIdFormat"": false,
    ""strictInjectionParameters"": true,
    ""strictInputAccessModifiers"": true,
    ""strictTemplates"": true
  }
}

```



This does not look such a big deal, but certainly, the app routing stopped working when integrating Novu. The URL changes parameters/slug when some routed button/anchor tag is triggered, but the page don't render new views. It might be related with the error logged. 

I've also installed @types/react as suggested by the Docs (btw some lib types are not synhcronized with last versions of this package, so had to downgrade @types/react), it made no difference.

### 👟 Reproduction steps

1. Just follow same steps from https://docs.novu.co/quickstarts/angular
2. Make sure to use last version of Angular (v.17)

### 👍 Expected behavior

Just not throwing this React related error and allowing the app to work as expected (standard routing between components on click routed elements -currently blocked-).

### 👎 Actual Behavior with Screenshots

Logged error:
<img width=""1319"" alt=""Screenshot 2024-05-16 at 18 50 56"" src=""https://github.com/novuhq/angular-quickstart/assets/59086203/13a41278-ed91-4ae2-bd69-0f4920d878fa"">
<img width=""661"" alt=""Screenshot 2024-05-16 at 18 51 10"" src=""https://github.com/novuhq/angular-quickstart/assets/59086203/2b20ade4-1fae-4d63-9931-ed1dc32046d8"">

And app internal routing completely blocked.

### Novu version

^0.22.0

### npm version

10.1.0

### node version

20.9.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None
```",,
2278081127,5492,🐛Cannot find module react-scanner.config.js,"### 📜 Description

When I run the `pnpm run setup:project` command to setup the project, I get the following error.

✔️ `styled-system/jsx`: styled jsx elements for react
│ > @novu/design-system@0.24.1 prepare:audit C:\Development\git\novu\libs\design-system
│ > pnpm audit-components
│ > @novu/design-system@0.24.1 audit-components C:\Development\git\novu\libs\design-system
│ > pnpm react-scanner -c './react-scanner.config.js'
│ node:internal/modules/cjs/loader:1147
│   throw err;
│   ^
│ Error: Cannot find module 'C:\Development\git\novu\libs\design-system\'.\react-scanner.config.js''
│ Require stack:
│ - C:\Development\git\novu\node_modules\.pnpm\react-scanner@1.1.0\node_modules\react-scanner\src\index.js
│ - C:\Development\git\novu\node_modules\.pnpm\react-scanner@1.1.0\node_modules\react-scanner\bin\react-scanner
│     at Module._resolveFilename (node:internal/modules/cjs/loader:1144:15)
│     at Module._load (node:internal/modules/cjs/loader:985:27)
│     at Module.require (node:internal/modules/cjs/loader:1235:19)
│     at require (node:internal/modules/helpers:176:18)
│     at C:\Development\git\novu\node_modules\.pnpm\react-scanner@1.1.0\node_modules\react-scanner\src\index.js:14:20
│     at o.parse (C:\Development\git\novu\node_modules\.pnpm\sade@1.8.1\node_modules\sade\lib\index.js:1:3402)
│     at Object.<anonymous> (C:\Development\git\novu\node_modules\.pnpm\react-scanner@1.1.0\node_modules\react-scanner\src\index.js:17:4)   
│     at Module._compile (node:internal/modules/cjs/loader:1376:14)
│     at Module._extensions..js (node:internal/modules/cjs/loader:1435:10)
│     at Module.load (node:internal/modules/cjs/loader:1207:32) {
│   code: 'MODULE_NOT_FOUND',
│   requireStack: [
│     'C:\\Development\\git\\novu\\node_modules\\.pnpm\\react-scanner@1.1.0\\node_modules\\react-scanner\\src\\index.js',
│     'C:\\Development\\git\\novu\\node_modules\\.pnpm\\react-scanner@1.1.0\\node_modules\\react-scanner\\bin\\react-scanner'
│   ]
│ }
│ Node.js v20.11.1
│  ELIFECYCLE  Command failed with exit code 1.
│  ELIFECYCLE  Command failed with exit code 1.
└─ Failed in 8.9s at C:\Development\git\novu\libs\design-system
 ELIFECYCLE  Command failed with exit code 1.


### 👟 Reproduction steps

Check out the codebase and run pnpm run setup:project

### 👍 Expected behavior

It should install the projects required dependencies.

### 👎 Actual Behavior with Screenshots

It's throwing the error above.

### Novu version

the current next branch

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2244454189,5412,🐛 Bug Report: Unable to deploy to Openshift,"### 📜 Description

Some scripts that are run as root user, such as `npm i pm2 -g`, are not feasible on the OpenShift infrastructure due to non-root rules. Is it possible to adopt a different approach without changing the OpenShift user policies? Are you considering modifying the base image to one that already includes PM2?

### 👟 Reproduction steps

1. Apply the following deployment file with the Novu API image on OpenShift.

```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: novu-api
  name: novu-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: novu-api
  template:
    metadata:
      labels:
        app: novu-api
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: novu-cfg
          image: ghcr.io/novuhq/novu/api:0.22.0
          name: api
          livenessProbe:
            httpGet:
              path: /v1/health-check
              port: 3000
            initialDelaySeconds: 300
            periodSeconds: 300
          resources:
            limits:
              cpu: 400m
              memory: 500Mi
            requests:
              cpu: 200m
              memory: 200Mi
```

### 👍 Expected behavior

The pod is expected to start without any errors.

### 👎 Actual Behavior with Screenshots

```shell
Error: EACCES: permission denied, mkdir '/.pm2/logs'
    at Object.mkdirSync (node:fs:1382:3)
    at mkdirpNativeSync (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/lib/mkdirp-native.js:29:10)
    at Function.mkdirpSync [as sync] (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/index.js:21:7)
    at module.exports.Client.initFileStructure (/usr/local/lib/node_modules/pm2/lib/Client.js:133:25)
    at new module.exports (/usr/local/lib/node_modules/pm2/lib/Client.js:38:8)
    at new API (/usr/local/lib/node_modules/pm2/lib/API.js:107:19)
    at Object.<anonymous> (/usr/local/lib/node_modules/pm2/index.js:11:18)
    at Module._compile (node:internal/modules/cjs/loader:1198:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1252:10)
    at Module.load (node:internal/modules/cjs/loader:1076:32)
Error: EACCES: permission denied, mkdir '/.pm2/pids'
    at Object.mkdirSync (node:fs:1382:3)
    at mkdirpNativeSync (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/lib/mkdirp-native.js:29:10)
    at Function.mkdirpSync [as sync] (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/index.js:21:7)
    at module.exports.Client.initFileStructure (/usr/local/lib/node_modules/pm2/lib/Client.js:141:25)
    at new module.exports (/usr/local/lib/node_modules/pm2/lib/Client.js:38:8)
    at new API (/usr/local/lib/node_modules/pm2/lib/API.js:107:19)
    at Object.<anonymous> (/usr/local/lib/node_modules/pm2/index.js:11:18)
    at Module._compile (node:internal/modules/cjs/loader:1198:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1252:10)
    at Module.load (node:internal/modules/cjs/loader:1076:32)
Error: ENOENT: no such file or directory, open '/.pm2/module_conf.json'
    at Object.openSync (node:fs:590:3)
    at Object.writeFileSync (node:fs:2202:35)
    at module.exports.Client.initFileStructure (/usr/local/lib/node_modules/pm2/lib/Client.js:149:10)
    at new module.exports (/usr/local/lib/node_modules/pm2/lib/Client.js:38:8)
    at new API (/usr/local/lib/node_modules/pm2/lib/API.js:107:19)
    at Object.<anonymous> (/usr/local/lib/node_modules/pm2/index.js:11:18)
    at Module._compile (node:internal/modules/cjs/loader:1198:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1252:10)
    at Module.load (node:internal/modules/cjs/loader:1076:32)
    at Function.Module._load (node:internal/modules/cjs/loader:911:12)
Error: EACCES: permission denied, mkdir '/.pm2/modules'
    at Object.mkdirSync (node:fs:1382:3)
    at mkdirpNativeSync (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/lib/mkdirp-native.js:29:10)
    at Function.mkdirpSync [as sync] (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/index.js:21:7)
    at module.exports.Client.initFileStructure (/usr/local/lib/node_modules/pm2/lib/Client.js:157:25)
    at new module.exports (/usr/local/lib/node_modules/pm2/lib/Client.js:38:8)
    at new API (/usr/local/lib/node_modules/pm2/lib/API.js:107:19)
    at Object.<anonymous> (/usr/local/lib/node_modules/pm2/index.js:11:18)
    at Module._compile (node:internal/modules/cjs/loader:1198:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1252:10)
    at Module.load (node:internal/modules/cjs/loader:1076:32)
Error: ENOENT: no such file or directory, open '/.pm2/module_conf.json'
    at Object.openSync (node:fs:590:3)
    at Object.readFileSync (node:fs:458:35)
    at Object.Configuration.getAllSync (/usr/local/lib/node_modules/pm2/lib/Configuration.js:299:26)
    at Object.Configuration.getSync (/usr/local/lib/node_modules/pm2/lib/Configuration.js:270:30)
    at new API (/usr/local/lib/node_modules/pm2/lib/API.js:116:44)
    at Object.<anonymous> (/usr/local/lib/node_modules/pm2/index.js:11:18)
    at Module._compile (node:internal/modules/cjs/loader:1198:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1252:10)
    at Module.load (node:internal/modules/cjs/loader:1076:32)
    at Function.Module._load (node:internal/modules/cjs/loader:911:12)
Error: EACCES: permission denied, mkdir '/.pm2/logs'
    at Object.mkdirSync (node:fs:1382:3)
    at mkdirpNativeSync (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/lib/mkdirp-native.js:29:10)
    at Function.mkdirpSync [as sync] (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/index.js:21:7)
    at module.exports.Client.initFileStructure (/usr/local/lib/node_modules/pm2/lib/Client.js:133:25)
    at new module.exports (/usr/local/lib/node_modules/pm2/lib/Client.js:38:8)
    at new API (/usr/local/lib/node_modules/pm2/lib/API.js:107:19)
    at Object.instanciate (/usr/local/lib/node_modules/pm2/lib/binaries/Runtime4Docker.js:65:16)
    at Command.<anonymous> (/usr/local/lib/node_modules/pm2/lib/binaries/Runtime4Docker.js:54:13)
    at Command.listener (/usr/local/lib/node_modules/pm2/node_modules/commander/index.js:315:8)
    at Command.emit (node:events:513:28)
Error: EACCES: permission denied, mkdir '/.pm2/pids'
    at Object.mkdirSync (node:fs:1382:3)
    at mkdirpNativeSync (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/lib/mkdirp-native.js:29:10)
    at Function.mkdirpSync [as sync] (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/index.js:21:7)
    at module.exports.Client.initFileStructure (/usr/local/lib/node_modules/pm2/lib/Client.js:141:25)
    at new module.exports (/usr/local/lib/node_modules/pm2/lib/Client.js:38:8)
    at new API (/usr/local/lib/node_modules/pm2/lib/API.js:107:19)
    at Object.instanciate (/usr/local/lib/node_modules/pm2/lib/binaries/Runtime4Docker.js:65:16)
    at Command.<anonymous> (/usr/local/lib/node_modules/pm2/lib/binaries/Runtime4Docker.js:54:13)
    at Command.listener (/usr/local/lib/node_modules/pm2/node_modules/commander/index.js:315:8)
    at Command.emit (node:events:513:28)
Error: ENOENT: no such file or directory, open '/.pm2/module_conf.json'
    at Object.openSync (node:fs:590:3)
    at Object.writeFileSync (node:fs:2202:35)
    at module.exports.Client.initFileStructure (/usr/local/lib/node_modules/pm2/lib/Client.js:149:10)
    at new module.exports (/usr/local/lib/node_modules/pm2/lib/Client.js:38:8)
    at new API (/usr/local/lib/node_modules/pm2/lib/API.js:107:19)
    at Object.instanciate (/usr/local/lib/node_modules/pm2/lib/binaries/Runtime4Docker.js:65:16)
    at Command.<anonymous> (/usr/local/lib/node_modules/pm2/lib/binaries/Runtime4Docker.js:54:13)
    at Command.listener (/usr/local/lib/node_modules/pm2/node_modules/commander/index.js:315:8)
    at Command.emit (node:events:513:28)
    at Command.parseArgs (/usr/local/lib/node_modules/pm2/node_modules/commander/index.js:651:12)
Error: EACCES: permission denied, mkdir '/.pm2/modules'
    at Object.mkdirSync (node:fs:1382:3)
    at mkdirpNativeSync (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/lib/mkdirp-native.js:29:10)
    at Function.mkdirpSync [as sync] (/usr/local/lib/node_modules/pm2/node_modules/mkdirp/index.js:21:7)
    at module.exports.Client.initFileStructure (/usr/local/lib/node_modules/pm2/lib/Client.js:157:25)
    at new module.exports (/usr/local/lib/node_modules/pm2/lib/Client.js:38:8)
    at new API (/usr/local/lib/node_modules/pm2/lib/API.js:107:19)
    at Object.instanciate (/usr/local/lib/node_modules/pm2/lib/binaries/Runtime4Docker.js:65:16)
    at Command.<anonymous> (/usr/local/lib/node_modules/pm2/lib/binaries/Runtime4Docker.js:54:13)
    at Command.listener (/usr/local/lib/node_modules/pm2/node_modules/commander/index.js:315:8)
    at Command.emit (node:events:513:28)
Error: ENOENT: no such file or directory, open '/.pm2/module_conf.json'
    at Object.openSync (node:fs:590:3)
    at Object.readFileSync (node:fs:458:35)
    at Object.Configuration.getAllSync (/usr/local/lib/node_modules/pm2/lib/Configuration.js:299:26)
    at Object.Configuration.getSync (/usr/local/lib/node_modules/pm2/lib/Configuration.js:270:30)
    at new API (/usr/local/lib/node_modules/pm2/lib/API.js:116:44)
    at Object.instanciate (/usr/local/lib/node_modules/pm2/lib/binaries/Runtime4Docker.js:65:16)
    at Command.<anonymous> (/usr/local/lib/node_modules/pm2/lib/binaries/Runtime4Docker.js:54:13)
    at Command.listener (/usr/local/lib/node_modules/pm2/node_modules/commander/index.js:315:8)
    at Command.emit (node:events:513:28)
    at Command.parseArgs (/usr/local/lib/node_modules/pm2/node_modules/commander/index.js:651:12)
2024-04-15T19:25:28: PM2 error: Error: ENOENT: no such file or directory, open '/.pm2/module_conf.json'
    at Object.openSync (node:fs:590:3)
    at Object.readFileSync (node:fs:458:35)
    at Object.Configuration.getAllSync (/usr/local/lib/node_modules/pm2/lib/Configuration.js:299:26)
    at Object.Configuration.getSync (/usr/local/lib/node_modules/pm2/lib/Configuration.js:270:30)
    at Object.God.init (/usr/local/lib/node_modules/pm2/lib/God.js:71:38)
    at Object.<anonymous> (/usr/local/lib/node_modules/pm2/lib/God.js:574:5)
    at Module._compile (node:internal/modules/cjs/loader:1198:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1252:10)
    at Module.load (node:internal/modules/cjs/loader:1076:32)
    at Function.Module._load (node:internal/modules/cjs/loader:911:12)
2024-04-15T19:25:28: PM2 log: Launching in no daemon mode
2024-04-15T19:25:28: PM2 error: Error: ENOENT: no such file or directory, open '/.pm2/pm2.pid'
    at Object.openSync (node:fs:590:3)
    at Object.writeFileSync (node:fs:2202:35)
    at module.exports.Daemon.innerStart (/usr/local/lib/node_modules/pm2/lib/Daemon.js:91:8)
    at /usr/local/lib/node_modules/pm2/lib/Client.js:78:14
    at /usr/local/lib/node_modules/pm2/lib/Client.js:321:14
    at processTicksAndRejections (node:internal/process/task_queues:78:11)
    at runNextTicks (node:internal/process/task_queues:65:3)
    at listOnTimeout (node:internal/timers:528:9)
    at processTimers (node:internal/timers:502:7)
```

### Novu version

0.22 (self-hosted on Openshift)

### npm version

10.5.0

### node version

v20.11.1

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2243389113,5409,🐛 Bug Report: Novu Headless Unit Testing Angular,"### 📜 Description

We have configured Novu headless mode and initialized headless service in an Angular component as follows:

`export class NotificationDialogComponent implements OnInit {
  headlessService: any;
  constructor(private authService: AuthService {}

  ngOnInit(): void {
    this.authService
      .loadUserProfile()
      .then(() => {
        this.headlessService = new HeadlessService({
          applicationIdentifier: environment.novuConfig.applicationIdentifier,
          subscriberId: this.email,
          backendUrl: environment.novuConfig.backendUrl,
          socketUrl: environment.novuConfig.socketUrl,
        });
        this.initSession();
      })
      .catch();
  }

  initSession() {
    this.headlessService.initializeSession({
      listener: (res: FetchResult<ISession>) => {
        console.log('welcome to novu headless service', res);
      },
      onSuccess: (session: ISession) => {
        console.log(session, 'Success');
      },
      onError(error: any) {
        console.log(error, 'ERROR');
      },
    });
  }
}`

It is working fine however, we are unable to unit test this code as we are not able to mock the headless service. Since a new instance of the headless service is created in ngOnInit we are not able to mock it. Is it possible to inject the headless service in the component so that we can provide a mock implementation in the unit tests?

### 👟 Reproduction steps

1. create a component in angular and import novu headless and its functions like initializeSession, fetchNotifications, listenNotificationRead, etc.
2. write unit test cases for the component in spec.ts file

### 👍 Expected behavior

it should successfully run all the unit test cases without any failures/errors.

### 👎 Actual Behavior with Screenshots

Not able to mock the headless service. Since a new instance of the headless service is created in ngOnInit we are not able to mock it. Is it possible to inject the headless service in the component so that we can provide a mock implementation in the unit tests?

### Novu version

""@novu/headless"": ""^0.24.0""

### npm version

10.2.4

### node version

18.19.1

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2221350287,5353,🐛 Bug Report: Self-hosted NC - Notifications are not shown immediately,"### 📜 Description

Currently i am implementing novu for notification in my project , i have used react component and to trigger notification i used curl (as my project is in core php ) also i have self hosted it 
So i am facing several issue please help me to resolve these issue 
1. Without reloading the page notification does not appears on bell icon (websocket throws issue like invalid namespace )
2. On local environment my notification triggers perfectly but when i pushed it on live some notifications does not triggers (it seems worflow id is not being able to fetch but i have passed correct workflow id ).
3. In novu dashboard when i open consol i find alot of issues like workflow issue with CORS 

### 👟 Reproduction steps

 While triggering the notification without reloading the page it does notifies the arrival of notification

### 👍 Expected behavior

I want bell icon automatically notifies the arrival of notification after trigger without any delay

Notifications triggers correctly

### 👎 Actual Behavior with Screenshots

While triggering the notification without reloading the page it does notifies the arrival of notification

### Novu version

I dont remembered 

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2211854441,5340,🐛 Bug Report: Back-off enum not supported on version 23,"### 📜 Description

We have a self hosted instance. We have a workflow with a digest that used to be set with a back-off strategy. It no longer seems to be supported and gives this error on the UI (see image).

We then tried to go back to the same workflow, delete the digest step, add a new digest with v24 configurations, and update the workflow. We got 500 error returned from Novu 😢 

![image](https://github.com/novuhq/novu/assets/7456621/77f3f926-9894-4d66-af70-343698974137)

### 👟 Reproduction steps

1. Create a workflow with a digest step with a 'back-off' strategy on a previous version.
2. Promote to Prod
3. Upgrade to version 24
5. Look back at the workflow in the UI in prod mode.
6. You should see the error on the UI similar to the one attached in the description
7. Go back to Dev mode
8. Delete the digest step
9. Create a new one
10. Update
11. Error will appear on the UI due to a  ""500 Internal Server Error"" on the network

### 👍 Expected behavior

It should just work post update.

### 👎 Actual Behavior with Screenshots

![image](https://github.com/novuhq/novu/assets/7456621/a7900b8d-fa1a-45b2-8a3c-64d6417694a2)


### Novu version

0.24.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2205947081,5337,🐛 Bug Report: save id from resend response,"### 📜 Description

When resend email provider is used, As per resend [API](https://resend.com/docs/api-reference/emails/send-email) and [SDK method ](https://github.com/resend/resend-node/blob/canary/src/emails/interfaces/create-email-options.interface.ts#L89), id is returned in response, but novu is not storing this `Id` in execution details

### 👟 Reproduction steps

1. Make resend as primary email integration with valid resend credentials
2. Add email step in workflow
3. Trigger the workflow 
4. Check activity feed 
5. Click on the `show details` button on the message sent log of email step

### 👍 Expected behavior

Novu should show resend response id in the execution details

### 👎 Actual Behavior with Screenshots

Id not stored and not showing in execution details

### Novu version

Novu Saas

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2171232533,5265,🚀 Feature: launchUrl override field for onesignal provider,"### 🔖 Feature description


Onesignal provider is missing launchUrl field in [implementation](https://github.com/novuhq/novu/blob/next/providers/one-signal/src/lib/one-signal.provider.ts#L32)

### 🎤 Why is this feature needed ?

1. To redirect the user to a specific screen on the app on clicking the push notification
2. Deeplinking

### ✌️ How do you aim to achieve this?

1. Adding this in one signal implementation
2. adding in types and nodejs SDK type

### 🔄️ Additional Information

https://documentation.onesignal.com/docs/links#launch-url

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2170622352,5263,🚀 Feature: support of Comparison operators handler helpers,"### 🔖 Feature description

Comparison operators — operators that compare values and return true or false. 
The operators include: >, <, >=, <=, ===, and !==.

Example:- 
`{{#gt step.total_count 5}}`

### 🎤 Why is this feature needed ?

To compare two variable values and change content dynamically in step content editor

### ✌️ How do you aim to achieve this?

New handlebar helper implementation can be added here
https://github.com/novuhq/novu/blob/next/packages/application-generic/src/usecases/compile-template/compile-template.usecase.ts#L9

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2126844650,5174,🐛 Bug Report: Angular 17 with SSR,"### 📜 Description

The bug occures only when using SSR because of the line in `customElements.define('notification-center-web-component', NotificationCenterWebComponent);` 

SSR does not know a ""window""-Instance and thus also does not know `customElements`. A solution would be to check whether it's an SSR and only register then. It seems also to be only related with Angular 17 apps, it worked in earlier versions where there was not Vite and esbuild in use.

### 👟 Reproduction steps

1. follow the instructions on https://docs.novu.co/quickstarts/angular (chosing to use ssr)
2. open the browser and you will see the error:


### 👍 Expected behavior

It would be nice that it would work with SSR and Angular 17.

### 👎 Actual Behavior with Screenshots

Error:

```
customElements is not defined
    at eval (/Users/sihu/demo4/node_modules/@novu/notification-center-angular/dist/fesm2022/novu-notification-center-angular.mjs:4:1)
    at async instantiateModule (file:///Users/sihu/demo4/node_modules/vite/dist/node/chunks/
```

### Novu version

@novu/notification-center-angular ""^0.23.1""

### npm version

10.4.0

### node version

v20.11.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2123197898,5168,🚀 Feature: allow us to manipulate error response,"### 🔖 Feature description

Novu NodeJS library is inherited from EventEmitter but there is no way to listen to events (also http events) or add interceptor(s) to handle errors on http context since ""http"" is implemented as private.

### 🎤 Why is this feature needed ?

I need to transpile generated errors into a more understandable context for my application.

### ✌️ How do you aim to achieve this?

This can be easily achieved by exposing http context or by giving the option to add interceptor(s) at the event of Client instance creation.

### 🔄️ Additional Information

I am using a workaround at the moment.

```typescript    
(novu as any).http.interceptors.response.use(
    (response: AxiosResponse) => response,
      (error: AxiosError) => {
        return Promise.reject(error?.response?.data);
    },
);
```

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2122005915,5163,🐛 Bug Report & fix: subscriber details not available for digest filters,"### 📜 Description

If you use `on: 'subscriber'` for a filter on a digest step, that filter always fails because a bug causes all subscriber details to be null when evaluating filters on digests. I've figured out the root cause (a weirdness in ConditionsFilter's `normalizeVariablesData` that requires an optional argument on ConditionsFilterCommand to work correctly. We might want to fix that separately) and am ready to submit a PR once this issue is assigned to me.

### 👟 Reproduction steps

Add a workflow with a digest with the following filter:
```
{
  ""value"": ""AND"",
  ""children"": [
    {
      ""field"": ""data.digest"",
      ""value"": ""digest"",
      ""operator"": ""EQUAL"",
      ""on"": ""subscriber""
    }
  ]
}
```

Trigger the workflow with a user that has the correct data:
```js
await novu.subscribers.identify(""subscriberId"", {
  firstName: ""Pawan"",
  lastName: ""Jain"",
  email: ""pawan.jain@domain.com"",
  data: { digest: ""digest"" }
});
await novu.trigger('workflow-id',
  {
    to: ['subscriberId'],
    payload: { example: 'example' },
  }
);
await novu.trigger('workflow-id',
  {
    to: ['subscriberId'],
    payload: { example: 'example' },
  }
);
```

### 👍 Expected behavior

The digesting should happen, as the susbcriber has the correct data for the filter to pass.

### 👎 Actual Behavior with Screenshots

The subscriber receives two notifications, each digest saying in the web interface ""Step was filtered based on steps filters""
![image](https://github.com/novuhq/novu/assets/612454/c9217203-f771-4e08-b7a5-9b6b7c346a5c)


### Novu version

next

### npm version

10.1.0

### node version

v20.8.1

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2106231711,5130,🐛 Bug Report: updating notification center encryption not available at Nodejs SDK,"### 📜 Description

Breaking change at environments API from 0.15.0 to 0.22.0. Updating encryption through the API no longer exists or is referenced in the changelog

```typescript
// Desired status is whatever we want and in my use case, comes from ENV
const desiredStatus = true
const response = await this.novu.environments.updateWidget({ notificationCenterEncryption: desiredStatus })
```

As you can see the API above is valid at `0.15.0` and the use case is to sync any instance running with the provided config to my custom Nestjs wrapper around Novu (this wrapper syncs configurations that come from env/dynamic with the running tenant and encryption is one of the properties)

### 👟 Reproduction steps

1. Install the latest version or starting from ``
2. Observe that `environments` no longer exposes a way to update a widget or encryption status at all expose

### 👍 Expected behavior

A method that is exposed through the SDK in order to facilitate encryption toggling

### 👎 Actual Behavior with Screenshots

No longer exists, might have been changed and there might be another way of doing but it wasn't listed/referencedIt no

### Novu version

0.16.0 or anything after 0.15.0

### npm version

8.18.2

### node version

18.12.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2067326051,5050,🐛 Bug Report: Cancelling Scheduled Event Edge Case,"### 📜 Description

Hi, Novu team! Thanks for the amazing product. 

When scheduling an event a lot of users (multicast or broadcast to huge number of subscrbers), let's say the time this takes is 10 minutes (maybe a million users). If we were to call the cancel endpoint in the middle of that 10 minutes span, the cancel endpoint would only cancel jobs that have already been created (scheduled).



### 👟 Reproduction steps

Run a script to create a lot of users (like > 10k)

Schedule it to a certain point in the future.

As soon as you schedule, cancel immediately.

Some of the messages will still arrive because they were created after the cancel event.

### 👍 Expected behavior

Perhaps we should keep track of which transaction id got cancelled and check that along with the job status enum?

In the transaction `cancel-delayed-usecase.ts`

```ts
    await this.jobRepository.update(
      {
        _environmentId: command.environmentId,
        _id: {
          $in: transactionJobs.map((job) => job._id),
        },
      },
      {
        $set: {
          status: JobStatusEnum.CANCELED,
        },
      }
    );

   // HERE
   markTransactionIdAsCancelled(command.transactionId);
```

and then in `run-job.usecase.ts`, we check the cancel status like so

```ts
  @Instrument()
  private async delayedEventIsCanceled(
    job: JobEntity
  ): Promise<{ canceled: boolean; activeDigestFollower: JobEntity | null }> {
    let activeDigestFollower: JobEntity | null = null;

    if (job.type !== StepTypeEnum.DIGEST && job.type !== StepTypeEnum.DELAY) {
      return { canceled: false, activeDigestFollower };
    }

   // this
    const canceled = job.status === JobStatusEnum.CANCELED || checkTransactionIdCancelled(job.transactionId);

// ...
```

### 👎 Actual Behavior with Screenshots

Currently, even with checking both pending, delayed, and merged jobs don't suffice.

<img width=""801"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/208ed10f-6faf-4ea8-b73c-5248ee99961e"">


 Because as I mentioned earlier, some of the jobs haven't even been scheduled. The loop inside `trigger-broadcast-usecase.ts` might still being run and things are still in the process of being sent to subscriberProcessQueueService.

<img width=""733"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/43a7be4e-32c0-4ff5-852d-a9d3724ea140"">

### Novu version

0.22.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2058990137,5033,🚀 Feature: Add the ability to specify SNS origination number when publishing,"### 🔖 Feature description

Currently, the publish command for SNS looks like the following:
(https://github.com/novuhq/novu/blob/next/providers/sns/src/lib/sns.provider.ts#L31)

```js
  const publish = new PublishCommand({
    PhoneNumber: to,
    Message: content,
  });
```
It is my recommendation that a new field be added in the configuration: `Origination Number`.

This will allow users to assign a particular integration in Novu with a specified number from AWS SNS.

Potential code solution:

```js

...
let publishCommand: PublishCommand;

if (this.config.originationNumber) {
      publishCommand = new PublishCommand({
      PhoneNumber: to,
      Message: content,
      MessageAttributes: {
          'AWS.SNS.SMS.SenderID': {
            DataType: 'String',
            StringValue: this.config.originationNumber // Specify your origination number here
          }
        }
    });
} else {
// existing publish command
      publishCommand = new PublishCommand({
        PhoneNumber: to,
        Message: content,
      });
}

const snsResponse = await this.client.send(publishCommand);
...

```

Research:
https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html
https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/client/sns/command/PublishCommand/

### 🎤 Why is this feature needed ?

In my use-case, we use 1 number to send out general ambulance assignments and communications. We use another number to send out emergency communications.

### ✌️ How do you aim to achieve this?

Add a new option in the UI/API that will allow users to input their origination number. If set, it will add that number to the configuration. This would be optional so there would be no downtime on upgrades for existing implementations.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2052487608,5015,🐛 Bug Report: translations are missing in the notification centre,"### 📜 Description

While https://github.com/novuhq/novu/blob/main/packages/notification-center/src/i18n/languages/en.ts contains 8 strings, most other languages contain 5 strings only. The missing strings are `removeMessage`, `markAsRead` and `markAsUnRead`.

This leads to language confusions in the notification centre, for example with `i18n=""de""` showing a mixture of German and English strings.

I could provide following translations: `da, de, fr, it`

### 👟 Reproduction steps

Add a different language than English to the `NovuProvider`:

```
<NovuProvider i18n=""de"">
  <PopoverNotificationCenter>
    {({ unseenCount }) => <NotificationBell unseenCount={unseenCount} />}
  </PopoverNotificationCenter>
</NovuProvider>
```

### 👍 Expected behavior

All translations within the notification centre should be in German.

### 👎 Actual Behavior with Screenshots

Translations for `removeMessage`, `markAsRead` and `markAsUnRead` are missing and the English strings are being displayed instead.

<img width=""438"" alt=""Bildschirmfoto 2023-12-21 um 14 52 39"" src=""https://github.com/novuhq/novu/assets/206830/d41e54fc-a173-42f1-be59-eb3f3ab4cbde"">

### Novu version

Novu SaaS

### npm version

NA

### node version

NA

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2043624231,4987,🐛 Bug Report: cta.action empty string in messagetemplates mongo collection,"### 📜 Description

We are finding some scenarios where cta.action is an empty string in `messagetemplates` mongo collection. This causes an `Cannot create property 'buttons' on string ''` error when trying to call to `subscribers/[subscriberId]/notifications/feed` endpoint 

### 👟 Reproduction steps

1. From novu web go to workflows section and define a new workflow with an `in-App`step
2. In this step you can add a message and you can create no actions associated to that message
![image](https://github.com/novuhq/novu/assets/104857714/2c32c7c4-2e37-497b-a49d-9420b4277bb2)
In database the collection created is something similar to this
```
{
  ""type"": ""in_app"",
  ""active"": true,
  ""subject"": """",
  ""variables"": [ ... ],
  ""content"": ""..."",
  ""contentType"": ""editor"",
  ""cta"": {
    ""data"": {
      ""url"": ""...""
    },
    ""type"": ""redirect"",
    ""action"": """"
  },
  ""_environmentId"": {
    ""$oid"": ""63e4ab490bed44e5c6c51420""
  },
  ""_organizationId"": {
    ""$oid"": ""63e4ab490bed44e5c6c5141a""
  },
  ""_creatorId"": {
    ""$oid"": ""64c8e62b80cc8ccb5ad8abcd""
  },
  ""_feedId"": {
    ""$oid"": ""648057a4496ae26089bd4020""
  },
  ""_layoutId"": null,
  ""createdAt"": {
    ""$date"": ""2023-08-07T10:35:34.605Z""
  },
  ""updatedAt"": {
    ""$date"": ""2023-12-15T09:04:15.135Z""
  },
  ""__v"": 0,
  ""actor"": {
    ""type"": ""none"",
    ""data"": null
  }
}
```
where `cta.action`is an empty string.



### 👍 Expected behavior

It should create cta.action as an empty object not as an empty string, so calling to `subscribers/[subscriberId]/notifications/feed` endpoint may not return an error.

### 👎 Actual Behavior with Screenshots

Worker service, when tries to process the messages is creating a new message in mongo with the field `cta.action`as an empty string.
When trying to call to `subscribers/[subscriberId]/notifications/feed` endpoint we are getting the following error
```
{
  ""insertId"": ""06y8xcljy31zqmj9"",
  ""jsonPayload"": {
    ""organizationId"": ""63eb559766b0e27ff9604f4d"",
    ""msg"": ""Cannot create property 'buttons' on string ''"",
    ""req"": {
      ""query"": {
        ""feedIdentifier"": ""Alert"",
        ""seen"": ""false""
      },
      ""params"": {
        ""0"": ""subscribers/63b0959d-2ab0-4ac0-b993-8c98095f9ece/notifications/feed""
      },
      ""remoteAddress"": ""...."",
      ""url"": ""/v1/subscribers/63b0959d-2ab0-4ac0-b993-8c98095f9ece/notifications/feed?feedIdentifier=Alert&seen=false"",
      ""id"": 7474022,
      ""headers"": {},
      ""method"": ""GET"",
      ""remotePort"": 58638
    },
    ""environmentId"": ""63eb559766b0e27ff9604f6f"",
    ""serviceName"": ""@novu/api"",
    ""platform"": ""Docker"",
    ""serviceVersion"": ""0.19.0"",
    ""err"": {
      ""message"": ""Cannot create property 'buttons' on string ''"",
      ""type"": ""Error"",
      ""stack"": ""TypeError: Cannot create property 'buttons' on string ''\n    at applyDefaults (/usr/src/app/node_modules/.pnpm/mongoose@6.11.3/node_modules/mongoose/lib/helpers/document/applyDefaults.js:106:25)\n    at model.Document.$__init (/usr/src/app/node_modules/.pnpm/mongoose@6.11.3/node_modules/mongoose/lib/document.js:705:3)\n    at model.syncWrapper [as $__init] (/usr/src/app/node_modules/.pnpm/kareem@2.5.1/node_modules/kareem/index.js:331:25)\n    at model.Document.init (/usr/src/app/node_modules/.pnpm/mongoose@6.11.3/node_modules/mongoose/lib/document.js:638:8)\n    at model.Document.$init (/usr/src/app/node_modules/.pnpm/mongoose@6.11.3/node_modules/mongoose/lib/document.js:654:42)\n    at completeMany (/usr/src/app/node_modules/.pnpm/mongoose@6.11.3/node_modules/mongoose/lib/helpers/query/completeMany.js:43:14)\n    at cb (/usr/src/app/node_modules/.pnpm/mongoose@6.11.3/node_modules/mongoose/lib/query.js:2316:5)\n    at /usr/src/app/node_modules/.pnpm/mongodb@4.16.0/node_modules/mongodb/src/utils.ts:461:15\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)""
    },
    ""pid"": 17,
    ""userId"": ""63eb558466b0e27ff9604f2e"",
    ""level"": 50,
    ""context"": ""ExceptionsHandler"",
    ""tenant"": ""OS""
  },
  ""timestamp"": ""2023-12-15T05:01:42.807Z"",
  ""receiveTimestamp"": ""2023-12-15T05:01:47.735874145Z""
}
```

### Novu version

0.19.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
2034242178,4962,🚀 Feature: Make an Endpoint for Handlebars Interpolation Using Existing Templates,"### 🔖 Feature description

We have a panel where the admin can create different types of announcements. These announcements are tied to different workflows, and each of them have their own custom handlebars in app template. Some are cosmetically complex. It'd be nice to have an endpoint that we can just call to have the templating engine on novu backend do the interpolation and return the resulting html back. Something like this:




### 🎤 Why is this feature needed ?

Right now, we have to manually find the template by getting the entire detail of a workflow, then look for a specific step, extract out the handlebars template and then on our react admin panel, use the data input by the admin and interpolate using the handlebars package.

### ✌️ How do you aim to achieve this?

To have a new endpoint specifically for previewing things. A possible interface in the sdk might be:

```ts
novu.workflows.previewTemplate({
    name: workflowName,
    payload: {
          announcementName, 
          announcementDescription,
    },
    step: 1,  
});
```

The endpoint returns a string representing the interpolated content using the handlebars template and the given payload of the specified workflow and step. 

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2016097354,4912,[NV-3237] Intercom chat bubble shouldn't be visible,"### Reproduction Steps
1. Navigate to the Integrations page.
2. Click on the existing integration from the list to edit.
3. Close the Integration Sidebar.
4. The Intercom chat bubble will appear after.

### Expected Behaviour
- the Intercom chat bubble won't show
- the Intercom popover should be only controlled by the help button ""?"" from the header navigation


### Additional info
For the local development, you would need to update the INTERCOM_APP_ID.
https://github.com/novuhq/novu/blob/ccd52a27f1914f04577b998b9afc84da8a8e8133/apps/web/src/config/index.ts#L45


### Screenshots
![image](https://github.com/novuhq/novu/assets/2607232/3cce5153-9ad0-4bbd-98e3-19abbccda0e6)

https://github.com/novuhq/novu/assets/2607232/caeca8c7-ea0a-42d9-a880-ca4cba7d01be

",,
2014136836,4907,🚀 Feature: Expose Public API to Invalidate Cache,"### 🔖 Feature description

Every time I make changes to notification templates, I have to manually invalidate the entity cache in redis in order for the next queries to receive fresh template data. It'd be nice to have a public API that allows us to invalidate specific caches.

For now, I think this is the part that intercepts my get template detail call and return cached data 

https://github.com/novuhq/novu/blob/next/apps/worker/src/app/workflow/usecases/send-message/send-message.usecase.ts#L314



### 🎤 Why is this feature needed ?

My use case is that we want the data to reflect immediately every time we edit a template. Right now, we have to go into redis and delete these manually:

<img width=""425"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/c5958718-1b9d-4653-b057-ccff4e5ebb6e"">



### ✌️ How do you aim to achieve this?

PUT notification-templates/{template-id} should invalidate the entity cache.

We could, of course, invalidate the keys by interacting with redis API directly, but we don't want to shoot ourselves in the foot later when the implementation details  -- the keys -- change.

**_Edit: I noticed that I said `PUT` endpoint here. That's not the case. I forgot that we were actually promoting the changes not calling the put endpoint directly because we had problems with the production, not development environment._**

### 🔄️ Additional Information

I'm referring to the production environment. We are self-hosting. We have no use of the development environment; all of our environments, dev, staging, and prod use different databases.

Found a similar issue, but it was closed already due to inactivity.

https://github.com/novuhq/novu/issues/3520

Please let me know if there already is an existing solution or if I have missed something.

Appreciate the work y'all are doing. Thanks!

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
2008183812,4890,🚀 Feature: [EMAIL - OFFICE365] Correctly differentiate FROM and LOGIN,"### 🔖 Feature description

Currently, the Outlook 365 integration does not allow you to have a mailing list that sends emails using a Microsoft account authorized to do so.

The problem is that the 'from' is used for the login to Microsoft. While it is possible to use a different 'from' in the email than the user's login to the server.

### 🎤 Why is this feature needed ?

We need this functionality to be able to send emails with a different username depending on our environments without declaring a license per environment.

### ✌️ How do you aim to achieve this?

Edit the file https://github.com/novuhq/novu/blob/next/providers/outlook365/src/lib/outlook365.provider.ts to use the senderName rather than the from here: https://github.com/ novuhq/novu/blob/next/providers/outlook365/src/lib/outlook365.provider.ts#L73.

### 🔄️ Additional Information

I can submit a PR, but I might need some help for update on documentation

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1994888473,4850,🐛 Bug Report: FCM push notification overrides are only applied to first device token,"### 📜 Description

When sending push notifications with overrides (e.g. setting the type to `data`) to a subscriber with multiple FCM device tokens, only the first registered device will receive the notification with the correct overrides. The first device token might not even be valid anymore, so the notification with the correct overrides might not have been received at all.

Looking at the code it seems that the options object including the overrides is modified in-place, e.g.:
https://github.com/novuhq/novu/blob/947ab956121aebe070342cbc1853d2f81dc89847/providers/fcm/src/lib/fcm.provider.ts#L66

and this code gets called when iterating over the device tokens of the subscriber:
https://github.com/novuhq/novu/blob/947ab956121aebe070342cbc1853d2f81dc89847/apps/worker/src/app/workflow/usecases/send-message/send-message-push.usecase.ts#L165

### 👟 Reproduction steps

```
curl --location --request POST 'https://eu.api.novu.co/v1/events/trigger' \
     --header 'Authorization: ApiKey <REPLACE_WITH_API_KEY>' \
     --header 'Content-Type: application/json' \
     --data-raw '{
         ""name"": ""post-comment-mention"",
         ""to"": {
           ""subscriberId"": ""<ID-OF-SUBSCRIBER-WITH-MULTIPLE-FCM-DEVICE-TOKENS>""
         },
         ""payload"": {
           ""data"": {
             ""user"": {
               ""fullName"": ""Test SF"",
             },
           },
         },
         ""overrides"": {
           ""type"": ""data"",
           ""fcm"": {
             ""type"": ""data"",
             ""data"": {
               ""userFullName"": ""Test SF"",
             }
           },
           ""apns"": {
             ""payload"": {
               ""data"": {
                 ""user"": {
                   ""fullName"": ""Test SF"",
                 },
               },
             }
           }
         }
       }'
```

### 👍 Expected behavior

All push notifications for a subscriber with multiple device tokens should be sent with all overrides provided.

Example notification with type `data` set via overrides (currently no message body due to https://github.com/novuhq/novu/issues/4639)

![notification_expected](https://github.com/novuhq/novu/assets/12397609/100b4d20-3b29-44c5-8be9-36dc14ade3ca)


### 👎 Actual Behavior with Screenshots

Example notification that should have been sent with type `data` set via overrides (expected no message body due to https://github.com/novuhq/novu/issues/4639)

![notification_received](https://github.com/novuhq/novu/assets/12397609/3e4804f2-5a59-4ae4-b097-3c3b983551dd)


### Novu version

Novu SaaS

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1992831370,4846,🐛 Bug Report: @novu/notification-center Mark all as seen undesirable behavior,"### 📜 Description

In the `@novu/notification-center` package, when you mark something as ""seen"", that message's `read` state will temporarily be marked as unread when the data is invalidated. 

This causes an issue where, if I had a custom notification card whose message is `read == true`. Let's say that this card shows some type of indicator when a message is unread. When the user clicks on `mark all as seen`, which calls the `markAllAsSeen` method from the `useNotification` hook, the indicator would flash for a few milliseconds.

This is because the read state flips to `unread`, before switching back to `read` again when the new data arrives.

[novu/packages/notification-center/src/hooks/useMarkNotificationAsSeen.ts at caac4b58775a6884a7e85b0055562f6ea62ee3a3 · novuhq/novu (github.com)](https://github.com/novuhq/novu/blob/caac4b58775a6884a7e85b0055562f6ea62ee3a3/packages/notification-center/src/hooks/useMarkNotificationAsSeen.ts#L35C44-L35C49)

<img width=""1017"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/05721b62-0db4-48bb-b013-38091e6a6ccf"">




### 👟 Reproduction steps

1. Create one notification.
2. Mark it as read. At this point, the message associated with the notification should now have `read === true`
3. `console.log` the read state, and then call `markAllAsSeen`.
4. You will see that the read state briefly switches to `false` before switching back to `true`.

### 👍 Expected behavior

Should retain the actual read state.

I think the ideal behavior would be to use the `read` state of the current notification instead.

So, from this

```tsx
//...
(infiniteData) => {
            const pages = infiniteData.pages.map((page) => {
              const data = page.data.map((message) => {
                return { ...message, read: false, seen: true };
 //...
```

we change to this

```tsx
//...
(infiniteData) => {
            const pages = infiniteData.pages.map((page) => {
              const data = page.data.map((message) => {
                return { ...message, seen: true };
 //...
```


### 👎 Actual Behavior with Screenshots

So I made a mock notification following the steps listed above:

The response is always

<img width=""381"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/df532c50-1a7b-4235-9680-9eb633f0b3a6"">

But the UI is like this (I'm repeatedly clicking mark all as read in this short clip). Green dot means the notification is unread.

https://github.com/novuhq/novu/assets/56601823/7b13f289-7361-4e7c-a5f8-01e5d40a4055



### Novu version

0.21.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1990566072,4838,🐛 Bug Report: TypeError: Cannot read properties of undefined (reading 'child'),"### 📜 Description

Seeing lots of these errors in our workers processing digests, and I see this in the stack trace for the job.

Worker log

`{
    ""level"": 50,
    ""time"": 1699008800882,
    ""pid"": 17,
    ""serviceName"": ""@novu/worker"",
    ""serviceVersion"": ""0.17.1"",
    ""platform"": ""Docker"",
    ""tenant"": ""OS"",
    ""context"": ""WorkflowQueueService"",
    ""msg"": ""Failed to run the job 65437fa0b9c1e45d5c68e928 during worker processing""
}`

In the job in the Mongo database, I see this stack trace

```
error: {
      stack: ""TypeError: Cannot read properties of undefined (reading 'child')\n"" +
        '    at PinoLogger.assign (/usr/src/app/node_modules/.pnpm/nestjs-pino@3.1.2_g2cqd4mgcg63o5mvxc7l66lzja/node_modules/nestjs-pino/PinoLogger.js:106:37)\n' +
        '    at RunJob.<anonymous> (/usr/src/app/apps/worker/dist/webpack:/@novu/worker/src/app/workflow/usecases/run-job/run-job.usecase.ts:33:18)\n' +
        '    at Generator.next (<anonymous>)\n' +
        '    at fulfilled (/usr/src/app/apps/worker/dist/main.js:1856:58)\n' +
        '    at runMicrotasks (<anonymous>)\n' +
        '    at processTicksAndRejections (node:internal/process/task_queues:96:5)',
      message: ""Cannot read properties of undefined (reading 'child')""
    }
```

Any ideas on what might be the problem?

### 👟 Reproduction steps

This is part of the worker log

### 👍 Expected behavior

It should digest properly and send notifications

### 👎 Actual Behavior with Screenshots

error (see above)

### Novu version

0.17.1 

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

Asked in discord #support no response yet

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1985551246,4818,[NV-1043] Test Plivo connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Plivo` provider.

Path to the file : `providers/plivo/src/lib/plivo.provider.ts`

Look into the Plivo docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Plivo, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-1043](https://linear.app/novu/issue/NV-1043/test-plivo-connection-when-creatingupdating-integration)</sub>",,
1985551244,4817,[NV-1044] Test SMS77 connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `SMS77` provider.

Path to the file : `providers/sms77/src/lib/sms77.provider.ts`

Look into the SMS77 docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by SMS77, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-1044](https://linear.app/novu/issue/NV-1044/test-sms77-connection-when-creatingupdating-integration)</sub>",,
1985551243,4816,[NV-1041] Test Nexmo connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Nexmo` provider.

Path to the file : `providers/nexmo/src/lib/nexmo.provider.ts`

Look into the Nexmo docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Nexmo, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-1041](https://linear.app/novu/issue/NV-1041/test-nexmo-connection-when-creatingupdating-integration)</sub>",,
1985551242,4815,[NV-1048] Test Gupshup connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Gupshup` provider.

Path to the file : `providers/gupshup/src/lib/gupshup.provider.ts`

Look into the Gupshup docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Gupshup, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-1048](https://linear.app/novu/issue/NV-1048/test-gupshup-connection-when-creatingupdating-integration)</sub>",,
1985551241,4814,[NV-1045] Test Amazon SNS connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `SNS` provider.

Path to the file : `providers/sns/src/lib/sns.provider.ts`

Look into the SNS docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by SNS, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-1045](https://linear.app/novu/issue/NV-1045/test-amazon-sns-connection-when-creatingupdating-integration)</sub>",,
1985551239,4813,[NV-1047] Test Twilio connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Twilio` provider.

Path to the file : `providers/twilio/src/lib/twilio.provider.ts`

Look into the Twilio docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Twilio, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-1047](https://linear.app/novu/issue/NV-1047/test-twilio-connection-when-creatingupdating-integration)</sub>",,
1985551238,4812,[NV-1046] Test Telnyx connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Telnyx` provider.

Path to the file : `providers/telnyx/src/lib/telnyx.provider.ts`

Look into the Telnyx docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Telnyx, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-1046](https://linear.app/novu/issue/NV-1046/test-telnyx-connection-when-creatingupdating-integration)</sub>",,
1985526172,4811,[NV-984] Test EmailJS provider connection when creating/updating integration,"**Why?**

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.
Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.
We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.


**How?**
We will need to create a new method i.e,checkIntegration for the `EmailJS` provider. 
Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.
Path to the file : `providers/emailjs/src/lib/emailjs.provider.ts`
Look into the EmailJS docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.
If there's no dedicated endpoint/method provided by EmailJS, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.
P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this pr for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-984](https://linear.app/novu/issue/NV-984/test-emailjs-provider-connection-when-creatingupdating-integration)</sub>",,
1985526171,4810,[NV-990] Test Mailjet provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Mailjet` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/mailjet/src/lib/mailjet.provider.ts`

Look into the Mailjet docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Mailjet, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-990](https://linear.app/novu/issue/NV-990/test-mailjet-provider-connection-when-creatingupdating-integration)</sub>",,
1985526168,4809,[NV-997] Test Amazon SES provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `SES` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/ses/src/lib/ses.provider.ts`

Look into the SES docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by SES, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-997](https://linear.app/novu/issue/NV-997/test-amazon-ses-provider-connection-when-creatingupdating-integration)</sub>",,
1985526166,4808,[NV-994] Test Nodemailer provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Nodemailer` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/nodemailer/src/lib/nodemailer.provider.ts`

Look into the Nodemailer docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Nodemailer, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-994](https://linear.app/novu/issue/NV-994/test-nodemailer-provider-connection-when-creatingupdating-integration)</sub>",,
1985526148,4807,[NV-988] Test MailerSend provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `MailerSend` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/mailersend/src/lib/mailersend.provider.ts`

Look into the MailerSend docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by MailerSend, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-988](https://linear.app/novu/issue/NV-988/test-mailersend-provider-connection-when-creatingupdating-integration)</sub>",,
1985526147,4806,[NV-996] Test Sendinblue provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Sendinblue` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/sendinblue/src/lib/sendinblue.provider.ts`

Look into the Sendinblue docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Sendinblue, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-996](https://linear.app/novu/issue/NV-996/test-sendinblue-provider-connection-when-creatingupdating-integration)</sub>",,
1985526146,4805,[NV-992] Test Netcore provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Netcore` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/netcore/src/lib/netcore.provider.ts`

Look into the Netcore docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Netcore, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-992](https://linear.app/novu/issue/NV-992/test-netcore-provider-connection-when-creatingupdating-integration)</sub>",,
1985526145,4804,[NV-991] Test Mandrill provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Mandrill` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/mandrill/src/lib/mandrill.provider.ts`

Look into the Mandrill docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Mandrill, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-991](https://linear.app/novu/issue/NV-991/test-mandrill-provider-connection-when-creatingupdating-integration)</sub>",,
1985526144,4803,[NV-995] Test Postmark provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Postmark` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/postmark/src/lib/postmark.provider.ts`

Look into the Postmark docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Postmark, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-995](https://linear.app/novu/issue/NV-995/test-postmark-provider-connection-when-creatingupdating-integration)</sub>",,
1980714626,4776,🚀 Feature: How implement NOVU notification service in HapiJs(node 12.13.1)?,"### 🔖 Feature description

While we have added below package @novu/node then show import and export function not working in HapiJS.

 

### 🎤 Why is this feature needed ?

We have to implement Novu notification service for our client and his code in HapiJs 

### ✌️ How do you aim to achieve this?

When you give us proper solution then we implement Novu into in HapiJS

### 🔄️ Additional Information
![image (1)](https://github.com/novuhq/novu/assets/107024633/5c2232fa-be64-420f-b223-9ef00c331f87)

None

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1980714231,4775,🚀 Feature: add nodejs sdk methods for organization apis,"### 🔖 Feature description

We recently made organizations apis public and accessible using API keys and nodejs methods are missing for these apis

https://api.novu.co/api#/Organizations/OrganizationController_createOrganization

### 🎤 Why is this feature needed ?

So that these apis can be accessed using nodejs SDK methods

### ✌️ How do you aim to achieve this?

By adding organization methods in sdk

### 🔄️ Additional Information

1. Crete required DTOs and interfaces
2. Add required tests
3. Document in readme.md

Take subscriber methods as reference
https://github.com/novuhq/novu/blob/next/packages/node/src/lib/subscribers/subscribers.ts

Take documentation for subscriber as reference
https://github.com/novuhq/novu/blob/next/packages/node/README.md#subscribers

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1978955366,4770,🐛 Bug Report: Node SDK ITopicPayload Has Wrong Type,"### 📜 Description

When calling `novu.topics.create(...)`, the documentation and the backend code says all parameters are required, but the types in the typescript sdk is saying everything is optional

<img width=""639"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/56abb1da-ff9e-49d4-ae71-488e4a07c16f"">

https://github.com/novuhq/novu/blob/c40182938a1b2d0e62ecee9acce7e32863370f8b/packages/node/src/lib/topics/topic.interface.ts#L21

### 👟 Reproduction steps



<img width=""1009"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/93f6e54c-d94e-4765-b64a-c95a0f637be4"">

Use this curl command, replace the apikey and remove either `key` or `name`. You will get an error like the attached screenshot. If this is correct, then the node sdk should change its type to match.

```curl
curl --location 'http://localhost:5001/v1/topics' \
--header 'Authorization: ApiKey 4775389efc0ef5e2362774efc7938b80' \
--header 'Content-Type: application/json' \
--data '{
  ""name"": ""something sdfsd"",
  ""key"": ""something sdfsd""
}'
```

### 👍 Expected behavior

Either backend and documentation update `key` and `name` to be optional, or the node sdk change its typescript type to be mandatory.

### 👎 Actual Behavior with Screenshots

<img width=""1009"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/93f6e54c-d94e-4765-b64a-c95a0f637be4"">

### Novu version

0.17.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1973485423,4747,Embedded Notification Board - Click doesn't work with Shadow DOM element,"## Issue Description
When using the Iframe based Notification Board, the click event handler won't work properly when using a shadow DOM based icon: [Iconify](https://iconify.design/docs/iconify-icon/)

## Reproduction setup:

Minimal reproducible HTML
```html
<head>
<script src=""https://code.iconify.design/iconify-icon/1.0.8/iconify-icon.min.js""></script>
<script>
  (function(n,o,t,i,f) {
    n[i] = {}; var m = ['init', 'on']; n[i]._c = [];m.forEach(me => n[i][me] = function() {n[i]._c.push([me, arguments])});

    var elt = o.createElement(f); elt.type = ""text/javascript""; elt.async = true; elt.src = t;
    var before = o.getElementsByTagName(f)[0]; before.parentNode.insertBefore(elt, before);
  })(window, document, 'https://embed.novu.co/embed.umd.min.js', 'novu', 'script');
  novu.init(
    ""<APP_ID>"",
    {
      unseenBadgeSelector: ""#unseen-badge"",
      bellSelector: ""#notification-bell"",
    },
    {
      subscriberId: ""<SUBSCRIBER_ID>"",
      subscriberEmail: ""<SUBSCRIBER_EMAIL>"",
      firstName: ""<FIRST_NAME>
    }
  );
</script>
</head>

<body>
<nav>
  <div id=""notification-bell"">
     <iconify-icon icon=""carbon:notification-filled""></iconify-icon>
    <span id=""unseen-badge""></span>
  </div>
</nav>

</body>
```

## Investigation detail:
The contain call in this line will always be false if the click target is inside a Shadow DOM:
https://github.com/novuhq/novu/blob/68720f6c8e574079002b8f3bdb6d84480239fd65/libs/embed/src/embed.ts#L142

Explanation and possible solution is detailed here:
https://stackoverflow.com/questions/71866583/check-if-a-element-is-logically-a-child-of-another-element-in-shadow-dom

## Proposed solution
Apply the `findRootNode` function from the StackOverflow Answer to traverse from click target to the `shadowHost` element, then `contains` with the shadowHost. ",,
1971817239,4736,🐛 Bug Report: Bulk Apply Changes in @node/novu wrong property name,"### 📜 Description

For `POST v1/changes/bulk/apply`, the name of the required property `changeIds` in the body of the request is wrong when using @novu/node typescript sdk.

The endpoint expects `changeIds`, but the sdk passes `ChangeIDs`

[sdk](https://github.com/novuhq/novu/blob/a063e8ed4e135899438bbc4e03910b386c72e722/packages/node/src/lib/changes/changes.ts#L33)

novu backend[
](https://github.com/novuhq/novu/blob/a063e8ed4e135899438bbc4e03910b386c72e722/apps/api/src/app/change/changes.controller.ts#L93)


### 👟 Reproduction steps

Call `novu.changes.bulkApply([""someId""]);`

The endpoint will throw an error. The screenshot is attached below.

### 👍 Expected behavior

The Id should match. Either both use `ChangeIDs` or `changeIds`

### 👎 Actual Behavior with Screenshots

I had another request with a bunch of ids, but the one in the screenshot is an empty array. Both throw the same error.

<img width=""461"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/dcafc247-3435-446e-b1a8-30eeef48c415"">



### Novu version

0.17.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1971791345,4735,🐛 Bug Report: @node/novu sdk Changes GET Endpoint Missing Query Param,"### 📜 Description

When calling `novu.changes.get()` from the @novu/node sdk, we have no way of passing in the required `promoted` query parameter, as specified in the documentation:

<img width=""553"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/582ac23f-24e1-4f71-bab5-7fd519d76433"">

https://github.com/novuhq/novu/blob/a063e8ed4e135899438bbc4e03910b386c72e722/packages/node/src/lib/changes/changes.ts#L9

This means `novu.changes.get()` will always throw an error, asking for the missing `promoted` property.


The two pagination properties are also missing: `page` and `limit`.

### 👟 Reproduction steps

1. `const novu = new Novu(yourApiKey)`
2. Call `novu.changes.get()`

### 👍 Expected behavior

We should be able to pass the three query parameters, or at least the required one, as specified in the docs.

<img width=""516"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/1ea879ab-0575-4f7c-9dc1-a776d986810e"">


### 👎 Actual Behavior with Screenshots

<img width=""441"" alt=""image"" src=""https://github.com/novuhq/novu/assets/56601823/d61c830e-733d-4844-a15a-6c5a27dddc14"">


### Novu version

0.17.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1967754031,4707,"🐛 Bug Report: Vue NC - `Warning: You are importing createRoot from ""react-dom"" which is not supported.`","### 📜 Description

Logs an error (warning) that requires upgrading

```
react-dom.development.js:86 Warning: You are importing createRoot from ""react-dom"" which is not supported. You should instead import it from ""react-dom/client"".
```

https://github.com/novuhq/novu/blob/06843bf5fb387e702338b2346721694f6537a20b/packages/notification-center/src/utils/react-to-webcomponent.ts#L219

### 👟 Reproduction steps

Add the notification centre to a vue application—see #4705 for reproduction

### 👍 Expected behavior

Console should not see errors

### 👎 Actual Behavior with Screenshots

Logging errors (because needs upgrade)

### Novu version

Novu 0.20.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1967722525,4705,🐛 Bug Report: throws—Cannot read properties of undefined (reading 'unmount'),"### 📜 Description

Throws an unhandled error.

https://github.com/novuhq/novu/blob/06843bf5fb387e702338b2346721694f6537a20b/packages/notification-center/src/utils/react-to-webcomponent.ts#L194

```
TypeError Cannot read properties of undefined (reading 'unmount') 
    node_modules/@novu/notification-center/dist/esm/utils/react-to-webcomponent.js:161:29 f.disconnectedCallback
    app_dist/src/mixins/detachable/index.ts:163:13 s.initDetach
    app_dist/src/mixins/detachable/index.ts:90:28 s.mounted
    node_modules/vue/dist/vue.runtime.esm.js:3013:60 invokeWithErrorHandling
    node_modules/vue/dist/vue.runtime.esm.js:4026:12 callHook$1
    node_modules/vue/dist/vue.runtime.esm.js:4418:12 Object.insert
    node_modules/vue/dist/vue.runtime.esm.js:6924:37 invokeInsertHook
    node_modules/vue/dist/vue.runtime.esm.js:7135:8 s.__patch__
    node_modules/vue/dist/vue.runtime.esm.js:3764:24 Mr.e._update
    node_modules/vue/dist/vue.runtime.esm.js:3870:15 s.r
```

### 👟 Reproduction steps

Use the notification center in vue2

```Notifications.vue
<template>
    <notification-center-content-component
            :backend-url=""backendUrl""
            :socket-url=""socketUrl""
            :subscriber-id=""subscriberId""
            :application-identifier=""applicationIdentifier""
            :subscriber-hash=""subscriberHash""
            :stores=""stores""
            :tabs=""tabs""
            :show-user-preferences=""showUserPreferences""
            :allowed-notification-actions=""allowedNotificationActions""
            :theme=""theme""
            :styles=""styles""
            :color-scheme=""colorScheme""
            :i18n=""i18n""
            :session-loaded=""sessionLoaded""
            :notification-clicked=""notificationClicked""
            :unseen-count-changed=""unseenCountChanged""
            :action-clicked=""actionClicked""
            :tab-clicked=""tabClicked"" />
</template>

<script lang=""ts"">

    import type { NotificationCenterContentComponentProps } from '@novu/notification-center';
    import { Component, Prop, VModel, Vue } from 'vue-property-decorator';

    export type FloatingPlacement = 'end' | 'start';
    export type FloatingSide = 'top' | 'right' | 'bottom' | 'left' | 'auto';
    export type FloatingPosition = FloatingSide | `${FloatingSide}-${FloatingPlacement}`;

    export interface INotificationCenterComponentProps {
        backendUrl?: NotificationCenterContentComponentProps['backendUrl'];
        socketUrl?: NotificationCenterContentComponentProps['socketUrl'];
        subscriberId?: NotificationCenterContentComponentProps['subscriberId'];
        applicationIdentifier: NotificationCenterContentComponentProps['applicationIdentifier'];
        subscriberHash?: NotificationCenterContentComponentProps['subscriberHash'];
        stores?: NotificationCenterContentComponentProps['stores'];
        tabs?: NotificationCenterContentComponentProps['tabs'];
        showUserPreferences?: NotificationCenterContentComponentProps['showUserPreferences'];
        allowedNotificationActions?: NotificationCenterContentComponentProps['allowedNotificationActions'];
        popoverConfig?: {
            offset?: number;
            position?: FloatingPosition;
        };
        theme?: NotificationCenterContentComponentProps['theme'];
        styles?: NotificationCenterContentComponentProps['styles'];
        colorScheme?: NotificationCenterContentComponentProps['colorScheme'];
        i18n?: NotificationCenterContentComponentProps['i18n'];
        sessionLoaded?: NotificationCenterContentComponentProps['sessionLoaded'];
        notificationClicked?: NotificationCenterContentComponentProps['notificationClicked'];
        unseenCountChanged?: NotificationCenterContentComponentProps['unseenCountChanged'];
        actionClicked?: NotificationCenterContentComponentProps['actionClicked'];
        tabClicked?: NotificationCenterContentComponentProps['tabClicked'];
    }

    @Component
    export default class Notifications extends Vue implements INotificationCenterComponentProps {
        @VModel({
            required: false,
            default: 0,
        })
        public unseenCount!: number;

        @Prop({ required: false })
        public actionClicked!: NotificationCenterContentComponentProps['actionClicked'];

        @Prop({ required: false })
        public allowedNotificationActions!: NotificationCenterContentComponentProps['allowedNotificationActions'];

        @Prop({ required: true })
        public applicationIdentifier!: NotificationCenterContentComponentProps['applicationIdentifier'];

        @Prop({ required: false })
        public backendUrl!: NotificationCenterContentComponentProps['backendUrl'];

        @Prop({
            required: false,
            default: 'light',
        })
        public colorScheme!: NotificationCenterContentComponentProps['colorScheme'];

        @Prop({ required: false })
        public i18n!: NotificationCenterContentComponentProps['i18n'];

        @Prop({ required: false })
        public notificationClicked!: NotificationCenterContentComponentProps['notificationClicked'];

        @Prop({ required: false })
        public popoverConfig!: { offset?: number; position: FloatingPosition };

        @Prop({ required: false })
        public sessionLoaded!: NotificationCenterContentComponentProps['sessionLoaded'];

        @Prop({ required: false })
        public showUserPreferences!: NotificationCenterContentComponentProps['showUserPreferences'];

        @Prop({ required: false })
        public socketUrl!: NotificationCenterContentComponentProps['socketUrl'];

        @Prop({ required: false })
        public stores!: NotificationCenterContentComponentProps['stores'];

        @Prop({ required: false })
        public styles!: NotificationCenterContentComponentProps['styles'];

        @Prop({ required: false })
        public subscriberHash!: NotificationCenterContentComponentProps['subscriberHash'];

        @Prop({ required: false })
        public subscriberId!: NotificationCenterContentComponentProps['subscriberId'];

        @Prop({ required: false })
        public tabClicked!: NotificationCenterContentComponentProps['tabClicked'];

        @Prop({ required: false })
        public tabs!: NotificationCenterContentComponentProps['tabs'];

        @Prop({ required: false })
        public theme!: NotificationCenterContentComponentProps['theme'];

        @Prop({ required: false })
        unseenCountChanged!: NotificationCenterContentComponentProps['unseenCountChanged'];

        public mounted(): void {
            // listen to the unseen count changed event propagated from the web component
            document.addEventListener('novu:unseen_count_changed', (event) => {
                this.unseenCount = (event as CustomEvent).detail as number;
            });
        }

    }
</script>
```

### 👍 Expected behavior

Errors should be handle gracefully and logged

### 👎 Actual Behavior with Screenshots

It throws an unhandled error which then needs to be trapped (and in my case is then thrown to Bugsnag if not handled)

### Novu version

Self Hosted 0.20.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1967107597,4696,📚 Docs Feedback: Swagger API Schema Incorrect,"### Duplicates

- [X] I have searched the existing issues

### Related page

https://api.novu.co/api#/Integrations/IntegrationsController_getIntegrations

### Kind of issue

Other

### Issue description

Incorrect Swagger Specification for `GetIntegrations` and `GetActiveIntegrations`. It should be an array of integrations not just one.

<img width=""852"" alt=""image"" src=""https://github.com/novuhq/novu/assets/52061363/b969daef-afea-4feb-910b-37f8aa1a44f0"">



### Context 🔦

I was working on `novu-rust` integrations module support while implementing the methods I saw that swagger spec shows `getIntegrations` returns a single `IntegrationResponseDto` instead of a list to verify I checked the `novu-go` module and it should be a list as per the sdk as well.",,
1962929709,4659,📚 Docs Feedback: Update the spanish language typescript file in notification center ,"### Duplicates

- [X] I have searched the existing issues

### Related page

packages/notification-center/src/i18n/languages/es.ts

### Kind of issue

Broken demonstration

### Issue description

I was looking for a proper Spanish translation and it appears that some of the words are not properly translated :
1) poweredBy: 'Con tecnología de'  - The correct translation should be 'Energizado por'
2) settings: 'Configuración' - The correct translation should be 'Ajustes'
3) noNewNotification: 'Nada nuevo por aquí' - The correct translation should be 'noNuevaNotificación'






### Context 🔦

_No response_",,
1958711736,4639,🐛 Bug Report: FCM data-type notification expect a message property in the payload,"### 📜 Description

Currently, when sending a data-type notification, it lacks the push message content that was initially set during the push provider configuration step in the workflow. After inspecting the code below https://github.com/novuhq/novu/blob/bfc3862868ed5b023e18881e3ecbb16b2a638f95/providers/fcm/src/lib/fcm.provider.ts#L69

It turned out that it uses the `body` property instead of `message`.

According to Expo documentation, as stated in [Send notifications with FCM & APNs](https://docs.expo.dev/push-notifications/sending-notifications-custom/), the correct property to use should be `message` rather than `body`. I further confirmed this by introducing a custom field labeled `message` to the payload given that the `data` property essentially combines the different payload and overrides properties. It worked, however, the drawback is that the `message` property originated from the backend, which implies that we would be unable to configure it within the workflow, templates, and internationalization (i18n).

### 👟 Reproduction steps
```
curl --location --request POST 'https://eu.api.novu.co/v1/events/trigger' \
--header 'Authorization: ApiKey <REPLACE_WITH_API_KEY>' \
--header 'Content-Type: application/json' \
--data-raw '{
         ""name"": ""space-membership-request"",
         ""to"": {
           ""subscriberId"": ""4e4bcfe9-1b9e-4383-9784-7d36572adfd3""
         },
         ""payload"": {
           ""data"": {
             ""user"": {
               ""id"": ""345a91b3-941b-4274-8e33-49485c4d7cda"",
               ""full_name"": ""Luigi"",
             },
             ""space"": {
               ""id"": ""c1c1989b-1b51-489b-9219-57274a8d65cb"",
               ""name"": ""super-mario-bros-wonder"",
               ""title"": ""Super Mario Bros. Wonder"",
             },
             ""request_message"": ""Mama mia!"",
             ""request_datetime"": ""2023-10-23T14:55:58.976406""
           },
           ""notification_type"": ""SPACE_MEMBERSHIP_REQUEST"",
           ""notification_version"": ""1.0.0""
         },
         ""overrides"": {
          ""type"": ""data"",
           ""fcm"": {
            ""type"": ""data""
           }
         },
         ""tenant"": null
}'
```
### 👍 Expected behavior

![expected](https://github.com/novuhq/novu/assets/10255018/25b184e8-27f3-4a8d-b790-7a7b9688df75)


### 👎 Actual Behavior with Screenshots

![actual](https://github.com/novuhq/novu/assets/10255018/ce8ddcc8-9faa-465e-96a3-e3cca3ea4447)


### Novu version

Novu SaaS

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1955437615,4610,🐛 Bug Report: Getting Network Error During Signup when deployed via helm chart.,"### 📜 Description

I deployed novu via helm chart. I am getting network error during signup.

![image](https://github.com/novuhq/novu/assets/105476638/689e3898-9d6f-4bef-8f84-1cda98e49d0d)
![image](https://github.com/novuhq/novu/assets/105476638/20311a7d-b12e-48b5-8526-53b0e624d96f)





### 👟 Reproduction steps

I deployed the novu helm chart in K3S (Lightweight Kubernetes) v1.25.4+k3s1

1) git clone https://github.com/novuhq/novu.git
2) cd ./novu/docker/kubernetes/helm
3) Created overrides for values.yaml
values-test.yaml,
![image](https://github.com/novuhq/novu/assets/105476638/6138a0c4-9218-40fe-af9d-7d4d63e84ae7)
4) In novu/docker/kubernetes/helm/templates/web/deployment.yaml
    Replace .Values.web.env.NODE_ENV with .Values.api.env.NODE_ENV in below env
```    
env:
  - name: REACT_APP_ENVIRONMENT
    value : {{ print .Values.web.env.NODE_ENV | quote }}
```
5) My chart.yaml
```
name: novu
description: A Helm Chart for novu
version: 0.1.6
apiVersion: v2
appVersion: 0.15.0
keywords:
  - novu
  - notification framework
sources:
  - https://github.com/novuhq/novu/tree/next/docker/kubernetes/helm
home: https://novu.co/
dependencies:
  - condition: redis.enabled
    name: redis
    repository: oci://registry-1.docker.io/bitnamicharts
    version: 18.1.6
  - condition: mongodb.enabled
    name: mongodb
    repository: oci://registry-1.docker.io/bitnamicharts
    version: 14.0.12
  - name: common
    repository: oci://registry-1.docker.io/bitnamicharts
    tags:
      - bitnami-common
    version: 2.13.3
  - condition: localstack.enabled
    name: localstack
    repository: https://localstack.github.io/helm-charts
    version: 0.6.5
``` 
Now, cd  ./novu/docker/kubernetes/helm
```
helm dependency update
helm dependency build
```
                 
6) I am using traefik for ingress. So, I added router and service for novu-web, novu-api, novu-ws.
Example: 
```    
novu-api:
  entryPoints:
    - websecure
  rule: ""Host(`novu-api.xxxxxxxxxxxx`) && PathPrefix(`/`)""
  middlewares:
    - strip-service-prefix
    - corsHeader          
  tls:
    certResolver: leresolver
  service: novu-api 
  
novu-api:
  loadBalancer:
    servers:
        - url: http://novu-api.xxxxxxxxxxxx:3000
```         

Similarly, for novu-web, novu-ws.                                 

6) After configuring traefik, 
```
cd ./novu/docker/kubernetes/
helm upgrade --install novu helm  --values=./helm/values-test.yaml -n novu --create-namespace 
```
![image](https://github.com/novuhq/novu/assets/105476638/ddcb0967-d997-4e16-a78a-4e7f9ae10276)

7) In browser, hit novu-web url and try to sign up. It gives Network Error. 

@aquamanranda
@smartclash


### 👍 Expected behavior

It should let me signup.

### 👎 Actual Behavior with Screenshots

Network Error

### Novu version

0.15.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1952869622,4593,🚀 Feature: Implement Commit Lint for Improved Commit Message Quality ✨,"### 🔖 Feature description

**Novu currently lacks a commit linting system. Implementing Commit Lint in our project can significantly improve the quality of commit messages, making it easier for both contributors and team members to understand the nature of contributions. This proposal outlines the benefits and steps required to set up Commit Lint in Novu.**

### 🎤 Why is this feature needed ?

- Improved commit message quality.
- Better organization of version history.
- Enhanced collaboration and understanding among contributors.
- Facilitates tracking and reviewing changes.

### ✌️ How do you aim to achieve this?

Step 1: I will Install Commit Lint

Step 2:  Create a `commitlint.config.js` file in the project root with the following content to use the conventional commit convention:

```
module.exports = {
  extends: ['@commitlint/config-conventional'],
};
```

Step 3: Add a pre-commit hook to automatically run Commit Lint before each commit. This ensures that commit messages adhere to the convention consistently.

Step 4: Adding contributors to writing meaningful and well-structured commit messages. Emphasize the use of a clear type (e.g., feat, fix, chore) and a concise subject line.



### 🔄️ Additional Information

Conventional Commits: https://www.conventionalcommits.org/en/v1.0.0/

Commit Lint:  https://commitlint.js.org/

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1951694746,4582,[NV-3037] 🐛 Bug Report: Wrong Socket Close in useUnreadCount.ts,"### 📜 Description

In[ this hook](https://github.com/novuhq/novu/blob/e332a6c8b46aef1e886330d5560c4ec705afdb78/packages/notification-center/src/hooks/useUnreadCount.ts#L43), you're doing `socket.on(WebSocketEventEnum.UNREAD)` but you're doing `socket.off(WebSocketEventEnum.UNSEEN)`.



### 👟 Reproduction steps

None

### 👍 Expected behavior

It should closes the correct socket channel.

### 👎 Actual Behavior with Screenshots


```ts
    socket.on(
      WebSocketEventEnum.UNREAD, // <<<<<<<<<<<<< here
      debounce((data?: { unreadCount: number }) => {
        if (Number.isInteger(data?.unreadCount)) {
          queryClient.setQueryData<{ count: number }>(queryKeysRef.current.unreadCountQueryKey, (oldData) => ({
            count: data?.unreadCount ?? oldData.count,
          }));

          // when unread count changes, we need to refetch unseen count
          queryClient.refetchQueries(queryKeysRef.current.unseenCountQueryKey, {
            exact: false,
          });
          queryClient.refetchQueries(queryKeysRef.current.fetchNotificationsQueryKey, {
            exact: false,
          });
          // refetch all feeds unseen count that is shown on the tabs
          queryClient.refetchQueries([...FEED_UNSEEN_COUNT_QUERY_KEY], {
            exact: false,
          });

          dispatchUnreadCountEvent(data.unreadCount);
        }
      }, DEBOUNCE_TIME)
    );

    return () => {
      socket.off(WebSocketEventEnum.UNSEEN); // <<<<<<<<<<<<< here
    };
  }, [socket, queryClient, setQueryKey]);
```


### Novu version

0.17.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes

<sub>[NV-3037](https://linear.app/novu/issue/NV-3037/🐛-bug-report-wrong-socket-close-in-useunreadcountts)</sub>",,
1947437976,4558,🐛 Bug Report: Missing Sender Name in Mandrill (Email) Provider,"### 📜 Description

`Sender Name` doesn't work in Mandrill Provider, as the [current implementation](https://github.com/novuhq/novu/blob/next/providers/mandrill/src/lib/mandrill.provider.ts#L46-L58) is missing the `from_name` parameter [required by Mandrill](https://mailchimp.com/developer/transactional/api/messages/send-new-message/) to set up the sender's name in the email.

### 👟 Reproduction steps

1.  Setup Mandrill provider in Novu Cloud
2. Create a workflow and implement a email template with Mandrill provider
3. Send a test email and check it in your inbox.
4. You might find there's no sender name.

### 👍 Expected behavior

`SenderName <email@domain.com>` is the expected value in the `from` field in received email

### 👎 Actual Behavior with Screenshots

Actually will only receive `email@domain.com`, although you have set up the `Sender Name` in Novu.

### Novu version

0.20.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1932732896,4464,[NV-3045] 🐛 Bug Report: can't run migration when using docker,"### 📜 Description

Whe i try to run the migration on docker i get a error message

### 👟 Reproduction steps

Deploy using docker
Run migration

### 👍 Expected behavior

Run migration

### 👎 Actual Behavior with Screenshots

> @novu/api@0.19.0 migration:primary-provider
> cross-env NODE_ENV=local MIGRATION=true ts-node --transpileOnly ./migrations/integration-scheme-update/add-primary-priority-migration.ts

Error: Cannot find module '../../src/config'

### Novu version

0.19.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-3045](https://linear.app/novu/issue/NV-3045/🐛-bug-report-cant-run-migration-when-using-docker)</sub>",,
1930874314,4452,[NV-3009] 🚀 Feature: Typescript SDK - Add Exponential Retry Mechanism with Idempotency Headers,"In order to enhance the resilience and reliability of our SDK, we would like to introduce an Exponential Retry mechanism for retrying failed requests. Additionally, to ensure the idempotent processing of requests, it's vital to incorporate support for providing an Idempotency Key as per the draft specified in the [HTTP Idempotency Key Header Field](https://datatracker.ietf.org/doc/draft-ietf-httpapi-idempotency-key-header/).

The key requirements for this implementation include:

1. **Exponential Retry Mechanism**:
   * The SDK should retry failed requests following an exponential backoff strategy to minimize the contention and impact on the systems involved.
   * The SDK should ensure that the retry mechanism is configurable (e.g., max retries, initial delay, maximum delay).
2. **Idempotency Key Provisioning**:
   * The SDK should allow for either automatic or manual provisioning of an Idempotency Key for each request.
   * The Idempotency Key should conform to either CUID, ULID, or UUID formats as specified in the draft.
   * The Idempotency Key should be included in the HTTP Header as `Idempotency-Key` and following the standards outlined in the draft.
3. **Configuration and Documentation**:
   * The SDK should provide configuration options for enabling/disabling the Exponential Retry mechanism and Idempotency Key provisioning.
   * Comprehensive documentation should be provided explaining the configuration options, operational behavior, and the benefits of using the Exponential Retry mechanism along with Idempotency Keys.

Acceptance Criteria:

* [ ] Implementation of the Exponential Retry mechanism with configurable parameters.
* [ ] Provisioning of Idempotency Keys, either automatically or manually, conforming to specified formats (CUID, ULID, or UUID).
* [ ] Adequate unit and integration testing to ensure the robustness and reliability of the implemented features.
* [ ] Comprehensive documentation on the usage and configuration of the Exponential Retry mechanism and Idempotency Key provisioning.
* [ ] Adherence to the specifications outlined in the [HTTP Idempotency Key Header Field draft](https://datatracker.ietf.org/doc/draft-ietf-httpapi-idempotency-key-header/).

Please refer to the draft for further details on the HTTP Idempotency Key Header Field and ensure adherence to the specified standards while implementing this feature in the SDK.

**Update**: You can reference the go-lang library to keep the method signature and configuration the same.
[https://github.com/novuhq/go-novu/pull/62](https://github.com/novuhq/go-novu/pull/62)

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-3009](https://linear.app/novu/issue/NV-3009/🚀-feature-typescript-sdk-add-exponential-retry-mechanism-with)</sub>",,
1927644221,4417,[NV-2971] [NV-2842] Add Trigger Identifier to the Subscriber Preferences response,"### What?

Add the `triggers` field to be part of the response to the query. The mapping functionality is included in this file: [https://github.com/novuhq/novu/blob/58c46d72367f0f71bb0dd6b2014c2d5c6a8adcc3/packages/application-generic/src/usecases/get-subscriber-template-preference/get-subscriber-template-preference.usecase.ts#L252](https://github.com/novuhq/novu/blob/58c46d72367f0f71bb0dd6b2014c2d5c6a8adcc3/packages/application-generic/src/usecases/get-subscriber-template-preference/get-subscriber-template-preference.usecase.ts#L252)

### Why?

Some users would love to filter the preferences based on the identifier of the trigger.

### Definition of Done

* `GET /:subscriberId/preferences/:templateId` response contains the triggers array in the `template` field.
* A new E2E test at `apps/api/src/app/subscribers/e2e/get-preferences.e2e.ts` to cover the functionality

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-2842](https://linear.app/novu/issue/NV-2842/add-trigger-identifier-to-the-subscriber-preferences-response)</sub>

<sub>[NV-2971](https://linear.app/novu/issue/NV-2971/[nv-2842]-add-trigger-identifier-to-the-subscriber-preferences)</sub>",,
1923116358,4344,[NV-2946] 🚀 Feature: Add WhatsApp Chat Provider ,"### 🔖 Feature description

Use the [WhatsApp docs](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/messages#text-messages) and the archived [nodjs sdk](https://github.com/WhatsApp/WhatsApp-Nodejs-SDK/blob/main/src/api/messages.ts#L205) to create a Chat provider for whatsapp while following [Novu's add a new provider Guide](https://docs.novu.co/community/add-a-new-provider#how-to-add-a-new-provider) 

### 🎤 Why is this feature needed ?

To add more providers to the community

### ✌️ How do you aim to achieve this?

Community Contributions

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-2946](https://linear.app/novu/issue/NV-2946/🚀-feature-add-whatsapp-chat-provider)</sub>",,
1923093931,4341,🚀 Feature: Elixir client SDK,"### 🔖 Feature description

I would like to implement a client SDK for the [Elixir](https://elixir-lang.org) programming language. It’s most used for resilient, fault tolerant and low-latency responses apps, which includes an awesome web framework called [Phoenix](https://phoenixframework.org) that also includes a SSR/SPA like framework called [Phoenix Live View](https://hexdocs.pm/phoenix_live_view). The last one is also being tested to build native apps ala Flutter with [Phoenix Live View Native](https://github.com/liveview-native).

In conclusion, the Novu API SDK would be a great addition to the Elixir community deps, which always prefer and colaborate with OSS projects.

### 🎤 Why is this feature needed ?

Of course one could implement a interface handcrafted for Novu in Elixir! There are tons of HTTP clients, parsers and so on to do so, but it would be cool to have an official SDK for Elixir that already leverages and abstract some features into a well documented and standardized features implemented with good practices and leveraging the Erlang/OTP benefits!

### ✌️ How do you aim to achieve this?

I’ll take your API documentation but also will take a look into another SDKs to check a possible pattern. Specially the ruby one as Elixir syntax is very similar.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1920195873,4238,🐛 Bug Report: dev container does not start,"### 📜 Description

When you try to start the dev container in VS Code you get an error.



### 👟 Reproduction steps

Open the novu project in VS Code 1.82 on MacOS Sonoma  and you get an error when you click ""dev container open folder in container"".

### 👍 Expected behavior

The container is started successfully.

### 👎 Actual Behavior with Screenshots

Error:

```
...
Downloading registry.npmjs.org/@swc/core-linux-x64-musl/1.3.49: 16.8 MB/16.8 MB, done
Packages: +4754
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Packages are hard linked from the content-addressable store to the virtual store.
  Content-addressable store is at: /workspace/.pnpm-store/v3
  Virtual store is at:             node_modules/.pnpm
 ENOENT  ENOENT: no such file or directory, copyfile '/workspace/.pnpm-store/v3/files/f4/f9b05da82750a1016319fa3a8c4f80ed691235fc6a16d4b971ba5cc47ac1bdd71e9e2df7d8b65155b6a467b81e4d03c18e24ab8a2b56dbeef7294b73110a99' -> '/workspace/node_modules/.pnpm/@faker-js+faker@6.3.1/node_modules/@faker-js/_tmp_258_208fb56a3359876167c00c0b30617b7e/dist/types/locales/el/company/adjective.d.ts'

pnpm: ENOENT: no such file or directory, copyfile '/workspace/.pnpm-store/v3/files/f4/f9b05da82750a1016319fa3a8c4f80ed691235fc6a16d4b971ba5cc47ac1bdd71e9e2df7d8b65155b6a467b81e4d03c18e24ab8a2b56dbeef7294b73110a99' -> '/workspace/node_modules/.pnpm/@faker-js+faker@6.3.1/node_modules/@faker-js/_tmp_258_208fb56a3359876167c00c0b30617b7e/dist/types/locales/el/company/adjective.d.ts'
Progress: resolved 4659, reused 0, downloaded 4560, added 243
[655045 ms] onCreateCommand failed with exit code 1. Skipping any further user-provided commands.
[655049 ms] Error: Command failed: /bin/sh -c pnpm install && npm run setup:project
[655050 ms]     at TY (/Users/myuser/.vscode/extensions/ms-vscode-remote.remote-containers-0.309.0/dist/spec-node/devContainersSpecCLI.js:235:130)
[655050 ms]     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
[655050 ms]     at async Ml (/Users/myuser/.vscode/extensions/ms-vscode-remote.remote-containers-0.309.0/dist/spec-node/devContainersSpecCLI.js:227:4393)
[655050 ms]     at async Sl (/Users/myuser/.vscode/extensions/ms-vscode-remote.remote-containers-0.309.0/dist/spec-node/devContainersSpecCLI.js:227:3738)
[655050 ms]     at async kl (/Users/myuser/.vscode/extensions/ms-vscode-remote.remote-containers-0.309.0/dist/spec-node/devContainersSpecCLI.js:227:2745)
[655050 ms]     at async stA (/Users/myuser/.vscode/extensions/ms-vscode-remote.remote-containers-0.309.0/dist/spec-node/devContainersSpecCLI.js:611:31548)
[655050 ms]     at async otA (/Users/myuser/.vscode/extensions/ms-vscode-remote.remote-containers-0.309.0/dist/spec-node/devContainersSpecCLI.js:611:28781)
[655059 ms] Exit code 1
[655067 ms] Command failed: /Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin) --ms-enable-electron-run-as-node /Users/myuser/.vscode/extensions/ms-vscode-remote.remote-containers-0.309.0/dist/spec-node/devContainersSpecCLI.js run-user-commands --user-data-folder /Users/myuser/Library/Application Support/Code/User/globalStorage/ms-vscode-remote.remote-containers/data --container-session-data-folder /tmp/devcontainers-0a9c3141-a2cb-4d3d-bb66-30e2e7f9b3c31696065665782 --workspace-folder /Users/myuser/Desktop/novu --id-label devcontainer.local_folder=/Users/myuser/Desktop/novu --id-label devcontainer.config_file=/Users/myuser/Desktop/novu/.devcontainer/devcontainer.json --container-id 8d879bbf249044870684d98fbfb0aa07bd378c7cda7afc3925b62a283662239b --log-level debug --log-format json --config /Users/myuser/Desktop/novu/.devcontainer/devcontainer.json --default-user-env-probe loginInteractiveShell --skip-non-blocking-commands true --prebuild false --stop-for-personalization true --remote-env REMOTE_CONTAINERS_IPC=/tmp/vscode-remote-containers-ipc-75ef0209-d770-45b9-b458-f5846ed3b520.sock --remote-env SSH_AUTH_SOCK=/tmp/vscode-ssh-auth-12cd-45b9-b358-f846nd5b521.sock --remote-env DISPLAY=:0 --remote-env REMOTE_CONTAINERS_DISPLAY_SOCK=/tmp/.X11-unix/X0 --remote-env REMOTE_CONTAINERS=true --mount-workspace-git-root true --dotfiles-target-path ~/dotfiles
[655067 ms] Exit code 1
```


### Novu version

0.19

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1909863988,4194,🐛 Bug Report: Kannel SMS gateway not working with SSL,"### 📜 Description

I have my kannel service over https, I added my configuration as below

- Host: ******
- Port: 443
- Username: ***
- Password: ****

But SMS fails to be delivered here is what I am getting with the log

```
{
  ""message"": ""socket hang up"",
  ""name"": ""Error"",
  ""stack"": ""Error: socket hang up\n    at connResetException (node:internal/errors:705:14)\n    at Socket.socketOnEnd (node:_http_client:518:23)\n    at Socket.emit (node:events:525:35)\n    at Socket.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1358:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"",
  ""config"": {
    ""transitional"": {
      ""silentJSONParsing"": true,
      ""forcedJSONParsing"": true,
      ""clarifyTimeoutError"": false
    },
    ""transformRequest"": [
      null
    ],
    ""transformResponse"": [
      null
    ],
    ""timeout"": 0,
    ""xsrfCookieName"": ""XSRF-TOKEN"",
    ""xsrfHeaderName"": ""X-XSRF-TOKEN"",
    ""maxContentLength"": -1,
    ""maxBodyLength"": -1,
    ""env"": {},
    ""headers"": {
      ""Accept"": ""application/json, text/plain, */*"",
      ""User-Agent"": ""axios/0.27.2""
    },
    ""params"": {
      ""username"":  ""*******"",
      ""password"": ""*******"",
      ""from"": ""+962795113153"",
      ""to"": ""+962795113135"",
      ""text"": ""test test""
    },
    ""method"": ""get"",
    ""url"": ""http:// ""*******"",:443/cgi-bin/sendsms""
  },
  ""code"": ""ECONNRESET"",
  ""status"": null
}
````

I have masked Host, Username and the password.

### 👟 Reproduction steps

- Enable Kannel SMS by adding host and port as 443
- Trigger a workflow with SMS step

### 👍 Expected behavior

It should send the SMS probably

### 👎 Actual Behavior with Screenshots

```
{
  ""message"": ""socket hang up"",
  ""name"": ""Error"",
  ""stack"": ""Error: socket hang up\n    at connResetException (node:internal/errors:705:14)\n    at Socket.socketOnEnd (node:_http_client:518:23)\n    at Socket.emit (node:events:525:35)\n    at Socket.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1358:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"",
  ""config"": {
    ""transitional"": {
      ""silentJSONParsing"": true,
      ""forcedJSONParsing"": true,
      ""clarifyTimeoutError"": false
    },
    ""transformRequest"": [
      null
    ],
    ""transformResponse"": [
      null
    ],
    ""timeout"": 0,
    ""xsrfCookieName"": ""XSRF-TOKEN"",
    ""xsrfHeaderName"": ""X-XSRF-TOKEN"",
    ""maxContentLength"": -1,
    ""maxBodyLength"": -1,
    ""env"": {},
    ""headers"": {
      ""Accept"": ""application/json, text/plain, */*"",
      ""User-Agent"": ""axios/0.27.2""
    },
    ""params"": {
      ""username"":  ""*******"",
      ""password"": ""*******"",
      ""from"": ""+962795113153"",
      ""to"": ""+962795113135"",
      ""text"": ""test test""
    },
    ""method"": ""get"",
    ""url"": ""http:// ""*******"",:443/cgi-bin/sendsms""
  },
  ""code"": ""ECONNRESET"",
  ""status"": null
}
````

### Novu version

next

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1904112333,4176,"🐛 Bug Report: Vite Build - Unexpected token - global: _global,","### 📜 Description

vite v4.1.0 building for production...
✓ 78 modules transformed.
Unexpected token
file: /Users/FE/node_modules/.vite/deps_build-dist/@novu_notification-center.js:3479:2
3477:   toFiniteNumber,
3478:   findKey,
3479:   global: _global,
        ^
3480:   isContextDefined,
3481:   ALPHABET,

error during build:
RollupError: Unexpected token
    at error (file:///Users/FE/node_modules/rollup/dist/es/shared/node-entry.js:2287:30)
    at Module.error (file:///Users/FE/node_modules/rollup/dist/es/shared/node-entry.js:13740:16)
    at Module.tryParse (file:///Users/FE/node_modules/rollup/dist/es/shared/node-entry.js:14471:25)
    at Module.setSource (file:///Users/FE/node_modules/rollup/dist/es/shared/node-entry.js:14072:39)
    at ModuleLoader.addModuleSource (file:///Users/FE/node_modules/rollup/dist/es/shared/node-entry.js:24644:20)
error Command failed with exit code 1.

### 👟 Reproduction steps

1. Install `""@novu/notification-center"": ""^0.19.0""` to a vite react app using `""4.1.0""` version of vite and `""react"": ""^18.2.0""`
2. Import `NovuProvider, PopoverNotificationCenter, NotificationBell, useSocket` and use in the required component.
3. Try to build the app for production usage.

### 👍 Expected behavior

There won't be any errors while building the app and the build process should complete.

### 👎 Actual Behavior with Screenshots

Produced some errors while building the app

```
vite v4.1.0 building for production...
✓ 78 modules transformed.
Unexpected token
file: /Users/FE/node_modules/.vite/deps_build-dist/@novu_notification-center.js:3479:2
3477:   toFiniteNumber,
3478:   findKey,
3479:   global: _global,
        ^
3480:   isContextDefined,
3481:   ALPHABET,

error during build:
RollupError: Unexpected token
    at error (file:///Users/FE/node_modules/rollup/dist/es/shared/node-entry.js:2287:30)
    at Module.error (file:///Users/FE/node_modules/rollup/dist/es/shared/node-entry.js:13740:16)
    at Module.tryParse (file:///Users/FE/node_modules/rollup/dist/es/shared/node-entry.js:14471:25)
    at Module.setSource (file:///Users/FE/node_modules/rollup/dist/es/shared/node-entry.js:14072:39)
    at ModuleLoader.addModuleSource (file:///Users/FE/node_modules/rollup/dist/es/shared/node-entry.js:24644:20)
error Command failed with exit code 1.
```

### Novu version

Novu SaaS

### npm version

9.3.1

### node version

18.14.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1903192867,4172,🐛 Bug Report: Helm values file misses `Values.web.env.NODE_ENV`,"### 📜 Description

I cloned novu, set up a kubernetes cluster and tried to install it. I got

% helm install my-release .                  
Error: INSTALLATION FAILED: template: novu/templates/web/deployment.yaml:96:38: executing ""novu/templates/web/deployment.yaml"" at <.Values.web.env.NODE_ENV>: nil pointer evaluating interface {}.NODE_ENV

We get a nil pointer because the value doesn't exist.

### 👟 Reproduction steps

Hello,

I'm not the most knowledgeable when it comes to Kubernetes. Here's what I did:

1. Created cluster on EKS
2. Downloaded the kubeconfig
3. Switched to the context that points towards my cluster I just created on EKS
4. git clone <novu-repo>
5. cd `docker/kubernetes/helm`
6. Tried to install the Chart.yaml file:

> `helm install novu-test .`
> 
> Error: INSTALLATION FAILED: An error occurred while checking for chart dependencies. You may need to run `helm dependency build` to fetch missing dependencies: found in Chart.yaml, but missing in charts/ directory: redis, mongodb, common, localstack

Was a bit confused to see this error, my experience is too low to really judge this.

7. `rm Chat.yaml`
8. `helm dependency build` -> ok
9.  Retried installation:

> `helm install novu-test .`
> 
> Error: INSTALLATION FAILED: template: novu/templates/web/deployment.yaml:96:38: executing ""novu/templates/web/deployment.yaml"" at <.Values.web.env.NODE_ENV>: nil pointer evaluating interface {}.NODE_ENV

10. Inspct `values.yaml` -> has no web.env.NODE_ENV -> error makes sense


So what do I do now? Why is the env var missing?

Edit: I also tried to check out a specific verison: `git checkout v0.19.0` but still, same issue.

### 👍 Expected behavior

The command installs the chart

### 👎 Actual Behavior with Screenshots

Everything in detail explained above

### Novu version

0.19.0

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

I won't submit a PR because I'm not experienced enough with Kubernetes and Novu to really understand this in depth.

% kubectl version
Client Version: v1.28.2
Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3
Server Version: v1.27.4-eks-2d98532

Could it be, that we simply have to change

`.Values.web.env.NODE_ENV` to `.Values.api.env.NODE_ENV`?

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1882511122,4109,🚀 Feature: Schedule broadcast notifications,"### 🔖 Feature description

We are implementing Novu in our system for notifications, alot of system emails, and timely marketing emailsthat would require a user to be subscribed but are triggered in code once they meet some criteria or go through a flow etc.

We have previously been using Mautic for all of this (though only sending emails) and it's been a brutal experience over the years. 

The only feature that's missing in Novu that is going to stop us from completely dropping Mautic is the ability to schedule and send an email to a segment of users... a one off broadcast email.

The [topics ](https://docs.novu.co/platform/topics) feature in Novu seems like it comes close to this.  In theory, even currently I could program an API internally around this to create a topic to replace our main-broadcast ""segment"" and then handle scheduling logic on our side and send notifs to the topic. But it seams to me like this kind of a feature would fundamentally fit quite well in the Novu ecosystem.


### 🎤 Why is this feature needed ?

In my use case I want to have my marketing & copy people all work out of one ecosystem, managing the comms to our users in one unified platform that just works. 

### ✌️ How do you aim to achieve this?

I would want this feature to introduce two new sidebar tabs.

### Segments 
Segments could be Topics behind the scenes.
The purpose of the segments tab is to give the admin an overview of how many subscribers there are in each segment. Separating it from topics semantically would allow for an implementation to make use of topics like 'posts:comment:12345' and not have to view those in the dashboard view. 

Each segment would ideally have a detail view where you could see the subscribers list.

Having some sort of CSV import feature to ingest subscribers would be super valuable as well, but not a dealbreaker for this feature.

### Broadcast
The broadcast tab would be very similar to the workflow tab, except that some different information would show in the view, as semantically ""Workflows"" doesn't really fit well with a broadcast notification.

The detail view of a Broadcast notification would be the same as the Workflow view except for in the settings, it would have the ability to schedule a time to start the send. Again behind the scenes, this could make use of the ""delay"" feature except you aren't setting a patch to the payload, your specifying it in app. 

Building ontop of workflows would allow marketers to do some really interesting things. Especially if we added something to the workflow like a boolean logic action, 


### 🔄️ Additional Information

These are just my thoughts and before I added more I'd at least want to see if there is interest in this feature. The reality for my situation is that we will probably end up building something internally to do this anyway eventually because of our disdain for Mautic, but I just think this would be such a great feature in this app. 

I'd be willing to be more involved in this feature, from design conversations to development but It's definitely something I'm not just going to tackle without some feedback and discussion.

I really think this could take Novu from a notification infrastructure project to a full-blown notification & marketing 

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1874143965,4056,🚀 Feature: Configurable HMAC encoding type in email webhook provider,"### 🔖 Feature description

![image](https://github.com/novuhq/novu/assets/5238147/bad87984-6995-482e-9f20-4269fddfee7a)

We would like to make it configurable how **Secret Hmac Key**, passed to email webhook provider's configuration is interpreted. 

Currently it's interpreted as text but we need a way to pass Base-64 encoded binary value because of AWS KMS requirements. Potentially more cloud cryptography services may need it.

### 🎤 Why is this feature needed ?

**tl;dr; 
AWS KMS requires binary HMAC secret key which is impossible to be entered as plain text in email webhook provider's configuration.**

We are using AWS KMS in order to validate HMAC in lambdas invoked by [email webhook provider](https://github.com/novuhq/novu/blob/next/providers/email-webhook/src/lib/email-webhook.provider.ts). The HMAC is generated by Novu provider using following function:

```ts
computeHmac(payload: string): string {
    return crypto
      .createHmac('sha256', this.config.hmacSecretKey)
      .update(payload, 'utf-8')
      .digest('hex');
  }
```

there is not 3rd parameter passed to `createHmac` so it interprets the `hmacSecretKey` as string.

It seems to not be a problem when you use `crypto` directly in your verification code but in order to make our system more secure, we decided to not retrieve the HMAC secret key to our lambda. Instead we offload the HMAC verification to AWS KMS service. When you upload HMAC secret key there, it's impossible to be retrieved so even if our infrastructure is compromised, the HMAC secret key is still safe.

When we import HMAC secret key to AWS KMS, it has some requirements. One of them is that the HMAC secret key can't be a string (plaintext) key. Usually what you do to generate your HMAC secret key is:
```shell
openssl rand -out HMAC_256_PlaintextKey.bin 32
openssl enc -base64 -A -in HMAC_256_PlaintextKey.bin -out HMAC_256_PlaintextKey.b64
```

While the `*.b64` contains the key in a readable form of: `fka6JxM3aAzrK6usPTV46l52W9KpNvUtqPe3oENkpwg=` (base-64 encoded), the `*.bin` is far from being readable containing non-printable characters.

**All it means that:**
1. Novu signs the body with HMAC secret key interpreted as string, generating HMAC
2. The email webhook provider calls our lambda
3. We pass the generated HMAC to AWS KMS in order to verify it's valid
4. AWS KMS rejects it because it internally interprets the HMAC secret key as binary

### ✌️ How do you aim to achieve this?

1. On email webhook provider configuration view, below the text field, some control should be added with following options:
    - Text (selected by default)
    - Base-64
    - HEX

2. The selection should be persisted in DB
3. The selection should be used when `computeHmac` function in the provider is executed. Example for Base-64:
    ```ts
    computeHmac(payload: string): string {
        return crypto
          .createHmac('sha256', this.config.hmacSecretKey, { encoding: 'base64' })
          .update(payload, 'utf-8')
          .digest('hex');
      }
    ```

### 🔄️ Additional Information

Workaround is to use `crypto` directly in our lambda which makes us more vulnerable if the infrastructure is compromised & the HMAC secret key leaks outside.

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1865501866,4030,[NV-2730] Add field overrides in SMS channel like we have in the Email,"## What?

We can override almost all fields in the email channel

ref:- [https://docs.novu.co/channels/email/#sending-email-overrides](https://docs.novu.co/channels/email/#sending-email-overrides)

I see we are using `from` field from credentials here, we cannot override in SMS similar to email

[https://github.com/novuhq/novu/blob/next/apps/worker/src/app/workflow/usecases/send-message/send-message-sms.usecase.ts#L265C16-L265C16](https://github.com/novuhq/novu/blob/next/apps/worker/src/app/workflow/usecases/send-message/send-message-sms.usecase.ts#L265C16-L265C16)

## Definition of done:

1. Allow all field overrides in the SMS channel similar to email
2. Add types in node sdk
3. Check if Swagger API is reflecting the change

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-2730](https://linear.app/novu/issue/NV-2730/add-field-overrides-in-sms-channel-like-we-have-in-the-email)</sub>",,
1862927369,4021,🐛 Bug Report: Unable to start Novu,"### 📜 Description

I'm trying to start minimalistic Novu API server, but fail to do so due to the in-memory config not being accepted correctly.

### 👟 Reproduction steps

1. Create a file called `start.sh` which contains

```
#!/usr/bin/env bash

: ${API_HOST?""Need to set API_HOST""}

function novu_stop() {
    docker stop novu_api &> /dev/null
    docker stop novu_mongo &> /dev/null
    docker stop novu_redis &> /dev/null

    docker rm novu_api
    docker rm novu_mongo
    docker rm novu_redis
    docker network rm novu_network
}

function novu_start() {
    echo ""Creating bridge network""
    docker network create novu_network

    echo ""Starting MongoDB for Novu""
    docker run -d --name novu_mongo --network novu_network -e PUID=1000 -e PGID=1000 mongo
    SECONDS=0
    until docker exec novu_mongo sh -c 'mongosh --port 27017 --eval ""db.adminCommand('""'ping'""')""'; do
      sleep 5;
      if [ ${SECONDS} -gt 180 ]; then
        echo ""Timeout exceeded"";
        exit 1;
      fi
    done

    echo ""Starting Redis for Novu""
    docker run -d --name novu_redis --network novu_network redis:alpine
    SECONDS=0
    until docker exec novu_redis sh -c 'redis-cli ping'; do
      sleep 5;
      if [ ${SECONDS} -gt 180 ]; then
        echo ""Timeout exceeded"";
        exit 1;
      fi
    done

    echo ""Starting Novu API""
    docker run -d --name novu_api --network novu_network -p 3000:3000 -e NODE_ENV=local -e MONGO_URL=mongodb://novu_mongo:27017/novu-db \
     -e REDIS_HOST=novu_redis -e API_PORT=3000 \
     -e REDIS_PORT=6379 -e IN_MEMORY_CLUSTER_MODE_ENABLED=false \
     ghcr.io/novuhq/novu/api:0.17.1

    SECONDS=0
    until curl $API_HOST:3000/v1/health-check; do
      sleep 5;
      if [ ${SECONDS} -gt 180 ]; then
        echo ""Timeout exceeded"";
        exit 1;
      fi
    done
}

trap novu_stop err exit

novu_stop
novu_start
```

2. Run `API_HOST=localhost bash start.sh`

### 👍 Expected behavior

The API should start successfully.

### 👎 Actual Behavior with Screenshots

It does not and the health check fails stating the inMemory service being down. The logs also state the `host` is missing, which is not true as `REDIS_HOST` is set.

### Novu version

0.17.1

### npm version

_No response_

### node version

_No response_

### 📃 Provide any additional context for the Bug.

My feeling is that it has something to do with this line of code https://github.com/novuhq/novu/blob/next/packages/application-generic/src/services/in-memory-provider/in-memory-provider.service.ts#L227. I'm not sure how the {host, port, ttl} are set from the getRedisProviderConfig method as that returns a couple more values. Also I'm not sure why the getRedisProviderConfig is called twice and the host, port and ttl are not re-used from `this.inMemoryProviderConfig`.

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1862872032,4020,🐛 Bug Report: Layout API Interface contract is not correct for listing,"### 📜 Description

The Layout API interface contract is not correct, it states that the ""page"" field is optional but not providing it causes a 500 error.

See https://github.com/novuhq/novu-python/issues/47 for more details

### 👟 Reproduction steps

```python
import requests

res = requests.get(url=f""{layout_client._layout_url}"", headers={""Authorization"": f""Bearer {token}""})
res.raise_for_status()
print(""OK"")
```

### 👍 Expected behavior

```shell
python bug.py
>>> OK
```

### 👎 Actual Behavior with Screenshots

```shell
python bug.py
>>> requests.exceptions.HTTPError: 500 Server Error: Internal Server Error
```

### Novu version

Novu SaaS

### npm version

N/A

### node version

N/A

### 📃 Provide any additional context for the Bug.

N/A

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find a similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1860834377,4010,Wrong import in example code,"### Duplicates

- [X] I have searched the existing issues

### Related page

https://docs.novu.co/community/create-provider

### Kind of issue

Unclear explanations

### Issue description

The class name in `base.handler` is `BaseChatHandler`. The sample code in the document needs to be updated.

---

sample code <packages/application-generic/src/factories/mail/handlers/example-provider.handler.ts>

From
```ts
import { ChannelTypeEnum } from '@novu/shared';
import { ExampleProviderEmailProvider } from '@novu/example-provider';
import { BaseHandler } from './base.handler'; // This!!

// ...
```

To
```ts
import { ChannelTypeEnum } from '@novu/shared';
import { ExampleProviderEmailProvider } from '@novu/example-provider';
import { BaseChatHandler } from './base.handler';

// ...
```

### Context 🔦

In the process of adding a new provider, I noticed that the demo and the actual code are different.",,
1839436022,3934,🚀 Feature: Custom backendUrl in invite-member.usecase and resend-invite.usecase,"### 🔖 Feature description

Hi Folks, 

It would be great if when instantiating the Novu instance in [invite-member.usecase.ts](https://github.com/novuhq/novu/blob/v0.13.x/apps/api/src/app/invites/usecases/invite-member/invite-member.usecase.ts#L38), [resend-invite.usecase.ts](https://github.com/novuhq/novu/blob/v0.13.x/apps/api/src/app/invites/usecases/resend-invite/resend-invite.usecase.ts#L37), [accept-invite.usecase.ts](https://github.com/novuhq/novu/blob/v0.13.x/apps/api/src/app/invites/usecases/accept-invite/accept-invite.usecase.ts#L57) and [password-reset-request.usecase.ts](https://github.com/novuhq/novu/blob/v0.13.x/apps/api/src/app/auth/usecases/password-reset-request/password-reset-request.usecase.ts#L39) we could also pass a custom `config` object in case we want to inject our own `backendUrl` for example.

Thank you.

### 🎤 Why is this feature needed ?

More flexibility for injecting a custom `backendUrl` for `invite-member.usecase` and `resend-invite.usecase`

### ✌️ How do you aim to achieve this?

Add a custom config param to the Novu instance in [invite-member.usecase](https://github.com/novuhq/novu/blob/v0.13.x/apps/api/src/app/invites/usecases/invite-member/invite-member.usecase.ts#L38).

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1838124723,3928,✨ Polishing: @novu/node package missing typescript support for response type,"### 📜 Description

<img width=""681"" alt=""CleanShot 2023-08-06 at 17 05 01@2x"" src=""https://github.com/novuhq/novu/assets/4584859/6fe5f4ed-b057-4a39-81bf-137bc416684e"">

Currently, when I use @novu/node with typescript, I get `AxiosResponse<any,any>` for response type.I wish it could be a concrete type.

Related to https://github.com/novuhq/novu/issues/3446


### 👟 Reproduction steps

_No response_

### 👍 Expected behavior

It should give me a concrete type other then any type

### 📃 Provide any additional context for the Bug.

If you wish, I can make a pr to this.

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)",,
1819804526,3850,[NV-2574] Allow storing custom metadata on the workflow entity,"### Why?

When displaying a custom UI for the user preference menu, customers would love to render those preference items with some extra information or filter our specific preferences based on this custom metadata.

### What?

* Allow customers to add and update custom metadata information (JSON Object) and pass it to the workflow
* When fetching the preference API, attach the workflow information as a joined object with identifier, and custom metadata provided there
* Other place which populate the workflow objects such as notification feed, add the custom object metadata to it. 

### Definition of Done

* Allow storing custom data using the API on the workflow
* Populate workflow custom data on the user preference API response
* (Optional) Allow viewing custom metadata on the user interface in the workflow UI

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-2574](https://linear.app/novu/issue/NV-2574/allow-storing-custom-metadata-on-the-workflow-entity)</sub>",,
1812999822,3826,🐛 Bug Report: ROOT_API_URL always localhost,"### 📜 Description

The private end deployed by docker can only access each interface through localhost

### 👟 Reproduction steps

Configure the environment variable value of .env to the server ip

### 👍 Expected behavior

http://10.168.2.40:3000 should be used

### 👎 Actual Behavior with Screenshots

![image](https://github.com/novuhq/novu/assets/44914868/59e920ac-0fad-4118-b9c2-2a5cd768e484)
![image](https://github.com/novuhq/novu/assets/44914868/b0ac8535-71f8-48b2-9036-6b4e401d2a9e)



### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1801415272,3786,🐛 Bug Report: TriggerRecipientsTypeEnum is not exported.,"### 📜 Description

I cannot trigger notification to multiple recipients in TypeScript app with Novu Node.js SDK, because **TriggerRecipientsTypeEnum** is required but not exported.


### 👟 Reproduction steps

1. add Novu SDK for Node.js to any TypeScript project. My app is normal NestJS, just generated with CLI and default `tsconfig.json`.
2. Try to trigger enum to multiple recipients:

```ts
await this.novu.trigger('some-workflow', {
      to: [{ type: 'Topic', topicKey: key }],
      payload: {}
    });
```

> TS Error: **Type '""Topic""' is not assignable to type 'TriggerRecipientsTypeEnum.TOPIC'**

3. Cannot run app

### 👍 Expected behavior

I should be able to import `TriggerRecipientsTypeEnum` from `@novu/node`.

### 👎 Actual Behavior with Screenshots

Here is current behavior of TypeScript client with Novu Node.js SDK:

![ts](https://github.com/novuhq/novu/assets/43048524/98beb1cd-fba3-4b07-bcb4-bfb645eb74d4)

I cannot import this enum, because it is not exported.

![ts2](https://github.com/novuhq/novu/assets/43048524/7ac48366-9eb8-48b8-857d-35de449001e0)


### 📃 Provide any additional context for the Bug.

- Windows 11
- Node v18.12.1
- npm 8.19.2
- Visual Studio Code

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1787013193,3710,🐛 Bug Report: Expo override TS typing missing,"### 📜 Description

There's no typescript types for the override options for expo.

### 👟 Reproduction steps

1. Go to https://github.com/novuhq/novu/blob/next/packages/node/src/lib/events/events.interface.ts
2. Look for expo override

### 👍 Expected behavior

They should be an override type for ""Expo""

### 👎 Actual Behavior with Screenshots

There's is not override config for expo
<img width=""579"" alt=""image"" src=""https://github.com/novuhq/novu/assets/52782730/76bf1621-1814-46ab-a55f-868d2be6b2fe"">


### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1776117328,3665,🚀 Feature: add `markAsRead` `markAllUnreadAsRead` & `markAllUnseenAsSeen` in @novu/node,"### 🔖 Feature description

Currently we have `markMessageSeen` and `markMessageActionSeen` to update message. It would be nice to have more APIs from widget controllers inside `@novu/node` as we can have more control on notification outside webapp.

![image](https://github.com/novuhq/novu/assets/14802170/c29f531b-ee55-4c82-9932-35bda9797d17)

### 🎤 Why is this feature needed ?

Currently on mobile side, we used our server to call novu API to get notification list via `@novu/node` and behavior on mobile should be the same as notification center, we would like to have more api to control on status of message such as read / seen / read all and seen all.

### ✌️ How do you aim to achieve this?

We can expose more endpoints in subscriber module similar to widget controller.

### 🔄️ Additional Information

We can expose more endpoints in subscriber module similar to widget controller.

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1771646605,3655,🚀 Feature: Self descriptive providers,"### 🔖 Feature description

To be honest, I just want to use the novu providers, but the actual code for that but the provider logic is so distributed around, you need:

1. A provider class
2. A handler class (that usually does nothing useful)
3. Upload the logos
4. Define the config in another place.

So what is usually just a single file, ends up in a lot of places. It would be great to make the providers easier and define an interface where everything is basically in one file. I made a proposal for that for another project: https://github.com/open-notifications/open-notifications/blob/main/service/on-providers/src/providers/messagebird/messagebird-sms.provider.ts

This also violates the Open-Closed-Principle...

### 🎤 Why is this feature needed ?

See above. The plugin system is not a plugin system right now. It is a dependency hell. For example the following interface, which seems to be the union of all integrations:

https://github.com/novuhq/novu/blob/c0e7b3b5a0de8f14c4b6faaaf10fa61648165999/libs/shared/src/entities/integration/credential.interface.ts#L4

Because it contains all potential credentials, everything is optional, which is obviously not the case. 

Furthermore OpenAPI spec is not very good, because nothing is marked as required:
https://github.com/novuhq/novu/blob/c0e7b3b5a0de8f14c4b6faaaf10fa61648165999/apps/api/src/app/integrations/dtos/credentials.dto.ts#L20

Even small changes require a lot of files to be changed. For example when a new a property is added, at least 5-6 files need to be modified:
https://github.com/search?q=repo%3Anovuhq%2Fnovu%20IpPoolName&type=code

### ✌️ How do you aim to achieve this?

1. Provide a clear interface for providers including the config.
4. Refactor the providers
5. Either create the OpenAPI spec dynamically or just use an ""any"" type for the credentials.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1762401792,3615,[NV-2446] 🐛 Bug Report: Workflows visual bug,"### 📜 Description

`Category` and `Created At` columns overlap when category has longer name
 

### 👟 Reproduction steps

1. Create workflow with SDK
```js
// index.js
require('dotenv').config();
const { Novu } = require('@novu/node');
const novu = new Novu(process.env.NOVU_API_KEY);

async function main() {
    const longerName = 'qjwhwefhusefhrufhrdyufvhduvfhdudhfudhguifdhgdufghfdughdfugdfhgudsdsdsf'
    const group = await novu.notificationGroups.create(longerName);

    await novu.notificationTemplates.create({
        name: longerName,
        active: true,
        description: ""Test Template :)"",
        notificationGroupId: group.data.data.id,
        draft: false,
        steps: [],
    });
}

main();
```
2. Go to Workflows page

![image](https://github.com/novuhq/novu/assets/43048524/8f75c8d0-a6fb-4ac8-955d-e57afe8757a4)


### 👍 Expected behavior

Other columns don't overlap because they are limited
![image](https://github.com/novuhq/novu/assets/43048524/5177fb98-5bfd-4553-aacd-71d617c12175)


### 👎 Actual Behavior with Screenshots

![image](https://github.com/novuhq/novu/assets/43048524/287b7299-eaae-4997-904b-4e7b33a4f03c)


### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-2446](https://linear.app/novu/issue/NV-2446/🐛-bug-report-workflows-visual-bug)</sub>",,
1758575901,3602,🐛 Bug Report: Novu Application getting Network Error while getting singup  ,"### 📜 Description

We have deployed novu in Kubernetes environment with provided kustomize deployments files in Novu Documentation.

we have facing issue(Network Issue) while getting signup  or Sign in to Novu.

We have using ingress AWS ALB to expose novu application to public.

my env-dev file is 👍 

# Secrets
# YOU MUST CHANGE THESE BEFORE GOING INTO PRODUCTION
JWT_SECRET=your-secret
STORE_ENCRYPTION_KEY=ekwUKf9yLjGPLOz939Y1GM0nJckVoVyF

## General
NODE_ENV=production
MONGO_URL=XXXXX/novu-db
MONGO_MAX_POOL_SIZE=500
REDIS_HOST=novu-redis-dev
#REDIS_CACHE_SERVICE_HOST=novu-redis-dev
#REDIS_CACHE_SERVICE_PORT=6379

# AWS
#S3_LOCAL_STACK=http://localhost:4566
S3_BUCKET_NAME=XXXXX
S3_REGION=XXXX
AWS_ACCESS_KEY_ID=XXXX
AWS_SECRET_ACCESS_KEY=XXXX

# Ports
API_PORT=3000
REDIS_PORT=6379
WS_PORT=3002

# Root URL
REACT_APP_API_URL=https://novu-api-dev:3000
REACT_APP_WS_URL=https://novu-ws-dev:3002
API_ROOT_URL=https://novu-api-dev:3000
DISABLE_USER_REGISTRATION=false
FRONT_BASE_URL=https://novu-web-dev:4200
WIDGET_EMBED_PATH=https://novu-embed-dev:4701/embed.umd.min.js
WIDGET_URL=https://novu-widget-dev:4500

# Context Paths
# Only needed for setups with reverse-proxies
GLOBAL_CONTEXT_PATH=
WEB_CONTEXT_PATH=
API_CONTEXT_PATH=
WS_CONTEXT_PATH=
WIDGET_CONTEXT_PATH=


We are applying the deployments with below command 

kubectl apply -f kustomize/

all pods are running fine without any error.

NAME                                READY   STATUS    RESTARTS   AGE
novu-api-dev-77555bd5b5-tnrx8       1/1     Running   0          15m
novu-embed-dev-55c5dd565f-lhws6     1/1     Running   0          15m
novu-mongodb-dev-666b94cff7-xblfr   1/1     Running   0          15m
novu-redis-dev-86697d5b54-97kch     1/1     Running   0          15m
novu-web-dev-6b5848996d-4fnqp       1/1     Running   0          15m
novu-widget-dev-6c9ccd79f-bhxw5     1/1     Running   0          15m
novu-worker-dev-56b9cf7c4f-6scqs    1/1     Running   0          15m
novu-ws-dev-5465fd96d7-q92tp        1/1     Running   0          15m


Below is AWS ingress LB config:

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
   
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:XXXXXX
    alb.ingress.kubernetes.io/group.name: XXXXXXXXXX
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{""HTTP"": 80}, {""HTTPS"":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/subnets: subnet-09d9c9ef0fe16b58c,subnet-0b83921c80fdf09dc,subnet-031e5a6e26a1a06e4
    alb.ingress.kubernetes.io/target-type: ip
      #alb.ingress.kubernetes.io/enable-cors: ""true""
      #alb.ingress.kubernetes.io/cors-allow-origin: ""*""
    kubernetes.io/ingress.class: alb
  name: novu-alb
  namespace: novu
spec:
  rules:
  - host: XXXXXXXXXX
    http:
      paths:
      - backend:
          service:
            name: novu-web-dev
            port:
              number: 4200
        path: /
        pathType: Prefix
      - backend:
          service:
            name: novu-api-dev
            port:
              number: 3000
        path: /v1
        pathType: Prefix
          # - backend:
          #     service:
          #       name: novu-ws-dev
          #       port:
          #         number: 3002
          #   path: /
          #   pathType: Prefix



### 👟 Reproduction steps

my env-dev file is 👍 

# Secrets
# YOU MUST CHANGE THESE BEFORE GOING INTO PRODUCTION
JWT_SECRET=your-secret
STORE_ENCRYPTION_KEY=ekwUKf9yLjGPLOz939Y1GM0nJckVoVyF

## General
NODE_ENV=production
MONGO_URL=XXXXX/novu-db
MONGO_MAX_POOL_SIZE=500
REDIS_HOST=novu-redis-dev
#REDIS_CACHE_SERVICE_HOST=novu-redis-dev
#REDIS_CACHE_SERVICE_PORT=6379

# AWS
#S3_LOCAL_STACK=http://localhost:4566
S3_BUCKET_NAME=XXXXX
S3_REGION=XXXX
AWS_ACCESS_KEY_ID=XXXX
AWS_SECRET_ACCESS_KEY=XXXX

# Ports
API_PORT=3000
REDIS_PORT=6379
WS_PORT=3002

# Root URL
REACT_APP_API_URL=https://novu-api-dev:3000
REACT_APP_WS_URL=https://novu-ws-dev:3002
API_ROOT_URL=https://novu-api-dev:3000
DISABLE_USER_REGISTRATION=false
FRONT_BASE_URL=https://novu-web-dev:4200
WIDGET_EMBED_PATH=https://novu-embed-dev:4701/embed.umd.min.js
WIDGET_URL=https://novu-widget-dev:4500

# Context Paths
# Only needed for setups with reverse-proxies
GLOBAL_CONTEXT_PATH=
WEB_CONTEXT_PATH=
API_CONTEXT_PATH=
WS_CONTEXT_PATH=
WIDGET_CONTEXT_PATH=


We are applying the deployments with below command 

kubectl apply -f kustomize/

all pods are running fine without any error.

NAME                                READY   STATUS    RESTARTS   AGE
novu-api-dev-77555bd5b5-tnrx8       1/1     Running   0          15m
novu-embed-dev-55c5dd565f-lhws6     1/1     Running   0          15m
novu-mongodb-dev-666b94cff7-xblfr   1/1     Running   0          15m
novu-redis-dev-86697d5b54-97kch     1/1     Running   0          15m
novu-web-dev-6b5848996d-4fnqp       1/1     Running   0          15m
novu-widget-dev-6c9ccd79f-bhxw5     1/1     Running   0          15m
novu-worker-dev-56b9cf7c4f-6scqs    1/1     Running   0          15m
novu-ws-dev-5465fd96d7-q92tp        1/1     Running   0          15m



### 👍 Expected behavior

We are seeing CORS issue with our env.

We are also seeing name not resolved issue sometime.

### 👎 Actual Behavior with Screenshots

![MicrosoftTeams-image (1)](https://github.com/novuhq/novu/assets/20111534/ed85889c-15c2-4eda-8085-c8d4a7223a8c)![MicrosoftTeams-image](https://github.com/novuhq/novu/assets/20111534/edd596df-adaf-48c4-a985-a64af7e9673c)

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1757277415,3594,[NV-2435] Feature: Create feature flag for IN_MEMORY_CLUSTER_MODE_ENABLED in Launch Darkly,"- **I'm submitting a...**
   - [*] bug report
   - [ ] feature request
   - [ ] question about the decisions made in the repository
   - [*] question about how to use this project

- **Summary**

I'm trying to run novu from the manifests that kustomize generates.

The steps I followed, after cloning the repository, are the following:
```
 cd docker/kubernetes/kustomize
```

Edit env-dev leaving the content attached.

Generate the manifests for kubernetes:
```
 customize build . > novu.yaml
```

Create the namespace in k8s:
```
kubectl create ns novu
```

Apply the manifests:
```
kubectl apply -f novu.yaml
```

Everything worked fine except that the api and worker pods show the following error:

```
{""level"":30,""time"":1686759257963,""pid"":18,""serviceName"":""@novu/api"",""serviceVersion"":""0.15.0"",""platform"":""Docker"",""tenant"":""OS"",""context"":""InMemoryCluster"",""msg"":""In-memory cluster connecting""}
{""level"":50,""time"":1686759257968,""pid"":18,""serviceName"":""@novu/api"",""serviceVersion"":""0.15.0"",""platform"":""Docker"",""tenant"":""OS"",""context"":""InMemoryCluster"",""err"":{""type"":""ClusterAllFailedError"",""message"":""Failed to refresh slots cache."",""stack"":""ClusterAllFailedError: Failed to refresh slots cache.\n    at tryNode (/usr/src/app/node_modules/.pnpm/ioredis@5.3.1/node_modules/ioredis/built/cluster/index.js:308:31)\n    at /usr/src/app/node_modules/.pnpm/ioredis@5.3.1/node_modules/ioredis/built/cluster/index.js:325:21\n    at /usr/src/app/node_modules/.pnpm/ioredis@5.3.1/node_modules/ioredis/built/cluster/index.js:662:24\n    at run (/usr/src/app/node_modules/.pnpm/ioredis@5.3.1/node_modules/ioredis/built/utils/index.js:117:22)\n    at tryCatcher (/usr/src/app/node_modules/.pnpm/standard-as-callback@2.1.0/node_modules/standard-as-callback/built/utils.js:12:23)\n    at /usr/src/app/node_modules/.pnpm/standard-as-callback@2.1.0/node_modules/standard-as-callback/built/index.js:33:51\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"",""lastNodeError"":{""type"":""Error"",""message"":""Connection is closed."",""stack"":""Error: Connection is closed.\n    at close (/usr/src/app/node_modules/.pnpm/ioredis@5.3.1/node_modules/ioredis/built/redis/event_handler.js:189:25)\n    at Socket.<anonymous> (/usr/src/app/node_modules/.pnpm/ioredis@5.3.1/node_modules/ioredis/built/redis/event_handler.js:160:20)\n    at Object.onceWrapper (node:events:628:26)\n    at Socket.emit (node:events:513:28)\n    at Socket.emit (node:domain:489:12)\n    at TCP.<anonymous> (node:net:301:12)\n    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)""}},""msg"":""Failed to refresh slots cache.""}
{""level"":40,""time"":1686759257972,""pid"":18,""serviceName"":""@novu/api"",""serviceVersion"":""0.15.0"",""platform"":""Docker"",""tenant"":""OS"",""context"":""InMemoryCluster"",""msg"":""In-memory cluster close""}
{""level"":40,""time"":1686759257972,""pid"":18,""serviceName"":""@novu/api"",""serviceVersion"":""0.15.0"",""platform"":""Docker"",""tenant"":""OS"",""context"":""InMemoryCluster"",""msg"":""In-memory cluster close""}
{""level"":40,""time"":1686759257972,""pid"":18,""serviceName"":""@novu/api"",""serviceVersion"":""0.15.0"",""platform"":""Docker"",""tenant"":""OS"",""context"":""InMemoryCluster"",""msg"":""In-memory cluster close""}
{""level"":40,""time"":1686759257972,""pid"":18,""serviceName"":""@novu/api"",""serviceVersion"":""0.15.0"",""platform"":""Docker"",""tenant"":""OS"",""context"":""InMemoryCluster"",""msg"":""In-memory cluster close""}
{""level"":40,""time"":1686759257972,""pid"":18,""serviceName"":""@novu/api"",""serviceVersion"":""0.15.0"",""platform"":""Docker"",""tenant"":""OS"",""context"":""InMemoryCluster"",""msg"":""In-memory cluster close""}
{""level"":40,""time"":1686759257972,""pid"":18,""serviceName"":""@novu/api"",""serviceVersion"":""0.15.0"",""platform"":""Docker"",""tenant"":""OS"",""context"":""InMemoryCluster"",""msg"":""In-memory cluster close""}
{""level"":30,""time"":1686759257972,""pid"":18,""serviceName"":""@novu/api"",""serviceVersion"":""0.15.0"",""platform"":""Docker"",""tenant"":""OS"",""context"":""InMemoryCluster"",""msg"":""In-memory cluster reconnecting""}
```

Is there something I'm doing wrong?
Thanks!


- **Other information** (_e.g. detailed explanation, stack traces, related issues, suggestions how to fix, links for us to have context, eg. StackOverflow, personal fork, etc._)

kubernetes version: v1.26.3

env-dev:

```
# Secrets
# YOU MUST CHANGE THESE BEFORE GOING INTO PRODUCTION
JWT_SECRET=u46e2tgiacgey8tn83rc5n8htfxf406dq2oy1ys2
STORE_ENCRYPTION_KEY=DVtqBkKr88JLrhDxsfjtjiw3Pt8qMCzu

## General
NODE_ENV=dev
MONGO_URL=mongodb://novu-mongodb-dev:27017/novu-db
MONGO_MAX_POOL_SIZE=500
REDIS_HOST=novu-redis-dev
REDIS_CACHE_SERVICE_HOST=novu-redis-dev
REDIS_CACHE_SERVICE_PORT=6379

# AWS
S3_LOCAL_STACK=http://localhost:4566
S3_BUCKET_NAME=novu-local
S3_REGION=us-east-1
AWS_ACCESS_KEY_ID=test
AWS_SECRET_ACCESS_KEY=test

# Ports
API_PORT=3000
REDIS_PORT=6379
WS_PORT=3002

# Root URL
REACT_APP_API_URL=http://novu-api-dev:3000
REACT_APP_WS_URL=http://novu-ws-dev:3002
API_ROOT_URL=http://novu-api-dev:3000
DISABLE_USER_REGISTRATION=false
FRONT_BASE_URL=http://novu-web-dev:4200
WIDGET_EMBED_PATH=http://novu-embed-dev:4701/embed.umd.min.js
WIDGET_URL=http://novu-widget-dev:4500

# Context Paths
# Only needed for setups with reverse-proxies
GLOBAL_CONTEXT_PATH=
WEB_CONTEXT_PATH=
API_CONTEXT_PATH=
WS_CONTEXT_PATH=
WIDGET_CONTEXT_PATH=
```

novu.yaml:

```
apiVersion: v1
data:
  API_CONTEXT_PATH: """"
  API_PORT: ""3000""
  API_ROOT_URL: http://novu-api-dev:3000
  AWS_ACCESS_KEY_ID: test
  AWS_SECRET_ACCESS_KEY: test
  DISABLE_USER_REGISTRATION: ""false""
  FRONT_BASE_URL: http://novu-web-dev:4200
  GLOBAL_CONTEXT_PATH: """"
  JWT_SECRET: u46e2tgiacgey8tn83rc5n8htfxf406dq2oy1ys2
  MONGO_MAX_POOL_SIZE: ""500""
  MONGO_URL: mongodb://novu-mongodb-dev:27017/novu-db
  NODE_ENV: dev
  REACT_APP_API_URL: http://novu-api-dev:3000
  REACT_APP_WS_URL: http://novu-ws-dev:3002
  REDIS_CACHE_SERVICE_HOST: novu-redis-dev
  REDIS_CACHE_SERVICE_PORT: ""6379""
  REDIS_HOST: novu-redis-dev
  REDIS_PORT: ""6379""
  S3_BUCKET_NAME: novu-local
  S3_LOCAL_STACK: http://localhost:4566
  S3_REGION: us-east-1
  STORE_ENCRYPTION_KEY: DVtqBkKr88JLrhDxsfjtjiw3Pt8qMCzu
  WEB_CONTEXT_PATH: """"
  WIDGET_CONTEXT_PATH: """"
  WIDGET_EMBED_PATH: http://novu-embed-dev:4701/embed.umd.min.js
  WIDGET_URL: http://novu-widget-dev:4500
  WS_CONTEXT_PATH: """"
  WS_PORT: ""3002""
kind: ConfigMap
metadata:
  labels:
    owner: novu
  name: novu-novu-env-dev-mgdgm7kctf
  namespace: novu
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: api
    owner: novu
  name: novu-api-dev
  namespace: novu
spec:
  ports:
  - name: ""3000""
    port: 3000
    targetPort: 3000
  selector:
    app.novu.co/name: api
    owner: novu
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: embed
    owner: novu
  name: novu-embed-dev
  namespace: novu
spec:
  ports:
  - name: ""4701""
    port: 4701
    targetPort: 4701
  selector:
    app.novu.co/name: embed
    owner: novu
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: mongodb
    owner: novu
  name: novu-mongodb-dev
  namespace: novu
spec:
  ports:
  - name: ""27017""
    port: 27017
    targetPort: 27017
  selector:
    app.novu.co/name: mongodb
    owner: novu
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: redis
    owner: novu
  name: novu-redis-dev
  namespace: novu
spec:
  ports:
  - name: ""6379""
    port: 6379
    targetPort: 6379
  selector:
    app.novu.co/name: redis
    owner: novu
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: web
    owner: novu
  name: novu-web-dev
  namespace: novu
spec:
  ports:
  - name: ""4200""
    port: 4200
    targetPort: 4200
  selector:
    app.novu.co/name: web
    owner: novu
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: widget
    owner: novu
  name: novu-widget-dev
  namespace: novu
spec:
  ports:
  - name: ""4500""
    port: 4500
    targetPort: 4500
  selector:
    app.novu.co/name: widget
    owner: novu
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: worker
    owner: novu
  name: novu-worker-dev
  namespace: novu
spec:
  ports:
  - name: ""3004""
    port: 3004
    targetPort: 3004
  selector:
    app.novu.co/name: worker
    owner: novu
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: ws
    owner: novu
  name: novu-ws-dev
  namespace: novu
spec:
  ports:
  - name: ""3002""
    port: 3002
    targetPort: 3002
  selector:
    app.novu.co/name: ws
    owner: novu
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: api
    owner: novu
  name: novu-api-dev
  namespace: novu
spec:
  replicas: 1
  selector:
    matchLabels:
      app.novu.co/name: api
      owner: novu
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      labels:
        app.novu.co/name: api
        owner: novu
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: novu-novu-env-dev-mgdgm7kctf
        image: ghcr.io/novuhq/novu/api:0.15.0
        name: api
        ports:
        - containerPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: embed
    owner: novu
  name: novu-embed-dev
  namespace: novu
spec:
  replicas: 1
  selector:
    matchLabels:
      app.novu.co/name: embed
      owner: novu
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      labels:
        app.novu.co/name: embed
        owner: novu
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: novu-novu-env-dev-mgdgm7kctf
        image: ghcr.io/novuhq/novu/embed:0.15.0
        name: embed
        ports:
        - containerPort: 4701
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: mongodb
    owner: novu
  name: novu-mongodb-dev
  namespace: novu
spec:
  replicas: 1
  selector:
    matchLabels:
      app.novu.co/name: mongodb
      owner: novu
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      labels:
        app.novu.co/name: mongodb
        owner: novu
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: novu-novu-env-dev-mgdgm7kctf
        image: mongo
        name: mongodb
        ports:
        - containerPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: redis
    owner: novu
  name: novu-redis-dev
  namespace: novu
spec:
  replicas: 1
  selector:
    matchLabels:
      app.novu.co/name: redis
      owner: novu
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      labels:
        app.novu.co/name: redis
        owner: novu
    spec:
      containers:
      - image: redis:alpine
        name: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: web
    owner: novu
  name: novu-web-dev
  namespace: novu
spec:
  replicas: 1
  selector:
    matchLabels:
      app.novu.co/name: web
      owner: novu
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      labels:
        app.novu.co/name: web
        owner: novu
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: novu-novu-env-dev-mgdgm7kctf
        image: ghcr.io/novuhq/novu/web:0.15.0
        name: web
        ports:
        - containerPort: 4200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: widget
    owner: novu
  name: novu-widget-dev
  namespace: novu
spec:
  replicas: 1
  selector:
    matchLabels:
      app.novu.co/name: widget
      owner: novu
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      labels:
        app.novu.co/name: widget
        owner: novu
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: novu-novu-env-dev-mgdgm7kctf
        image: ghcr.io/novuhq/novu/widget:0.15.0
        name: widget
        ports:
        - containerPort: 4500
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: worker
    owner: novu
  name: novu-worker-dev
  namespace: novu
spec:
  replicas: 1
  selector:
    matchLabels:
      app.novu.co/name: worker
      owner: novu
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      labels:
        app.novu.co/name: worker
        owner: novu
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: novu-novu-env-dev-mgdgm7kctf
        image: ghcr.io/novuhq/novu/worker:0.15.0
        name: worker
        ports:
        - containerPort: 3004
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  labels:
    app.novu.co/name: ws
    owner: novu
  name: novu-ws-dev
  namespace: novu
spec:
  replicas: 1
  selector:
    matchLabels:
      app.novu.co/name: ws
      owner: novu
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      labels:
        app.novu.co/name: ws
        owner: novu
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: novu-novu-env-dev-mgdgm7kctf
        image: ghcr.io/novuhq/novu/ws:0.15.0
        name: ws
        ports:
        - containerPort: 3002
```



<sub>[NV-2435](https://linear.app/novu/issue/NV-2435/feature-create-feature-flag-for-in-memory-cluster-mode-enabled-in)</sub>",,
1756799679,3589,🚀 Feature: Better Client Pagination Control,"### 🔖 Feature description

Headless/React hooks client should allow:
- fetching all pages of a tab
- changing the page size

### 🎤 Why is this feature needed ?

In my use-case, messages are associated with an object external to Novu and can be searched by that object's details. This means that client-side filtering needs to occur and I can't know ahead of time which notifications are relevant to what the user is trying to do.

This feature would also drastically speed up notification centers with a different number of items.  For example, the Github notification center shows around 22 items per page. Currently, a view like that would require 3 roundtrips and thinking about timelines of fetching in a not very React way.

### ✌️ How do you aim to achieve this?

- [ ] add a way to fetch all notifications in the feed to the notification fetching interface (initialFetchingStrategy etc.). Ideally combine with `pageSize` by making `pageSize` `number | ""all""`.
- [ ] add documentation explaining `fetchNotifications` and `fetchAllPages`
- [ ] add a `pageSize` to the provider interface

### 🔄️ Additional Information

It appears that `fetchNotifications` only fetches the first page of notifications?
That violates the principle of least astonishment since there is no other control over pagination/loading and should probably be explicitly stated in the documentation. 
I expected the ""get me out of having to worry about fetching"" setting to fetch all pages, not just the first one.

Hmm, it would be nice if 

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1751584235,3581,[NV-2409] 🐛 Bug Report: Querying by non-existent `subscriberId` returns all messages,"### 📜 Description

### Good example

```bash
URL=""https://api.novu.co/v1/messages""
SUBSCRIBER_ID=""1""
http GET ${URL} subscriberId==""${SUBSCRIBER_ID}""
```

| Header | Header |
|--------|--------|
| Expected | Subscriber 1's messages returned |
| Actual | Subscriber 1's messages returned | 

---

### Bugged example

However, when we use a non-existent subscriber ID:

```bash
URL=""https://api.novu.co/v1/messages""
SUBSCRIBER_ID=""NON_EXISTENT""
http GET ${URL} subscriberId==""${SUBSCRIBER_ID}""
```
| Header | Header |
|--------|--------|
| Expected | No messages returned|
| Actual | *All* messages returned | 

Related: https://github.com/novuhq/novu/blob/5ef36d0e3fca483605ad99ae26b7f04a2656ecd0/apps/api/src/app/messages/usecases/get-messages/get-messages.usecase.ts#L30

### 👟 Reproduction steps

.

### 👍 Expected behavior

.

### 👎 Actual Behavior with Screenshots

.

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-2409](https://linear.app/novu/issue/NV-2409/🐛-bug-report-querying-by-non-existent-subscriberid-returns-all)</sub>",,
1742865479,3565,[NV-2616] 🚀 Feature: Bulk import subscribers through CSV,"### 🔖 Feature description

It would be very helpful to have an option to import users you already have in your database to Novu by means of a CSV file. The current solution is to iterate through your users and do a `create_subscriber` method for each one of them. This could have potential issues, for example, one of the users failing and being left without subscription in Novu.

### 🎤 Why is this feature needed ?

In my case, I need to add my already existing users to Novu, so they get an email subscription. Afterwards, when each one of them logs onto the app, they would accept push notifications through OneSignal. 

I can't go for the alternative of creating a subscriber on the fly when triggering the notification, I need them to already exist in Novu to associate them to the OneSignal player when it is created.

### ✌️ How do you aim to achieve this?

A CSV with the information of the subscribers would be uploaded, with the same fields that you input when creating a subscriber through the API. It would be good as well if the CSV supported the capability of adding custom data as well.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-2616](https://linear.app/novu/issue/NV-2616/🚀-feature-bulk-import-subscribers-through-csv)</sub>",,
1741653024,3559,"🚀 Feature: in notification-center, ability to control displayed templates in subscriber preferences","### 🔖 Feature description

Give ability to control which templates are manageable in subscriber preferences.

https://docs.novu.co/notification-center/react/react-components#subscriber-preferences

I would like to be able to hide some sections to some users.

<img width=""450"" alt=""Screenshot 2023-06-05 at 13 54 45"" src=""https://github.com/novuhq/novu/assets/1590371/d6262953-e03f-4637-bc6e-f9bfa5d5ff26"">


### 🎤 Why is this feature needed ?

There are multiple use cases:
- hide some new features behind a feature flag
- have different types of users: example suppose a job-board application:
   - employers will have some types of notifications
   - applicants will have other types of notifications



### ✌️ How do you aim to achieve this?

Currently, in `@novu/notification-center/dist/types/components/popover-notification-center/PopoverNotificationCenter.d.ts`, the `IPopoverNotificationCenterProps` interface contains only a boolean `showUserPreferences`.

<img width=""735"" alt=""Screenshot 2023-06-05 at 14 13 27"" src=""https://github.com/novuhq/novu/assets/1590371/5a73e4db-ebef-4b3e-8412-e3e4628041bc"">

A solution would be to add another attribute `userPreferenceDisplayTemplates` of shape `Record<TemplateId, boolean>` to specify which templates should be displayed or not.

### 🔄️ Additional Information

The alternative is to rewrite from scratch a custom notification center component.

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1732471743,3541,🐛 Bug Report: Novu Notification Center Closing Issue on iFrame Embed,"### 📜 Description

When you have an in-app Novu notification bell icon, the notification center opens up when you click on the bell-icon, but it doesn't close the center when you click on it again. It closes when only when you click on some other part of the screen.

### 👟 Reproduction steps

- Simply add a Novu notification center iFrame Embed.

```javascript
function showNotification(pair, name) {
  (function (n, o, t, i, f) {
    n[i] = {};
    var m = [""init"", ""on""];
    n[i]._c = [];
    m.forEach(
      (me) =>
        (n[i][me] = function () {
          n[i]._c.push([me, arguments]);
        })
    );
    var elt = o.createElement(f);
    elt.type = ""text/javascript"";
    elt.async = true;
    elt.src = t;
    var before = o.getElementsByTagName(f)[0];
    before.parentNode.insertBefore(elt, before);
  })(
    window,
    document,
    ""https://embed.novu.co/embed.umd.min.js"",
    ""novu"",
    ""script""
  );

  novu.init(""APP_ID"", ""#notification-bell"", {
     ...subscriberProps
  });
}
```

- Add a HTML Div with the bell icon.

```HTML
<link
      rel=""stylesheet""
      href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css""
      integrity=""sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==""
      crossorigin=""anonymous""
      referrerpolicy=""no-referrer""
    />

<div id=""notification-bell"">
      <i style=""color: white"" class=""fa fa-bell""></i>
      <span id=""unseen-badge"">0</span>
</div>
```

- Now fire a Notification and click on the bell icon to open the Notification Center.
- Now click on the bell icon again to close this which is not working at the moment.


### 👍 Expected behavior

When the notification center is open and you click on the bell icon, it should close the notification center.
The behaviour should be to toggle the visibility of the notification center alternatively based on the bell icon click.

### 👎 Actual Behavior with Screenshots

When the notification center is open and you click on the bell icon, it doesn't close the notification center.

![Bug](https://github.com/novuhq/novu/assets/47860497/7139bec7-5679-4741-a002-89e0f9a7991e)


### 📃 Provide any additional context for the Bug.

This was tested on a simple HTML webpage that was served by an Express backend server.
@jainpawan21 has tested this on his end as well and confirmed it's a bug.

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1731974349,3538,🐛 Bug Report: `ITriggerPayload` type doesn't accept any JSON serializable object,"### 📜 Description

In [documentation](https://docs.novu.co/overview/quick-start/#trigger-the-notification):
<img width=""851"" alt=""Screenshot 2023-05-30 at 12 26 08"" src=""https://github.com/novuhq/novu/assets/1590371/c2e6f111-4a0a-46cd-97f2-fce7f2886ef2"">
 
But the `ITriggerPayload` is actually more restrictive:
<img width=""372"" alt=""Screenshot 2023-05-30 at 12 24 16"" src=""https://github.com/novuhq/novu/assets/1590371/b24c5d26-0f7d-4074-ab24-66cd2e217c17"">
<img width=""934"" alt=""Screenshot 2023-05-30 at 12 24 21"" src=""https://github.com/novuhq/novu/assets/1590371/67627d97-cfe3-4516-936c-709bd3b51be7"">

and doesn't allow lists of objects

### 👟 Reproduction steps

```
import { ITriggerPayload } from '@novu/node'

export const myPayload: ITriggerPayload = {
  myList: [
    {
      myInnerString: 'string'
    }
  ]
}
```

and see type error in IDE

### 👍 Expected behavior

no type error in IDE

### 👎 Actual Behavior with Screenshots

<img width=""934"" alt=""Screenshot 2023-05-30 at 12 24 21"" src=""https://github.com/novuhq/novu/assets/1590371/14150d30-1639-427d-90c8-ed112cb092cd"">


### 📃 Provide any additional context for the Bug.

You might want to use https://github.com/microsoft/TypeScript/issues/1897#issuecomment-331765301

```
export type JSONPrimitive = string | number | boolean | null;
export type JSONValue = JSONPrimitive | JSONObject | JSONArray;
export type JSONObject = { [member: string]: JSONValue };
export interface JSONArray extends Array<JSONValue> {}
```

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1717906437,3466,[NV-2374] Allow notifications feed filtering by custom payload data,"### 🔖 Feature description

At the moment, we can query notification meessages/feeds by `page`, `feedId`, `seen`, `read`, `subscriberId`, `channels`, etc. It would be helpful to query by custom data in `messages.payload` 

### 🎤 Why is this feature needed ?

I work on a web app where we are trying to migrate our existing notification systems to Novu. One feature of our existing notification system is that we are able to filter notifications by their 'component type', or a subsection of the app. As we transition to Novu, we can store this custom data within a notification payload, but we run into compatibility issues since we are unable to filter by these features.



### ✌️ How do you aim to achieve this?

I would like to expand the `GET /v1/notifications` api to take custom data as input.

Specifically, I think it will involve the following:

- Add a new parameter to`@novu/dal/src/repositories/messages/message.repository.ts > MessageRepository > getFilterQueryForMessage()` to take custom payload data as input
- Update `@novu/api/src/app/widgets/usecases/get-notifications-feed` and the corresponding `StoreQuery` object to take custom payload data 


### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-2374](https://linear.app/novu/issue/NV-2374/🚀-feature-allow-notification-feed-filtering-by-custom-payload-data)</sub>",,
1716499982,3460,[NV-2582] TypeError: oldMessages.map is not a function,"## 📜 Description
I get this error when I mark a notification as seen with the headless service library
https://github.com/novuhq/novu/blame/e726694c4a8d2a9af17f7a24bd6f8bf7a06a2223/packages/headless/src/lib/headless.service.ts#L581
![image](https://github.com/novuhq/novu/assets/47150226/b3517bb7-16ce-4817-b04a-13da96ef479e)

## Reproduction
I use Novu's cloud service with HMAC enabled
I am trying to create a simple custom notification centre for React Native + Expo (TypeScript)
```
headlessService.markNotificationsAsSeen({
    messageId: ['message-id-0', 'message-id-1'],
    listener: ({status, isLoading}) => {
        if (isLoading) return;
        if (!isLoading && status !== 'success') return Prompt({
            status: 'error',
            content: 'An error occured while trying to mark a notification as seen.',
            closeText: ''
        });
    },
    onError: console.error
})
```
Note: I used Brave browser 

<sub>[NV-2582](https://linear.app/novu/issue/NV-2582/typeerror-oldmessagesmap-is-not-a-function)</sub>",,
1714309895,3446,🐛 Bug Report: Novu SDK layouts response DTO is not correct,"### 📜 Description

Noticed while using the Novu Nodejs SDK that when attempting to fetch a list of layouts, the response DTO does not match the API response

### 👟 Reproduction steps

1. Install Novu nodejs SDK
2. Retrieve a list of layouts `novu.layouts.list({ your params})`
3. Inspect the API response

### 👍 Expected behavior

The interface should reflect the actual API response

### 👎 Actual Behavior with Screenshots

```typescript
const axiosResponse = await novu.layouts.list({ page: 0, pageSize: 100 })
const list = axiosResponse.data
```
You'll observe that `list` will have the following content:

```typescript
{
    page: 0,
    totalCount: 2,
    pageSize: 100,
    data: [ [Object], [Object] ]
}
```

When inspecting with my IDE, this is what I see:
![Screenshot 2023-05-17 at 6 01 27 PM](https://github.com/novuhq/novu/assets/15980884/bd35c656-35b0-4624-887d-bffec93d4675)


### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1713719096,3442,🚀 Feature: Export Notification Templates interfaces/enums from SDK ,"### 🔖 Feature description

SDK types are not being exported for consumers, example: `IMessageFilter` interface can't be imported from `@novu/node`

### 🎤 Why is this feature needed ?

I'm building a library that generates Novu resources/entities programmatically and there's the need to have type-safety but it is hard to import the types from `@novu/node` as enums such as `DigestUnitEnum`, `BuilderFieldType` etc or any other interface related to notification templates (which is my primary use case) are not available 

The workaround that I have so far is using typescript `Parameters``
```typescript
import type { Novu } from '@novu/node';

export type SdkTemplate = Parameters<
  Novu['notificationTemplates']['create']
>[0];
```

This is not ideal as for some enum fields, we're not even able to pass a literal value and i end up casting to `any`

### ✌️ How do you aim to achieve this?

If possible export the types/enums so that the SDK can import, something like

```typescript
import type { INotificationTemplateStep, INotificationTemplatePayload,  ChannelCTATypeEnum } from '@novu/node'
```

### 🔄️ Additional Information

This might apply to other resources, right now I'm only exploring templates 

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1707158394,3400,[NV-2314] 🐛 Bug Report:  Many warnings during webpack compile process.,"### 📜 Description

Hi, we use `""@novu/notification-center"": ""0.14.0""` for our web application and there are many  warnings during webpack compile process. 

### 👟 Reproduction steps

1. just try to run the application id dev mode with  `""@novu/notification-center"": ""0.14.0""`

### 👍 Expected behavior

There should not be warnings 

### 👎 Actual Behavior with Screenshots

```
WARNING in ./node_modules/@novu/notification-center/dist/esm/index.js
Module Warning (from ./node_modules/source-map-loader/dist/cjs.js):
Failed to parse source map from 'C:\Users\*****\Documents\*****\*****\web-app\node_modules\@novu\notification-center\src\utils\react-to-webcomponent.ts' file: Error: ENOENT: no such file or directory, open 'C:\Users\*****\Documents\*****\*****\web-app\node_modules\@novu\notification-center\src\utils\react-to-webcomponent.ts'

WARNING in ./node_modules/@novu/notification-center/dist/esm/index.js
Module Warning (from ./node_modules/source-map-loader/dist/cjs.js):
Failed to parse source map from 'C:\Users\*****\Documents\*****\*****\web-app\node_modules\@novu\notification-center\src\utils\styles.ts' file: Error: ENOENT: no such file or directory, open 'C:\Users\*****\Documents\*****\packages\web-app\node_modules\@novu\notification-center\src\utils\styles.ts'

WARNING in ./node_modules/@novu/notification-center/dist/esm/index.js
Module Warning (from ./node_modules/source-map-loader/dist/cjs.js):
Failed to parse source map from 'C:\Users\*****\Documents\*****\*****\web-app\node_modules\@novu\notification-center\src\utils\token.ts' file: Error: ENOENT: no such file or directory, open 'C:\Users\turnk\Documents\*****\*****\web-app\node_modules\@novu\notification-center\src\utils\token.ts'

WARNING in ./node_modules/react-image/umd/index.js
Module Warning (from ./node_modules/source-map-loader/dist/cjs.js):
Failed to parse source map from 'C:\Users\*****\Documents\*****\*****\web-app\node_modules\react-image\umd\index.js.map' file: Error: ENOENT: no such file or directory, open 'C:\Users\*****\Documents\*****\*****\web-app\node_modules\react-image\umd\index.js.map'
...........
.....
webpack compiled with 161 warnings
```

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-2314](https://linear.app/novu/issue/NV-2314/🐛-bug-report-many-warnings-during-webpack-compile-process)</sub>",,
1703701614,3379,[NV-2293] 🚀 Feature: Custom SNPP Provider for SMS,"### 🔖 Feature description

As an admin, I would like to be able to enable a provider that allows me to enter custom SNPP credentials that allow for paging through a `emag` gateway.

### 🎤 Why is this feature needed ?

As an enterprise user, we utilize a `emag` service that allows us to tie directly into a cell phone providers SMS system for enterprise messaging. 

### ✌️ How do you aim to achieve this?

Create a new provider that allows for the entering of the following:
- emag address (i.e. myemag.cellprovider.com)
- emag port (i.e. 1337)
- username (i.e. myuser)
- password (i.e. mypassword)

Then implement a the provider in accordance with [RFC 1861](https://www.rfc-editor.org/rfc/rfc1861.html)

### 🔄️ Additional Information

I have implemented this internally, however I feel like getting it into Novu would be a huge bonus to potential enterprise grade / hospital based companies. Here is how we have implemented it internally.

```js
import * as net from 'net';

export function SendPage({ to, message }: SendPageProps) {
  Logger.log(`Sending page ${to}`, 'SendPage');
  let wasSuccessful: boolean;

  // Create a new socket client.
  let client = new net.Socket();

  // Get the port from the env
  let port = +process.env.SNPP_PORT;

  // Get the host from the env
  let host = process.env.SNPP_HOST;

  // Get the username from the env
  let username = process.env.SNPP_USERNAME;

  // Get the password from the env
  let password = process.env.SNPP_PASSWORD;

  // Connect to the SNPP socket
  client.connect(port, host, function () { });

  // When the client gets a data event, process it.
  client.on('data', function (data) {
    let code = data.toString().substring(0, 3);
    let response = data.toString().substring(4);

    Logger.debug(code + ':' + response, 'SendPage');

    /**
     * If the code is 220, then we will start sending the paging information
     * to the SNPP service. For more information, look into the SNPP RFC:
     * @link https://www.rfc-editor.org/rfc/rfc1861.html
     */
    if (code == '220') {
      client.write(`LOGIn ${username} ${password}\r\n`);
      client.write(`PAGE ${to}\r\n`);
      client.write(`MESS ${message}\r\n`);
      client.write(`SEND\r\n`);
      client.write(`QUIT\r\n`);
    }

    if (code == '250') {
      client.destroy();
      wasSuccessful = true;
      Logger.log('message sent', 'SendPage');
    }
  });
```

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-2293](https://linear.app/novu/issue/NV-2293/🚀-feature-custom-snpp-provider-for-sms)</sub>",,
1697718097,3342,[NV-2222] 🐛 Bug Report: mailgun baseurl is missing in handler,"### 📜 Description

I was trying to set up Mail gun integration with Novu, and the integration got created OK, but when I tried to send emails, it consistently failed. The error was also a bit misleading as it always shows `providerId` as null or `SendGrid` whereas I only had one integration which was `Mailgun`.
I looked into the issue and [found out](https://stackoverflow.com/questions/63489555/mailgun-401-forbidden/63967799#63967799) that the domains in the `EU Region` need to specify the EU `host`. I looked into the codebase and found some issues

1. [mailgun-provider](https://github.com/novuhq/novu/blob/next/providers/mailgun/src/lib/mailgun.provider.ts#L35) does take custom `url` as a `baseUrl` argument and pass that on to `mailgun-client` but the [mailgun-handler](https://github.com/novuhq/novu/blob/next/packages/application-generic/src/factories/mail/handlers/mailgun.handler.ts#L24) does not pass `baseUrl`  to the `mailgun-provider`. 

2. Integration Create API does not let you specify `baseUrl`, but it's defined in the interface [here](https://github.com/novuhq/novu/blob/next/libs/dal/src/repositories/integration/integration.entity.ts#L26)




### 👟 Reproduction steps

1. Setup a Mailgun account with a `EU` region domain
2. Setup Mailgun integration on Novu.
3. Try to send an email, you will get an error.

### 👍 Expected behavior

- Should let you define custom host URL in case of `EU` 
- The mail should be sent

### 👎 Actual Behavior with Screenshots

I get this error in my last step of `executionDetails` of the `job`

```json
{
  ""detail"": ""Unexpected provider error"",
  ""providerId"": ""sendgrid"",
  ""raw"": ""{\""stack\"":\""\"",\""status\"":401,\""message\"":\""Unauthorized\"",\""details\"":\""Forbidden\""}"",
  ""source"": ""INTERNAL"",
  ""status"": ""FAILED"",
  ""__typename"": ""NotificationActivityJobExecutionDetailsModel""
}

```

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-2222](https://linear.app/novu/issue/NV-2222/🐛-bug-report)</sub>",,
1683053042,3285,[NV-2168] ✨ Polishing: Fix docs and types for the header,"### 📜 Description

I had to read the source to realize that not only was it possible to use an existing settings component from Novu, but I just needed to accept a `setScreen` callback in the header to use the existing transition in the popup component.

### 👟 Reproduction steps

N/A

### 👍 Expected behavior

- `header` prop of the notification popup should accept a `React.FC<{setScreen: (screen: ScreensEnum)=> void}>` instead of a `()=>JSX.Element`.  Or at least it should have that argument signature.
- Documentation should show all exported components, the meaning of their arguments, and their purpose.

### 📃 Provide any additional context for the Bug.

While you're at it, you might want to look at the performance implications of switching from `{header({setScreen})}` to `<Header {...{setScreen}} />`.  I'm no expert but I think that the current code could cause React to fail to match the header render-to-render, causing unnecessary computation and DOM updates.

This is related to problems which come up in the context of #3246 .

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

<sub>[NV-2168](https://linear.app/novu/issue/NV-2168/✨-polishing-fix-docs-and-types-for-the-header)</sub>",,
1676405464,3255,[NV-2154] 🐛 Bug Report: useFeedUnseenCount shows total feed count,"### 📜 Description

Despite the name and documentation, `useFeedUnseenCount` returns the total count associated with a query.

If you want to fetch the unseen count for a feed, you need to add `seen: false` to the query.

This is a minor annoyance for people who want to keep IStores as constants in some central place.

### 👟 Reproduction steps

1. send one notification in an empty feed and read it
2. call `useFeedUnseenCount({ query: { feedIdentifier: <feed identifier> } })`
3. call `useFeedUnseenCount({ query: { feedIdentifier: <feed identifier>, seen: false } })`


### 👍 Expected behavior

Something called `useFeedUnseenCount` should count _unseen_ items in a feed.

### 👎 Actual Behavior with Screenshots

If you don't add `seen: false` to the query, you see 1 item instead of the correct 0 in `result.data.count`.

### 📃 Provide any additional context for the Bug.

Since this has hit live, it makes sense to solve in the interim before a major version update with a note on the documentation and ideally in a `/** description */` if it's possible to get that into the `dist/`.

Since this allows functionality that the described behavior doesn't, it probably makes sense to keep the existing hook as `useQueryCount` and export a new `useFeedUnseenCount` as a wrapper.

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-2154](https://linear.app/novu/issue/NV-2154/🐛-bug-report-usefeedunseencount-shows-total-feed-count)</sub>",,
1674895478,3243,[NV-2149] 🐛 Bug Report: Vue component does not work if you are using `floating-vue` library,"### 📜 Description

I was trying to integrate`@novu/notification-center-vue` today in a project, however I was getting this error when clicking on the notification button:

```
Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'startsWith')
    at Proxy.$_computePosition (floating-vue.es.js:602:46)
    at Proxy.$_applyShow (floating-vue.es.js:743:18)
```

The notification panel wouldn't appear, and only this error was showing.

It turns out that the issue is because I am using `floating-vue` (version 2.0.0-beta.20, by the way) in my app, and novu uses its own forked version of `floating-vue` under the hood.

### 👟 Reproduction steps

1. Create a Vue 3 app;
2. Install `floating-vue`;
3. Install `@novu/notification-center-vue`;
4. Use `floating-vue` somewhere in your app;
5. Use `@novu/notification-center-vue`

### 👍 Expected behavior

When the button is clicked the notification panel should show up.

### 👎 Actual Behavior with Screenshots

The panel does not show up and get the above error message in the console.

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-2149](https://linear.app/novu/issue/NV-2149/🐛-bug-report-vue-component-does-not-work-if-you-are-using-floating)</sub>",,
1673089169,3234,[NV-2136] 🐛 Bug Report: Novu Provider is not working properly.,"### 📜 Description
export const Notification = () => {
  const wallet = useWallet(FANTOM);

  return wallet.connected ? (
    <NovuProvider
      subscriberId={wallet.address.toLocaleLowerCase()}
      applicationIdentifier={NOVU_APP_ID}
      initialFetchingStrategy={{ fetchNotifications: true }}
    >
      <CustomNotificationCenter />
    </NovuProvider>
  ) : (
    <></>
  );
};

This is my code snippet that retrieves a wallet address. When I change the wallet, I can obtain a different wallet address.

I am currently utilizing the wallet address as the subscribeId. It works correctly the first time. As you can see, I'm using wallet address for each subscribeId

However, when I change the wallet, the notification payload data does not update based on the new subscribeId. I have checked the onLoad function in NovuProvider and it is only called once.

Additionally, I am using the useNotification() hook function on the CustomNotificationCenter component using the @novu/notification-center library.

I have attempted to use the refetch function in useNotification, which works, but the NovuProvider is not functioning as expected.

Are there any other options to manually refetch notification payload  data based on subscribeId using useNotification or other methods?


### 👟 Reproduction steps

1. connect wallet
2. fetch notification first time
3. change wallet
At that time, it's not fetching notification payload data from novu provider

### 👍 Expected behavior

It should be clear the old subscriber's notifications, and then have to be fetch new notification payload data based on new wallet.

### 👎 Actual Behavior with Screenshots

![image](https://user-images.githubusercontent.com/94132651/232785527-d8e3e6a7-4d3b-4008-96c0-9c3f628985fd.png)


### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-2136](https://linear.app/novu/issue/NV-2136/🐛-bug-report-novu-provider-is-not-working-properly)</sub>",,
1669564634,3206,[NV-2125] 🐛 Bug Report: setup:project fails on duplicate property,"### 📜 Description

b8d4c41ebf909199d1e1419b2568c800abc71962

### 👟 Reproduction steps

Use commit `b8d4c41ebf909199d1e1419b2568c800abc71962` or its descendents (`main` as of 20230415T203536Z)

Run `npm run setup:project`

Observe this failure:

```

    ✖  nx run @novu/api:build
       > @novu/api@0.13.0 build /Users/chrisj/proj/novu/apps/api
       > nest build

       DeprecationWarning: 'createImportEqualsDeclaration' has been deprecated since v4.8.0. Decorators are no longer supported for this function. Callers should switch to an overload that does not accept a 'decorators' parameter.
       DeprecationWarning: 'createNodeArray' has been deprecated since v4.0.0. Use the appropriate method on 'ts.factory' or the 'factory' supplied by your transformation context instead.
       DeprecationWarning: 'createMethodDeclaration' has been deprecated since v4.8.0. Decorators have been combined with modifiers. Callers should switch to an overload that does not accept a 'decorators' parameter.
       DeprecationWarning: 'updateClassDeclaration' has been deprecated since v4.8.0. Decorators have been combined with modifiers. Callers should switch to an overload that does not accept a 'decorators' parameter.
       ERROR in /Users/chrisj/proj/novu/apps/api/src/app/shared/services/in-memory-provider/elasticache-cluster-provider.ts
       ./src/app/shared/services/in-memory-provider/elasticache-cluster-provider.ts 97:4-24
       [tsl] ERROR in /Users/chrisj/proj/novu/apps/api/src/app/shared/services/in-memory-provider/elasticache-cluster-provider.ts(97,5)
             TS1117: An object literal cannot have multiple properties with the same name.
       ts-loader-default_43d7ed5e51b1fe49
        @ ./src/app/shared/services/in-memory-provider/in-memory-provider.service.ts 24:39-80
        @ ./src/app/shared/services/in-memory-provider/index.ts 17:13-52
        @ ./src/app/shared/shared.module.ts 23:29-69
        @ ./src/app.module.ts 16:24-61
        @ ./src/bootstrap.ts 25:21-44
        @ ./src/main.ts 3:20-42

       webpack 5.76.2 compiled with 1 error in 199028 ms
        ELIFECYCLE  Command failed with exit code 1.
```



### 👍 Expected behavior

Build should complete without error

### 👎 Actual Behavior with Screenshots

Error as noted above

### 📃 Provide any additional context for the Bug.

In file `apps/api/src/app/shared/services/in-memory-provider/elasticache-cluster-provider.ts`, this block:

```
export const getElasticacheCluster = (): Cluster | undefined => {
  const { instances } = getElasticacheClusterProviderConfig();

  const options: ClusterOptions = {
    dnsLookup: (address, callback) => callback(null, address),
    enableAutoPipelining: true,
    enableOfflineQueue: false,
    enableReadyCheck: true,
    redisOptions: {
      tls: {},
      connectTimeout: 10000,
    },
    scaleReads: 'slave',
    /*
     *  Disabled in Prod as affects performance
     */
    showFriendlyErrorStack: process.env.NODE_ENV !== 'prod',
    slotsRefreshTimeout: 10000,
    enableAutoPipelining: false,
  };
```

includes the `enableAutoPipelining` property twice. A lint should have caught this.

I'd submit a PR but I don't know if true or false should be the default value.

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-2125](https://linear.app/novu/issue/NV-2125/🐛-bug-report-setupproject-fails-on-duplicate-property)</sub>",,
1665806416,3187,[NV-2108] 🐛 Bug Report: Redis service is missing in kustomize. ,"### 📜 Description

When deploying novu to kubernetes,
1. novu-api-dev pod gives Invalid environment variables: STORE_ENCRYPTION_KEY: Expected to be string 32 char long 
2. redis-service is missing in kustomize folder.  
3. mongodb is required for novu to work.

### 👟 Reproduction steps

1. Clone https://github.com/novuhq/novu.git
2. cd novu/docker/kubernetes
3. Create novu namespace. $ kubectl create ns novu
4. kubectl apply -k kustomize/
5. Check novu-api-dev logs. $ kubectl logs <novu-api-dev-pod-name> -n novu
6. kubectl port-forward -n novu novu-web-dev-pod-name 4200:4200
7. kubectl port-forward -n novu novu-api-dev-pod-name 3000:3000
8. Go to http://localhost:4200/auth/signup and try to signup.

### 👍 Expected behavior

It should allow signup.

### 👎 Actual Behavior with Screenshots

It gives network error.

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-2108](https://linear.app/novu/issue/NV-2108/🐛-bug-report-redis-service-is-missing-in-kustomize)</sub>",,
1659874858,3167,[NV-2074] 🐛 Bug Report: Validation problems,"### 📜 Description

### Unbound length
User can create entities with veery long unpractical names/identifiers. I think we shouldn't allow for names with 88886 length.

### Lack of trim
Basically in every string input (like Organization name) I can ""bypass"" any kind of length validation (even if we fix unbound length issue) by using bunch of whitespaces (whitespace counts as character).

### 👟 Reproduction steps

### Unbound length
1. Generate very long string
2. Paste this string to the input
3. You created entity with veeeery long name

### Lack of trim
1. Type something like `""            ""` in any string input.
4. You created entity with empty name :) 

I consider this as visual bug, because I tried to break application/flow and everything works fine (but just looks weird).

![image](https://user-images.githubusercontent.com/43048524/230771926-67ed188b-655a-4b2f-828b-a46c84e5e432.png)


### 👍 Expected behavior

### Unbound length
I suggest to apply decorators like `@Length(MIN, MAX)` for each DTO. Every input should have defined **practical** boundaries.

Fix can be tricky because it's hard to determine practical length and can break application for existing users (who have for some reason long names/identifiers).

### Lack of trim
I think inputs for things like names and identifiers should be transformed by using `.trim()` String method.

```ts
import { Transform } from 'class-transformer';

export const Trim = () => Transform(({ value }) => value?.trim());
```
We can apply this for each DTO.

Obviously not every string input should be trimmed - I would leave password as it is and fields where whitespace matters (html content, descriptions).

The fix should be implemented carefully, because it can break the application for users who previously created names with leading whitespaces. I will ""think"" about them in my PR.

### 👎 Actual Behavior with Screenshots

## Unbound length
I generated 88886 bytes name.
 
![image](https://user-images.githubusercontent.com/43048524/230773657-50daffdc-5a15-45aa-9632-5b820ea7aeed.png)

![image](https://user-images.githubusercontent.com/43048524/230772455-43809ccb-ac99-46de-a433-68df1f29f1b3.png)

![image](https://user-images.githubusercontent.com/43048524/230773621-11a51842-9121-4545-ac90-6e3963641ea6.png)


## Lack of Trim
![bypass](https://user-images.githubusercontent.com/43048524/230769634-10dd153e-ecae-4ec4-8d05-72120b8e317f.png)

![image](https://user-images.githubusercontent.com/43048524/230769701-f2776035-f780-451b-a0aa-621b8d41e309.png)


### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-2074](https://linear.app/novu/issue/NV-2074/🐛-bug-report-validation-problems)</sub>",,
1634402360,3064,[NV-1891] 🐛 Bug Report:  /subscribers/me/preferences/0 gives a 500 error,"### 📜 Description

/subscribers/{subscriberId}/preferences/0 gives a 500 error 

Logs:
```
 [Nest] 18  - 03/21/2023, 5:04:58 PM   ERROR [ExceptionsHandler] Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
     at new BSONTypeError (/usr/src/app/node_modules/.pnpm/bson@4.7.2/node_modules/bson/src/error.ts:16:5)
     at new ObjectId (/usr/src/app/node_modules/.pnpm/bson@4.7.2/node_modules/bson/src/objectid.ts:88:15)
     at /usr/src/app/libs/dal/dist/repositories/message/message.repository.js:188:32
     at Array.map (<anonymous>)
     at MessageRepository.<anonymous> (/usr/src/app/libs/dal/dist/repositories/message/message.repository.js:187:37)
     at Generator.next (<anonymous>)
     at /usr/src/app/libs/dal/dist/repositories/message/message.repository.js:8:71
     at new Promise (<anonymous>)
     at __awaiter (/usr/src/app/libs/dal/dist/repositories/message/message.repository.js:4:12)
     at MessageRepository.changeStatus (/usr/src/app/libs/dal/dist/repositories/message/message.repository.js:173:16)
     at MarkMessageAs.<anonymous> (/usr/src/app/apps/api/dist/webpack:/@novu/api/src/app/widgets/usecases/mark-message-as/mark-message-as.usecase.ts:27:34)
     at Generator.next (<anonymous>)
     at fulfilled (/usr/src/app/apps/api/dist/main.js:28205:58)
     at runMicrotasks (<anonymous>)
     at processTicksAndRejections (node:internal/process/task_queues:96:5)
```
When I pass in an appropriate index I get 500 too like
/subscribers/{subscriberId}/preferences/000000000000000000000001
Logs show
```
 [Nest] 18  - 03/21/2023, 5:21:52 PM   ERROR [ExceptionsHandler] Cannot read properties of null (reading 'steps')
 TypeError: Cannot read properties of null (reading 'steps')
     at GetSubscriberTemplatePreference.<anonymous> (/usr/src/app/apps/api/dist/webpack:/@novu/api/src/app/subscribers/usecases/get-subscriber-template-preference/get-subscriber-template-preference.usecase.ts:65:41)
     at Generator.next (<anonymous>)
     at /usr/src/app/apps/api/dist/main.js:23856:71
     at new Promise (<anonymous>)
     at __awaiter (/usr/src/app/apps/api/dist/main.js:23852:12)
     at GetSubscriberTemplatePreference.queryActiveChannels (/usr/src/app/apps/api/dist/main.js:23901:16)
     at GetSubscriberTemplatePreference.<anonymous> (/usr/src/app/apps/api/dist/webpack:/@novu/api/src/app/subscribers/usecases/get-subscriber-template-preference/get-subscriber-template-preference.usecase.ts:28:39)
     at Generator.next (<anonymous>)
     at /usr/src/app/apps/api/dist/main.js:23856:71
     at new Promise (<anonymous>)
     at __awaiter (/usr/src/app/apps/api/dist/main.js:23852:12)
     at GetSubscriberTemplatePreference.execute (/usr/src/app/apps/api/dist/main.js:23873:16)
     at UpdateSubscriberPreference.<anonymous> (/usr/src/app/apps/api/dist/webpack:/@novu/api/src/app/subscribers/usecases/update-subscriber-preference/update-subscriber-preference.usecase.ts:67:55)
     at Generator.next (<anonymous>)
     at fulfilled (/usr/src/app/apps/api/dist/main.js:26346:58)
     at runMicrotasks (<anonymous>)
```

### 👟 Reproduction steps

curl PATCH {base url}/subscribers/{subscriberId}/preferences/0
curl PATCH {base url}/subscribers/{subscriberId}/preferences/000000000000000000000001

### 👍 Expected behavior

Get 404


### 👎 Actual Behavior with Screenshots

Got 500 errros

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-1891](https://linear.app/novu/issue/NV-1891/🐛-bug-report-subscribersmepreferences0-gives-a-500-error)</sub>",,
1623903582,3016,[NV-1842] 🐛 Bug Report: useFetchNotifications doesn't allow to use useMarkNotificationsAs,"### 📜 Description

When i try to use the function `markNotificationAs`  exposed by `useMarkNotificationsAs` the application return an error but the notification state is update

```
client.js?5139:1 TypeError: Cannot read properties of undefined (reading 'pages')
    at eval (index.js?600e:1:17571)
    at functionalUpdate (utils.mjs?c391:8:1)
    at QueryClient.setQueryData (queryClient.mjs?10f3:91:34)
    at eval (queryClient.mjs?10f3:107:6)
    at Array.map (<anonymous>)
    at eval (queryClient.mjs?10f3:105:31)
    at Object.batch (notifyManager.mjs?41b3:20:1)
    at QueryClient.setQueriesData (queryClient.mjs?10f3:105:12)
    at Object.onSuccess (index.js?600e:1:17518)
    at Mutation.execute (mutation.mjs?9f7c:141:1)
```

### 👟 Reproduction steps


```
  const {
    data: notifications,
    hasNextPage,
    isFetching,
    refetch,
    fetchNextPage
  } = useFetchNotifications({ query: { feedIdentifier: 'app' } });

......

const { markNotificationsAs } = useMarkNotificationsAs();

const onClick = async () => {
  if (!notification?.seen) {
    markNotificationsAs({
      seen: true,
      read: false,
      messageId: notification?._id
    });
  }
};
```

Invoking onClick starts the api call and the state of the notification is updated on refresh but the function return an error

### 👍 Expected behavior

Call the function shoud not throw errors

### 👎 Actual Behavior with Screenshots

Click on the unseen notification to mark as seen throw the console error

![image](https://user-images.githubusercontent.com/55290106/225077965-8a9a7442-b028-4077-9016-6eff918b19d9.png)


### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1842](https://linear.app/novu/issue/NV-1842/🐛-bug-report)</sub>",,
1622847889,3010,[NV-1838] 🐛 Bug Report: tlsOptions are not mapped to NodeMailer integration,"### 📜 Description

When a user tries to set tlsOptions for an integration via the UI such as `{ ""rejectUnauthorized"": false }` it seems that it is not written to the DB and is not propagated to the nodemailer integration.

It seems that the NodeMailer config for tls is always set to `undefined` here: https://github.com/novuhq/novu/blob/4727c8eda6228dea4f4f48c583c081ba292a41a2/providers/nodemailer/src/lib/nodemailer.provider.ts#L58

### 👟 Reproduction steps

1. Go to integrations
2. Select Custom SMTP 
3. Set the host, port, `secure=true` and `tlsOptions={ ""rejectUnauthorized"": false }`
4. Click ""save""

### 👍 Expected behavior

1. When the integration is opened again, the `tlsOptions` text field should contain the value that was saved, i.e. it should not be empty
2. The `tlsOptions` should be used in the NodeMailer integration


### 👎 Actual Behavior with Screenshots

![image](https://user-images.githubusercontent.com/113710913/224920321-401c55ec-095d-4e67-8bfd-87fe2149a4cf.png)


![image](https://user-images.githubusercontent.com/113710913/224920350-c623726a-e60d-4248-ac25-75b6e4a34c25.png)


### 📃 Provide any additional context for the Bug.

With this bug, it is not possible to test out `novu` in productive environments of intranets that have their own internal SMTP servers :( 

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1838](https://linear.app/novu/issue/NV-1838/🐛-bug-report-tlsoptions-are-not-mapped-to-nodemailer-integration)</sub>",,
1616898749,2986,[NV-1822] 🚀 Feature: Add ability to close widget popover after user click notification item on `@novu/notification-center`,"### 🔖 Feature description

On v0.9.0, we can close notification popover using  `onWidgetClose ` provide by hook.

```js
import { useNotifications } from '@novu/notification-center';

const { onWidgetClose } = useNotifications();
```

But later from [v0.11.0](https://github.com/novuhq/novu/releases/tag/v0.11.0), this function has been removed. These prevent us from update to latest version, since we cannot handle close widget popover.

**Edited:** 
> `onWidgetClose` is a callback that is triggered when the popover is about to close... it's not the function you can trigger to close it. —  Paweł T.

I know that is not correct ways and thing is not working properly but that the only thing I can find.




### 🎤 Why is this feature needed ?

> Ideally the Popover should be closed on any notification click. This is common user behaviour seen everywhere on the web. — [arjunbharti](https://github.com/novuhq/novu/issues/2439)



### ✌️ How do you aim to achieve this?

This should be possible by having props to handle closing popver after `onNotificationClick()` event or a hook function to close notification popover.

### 🔄️ Additional Information

I've already checked related issues https://github.com/novuhq/novu/issues/2439, but does not provide much help.

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1822](https://linear.app/novu/issue/NV-1822/🚀-feature-add-ability-to-close-widget-popover-after-user-click)</sub>",,
1615259554,2978,[NV-1819] 🚀 Feature: hash reset tokens to improve security,"### 🔖 Feature description

This is an opinion based issue, but I think it's worth discussing. I have observed that Novu stores reset tokens as plain text in the database. I think hashing reset tokens can increase security in the event of a database breach as accounts with an active reset token will be exposed.

### 🎤 Why is this feature needed ?

In case of database breach accounts with an active reset token will be exposed. Exposed reset tokens can be used to reset passwords by attackers.


### ✌️ How do you aim to achieve this?

### Reset password request
1. Generate SHA256 hash from generated reset token
2. Store hashed token in database
3. Send to the user plain reset token

### Reset password
1. Take plain reset token from the body
4. Hash reset token with SHA256
5. Use hashed token to query database


### Challenges
It will break tests because we cannot get plain reset token anymore.
```ts
  it('should change a password after reset', async () => {
    const { body } = await session.testAgent.post('/v1/auth/reset/request').send({
      email: session.user.email,
    });

    expect(body.data.success).to.equal(true);
    const foundUser = await userRepository.findById(session.user._id);

    const { body: resetChange } = await session.testAgent.post('/v1/auth/reset').send({
      password: 'ASd3ASD$Fdfdf',
      // resetToken is hashed and test will fail
      token: foundUser.resetToken,
    });

    expect(resetChange.data.token).to.be.ok;

```

### My suggestions
I think it's fine to implement this maybe in repository layer? It's all about storage.

#### Ways to avoid broken tests:
- some kind of field in `UserSchema` like `_plainResetToken` and could be set only in testing environments.
- hash only in production environment?

```ts
export class UserRepository extends BaseRepository<UserDBModel, UserEntity> {
  constructor() {
    super(User, UserEntity);
  }

  private hashResetToken(token: string) {
    if (process.env.NODE_ENV === 'prod') {
      return createHash('sha256').update(token).digest('hex');
    }
    // in tests we will be able to obtain plain token
    return token;
  }

  async findUserByToken(token: string) {
    return await this.findOne({
      resetToken: hashResetToken(token),
    });
  }

  async updatePasswordResetToken(userId: string, token: string, resetTokenCount: IUserResetTokenCount) {
    return await this.update(
      {
        _id: userId,
      },
      {
        $set: {
          resetToken: hashResetToken(token),
          resetTokenDate: new Date(),
          resetTokenCount,
        },
      }
    );
  }
```

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-1819](https://linear.app/novu/issue/NV-1819/🚀-feature-hash-reset-tokens-to-improve-security)</sub>",,
1613712496,2967,[NV-1818] 🐛 Bug Report: APNS production toggle can't be turned on (v 0.12.0),"### 📜 Description

In APNS provider there is a `Production` toggle that, as far as I can tell, defines if the notification will be sent to sandbox or production. This toggle cannot be turned on using the UI interface.

### 👟 Reproduction steps

1. Open APNS provider
2. Try to click on `Production` toggle button

### 👍 Expected behavior

Production mode should be turned on.

### 👎 Actual Behavior with Screenshots

Toggle button is not clickable.

<img width=""587"" alt=""Screenshot 2023-03-07 at 5 35 53 PM"" src=""https://user-images.githubusercontent.com/124047254/223471364-5ed99ecf-08a9-4631-b978-82a2e6cd8e9c.png"">


### 📃 Provide any additional context for the Bug.

The only way to have it turned on is by creating the APNS provider using the provided API.
`secure` field is the one that is mapped to the `Production` toggle.

```
{
    ""providerId"": ""apns"",
    ""channel"": ""push"",
    ""credentials"": {
        ""secretKey"": ""-----BEGIN PRIVATE KEY-----xxxxxxx-----END PRIVATE KEY-----"",
        ""apiKey"": ""xxxxxxxx"",
        ""projectName"": ""xxxxxxxxx"",
        ""applicationId"": ""com.aryansbtloe.apns-tester.sample.ios"",
        ""secure"": true
        },
    ""active"": true,
    ""check"": true
}
```

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1818](https://linear.app/novu/issue/NV-1818/🐛-bug-report-apns-production-toggle-cant-be-turned-on-v-0120)</sub>",,
1611917918,2957,[NV-1811] 🚀 Feature: Notification markAs,"### 🔖 Feature description

A way to mark messages that share the same notificationId as seen/unseen and read/unread using the same markAs options that the https://github.com/novuhq/novu/blob/4177c711c9876177a6ea83d69994769b9ba35e85/apps/api/src/app/subscribers/subscribers.controller.ts#L426 endpoint uses.

### 🎤 Why is this feature needed ?

Consider the following template and scenario:

![image](https://user-images.githubusercontent.com/5090577/223184612-df953a3a-55d5-4c95-9f10-f5862561532f.png)

With the current implementation of Novu in a multi device platform where a user is logged into both a mobile device and a web portal. When a user gets a push notification and opens the mobile app from that push notification the user has technically seen that notification now, but there is no way to mark the `in-app` channel message that links to that notification group as read since they have different messageId's. This would cause the user to still see the same notification as unseen on the web portal even though they have seen the notification on the mobile side via the push notification. This same scenario applies to email as well. 

This feature would allow developers to mark the other messages that share the same `notificationId` (notification message group) as the push notification as seen. 

### ✌️ How do you aim to achieve this?

The preferred solution would be to create an endpoint similar to https://github.com/novuhq/novu/blob/4177c711c9876177a6ea83d69994769b9ba35e85/apps/api/src/app/subscribers/subscribers.controller.ts#L426 and use `notificationId` instead of `messageId`. 

Another solution would be to modify that endpoint to also accept a bool param that would mark the other messages that share the same `notificationId` according to the markAs param. 

The first would be ideal with the second being a ""nice to have"" and would need to make sure that the name of param used is concise enough to tell the user what it does.

Additionally the push notification payload would have to be modified to include the notificationId.

### 🔄️ Additional Information

There isn't a performant way to handle this scenario with the current set of endpoints. One solution is to pull all the messages and loop through them to find the ones that share the same `notificationId` and mark those messages as seen. This solution definitely is not ideal and does not scale. 

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-1811](https://linear.app/novu/issue/NV-1811/🚀-feature-notification-markas)</sub>",,
1609860852,2941,[NV-1804] 🐛 Bug Report: Distributed Lock System Doesn't Work With Redis Password,"### 📜 Description

The distributed lock system does not support Redis passwords like the rest of the app does. This is because [getRedisUrl](https://github.com/novuhq/novu/blob/next/apps/api/src/app/shared/services/distributed-lock/distributed-lock.service.ts#L12) only uses `process.env.REDIS_HOST` and `process.env.REDIS_PORT`.

### 👟 Reproduction steps

1. Set a Redis password
2. Start the API project

### 👍 Expected behavior

It should allow you to have a Redis password like the rest of the app.

### 👎 Actual Behavior with Screenshots

```text
[ioredis] Unhandled error event: ReplyError: NOAUTH Authentication required.
```

### 📃 Provide any additional context for the Bug.

I fixed it already, just opening an issue to reference in the PR.

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-1804](https://linear.app/novu/issue/NV-1804/🐛-bug-report-distributed-lock-system-doesnt-work-with-redis-password)</sub>",,
1592347189,2869,[NV-1745] 🐛 Bug Report: Use more fields of user in identify service,"### 📜 Description

It seems we can add more fields about users in Novu DB while identifying as I can see in TS `ISubscriberPayload` interface.
```ts
export interface ISubscriberPayload {
    firstName?: string;
    lastName?: string;
    email?: string;
    phone?: string;
    avatar?: string;
    locale?: string;
    [key: string]: string | string[] | boolean | number | undefined;
}
```
But it doesn't work as well as expected and just reserved fields would be inserted.
When I retrieve the User in Novu, the custom fields don't retrieve.  for example, we want to use some device information in identifying services such as these props:
- birthday
- isBanned
- registeredAt
- appVersion
- manufacturer
- system
- model
- isAndroid

You may be asking me why? I'll tell you, assume that I want to send a promotion push to every android device by ___manufacturer___ or send a birthday message push to every user that their birthday is on x day. so How can I do this? I used the Novu to manage all these things, not just the system that manages multi providers. Every Marketing team needs this critical feature to communicate or engage more and more with their users.

### 👟 Reproduction steps

Try to use custom fields in ```identify``` SDK method.

### 👍 Expected behavior

All custom fields should be added to Novu DB and should be visible in Admin Panel and retrievable by ```getUser``` SDK's method.

### 👎 Actual Behavior with Screenshots

![Screenshot from 2023-02-20 22-46-32](https://user-images.githubusercontent.com/9049092/220184561-b30433a1-c693-4de8-8daa-328fe92c136c.jpg)


### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-1745](https://linear.app/novu/issue/NV-1745/🐛-bug-report-use-more-fields-of-user-in-identify-service)</sub>",,
1590645103,2835,[NV-1727] 🚀 Feature: A python wrapper for the Novu API,"### 🔖 Feature description

Implementation of a python wrapper to communicate quickly with the Novu API in Python projects

This is not really a feature request as we have already started the implementation, we mainly want to see with you the following issues:

* Do you want to transfer the project to your organization and take over the organization of the project?
* We were using the name ""Novu"" for the client for simplicity, but I think it's wrong. If you want to leave the repository isolated for the moment, we will probably have to see this point (change the name? or make an exemption under conditions?)
* See if you want to warn your python users that an unofficial client exists and that it may be interesting for them to use it

You can take a look at this project right here https://github.com/SpikeeLabs/novu-python. At the time I create this issue, the developments are still being validated by other developers in the alpha branch (and one of them has raised the licensing issue).

### 🎤 Why is this feature needed ?

As part of our Python project (and more specifically our Django microservices), we needed (SpikeeLabs) to implement a client to quickly communicate with your API.

The two main features of this client for us were:

* To be able to import a predefined notification template for our developers to store in each microservice (the microservice itself defines its notification flows)
* To be able to trigger these flows via a trigger.

In this context, I started the implementation of the latter based on:

* The API that you have defined via the openapi.yaml contract (https://api.novu.co/api/)
* Tests directly via Postman to check against reality (the contract has several errors)
* Typescript code reviews for the tricky cases and those I couldn't test myself (push notification for example)

Because I feel it can be useful to everyone, we put it in open source on Github, Pypi, and Readthedocs (not published because still in alpha).


### ✌️ How do you aim to achieve this?

The wrapper is built as follows:

* Definition of the objects that the API returns as DTO (https://en.wikipedia.org/wiki/Data_transfer_object)
* Definition of enumerations via python enumerations
* Definition of wrappers per resource, allowing interaction with the different endpoints of the API

### 🔄️ Additional Information

We also looked at the implementation you had started here https://github.com/novuhq/python/tree/initial-release, but you had several blocks on our side to exploit the latter:

* The project is in an abandoned state for 1 year
* We don't think it's your priority right now

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-1727](https://linear.app/novu/issue/NV-1727/🚀-feature-a-python-wrapper-for-the-novu-api)</sub>",,
1584950486,2767,[NV-1680] 🐛 Bug Report: Failed to Parse Source Maps,"### 📜 Description

Hundreds of webpack _warnings_ relating to parsing source maps in a fresh `create-react-app` project.

### 👟 Reproduction steps

1. Create new react app with `npx create-react-app my-app --template typescript`
2. Install Notification Center `npm i @novu/notification-center`
3. Place the `<NovuProvider subscriberId=""subscriberId"" applicationIdentifier=""appId""></NovuProvider>` anywhere, with anything (or nothing) as children.
4. Run the app with `npm run start`


### 👍 Expected behavior

I would expect to not have these errors in a fresh _(or any)_ project.

### 👎 Actual Behavior with Screenshots

![image](https://user-images.githubusercontent.com/30296275/218880859-99f48f42-0a01-4853-94a0-241842d4c1e4.png)

### 📃 Provide any additional context for the Bug.

These errors no longer appear when `GENERATE_SOURCEMAP=false`, however, I would like to keep source maps enabled if possible. They are just warnings, so it does not affect the application, just litters the console with warnings (156 in this case)

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1680](https://linear.app/novu/issue/NV-1680/🐛-bug-report-failed-to-parse-source-maps)</sub>",,
1583338066,2756,[NV-1670] 🐛 Bug Report: Cannot filter steps by custom subscriber data,"### 📜 Description

Hi - first time contributing, so please be gracious! 

I noticed that we're not able to filter event trigger steps by custom subscriber data. In the following screenshot, if a subscriber has custom attributes `{customKey: customValue}` and the event is triggered to them, they will not receive the notification. 

![Screenshot 2023-02-13 at 4 57 36 PM](https://user-images.githubusercontent.com/37708620/218610595-1267ad2d-0dcd-4338-8bdc-e9885a02d505.png)


### 👟 Reproduction steps

1. Create a subscriber with custom attributes, eg `""data"": { ""customKey"": ""customValue"" }`
2. Add a step filter to a notification template as the above screenshot
3. Trigger the notification to the subscriber

### 👍 Expected behavior

I expect the app to apply step filters to custom subscriber data. In the scenario described above, a subscriber with matching customKey/customValue pair should receive the notification. 

### 👎 Actual Behavior with Screenshots

If you add a filter for `data.customKey`, `EQUALS`, `customValue`, and there is a subscriber with `data.customKey: customValue`, that subscriber will not receive a notification from the event. 

![Screenshot 2023-02-13 at 5 06 34 PM](https://user-images.githubusercontent.com/37708620/218612330-09af5581-a727-4d69-8024-85fa1a935245.png)

It's not pictured, but the same happens if I use  `customValue` instead of `data.customValue` as the key in the step filter. 

### 📃 Provide any additional context for the Bug.

I may be missing something since I'm new to this codebase, but it looks like a one-line code change in the `processFilterEquality(variables, fieldFilter, filterProcessingDetails)` function in 
 `api/src/app/events/usecases/trigger-event/message-matcher.service.ts`.

We currently extract the field filter value from the subscriber data using `_.get(variables, [fieldFilter.on, fieldFilter.field])` where 
- `variables` contains the keys: `payload`, `subscriber`, and `webhook` 
- `fieldFilter.on` contains the string value 'subscriber' or 'payload'
- `fieldFilter.field`  contains user input to search by (in the above example, `data.customKey`). 

lodash .get() can iterate through the keys of an object with either a string (eg `""key1[0].key2.key3""`) or with an array (eg `[""key1"", ""0"", ""key2"", ""key3]`). The current implementation uses an array, but since the user passes a string input (eg `""data.customKey""`), we call the function as `_.get( {...}, [""subscriber"", ""data.customKey""] )`, using a mix of array and string values to define the path. It can be fixed if we build a single string for the path (`""subscriber.data.customKey""`) or if we `.split('.')` the field and build an array for the path (`[""subscriber"", ""data"", ""customKey""]`)

Locally, I replaced 
```ts
const actualValue = _.get(variables, [fieldFilter.on, fieldFilter.field]);
```
with 
```ts
const actualValue = _.get(variables, `${fieldFilter.on}.${fieldFilter.field}`);
```
and it works as expected - but I haven't tested it very thoroughly.


### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-1670](https://linear.app/novu/issue/NV-1670/🐛-bug-report-cannot-filter-steps-by-custom-subscriber-data)</sub>",,
1574248784,2692,[NV-1640] Email provider details are viewable,"Hi,

I just want to know if it possible to to hide the email providers access key ID and secret access key? I could see those details can be taken even after the integration. Any security breaches will it result in? 

If somebody entered this panel with my login information, they could quickly obtain the access token and password from the integration store because they are both shown.
It would be much better if, after adding the information, at least the password session could not be viewed.

Anyone can quickly read the ID and secret access key by clicking on that eye symbol. 

![image](https://user-images.githubusercontent.com/114569256/217247529-e21bfa3e-4df0-49d4-8f29-b228b2ec7c85.png)




<sub>[NV-1640](https://linear.app/novu/issue/NV-1640/email-provider-details-are-viewable)</sub>",,
1570925400,2675,[NV-1631] 🐛 Bug Report: MongooseServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017,"### 📜 Description

i have a mongo installed, and i tried with MONGO_URL=mongodb://mongodb/novu-db, same error
i haven't did any changes, docker-compose files and .env 's are default
.
.
.
ws         | [Nest] 537   - 02/04/2023, 11:28:41 AM   [ExceptionHandler] connect ECONNREFUSED 127.0.0.1:27017 +30092ms
ws         | MongooseServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017
ws         |     at NativeConnection.Connection.openUri (/usr/src/app/node_modules/.pnpm/mongoose@6.4.6/node_modules/mongoose/lib/connection.js:819:32)
ws         |     at /usr/src/app/node_modules/.pnpm/mongoose@6.4.6/node_modules/mongoose/lib/index.js:379:10
ws         |     at /usr/src/app/node_modules/.pnpm/mongoose@6.4.6/node_modules/mongoose/lib/helpers/promiseOrCallback.js:32:5
ws         |     at new Promise (<anonymous>)
ws         |     at promiseOrCallback (/usr/src/app/node_modules/.pnpm/mongoose@6.4.6/node_modules/mongoose/lib/helpers/promiseOrCallback.js:31:10)
ws         |     at Mongoose._promiseOrCallback (/usr/src/app/node_modules/.pnpm/mongoose@6.4.6/node_modules/mongoose/lib/index.js:1224:10)
ws         |     at Mongoose.connect (/usr/src/app/node_modules/.pnpm/mongoose@6.4.6/node_modules/mongoose/lib/index.js:378:20)
ws         |     at DalService.<anonymous> (/usr/src/app/libs/dal/dist/dal.service.js:21:45)
ws         |     at Generator.next (<anonymous>)
ws         |     at /usr/src/app/libs/dal/dist/dal.service.js:8:71
ws         |     at new Promise (<anonymous>)
ws         |     at __awaiter (/usr/src/app/libs/dal/dist/dal.service.js:4:12)
ws         |     at DalService.connect (/usr/src/app/libs/dal/dist/dal.service.js:16:16)
ws         |     at /usr/src/app/apps/ws/src/shared/shared.module.ts:44:24
ws         |     at Generator.next (<anonymous>)
ws         |     at /usr/src/app/apps/ws/dist/src/shared/shared.module.js:14:71
ws         | 2023-02-04T11:28:41: PM2 log: App [main:0] exited with code [1] via signal [SIGINT]
ws         | 2023-02-04T11:28:41: PM2 log: App [main:0] starting in -fork mode-
ws         | 2023-02-04T11:28:41: PM2 log: App [main:0] online


### 👟 Reproduction steps

docker-compose -f ./local/deployment/docker-compose.yml up

### 👍 Expected behavior

i have no idea

### 👎 Actual Behavior with Screenshots

mongo is not connecting to any services

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1631](https://linear.app/novu/issue/NV-1631/🐛-bug-report-mongooseserverselectionerror-connect-econnrefused)</sub>",,
1568965602,2673,[NV-1629] 🐛 Bug Report: @novu/notification-center missing react-query dependency,"### 📜 Description

I'm using the react component and it throws an error, it's missing `react-query`;
```js
Error: Cannot find module 'react-query'
Require stack:
- /.../build/index.js
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:1039:15)
    at Function.Module._load (node:internal/modules/cjs/loader:885:27)
    at Module.require (node:internal/modules/cjs/loader:1105:19)
    at require (node:internal/modules/cjs/helpers:103:18)
    at node_modules/@novu/notification-center/dist/cjs/index.js (/.../build/index.js:26:35)
```


### 👟 Reproduction steps

1. Install `@novu/notification-center` and try to use the react popover component;

### 👍 Expected behavior

It should work without asking for a peer dependency to be installed;

### 👎 Actual Behavior with Screenshots

![image](https://user-images.githubusercontent.com/11050840/216479732-5b051b50-9bc8-4846-b8d2-a58fc36cf644.png)


### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1629](https://linear.app/novu/issue/NV-1629/🐛-bug-report-novunotification-center-missing-react-query-dependency)</sub>",,
1568317871,2671,[NV-1628] 🐛 Bug Report: Invalid openapi spec,"### 📜 Description

Thank you for adding an API spec in https://github.com/novuhq/novu/issues/571 . Unfortunately when trying to generate a client against it we discovered the spec has some validation errors. They seem like minor problems but I'd figure it was good to raise it.

### 👟 Reproduction steps

1. On a running api server navigate to /api-yaml or /api-json and copy the output
2. Paste it in an openapi spec validator, for example https://editor.swagger.io/
3. As you can see in the output of the validator failures pop up. See actual behavior for logs

### 👍 Expected behavior

It should not produce any validation errors.

### 👎 Actual Behavior with Screenshots

0.11.0 errors
```
Semantic error at paths./v1/messages/{messageId}
Declared path parameter ""messageId"" needs to be defined as a path parameter at either the path or operation level

Structural error at components.schemas.UpdateEnvironmentRequestDto.properties.dns.properties.inboundParseDomain.required
should be an array of property names required within an object schema

Structural error at components.schemas.TopicPayloadDto.properties.type.enum
should NOT have fewer than 1 items
limit: 1

Structural error at components.schemas.TriggerEventRequestDto.properties.to.oneOf.1.type
should be equal to one of the allowed values
allowedValues: array, boolean, integer, number, object, string

Structural error at components.schemas.TriggerEventRequestDto.properties.to.oneOf.3.type
should be equal to one of the allowed values
allowedValues: array, boolean, integer, number, object, string

Structural error at components.schemas.TriggerEventRequestDto.properties.to.oneOf.5.type
should be equal to one of the allowed values
allowedValues: array, boolean, integer, number, object, string

Structural error at components.schemas.MessageResponseDto.properties.content.oneOf.0.type
should be equal to one of the allowed values
allowedValues: array, boolean, integer, number, object, string 
```

0.10.1 errors
```
Semantic error at paths./v1/messages/{messageId}
Declared path parameter ""messageId"" needs to be defined as a path parameter at either the path or operation level

Structural error at components.schemas.TopicPayloadDto.properties.type.enum
should NOT have fewer than 1 items
limit: 1

Structural error at components.schemas.TriggerEventRequestDto.properties.to.oneOf.1.type
should be equal to one of the allowed values
allowedValues: array, boolean, integer, number, object, string

Structural error at components.schemas.TriggerEventRequestDto.properties.to.oneOf.3.type
should be equal to one of the allowed values
allowedValues: array, boolean, integer, number, object, string

Structural error at components.schemas.TriggerEventRequestDto.properties.to.oneOf.5.type
should be equal to one of the allowed values
allowedValues: array, boolean, integer, number, object, string

Structural error at components.schemas.MessageResponseDto.properties.content.oneOf.0.type
should be equal to one of the allowed values
allowedValues: array, boolean, integer, number, object, string
```

### 📃 Provide any additional context for the Bug.

Found in ghcr.io/novuhq/novu/api:0.10.1, exact same issues also present in  0.11.0

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1628](https://linear.app/novu/issue/NV-1628/🐛-bug-report-invalid-openapi-spec)</sub>",,
1564171840,2657,[NV-1620] 🐛 Bug Report: Update subscriber preferences expected payload and validation mismatch,"### 📜 Description

Some of our users have reported that the endpoint `PATCH /subscribers/:subscriberId/preferences/:templateId` is not working properly.

The endpoint controller logic ([https://github.com/novuhq/novu/blob/1297d6115e1450eb5a9085798abd1dd3f028d620/apps/api/src/app/subscribers/subscribers.controller.ts#L304](https://github.com/novuhq/novu/blob/1297d6115e1450eb5a9085798abd1dd3f028d620/apps/api/src/app/subscribers/subscribers.controller.ts#L304)) is expecting a payload in the shape:

```
interface Body {
  channel?: ChannelTypeEnum;
  enabled?: boolean;
}
```

But the validation applied is reused from the Widget module DTO `UpdateSubscriberPreferenceRequestDto`:
[https://github.com/novuhq/novu/blob/1297d6115e1450eb5a9085798abd1dd3f028d620/apps/api/src/app/widgets/dtos/update-subscriber-preference-request.dto.ts#L12](https://github.com/novuhq/novu/blob/1297d6115e1450eb5a9085798abd1dd3f028d620/apps/api/src/app/widgets/dtos/update-subscriber-preference-request.dto.ts#L12)
There the type assigned to `channel` is `ChannelPreference`.
[https://github.com/novuhq/novu/blob/2d3050a13b5dfc77b0d66e34ed2eac8a25299631/apps/api/src/app/shared/dtos/channel-preference.ts#L4](https://github.com/novuhq/novu/blob/2d3050a13b5dfc77b0d66e34ed2eac8a25299631/apps/api/src/app/shared/dtos/channel-preference.ts#L4)
Which is expected to be a nested object in the shape of:

```
export class ChannelPreference {
  type: ChannelTypeEnum;
  enabled: boolean;
}
```

### 👟 Reproduction steps

In any environment to do a cURL call to the API.
For example, in local environment:

```
curl -X PATCH \                                                     
 -H ""Authorization: ApiKey <API_KEY>"" \
 -H ""Content-Type: application/json"" \
 -d '{
      ""channel"": ""email"",
      ""enabled"": true
    }' \
http://localhost:3000/v1/subscribers/1/preferences/1
```

This will raise an error:

```
{""statusCode"":400,""message"":[""nested property channel must be either object or array""],""error"":""Bad Request""}%
```

### 👍 Expected behavior

Update the controller to satisfy the validation and follow the same structure as in the Widget module.

### 👎 Actual Behavior with Screenshots

\--

### 📃 Provide any additional context for the Bug.

Test suite for update subscriber preferences is applying a different payload (the one used in Widget module). This means the tests are not accurate. Also we are not checking if the values are updated properly.
We need to increase the test suite robustness to be able to catch these bugs.

### 👀 Have you spent some time to check if this bug has been raised before?

* [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

* [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-1620](https://linear.app/novu/issue/NV-1620/🐛-bug-report-update-subscriber-preferences-expected-payload-and)</sub>",,
1556409433,2603,[NV-1582] 🐛 Bug Report: Node package does not allow data key in overrides,"### 📜 Description

Trying to pass a data key in `fcm` overrides as described by the [docs](https://docs.novu.co/channels/push/fcm) causes type errors because of a missing data key in `ITriggerOverrideFCM` (see [here](https://github.com/novuhq/novu/blob/next/packages/node/src/lib/events/events.interface.ts#L64)).

You get `Object literal may only specify known properties, and 'data' does not exist in type 'ITriggerOverrideFCM`.


### 👟 Reproduction steps

Attempt to use the `data` key as described by the docs:

```
import { Novu } from '@novu/node';

const novu = new Novu(process.env.NOVU_API_KEY);

novu.trigger('event-name', {
  to: {
    subscriberId: '...',
  },
  payload: {
    abc: 'def', // If the notification is a data notification, the payload will be sent as the data
  },
  overrides: {
    fcm: {
      type: 'notification',
      // type: 'data' => will turn this into a FCM data notification, where the payload is sent as a data notification
      data: {
        key: 'value',
        // If type is ""notification"", you can use the ""data"" override to send notification messages with optional data payload
      },
    },
  },
});
```


### 👍 Expected behavior

It should not produce type errors.

### 👎 Actual Behavior with Screenshots

It produces type errors.

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1582](https://linear.app/novu/issue/NV-1582/🐛-bug-report-node-package-does-not-allow-data-key-in-overrides)</sub>",,
1553444615,2577,[NV-1568] 🐛 Bug Report: Wrong providerId stored in jobs collection,"### 📜 Description

When you enable multiple integrations(say discord and sendgrid) then for all jobs it is storing discord as providerId, even for email jobs. Another problem is for delay and digest jobs also storing same providerId(in this case discord).


### 👟 Reproduction steps

1. Create 2 integrations discord and sendgrid
2. Create an email notification 
3. Trigger the email notification created above and observe the jobs table, it is storing providerId as discord.

### 👍 Expected behavior

Expected to store sendgrid as providerId in jobs table

### 👎 Actual Behavior with Screenshots

Storing wrong providerId discord in jobs table

### 🤖 Node Version

16.19

### 📃 Provide any additional context for the Bug.

The problem is with this line:
channelType: ChannelTypeEnum[step.template.type] in src/app/events/usecases/process-subscriber/process-subscriber.usecase.ts
The problem here is using StepTypeEnum values doing reverse lookup in ChannelTypeEnum and that is always returning undefined as string enums does not support reverse lookup. 
Possible fix: we can step.template.type to upper case and /or  change both enums values to upper case.
This fix make sure to record providers for all channels but we still have problem with delay and digest steps, there also it stores one of these providers as providerId, I believe it should store null for those steps? for that we need to add additional logic to skip providerid for those steps?


### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-1568](https://linear.app/novu/issue/NV-1568/🐛-bug-report-wrong-providerid-stored-in-jobs-collection)</sub>",,
1550903036,2561,[NV-1557] 🚀 Feature: Allow pagination handling in refetch method,"### 🔖 Feature description

A way of selecting a number of pages to refetch in novu-notification-center's `refetch` method.

### 🎤 Why is this feature needed ?

I would like to be able to refetch the user's paginated notifications on the specific page they were prior to the refetch action.

Example: When a user has multiple unseen notifications and triggers a `markAsSeen` method in a notification situated in a page different than 0 in the pagination, a `refetch` method is called to update the notifications array and confirm to the user that the notification was indeed marked as seen. But the refetch method resets the page to 0 and, to view that single notification, they would have to load possibly multiple pages. If there was a way to inform the refetch method of how many pages to load at once, the user would likely not even notice the reload, and would be able to keep viewing the notifications from that point on.

### ✌️ How do you aim to achieve this?

I would like to be able to pass a number of pages to refetch as a parameter in the `refetch` method.

Implementation (using Typescript):
```typescript
function refetch({ page: number }) {
  // Refetches on desired page
}
```

Usage (using React and Typescript):
```jsx

const [currentPage, setCurrentPage] = useState(0);

function handleLoadMore() {
  if(hasNextPage) {
    fetchNextPage();
    setCurrentPage(currentPage + 1);
  }
}

function handleMarkAsSeen(notificationId: string) {
  markAsSeen(notificationId);
  refetch({ page: currentPage });
}
```

### 🔄️ Additional Information

I tried manually fetching the pages after the refetch, but calling the fetchNextPage method multiple times in a short period of time caused some wrong behaviors, such as not loading all the desired pages and missing notifications. And even if those behaviors did not happen, calling a fetch method to an API multiple times in a row isn't performatic at all.

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1557](https://linear.app/novu/issue/NV-1557/🚀-feature-allow-pagination-handling-in-refetch-method)</sub>",,
1533948534,2507,[NV-1510] 🚀 Feature: Global Refactoring,"### 🔖 Feature description

Congratulations on topics 🤩, but I think it would be better to have builder pattern under the hood of topics and other API's, and use push and pop of Mongodb instead of fully updating. If you want to add a new user to a topic, you don't have to send the rest of the data constantly. Also it will reduce load to the API.

before:
```typescript
const response = await novu.topics.addSubscribers(topicKey, {
  subscribers: ['subscriber-id-1', 'subscriber-id-2', ...],
});
``` 
after:
```typescript
const responseAdd = await novu.topics.get(topicKey).subscribers.add('subscriber-id-1');
const responseRemove = await novu.topics.get(topicKey).subscribers.remove('subscriber-id-1');
const responseList = await novu.topics.get(topicKey).subscribers.list();
``` 

### 🎤 Why is this feature needed ?

if User join's to the topic it's better to just add the user, instead of retrieve all the data and send it back with additional user.
Reduce API load.
Performance improvements.

### ✌️ How do you aim to achieve this?

using $push and $pop of the Mongodb.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [x] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1510](https://linear.app/novu/issue/NV-1510/🚀-feature-global-refactoring)</sub>",,
1527608469,2464,[NV-1512] 🚀 Feature: Filter topic event based on actor,"### 🔖 Feature description

I am using topics for post comments.

User X makes a comment, other users (A, B) who've already commented before should get a notification.

I should be able to exclude User X from receiving a notification of their own comment when I trigger notification on the topic.


### 🎤 Why is this feature needed ?

This is the correct behavior for topic based notification, and I would definitely want this for the feature.

### ✌️ How do you aim to achieve this?

I'm not 100% sure if this should be the default behavior.

1. We can add `actor` to `MapTriggerRecipientsCommand`, and filter the actor from `mappedTo` by default.
2. or add an optional configuration on `TriggerEventCommand` to skip actor [in this loop](https://github.com/novuhq/novu/blob/next/apps/api/src/app/events/usecases/trigger-event/trigger-event.usecase.ts#L107) if defined and set to true.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-1512](https://linear.app/novu/issue/NV-1512/🚀-feature-filter-topic-event-based-on-actor)</sub>",,
1522623209,2442,"""Subscriber does not have a configured channel"" when attempting to deliver a web push notification","I am submitting a question about how to use Novu in combination with Firebase Cloud Messaging for web browser push notifications.

Hi,
I am using Novu to deliver notifications to the users of my app. In the app, I have a process to sync the users with Novu so that the subscriber list is always up to date whenever my users update or change.

I am interested in delivering web browser push notification to my users, so I have created a notification template and in its workflow I have added a Push step.

I have read through the Novu documentation so I know that in order to deliver push notifications to users, I need to have a provider with the push delivery capability; to my knowledge Novu itself doesn't have the ability to display web notifications. I have selected Firebase Cloud Messaging as the web push notification provider.

In addition to this, I am aware that each subscriber must have an FCM token set as its credential in Novu. I _think_ the way it works is that while Novu does all of the notification triggering and distributing to the providers, the ultimate web notification display is handled by Firebase.

So, if I understand correctly, in my project I need to add the Firebase SDK, generate the FCM token using its APIs, call Novu to tell it the subscriber's FCM token credential is that token and then if I were to use Novu to trigger a notification, it would contact Firebase to tell it to deliver the notification to a subscriber with the given ID and FCM token and the Firebase web SDK in my web app would take care of the notification reception and display.

For a proof of concept, this is how I am getting the FCM token and passing it to Novu as the subscriber credential:
```typescript
import { initializeApp } from 'firebase/app';
import { getMessaging, getToken } from 'firebase/messaging'; 

// Note that there is also a required SW at `public/firebase-messaging-sw.js`
async function installFirebase() {
  // Remove the global single click handler so it never fires ever again
  document.body.removeEventListener('click', installFirebase, true);

  // See https://console.firebase.google.com/u/1/project/…/settings/general
  // Scroll down to Web Apps to find this snippet
  const firebaseConfig = {
    apiKey: ""…"",
    authDomain: ""…"",
    projectId: ""…"",
    storageBucket: ""…"",
    messagingSenderId: ""…"",
    appId: ""…""
  };

  // See https://firebase.google.com/docs/web/setup
  initializeApp(firebaseConfig);

  // See https://firebase.google.com/docs/cloud-messaging/js/client#configure_web_credentials_in_your_app
  // See https://console.firebase.google.com/u/1/project/…/settings/cloudmessaging
  // Scroll down to Web Configuration to find the VAPID key
  const token = await getToken(getMessaging(), { vapidKey: '…' });

  // This calls the Novu API to set the subscriber credential to the FCM token
  await setSubscriberCredentialWithFcmToken(token);
}

function MyApp({ Component, pageProps }: AppProps) {
  // Run the Firebase installation in response to a user gesture to achieve
  // transient activation required for `Notification.requestPermission` used
  // internally by `getToken`
  useEffect(() => document.body.addEventListener('click', installFirebase, true), []);
  …
}
```

This code snippet runs and produces a correct-looking FCM token. I don't think Novu has an API to be able to read out the subscribers credentials back to make sure it got stored to the subscriber correctly, but it does have an API to get the subscriber metadata and every time I call the API to set the subscriber credentials, I see the subscriber's `updatedAt` is bumped, so I am reasonably sure the FCM token is being saved to the subscriber.

However, when I go to the notification workflow and I run a workflow test, passing in the correct subscriber ID (the same used to store the subscriber credential to), I get this error for the Push step:

> Subscriber does not have a configured channel

I searched through the Novu GitHub issues and I have not found any references to this error.

What does this error mean and how can I fix it?",,
1519261141,2426,[NV-1518] 🐛 Bug Report:  Deprecated dependencies,"### 📜 Description

This is a full log of the deprecated dependecies:

```providers/outlook365                     |  WARN  deprecated uuid@3.4.0
providers/plivo                          |  WARN  deprecated uuid@3.4.0
providers/postmark                       |  WARN  deprecated uuid@3.4.0
providers/sendinblue                     |  WARN  deprecated uuid@3.4.0
providers/ses                            |  WARN  deprecated uuid@3.4.0
providers/sms77                          |  WARN  deprecated uuid@3.4.0
providers/sns                            |  WARN  deprecated uuid@3.4.0
providers/sparkpost                      |  WARN  deprecated uuid@3.4.0
providers/telnyx                         |  WARN  deprecated uuid@3.4.0
packages/application-generic             |  WARN  deprecated uuid@3.4.0
providers/ms-teams                       |  WARN  deprecated uuid@3.4.0
providers/discord                        |  WARN  deprecated uuid@3.4.0
providers/apns                           |  WARN  deprecated uuid@3.4.0
packages/nest                            |  WARN  deprecated uuid@3.4.0
providers/burst-sms                      |  WARN  deprecated uuid@3.4.0
providers/clickatell                     |  WARN  deprecated uuid@3.4.0
providers/sendgrid                       |  WARN  deprecated uuid@3.4.0
providers/twilio                         |  WARN  deprecated uuid@3.4.0
providers/expo                           |  WARN  deprecated uuid@3.4.0
providers/emailjs                        |  WARN  deprecated uuid@3.4.0
providers/slack                          |  WARN  deprecated uuid@3.4.0
providers/fcm                            |  WARN  deprecated uuid@3.4.0
providers/firetext                       |  WARN  deprecated uuid@3.4.0
providers/gupshup                        |  WARN  deprecated uuid@3.4.0
providers/termii                         |  WARN  deprecated uuid@3.4.0
providers/infobip                        |  WARN  deprecated uuid@3.4.0
providers/mailersend                     |  WARN  deprecated uuid@3.4.0
providers/mailgun                        |  WARN  deprecated uuid@3.4.0
providers/mailjet                        |  WARN  deprecated uuid@3.4.0
providers/mandrill                       |  WARN  deprecated uuid@3.4.0
providers/netcore                        |  WARN  deprecated uuid@3.4.0
providers/nexmo                          |  WARN  deprecated uuid@3.4.0
providers/nodemailer                     |  WARN  deprecated uuid@3.4.0
providers/outlook365                     |  WARN  deprecated uuid@3.4.0
providers/plivo                          |  WARN  deprecated uuid@3.4.0
providers/postmark                       |  WARN  deprecated uuid@3.4.0
providers/sendinblue                     |  WARN  deprecated uuid@3.4.0
providers/ses                            |  WARN  deprecated uuid@3.4.0
providers/sms77                          |  WARN  deprecated uuid@3.4.0
providers/sns                            |  WARN  deprecated uuid@3.4.0
providers/sparkpost                      |  WARN  deprecated uuid@3.4.0
providers/telnyx                         |  WARN  deprecated uuid@3.4.0
packages/application-generic             |  WARN  deprecated uuid@3.4.0
providers/sendinblue                     |  WARN  deprecated uuid@3.4.0
providers/sparkpost                      |  WARN  deprecated uuid@3.4.0
providers/netcore                        |  WARN  deprecated uuid@3.4.0
providers/nexmo                          |  WARN  deprecated uuid@3.4.0
libs/embed                               |  WARN  deprecated ecstatic@3.3.2
apps/widget                              |  WARN  deprecated ecstatic@3.3.2
apps/web                                 |  WARN  deprecated ecstatic@3.3.2
libs/embed                               |  WARN  deprecated source-map-resolve@0.5.3
 WARN  deprecated chokidar@1.7.0: Chokidar 2 will break on node v14+. Upgrade to chokidar 3 with 15x less dependencies.
 WARN  deprecated fsevents@1.2.13: fsevents 1 will break on node v14+ and could be using insecure binaries. Upgrade to fsevents 2.
libs/dal                                 |  WARN  deprecated querystring@0.2.0
libs/dal                                 |  WARN  deprecated uuid@3.3.2
apps/widget                              |  WARN  deprecated babel-eslint@10.1.0
apps/ws                                  |  WARN  deprecated superagent@7.1.2
apps/webhook                             |  WARN  deprecated superagent@7.1.2
apps/ws                                  |  WARN  deprecated @types/socket.io-parser@3.0.0
apps/webhook                             |  WARN  deprecated @types/socket.io-parser@3.0.0
apps/ws                                  |  WARN  deprecated multer@1.4.2
apps/webhook                             |  WARN  deprecated multer@1.4.2
apps/api                                 |  WARN  deprecated subscriptions-transport-ws@0.11.0
apps/web                                 |  WARN  deprecated core-js@2.6.12
libs/embed                               |  WARN  deprecated core-js@2.6.12
 WARN  deprecated core-js@2.6.12: core-js@<3.23.3 is no longer maintained and not recommended for usage due to the number of issues. Because of the V8 engine whims, feature detection in old core-js versions could cause a slowdown up to 100x even if nothing is polyfilled. Some versions have web compatibility issues. Please, upgrade your dependencies to the actual version of core-js.
libs/embed                               |  WARN  deprecated core-js@2.6.12
providers/mailjet                        |  WARN  deprecated formidable@1.2.6
libs/dal                                 |  WARN  deprecated formidable@1.2.6
libs/testing                             |  WARN  deprecated formidable@1.2.6
providers/sendinblue                     |  WARN  deprecated har-validator@5.1.5
providers/sparkpost                      |  WARN  deprecated har-validator@5.1.5
providers/netcore                        |  WARN  deprecated har-validator@5.1.5
providers/nexmo                          |  WARN  deprecated har-validator@5.1.5
libs/embed                               |  WARN  deprecated har-validator@5.1.5
libs/dal                                 |  WARN  deprecated har-validator@5.1.5
libs/embed                               |  WARN  deprecated urix@0.1.0
apps/web                                 |  WARN  deprecated urix@0.1.0
libs/embed                               |  WARN  deprecated source-map-url@0.4.1
apps/widget                              |  WARN  deprecated source-map-url@0.4.1
libs/embed                               |  WARN  deprecated resolve-url@0.2.1
apps/widget                              |  WARN  deprecated axios@0.19.2
apps/web                                 |  WARN  deprecated axios@0.19.2
apps/widget                              |  WARN  deprecated source-map-resolve@0.6.0
packages/notification-center-angular     |  WARN  deprecated source-map-resolve@0.6.0
apps/widget                              |  WARN  deprecated chokidar@2.1.8
libs/embed                               |  WARN  deprecated w3c-hr-time@1.0.2
 WARN  deprecated @npmcli/move-file@2.0.0: This functionality has been moved to @npmcli/fs
 WARN  deprecated @npmcli/move-file@2.0.0: This functionality has been moved to @npmcli/fs
 WARN  deprecated @npmcli/move-file@2.0.0: This functionality has been moved to @npmcli/fs
 WARN  deprecated @npmcli/move-file@2.0.0: This functionality has been moved to @npmcli/fs
apps/widget                              |  WARN  deprecated svgo@1.3.2
apps/web                                 |  WARN  deprecated svgo@1.3.2
apps/widget                              |  WARN  deprecated @hapi/joi@15.1.1
apps/widget                              |  WARN  deprecated rollup-plugin-babel@4.4.0
apps/ws                                  |  WARN  deprecated apollo-server-core@2.25.3
apps/webhook                             |  WARN  deprecated apollo-server-core@2.25.3
apps/ws                                  |  WARN  deprecated apollo-server-errors@3.3.1
apps/webhook                             |  WARN  deprecated apollo-server-errors@3.3.1
apps/ws                                  |  WARN  deprecated apollo-reporting-protobuf@3.3.1
apps/webhook                             |  WARN  deprecated apollo-reporting-protobuf@3.3.1
apps/ws                                  |  WARN  deprecated apollo-server-caching@3.3.0
apps/webhook                             |  WARN  deprecated apollo-server-caching@3.3.0
apps/ws                                  |  WARN  deprecated apollo-server-env@3.2.0-rc.0
apps/webhook                             |  WARN  deprecated apollo-server-env@3.2.0-rc.0
apps/ws                                  |  WARN  deprecated apollo-server-types@3.5.2
apps/webhook                             |  WARN  deprecated apollo-server-types@3.5.2
apps/ws                                  |  WARN  deprecated apollo-server-core@3.6.7
apps/webhook                             |  WARN  deprecated apollo-server-core@3.6.7
apps/web                                 |  WARN  deprecated sane@4.1.0
apps/widget                              |  WARN  deprecated sane@4.1.0
apps/widget                              |  WARN  deprecated sane@4.1.0
apps/widget                              |  WARN  deprecated sane@4.1.0
apps/widget                              |  WARN  deprecated sane@4.1.0
apps/widget                              |  WARN  deprecated sane@4.1.0
apps/widget                              |  WARN  deprecated flatten@1.0.3
apps/widget                              |  WARN  deprecated flatten@1.0.3
apps/widget                              |  WARN  deprecated flatten@1.0.3
apps/widget                              |  WARN  deprecated flatten@1.0.3
apps/widget                              |  WARN  deprecated flatten@1.0.3
apps/widget                              |  WARN  deprecated flatten@1.0.3
apps/widget                              |  WARN  deprecated flatten@1.0.3
apps/widget                              |  WARN  deprecated flatten@1.0.3
apps/widget                              |  WARN  deprecated flatten@1.0.3
apps/widget                              |  WARN  deprecated flatten@1.0.3
apps/widget                              |  WARN  deprecated flatten@1.0.3
apps/widget                              |  WARN  deprecated @hapi/hoek@8.5.1
apps/widget                              |  WARN  deprecated @hapi/topo@3.1.6
apps/widget                              |  WARN  deprecated @hapi/address@2.1.4
apps/widget                              |  WARN  deprecated @hapi/bourne@1.3.2
apps/ws                                  |  WARN  deprecated apollo-cache-control@0.14.0
apps/webhook                             |  WARN  deprecated apollo-cache-control@0.14.0
apps/ws                                  |  WARN  deprecated apollo-server-errors@2.5.0
apps/webhook                             |  WARN  deprecated apollo-server-errors@2.5.0
apps/ws                                  |  WARN  deprecated apollo-datasource@0.9.0
apps/webhook                             |  WARN  deprecated apollo-datasource@0.9.0
apps/ws                                  |  WARN  deprecated apollo-server-env@3.1.0
apps/webhook                             |  WARN  deprecated apollo-server-env@3.1.0
apps/ws                                  |  WARN  deprecated apollo-reporting-protobuf@0.8.0
apps/webhook                             |  WARN  deprecated apollo-reporting-protobuf@0.8.0
apps/ws                                  |  WARN  deprecated apollo-server-caching@0.7.0
apps/webhook                             |  WARN  deprecated apollo-server-caching@0.7.0
apps/ws                                  |  WARN  deprecated apollo-server-plugin-base@0.13.0
apps/webhook                             |  WARN  deprecated apollo-server-plugin-base@0.13.0
apps/ws                                  |  WARN  deprecated apollo-server-types@0.9.0
apps/webhook                             |  WARN  deprecated apollo-server-types@0.9.0
apps/ws                                  |  WARN  deprecated apollo-tracing@0.15.0
apps/webhook                             |  WARN  deprecated apollo-tracing@0.15.0
apps/ws                                  |  WARN  deprecated graphql-extensions@0.15.0
apps/webhook                             |  WARN  deprecated graphql-extensions@0.15.0
apps/ws                                  |  WARN  deprecated graphql-tools@4.0.8
apps/webhook                             |  WARN  deprecated graphql-tools@4.0.8
apps/ws                                  |  WARN  deprecated subscriptions-transport-ws@0.9.19
apps/webhook                             |  WARN  deprecated subscriptions-transport-ws@0.9.19
apps/ws                                  |  WARN  deprecated apollo-server-env@4.2.1
apps/ws                                  |  WARN  deprecated apollo-server-env@4.2.1
apps/webhook                             |  WARN  deprecated apollo-server-env@4.2.1
apps/webhook                             |  WARN  deprecated apollo-server-env@4.2.1
apps/ws                                  |  WARN  deprecated apollo-server-plugin-base@3.5.2
apps/webhook                             |  WARN  deprecated apollo-server-plugin-base@3.5.2
apps/webhook                             |  WARN  deprecated apollo-datasource@3.3.1
apps/ws                                  |  WARN  deprecated apollo-datasource@3.3.1
Packages: +16 -1
++++++++++++++++-
Downloading registry.npmjs.org/typescript/4.0.8: 9.94 MB/9.94 MB, done
Progress: resolved 33374, reused 5416, downloaded 7, added 15, done
docs prepare$ cd .. && husky install docs/.husky
│ husky - Git hooks installed
└─ Done in 458ms
. prepare$ husky install
│ husky - Git hooks installed
└─ Done in 763ms

dependencies:
+ @babel/core 7.20.5 (7.20.12 is available)
+ acorn 8.8.1
+ cosmiconfig 7.1.0 (8.0.0 is available)
+ fp-ts 2.11.9 (2.13.1 is available)
+ jest-resolve 27.5.1
+ rxjs 6.5.5 (7.8.0 is available)
+ webpack 5.75.0

 WARN  Issues with peer dependencies found
.
├─┬ @nrwl/eslint-plugin-nx
│ ├── ✕ unmet peer @typescript-eslint/parser@~5.10.0: found 5.29.0
│ ├── ✕ unmet peer eslint-config-prettier@^8.1.0: found 7.2.0
│ └─┬ @nrwl/workspace
│   └─┬ @nrwl/linter
│     └── ✕ unmet peer eslint@^8.0.0: found 7.32.0
└─┬ @nrwl/nx-cloud
  └── ✕ unmet peer chalk@4.1.0: found 4.1.2

apps/api
└─┬ nest-raven
  └── ✕ unmet peer @nestjs/common@^8.0.0: found 9.0.2

apps/web
├─┬ @storybook/addon-essentials
│ └─┬ @storybook/addon-docs
│   └── ✕ unmet peer @storybook/react@6.4.19: found 6.4.21
├─┬ less-loader
│ ├── ✕ unmet peer less@""^2.3.1 || ^3.0.0"": found 4.1.2
│ └── ✕ unmet peer webpack@""^2.0.0 || ^3.0.0 || ^4.0.0"": found 5.74.0
├─┬ @mantine/core
│ ├── ✕ unmet peer @mantine/hooks@5.8.4: found 5.7.1
│ └─┬ @mantine/styles
│   └── ✕ unmet peer @emotion/react@>=11.9.0: found 11.8.2
├─┬ @mantine/dropzone
│ ├── ✕ unmet peer @mantine/hooks@5.9.4: found 5.7.1
│ └── ✕ unmet peer @mantine/core@5.9.4: found 5.8.4
├─┬ @mantine/notifications
│ └── ✕ unmet peer @mantine/core@5.7.1: found 5.8.4
├─┬ @mantine/prism
│ └── ✕ unmet peer @mantine/core@5.7.1: found 5.8.4
├─┬ @mantine/spotlight
│ └── ✕ unmet peer @mantine/core@5.7.1: found 5.8.4
├─┬ react-custom-scrollbars
│ ├── ✕ unmet peer react@""^0.14.0 || ^15.0.0 || ^16.0.0"": found 17.0.2
│ └── ✕ unmet peer react-dom@""^0.14.0 || ^15.0.0 || ^16.0.0"": found 17.0.2
└─┬ react-scripts
  └─┬ tailwindcss
    └── ✕ unmet peer autoprefixer@^10.0.2: found 9.8.8

apps/webhook
├─┬ @nestjs/core
│ └── ✕ unmet peer @nestjs/websockets@^7.0.0: found 9.2.1
├─┬ @nestjs/platform-socket.io
│ ├── ✕ unmet peer @nestjs/common@^9.0.0: found 7.6.18
│ └── ✕ unmet peer rxjs@^7.1.0: found 6.6.7
├─┬ @nestjs/websockets
│ ├── ✕ unmet peer @nestjs/common@^9.0.0: found 7.6.18
│ ├── ✕ unmet peer rxjs@^7.1.0: found 6.6.7
│ └── ✕ unmet peer @nestjs/core@^9.0.0: found 7.6.18
└─┬ @nestjs/swagger
  └─┬ @nestjs/mapped-types
    └── ✕ unmet peer class-transformer@""^0.2.0 || ^0.3.0 || ^0.4.0"": found 0.5.1

apps/widget
├─┬ craco-antd
│ ├── ✕ unmet peer @craco/craco@^5.5.0: found 6.4.3
│ ├── ✕ unmet peer react-scripts@^3.4.3: found 4.0.1
│ └─┬ craco-less
│   ├── ✕ unmet peer @craco/craco@^5.5.0: found 6.4.3
│   └── ✕ unmet peer react-scripts@^3.3.0: found 4.0.1
├─┬ html-webpack-plugin
│ └── ✕ unmet peer webpack@^5.20.0: found 4.44.2 in react-scripts
├─┬ less-loader
│ └── ✕ unmet peer less@""^2.3.1 || ^3.0.0"": found 4.1.2
└─┬ react-scripts
  ├── ✕ unmet peer typescript@^3.2.1: found 4.3.5
  └─┬ @svgr/webpack
    └─┬ @babel/preset-env
      └─┬ @babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining
        └── ✕ unmet peer @babel/core@^7.13.0: found 7.12.3 in @svgr/webpack

apps/ws
├─┬ @nestjs/core
│ └── ✕ unmet peer @nestjs/websockets@^7.0.0: found 9.2.1
├─┬ @nestjs/platform-socket.io
│ ├── ✕ unmet peer @nestjs/common@^9.0.0: found 7.6.18
│ └── ✕ unmet peer rxjs@^7.1.0: found 6.6.7
├─┬ @nestjs/websockets
│ ├── ✕ unmet peer @nestjs/common@^9.0.0: found 7.6.18
│ ├── ✕ unmet peer rxjs@^7.1.0: found 6.6.7
│ └── ✕ unmet peer @nestjs/core@^9.0.0: found 7.6.18
└─┬ @nestjs/swagger
  └─┬ @nestjs/mapped-types
    └── ✕ unmet peer class-transformer@""^0.2.0 || ^0.3.0 || ^0.4.0"": found 0.5.1

libs/embed
├─┬ @rollup/plugin-replace
│ ├── ✕ unmet peer rollup@""^1.20.0 || ^2.0.0"": found 0.67.4
│ └─┬ @rollup/pluginutils
│   └── ✕ unmet peer rollup@^1.20.0||^2.0.0: found 0.67.4
├─┬ rollup-plugin-terser
│ └── ✕ unmet peer rollup@^2.0.0: found 0.67.4
└─┬ jest
  └─┬ @jest/core
    └─┬ jest-config
      └── ✕ unmet peer ts-node@>=9.0.0: found 7.0.1

packages/application-generic
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

packages/client
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.1.3

packages/headless
├─┬ ts-jest
│ └── ✕ unmet peer typescript@>=4.3: found 4.1.3
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.1.3

packages/nest
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

packages/node
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.1.3

packages/notification-center
├─┬ @rollup/plugin-replace
│ ├── ✕ unmet peer rollup@""^1.20.0 || ^2.0.0"": found 3.7.3
│ └─┬ @rollup/pluginutils
│   └── ✕ unmet peer rollup@^1.20.0||^2.0.0: found 3.7.3
├─┬ rollup-plugin-terser
│ └── ✕ unmet peer rollup@^2.0.0: found 3.7.3
├─┬ @storybook/addon-essentials
│ └─┬ @storybook/addon-docs
│   └── ✕ unmet peer @storybook/react@6.4.19: found 6.4.21
├─┬ @storybook/react
│ └─┬ @storybook/core
│   ├── ✕ unmet peer @storybook/builder-webpack5@6.4.21: found 6.4.19
│   └─┬ @storybook/core-server
│     ├── ✕ unmet peer @storybook/builder-webpack5@6.4.21: found 6.4.19
│     └── ✕ unmet peer @storybook/manager-webpack5@6.4.21: found 6.4.19
└─┬ @mantine/core
  └── ✕ unmet peer @mantine/hooks@5.8.4: found 5.7.1

packages/notification-center-angular
└─┬ ng-packagr
  └─┬ rollup-plugin-sourcemaps
    └─┬ @rollup/pluginutils
      └── ✕ unmet peer rollup@^1.20.0||^2.0.0: found 3.3.0 in ng-packagr

packages/stateless
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.1.3

providers/apns
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/burst-sms
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/discord
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/emailjs
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/expo
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/fcm
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/firetext
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/gupshup
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/infobip
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/mailersend
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/mailgun
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/mailjet
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/mandrill
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/ms-teams
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/netcore
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/nexmo
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/nodemailer
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/outlook365
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/plivo
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/postmark
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/sendgrid
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/sendinblue
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/ses
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.3

providers/slack
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.3.5

providers/sms77
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/sns
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/sparkpost
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/telnyx
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/termii
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2

providers/twilio
└─┬ typedoc
  └── ✕ unmet peer typescript@""3.9.x || 4.0.x"": found 4.6.2
```
### 👟 Reproduction steps

1. Go to root directory 2. run ```pnpm install```

### 👍 Expected behavior

not display errors relating to depreciation 

### 👎 Actual Behavior with Screenshots

![image](https://user-images.githubusercontent.com/74113508/210602710-345a8c3c-de8a-43d1-bc64-52ebf64e94ee.png)


### 🤖 Node Version

16.19.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1518](https://linear.app/novu/issue/NV-1518/🐛-bug-report-deprecated-dependencies)</sub>",,
1518954972,2423,[NV-1516] Novu/web container is getting exited due to some error,"Hi, 

I am trying to set up novu using docker container and am getting the below error:
![image](https://user-images.githubusercontent.com/114569256/210567002-0b72f053-a2cb-42ec-a753-2b4ed972dc6e.png)

Tried to get the image from web:latest and succeeded in creating the container. However, the url: http://localhost:4200 cannot be used to access the web interface 
Could you please help me to resolve the issue




<sub>[NV-1516](https://linear.app/novu/issue/NV-1516/novuweb-container-is-getting-exited-due-to-some-error)</sub>",,
1517208359,2417,🐛 Bug Report: Main branch setup:project command failing with error,"### 📜 Description

Trying to setup nova project locally with this command npm run setup:project, but failing with error.

### 👟 Reproduction steps

git clone main novu branch(or cloned branch) and run: npm run setup:project

### 👍 Expected behavior

Project setup successful

### 👎 Actual Behavior with Screenshots

Getting below error and setup failing...

> setup:project
> npx --yes pnpm@7.5.0 i && node scripts/setup-env-files.js && pnpm build

Scope: all 54 workspace projects
Lockfile is up-to-date, resolution step is skipped
Packages: +6078
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 WARN  GET https://github.com/LetItRock/floating-vue/raw/main/packages/floating-vue/floating-vue-2.0.0-beta.21.tgz error (EPROTO). Will retry in 10 seconds. 2 retries left.
Packages are hard linked from the content-addressable store to the virtual store.
  Content-addressable store is at: /Users/XX/Library/pnpm/store/v3
  Virtual store is at:             node_modules/.pnpm
 WARN  GET https://github.com/LetItRock/floating-vue/raw/main/packages/floating-vue/floating-vue-2.0.0-beta.21.tgz error (EPROTO). Will retry in 1 minute. 1 retries left.
Progress: resolved 6078, reused 5307, downloaded 0, added 6077
TypeError: Cannot set property name of  which has only a getter
    at err (/Users/XX/.npm/_npx/0437c2f26f91c49a/node_modules/pnpm/dist/pnpm.cjs:12462:20)
    at runPnpm (/Users/XX/.npm/_npx/0437c2f26f91c49a/node_modules/pnpm/dist/pnpm.cjs:192787:5)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at async /Users/XX/.npm/_npx/0437c2f26f91c49a/node_modules/pnpm/dist/pnpm.cjs:192777:7

### 🤖 Node Version

_No response_

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1514644866,2396,🐛 Bug Report: TypeError: o.div is not a function in Remix,"### 📜 Description

I get TypeError: o.div is not a function in Remix using the code snippets from the docs
```
import {
  NovuProvider,
  PopoverNotificationCenter,
  NotificationBell,
  IMessage,
} from '@novu/notification-center';

function Header() {
  function onNotificationClick(notification: IMessage) {
    // your logic to handle the notification click
    if (message?.cta?.data?.url) {
      window.location.href = message.cta.data.url;
    }
  }

  return (
    <NovuProvider subscriberId={'USER_ID'} applicationIdentifier={'APP_ID_FROM_ADMIN_PANEL'}>
      <PopoverNotificationCenter onNotificationClick={onNotificationClick}>
        {({ unseenCount }) => <NotificationBell unseenCount={unseenCount} />}
      </PopoverNotificationCenter>
    </NovuProvider>
  );
}
```
Is it because of React 18 or Remix using Node Stream by default?

### 👟 Reproduction steps

1. Create a new Remix App
2. Install Novu
3. Embed it into a remix page

### 👍 Expected behavior

It should render the notification bell icon

### 👎 Actual Behavior with Screenshots

TypeError: o.div is not a function
    at Object.<anonymous> (/Users/user/Development/qwork/qwork-crm-app/node_modules/@novu/notification-center/src/components/notification-center/components/layout/header/Header.tsx:99:28)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/rikoriswandha/Development/qwork/qwork-crm-app/app/components/NovuHeader/NovuHeader.tsx:5:8)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)

### 🤖 Node Version

16.16.0

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1511032892,2366,[NV-1404] 🐛 Bug Report: Creating ENUM for url paths.,"### 📜 Description

Creating ENUM for url path which are used as path for routing.
```
<SpotLightProvider>
                <Routes>
                  <Route path=""/auth/signup"" element={<SignUpPage />} />
                  <Route path=""/auth/login"" element={<LoginPage />} />
                  <Route path=""/auth/reset/request"" element={<PasswordResetPage />} />
                  <Route path=""/auth/reset/:token"" element={<PasswordResetPage />} />
                  <Route path=""/auth/invitation/:token"" element={<InvitationPage />} />
                  <Route path=""/auth/application"" element={<CreateOrganizationPage />} />
                  <Route
                    path=""/partner-integrations/vercel/link-projects""
                    element={
                      <RequiredAuth>
                        <LinkVercelProjectPage type=""create"" />
                      </RequiredAuth>
                    }
                  />
                  <Route
                    path=""/partner-integrations/vercel/link-projects/edit""
                    element={
                      <Require

....
```

### 👟 Reproduction steps

NA

### 👍 Expected behavior

We should have an ENUM for routes that can be used as constant, this will used at all places where we are using route,
For example - 
`navigate(<path>)`

It will improve reusability and less error-prone code.

For example, we can save ourselves from spelling mistakes, if in future if we decide to rename routes it will be easier.


### 👎 Actual Behavior with Screenshots

NA

### 🤖 Node Version

NA

### 📃 Provide any additional context for the Bug.

NA

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!

<sub>[NV-1404](https://linear.app/novu/issue/NV-1404/🐛-bug-report-creating-enum-for-url-paths)</sub>",,
1508108952,2346,🐛 Bug Report: APNS environment parameters issue,"### 📜 Description

In APNS provider there is the following check for `prod env` parameter.

```
/novu/providers/apns/src/lib/apns.provider.ts
        production: process.env.NODE_ENV === 'production'
```

However, it seems that the actual prod value is `prod`.

### 👟 Reproduction steps

Sending a push notification using APNS in production environment will probably fail. I'm having some issues with it but I don't know if it's due to that yet.

### 👍 Expected behavior

Novu's production parameter should me `prod` and not `production`.

Probably something like: `production: process.env.NODE_ENV === 'prod'`

### 👎 Actual Behavior with Screenshots

`production: process.env.NODE_ENV === 'production' `check is wrong.

### 💻 Operating system

MacOS

### 🤖 Node Version

Using docker (ghcr.io/novuhq/novu/api:0.9.0) - I think Node 16

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1507444973,2341,[NV-1529] 🐛 Bug Report: APNS private key is not being parsed correctly ,"### 📜 Description

In APNS provider there is a field in order to set the `private key`. However, it seems that if someone copies the key and places it in that specific field, it's not getting parsed correctly and as a result, an error occurs when trying to send a notification.

> {
>   ""stack"": ""Error: Could not build push handler id: 638f1b1c79b266fa794fd3e5, error: VError: Failed to generate token: error:0909006C:PEM routines:get_name:no start line\n    at PushFactory.getHandler (/usr/src/app/apps/api/dist/main.js:16142:19)\n    at SendMessagePush.<anonymous> (/usr/src/app/apps/api/dist/main.js:16089:54)\n    at Generator.next (<anonymous>)\n    at fulfilled (/usr/src/app/apps/api/dist/main.js:15948:58)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"",
>   ""message"": ""Could not build push handler id: 638f1b1c79b266fa794fd3e5, error: VError: Failed to generate token: error:0909006C:PEM routines:get_name:no start line""
> }

NOTE:
******The private key is being set correctly if you update the provider using the API `/v1/integrations/{providerId}` and manually set the key in the request body with a valid format.**

### 👟 Reproduction steps

1. Copy the APNS private key
2. Enter it in the `private key` field
3. Enter the other values (key id, team id) and activate the provider
4. Send a push notification using APNS

### 👍 Expected behavior

Push notification should be sent.

### 👎 Actual Behavior with Screenshots

> {
>   ""stack"": ""Error: Could not build push handler id: 638f1b1c79b266fa794fd3e5, error: VError: Failed to generate token: error:0909006C:PEM routines:get_name:no start line\n    at PushFactory.getHandler (/usr/src/app/apps/api/dist/main.js:16142:19)\n    at SendMessagePush.<anonymous> (/usr/src/app/apps/api/dist/main.js:16089:54)\n    at Generator.next (<anonymous>)\n    at fulfilled (/usr/src/app/apps/api/dist/main.js:15948:58)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"",
>   ""message"": ""Could not build push handler id: 638f1b1c79b266fa794fd3e5, error: VError: Failed to generate token: error:0909006C:PEM routines:get_name:no start line""
> }

The format of the key normally is the following:

> -----BEGIN PRIVATE KEY-----
> aaaaaaaaaaaa
> bbbbbbbbbbbbbbbbbbb
> cccccccccccccccc
> dddddddd
> -----END PRIVATE KEY-----

After setting it in the dashboard like I described above, the /v1/integrations API returns:

> -----BEGIN PRIVATE KEY----- aaaaaaaaaaaa bbbbbbbbbbbbbbbbbbb cccccccccccccccc dddddddd -----END PRIVATE KEY-----

It seems that it replaces the `\n` with `whitespaces`.

### 💻 Operating system

MacOS

### 🤖 Node Version

Using docker (ghcr.io/novuhq/novu/api:0.9.0) - I think Node 16

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None

<sub>[NV-1529](https://linear.app/novu/issue/NV-1529/🐛-bug-report-apns-private-key-is-not-being-parsed-correctly)</sub>",,
1500596214,2305,🐛 Bug Report: Duplicate assignment in code,"### 📜 Description

I'm submitting a question about the decisions made in the repository

The code https://github.com/Cxxshyy/novu/blob/37d3fbd98a7a0f8b4a061c4f8e7542f6c6963df8/apps/api/src/app/events/usecases/send-message/test-send-email.usecase.ts#L123-L123 is a double assignment and can be reduced to one line and could potentially have some unexpected side affects. Unless there is a clear reason as to why it should be done in 2 lines rather than one I suggest it be changed.
-Link to the deepsource information
https://deepsource.io/gh/Cxxshyy/novu/issue/JS-W1032/occurrences?listindex=0

### 👟 Reproduction steps

not a bug so the file is located here https://github.com/Cxxshyy/novu/blob/37d3fbd98a7a0f8b4a061c4f8e7542f6c6963df8/apps/api/src/app/events/usecases/send-message/test-send-email.usecase.ts#L123-L123

### 👍 Expected behavior

The code should be amended to be one line rather than one.

### 👎 Actual Behavior with Screenshots

It's 2 lines instead of one

### 💻 Operating system

Windows

### 🤖 Node Version

19.3.0

### 📃 Provide any additional context for the Bug.

`block.content = await this.renderContent(block.content, subject, organization, command, command.preheader); 
block.content = block.content.trim();`

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1500075546,2301,Duplicate assignment in code,"I'm submitting a question about the decisions made in the repository

- The code https://github.com/Cxxshyy/novu/blob/37d3fbd98a7a0f8b4a061c4f8e7542f6c6963df8/apps/api/src/app/events/usecases/send-message/test-send-email.usecase.ts#L123-L123  is a double assignment and can be reduced to one line and could potentially have some unexpected side affects. Unless there is a clear reason as to why it should be done in 2 lines rather than one I suggest it be changed.


-Link to the deepsource information 
https://deepsource.io/gh/Cxxshyy/novu/issue/JS-W1032/occurrences?listindex=0
",,
1498378082,2289,[NV-1369] (JS-T1001) Optional property in interface has an 'undefined' type,"## Description
Optional property syntax (?) implicitly adds an &#x27;undefined&#x27; type to the property. Explicitly having an &#x27;undefined&#x27; type in the union of an optional property is redundant and should be avoided to improve the readability of the code.

## Occurrences
There are 3 occurrences of this issue in the repository.

See all occurrences on DeepSource &rarr; [deepsource.io/gh/novuhq/novu/issue/JS-T1001/occurrences/](https://deepsource.io/gh/novuhq/novu/issue/JS-T1001/occurrences/)


<sub>[NV-1369](https://linear.app/novu/issue/NV-1369/js-t1001-optional-property-in-interface-has-an-undefined-type)</sub>",,
1491836953,2253,[NV-1340] TypeError: Cannot read properties of undefined (reading '_notificationId'),"Sentry Issue: [API-4A](https://sentry.io/organizations/novu-r9/issues/3697812377/?referrer=Linear)

```
TypeError: Cannot read properties of undefined (reading '_notificationId')
  File ""/usr/src/app/apps/api/dist/main.js"", line 11696, col 31, in TriggerEvent.<anonymous>
    _id: firstJob._notificationId,
  File ""/usr/src/app/apps/api/dist/main.js"", in Generator.next
  File ""/usr/src/app/apps/api/dist/main.js"", line 11559, col 58, in fulfilled
    function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
  File ""/usr/src/app/apps/api/dist/main.js"", in runMicrotasks
  File ""node:internal/process/task_queues"", line 96, col 5, in processTicksAndRejections
```

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-1340](https://linear.app/novu/issue/NV-1340/typeerror-cannot-read-properties-of-undefined-reading-notificationid)</sub>",,
1491836507,2252,[NV-1340] TypeError: Cannot read properties of undefined (reading '_notificationId'),"Sentry Issue: [API-4A](https://sentry.io/organizations/novu-r9/issues/3697812377/?referrer=Linear)

```
TypeError: Cannot read properties of undefined (reading '_notificationId')
  File ""/usr/src/app/apps/api/dist/main.js"", line 11696, col 31, in TriggerEvent.<anonymous>
    _id: firstJob._notificationId,
  File ""/usr/src/app/apps/api/dist/main.js"", in Generator.next
  File ""/usr/src/app/apps/api/dist/main.js"", line 11559, col 58, in fulfilled
    function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
  File ""/usr/src/app/apps/api/dist/main.js"", in runMicrotasks
  File ""node:internal/process/task_queues"", line 96, col 5, in processTicksAndRejections
```

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-1340](https://linear.app/novu/issue/NV-1340/typeerror-cannot-read-properties-of-undefined-reading-notificationid)</sub>",,
1491836394,2251,[NV-1340] TypeError: Cannot read properties of undefined (reading '_notificationId') (copy),"Sentry Issue: [API-4A](https://sentry.io/organizations/novu-r9/issues/3697812377/?referrer=Linear)

```
TypeError: Cannot read properties of undefined (reading '_notificationId')
  File ""/usr/src/app/apps/api/dist/main.js"", line 11696, col 31, in TriggerEvent.<anonymous>
    _id: firstJob._notificationId,
  File ""/usr/src/app/apps/api/dist/main.js"", in Generator.next
  File ""/usr/src/app/apps/api/dist/main.js"", line 11559, col 58, in fulfilled
    function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
  File ""/usr/src/app/apps/api/dist/main.js"", in runMicrotasks
  File ""node:internal/process/task_queues"", line 96, col 5, in processTicksAndRejections
```

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-1340](https://linear.app/novu/issue/NV-1340/typeerror-cannot-read-properties-of-undefined-reading-notificationid)</sub>",,
1484280345,2233,🚀/🐛 Feature/Bug: No possibility of sending FCM data payload,"### 🔖 Feature description

Dear all

With the commit `8c30377ddd806d4c06d51ba4f9ee6541ab593e38` there was the introduction of the new FCM API, where novu uses now `sendMulticast`.

I'd like to send some payload data to handle clicks on push notifications, i.e. I want to use the `data` property for a received push notification. 

In `fcm.provider.ts`, there's this:

```typescript
  async sendMessage(
    options: IPushOptions
  ): Promise<ISendMessageSuccessResponse> {
    delete (options.overrides as any)?.deviceTokens;
    const res = await this.messaging.sendMulticast({
      tokens: options.target,
      notification: {
        title: options.title,
        body: options.content,
        ...options.overrides,
      },
    });
```

So, Novu only uses the `notification` property of the `MulticastMessage`, which is an extension of the a [BaseMessage](https://firebase.google.com/docs/reference/admin/node/firebase-admin.messaging.basemessage.md#basemessage_interface). The `BaseMessage` also allows for a `data` property, which then can be accessed when the notification is received. 

Be aware, that just using `payload` as the `data` property might be an issue, since payload can be of any type, e.g. `payload : { someList : [] }` would fail, because the `data` property must be `{ [key: string]: string; }` according to the docs.

Now, I would do and push this feature myself but sadly I'm not experienced enough with JS to build the application... 

Thanks!



### 🎤 Why is this feature needed ?

To act according to the received data when clicking on a received FCM push notification, e.g. show a different screen than usual etc.


### ✌️ How do you aim to achieve this?

See above.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

None",,
1483988250,2231,[NV-1321] (JS-0422) Avoid `target='_blank'` attribute without `rel='noopener noreferrer'`,"## Description
When creating a JSX element with a tag, it is often desired to have the link open in a new tab using the `target=&#x27;_blank&#x27;` attribute. Using this attribute unaccompanied by `rel=&#x27;noreferrer&#x27;`, however, is a severe security vulnerability.

## Occurrences
There is 1 occurrence of this issue in the repository.

See all occurrences on DeepSource &rarr; [deepsource.io/gh/novuhq/novu/issue/JS-0422/occurrences/](https://deepsource.io/gh/novuhq/novu/issue/JS-0422/occurrences/)


<sub>[NV-1321](https://linear.app/novu/issue/NV-1321/js-0422-avoid-target=-blank-attribute-without-rel=noopener-noreferrer)</sub>",,
1476949221,2208,[NV-742] i18n - Bengali support,"## Why?

Recently we introduced an easy way to add translations for the `@novu/notification-center` component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language). 

## How?

* Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the `en.ts` example.
* Add your translation import to the `TRANSLATIONS` object at `packages/notification-center/src/i18n/lang.ts` 
* Add the language code to `I18NLanguage` type at `lang.ts` file.
* Submit a PR :)

<sub>From [SyncLinear.com](https://synclinear.com) | [NV-742](https://linear.app/novu/issue/NV-742/i18n-bengali-support)</sub>",,
1472131631,2153,🚀 Feature: Azure Active Directory Authentication,"### 🔖 Feature description

Currently, there are two ways to login. You have the GitHub OAuth 2 provider, and then you have your standard username password configuration. 

I would like to propose an additional login method utilizing Azure Active Directory.

### 🎤 Why is this feature needed ?

Allowing users to authenticate with Azure Active Directory could aid in the adoption of Novu with Microsoft heavy companies.

### ✌️ How do you aim to achieve this?

There will need to be the addition of the following env vars
(note: AAD is the standard abbreviation for Azure Active Directory)
```
AAD_CLIENT_ID
AAD_CLIENT_SECRET
````
**Route: `/v1/auth/aad`**
Would check to see if the env vars are set. Like it does here for [GitHub](https://github.com/novuhq/novu/blob/f4d630b6de7df2772ed6a7fec8dd4be94ec6b450/apps/api/src/app/auth/auth.controller.ts#L61)

**Route: `/v1/auth/aad/callback`**
Exchange the code for a token, reach out to the Microsoft Graph and get the user details and store it in the database layer.


### 🔄️ Additional Information

https://learn.microsoft.com/en-us/azure/active-directory/fundamentals/auth-oauth2

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1468737620,2127,Docs: Missing event names useSocket can respond to,"### 🔖 Feature description

Update the docs or interface `socket.on()` can respond to

`interface ISocket {
    on: (eventName: string, callback: (data: any) => void) => void;
    off: (eventName: string) => void;
}`

Here's the place in the docs https://docs.novu.co/notification-center/react-components/#realtime-sockets

### 🎤 Why is this feature needed ?

To make the `useSocket` hook easier to use

### ✌️ How do you aim to achieve this?

You could add an explicit description of what the events can respond to or update the interface

`interface ISocket {
    on: (eventName: string, callback: (data: any) => void) => void;
    off: (eventName: string) => void;
}`

Add a type or interface that eventName should conform to

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

_No response_",,
1467518057,2121,🐛 Bug Report: TypeError when notification button in-app clicked,"### 📜 Description

I am using the Notification Center react component. 

I'm testing a notification and when I click the main button of a notification I get Unhandled Runtime Error: `TypeError: f is not a function`.

Clicking the notification works but clicking the button inside does not work.

### 👟 Reproduction steps

Trigger notification to Notification Center react component.

### 👍 Expected behavior

Expecting to navigate to notification URL when the button is clicked. Right now it only triggers a TypeError.the 

### 👎 Actual Behavior with Screenshots

```
Unhandled Runtime Error:
TypeError: f is not a function

Call Stack:
eval
    node_modules/@novu/notification-center/dist/esm/index.js (1:71809)
step
    node_modules/tslib/tslib.es6.js (102:0)
Object.eval [as next]
    node_modules/tslib/tslib.es6.js (83:45)
eval
    node_modules/tslib/tslib.es6.js (76:0)
new Promise
    <anonymous>
__awaiter
    node_modules/tslib/tslib.es6.js (72:0)
p
    node_modules/@novu/notification-center/dist/esm/index.js (1:71750)
eval
    node_modules/@novu/notification-center/dist/esm/index.js (1:70980)
Object.onActionClick
    node_modules/@novu/notification-center/dist/esm/index.js (1:70985)
eval
    node_modules/@novu/notification-center/dist/esm/index.js (1:69725)
onClick
    node_modules/@novu/notification-center/dist/esm/index.js (1:69769)
HTMLUnknownElement.callCallback
    node_modules/react-dom/cjs/react-dom.development.js (4164:0)
Object.invokeGuardedCallbackDev
    node_modules/react-dom/cjs/react-dom.development.js (4213:0)
invokeGuardedCallback
    node_modules/react-dom/cjs/react-dom.development.js (4277:0)
invokeGuardedCallbackAndCatchFirstError
    node_modules/react-dom/cjs/react-dom.development.js (4291:0)
executeDispatch
    node_modules/react-dom/cjs/react-dom.development.js (9041:0)
processDispatchQueueItemsInOrder
    node_modules/react-dom/cjs/react-dom.development.js (9073:0)
processDispatchQueue
    node_modules/react-dom/cjs/react-dom.development.js (9086:0)
dispatchEventsForPlugins
    node_modules/react-dom/cjs/react-dom.development.js (9097:0)
eval
    node_modules/react-dom/cjs/react-dom.development.js (9288:0)
batchedUpdates$1
    node_modules/react-dom/cjs/react-dom.development.js (26140:0)
batchedUpdates
    node_modules/react-dom/cjs/react-dom.development.js (3991:0)
dispatchEventForPluginEventSystem
    node_modules/react-dom/cjs/react-dom.development.js (9287:0)
dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay
    node_modules/react-dom/cjs/react-dom.development.js (6465:0)
dispatchEvent
    node_modules/react-dom/cjs/react-dom.development.js (6457:0)
dispatchDiscreteEvent
    node_modules/react-dom/cjs/react-dom.development.js (6430:0)
```


<img width=""973"" alt=""Screen Shot 2022-11-29 at 1 12 44 AM"" src=""https://user-images.githubusercontent.com/5669143/204452674-b51915b0-864a-41bc-94bb-06617a8751b4.png"">

<img width=""425"" alt=""Screen Shot 2022-11-29 at 1 01 51 AM"" src=""https://user-images.githubusercontent.com/5669143/204452704-1634bc54-e0c4-46f6-a4a8-bcaedd9e3b1b.png"">


### 💻 Operating system

MacOS

### 🤖 Node Version

18.12.1

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

_No response_",,
1464372662,2094,💭 Idea: feed.context.ts should return empty object instead of null,"### 🔖 Feature description

As it currently stands, `feed.context.ts` located [here](https://github.com/novuhq/novu/blob/2d3050a13b5dfc77b0d66e34ed2eac8a25299631/packages/notification-center/src/store/feed.context.ts#L10) is returning a null value by default. 

This can throw a `TypeError: Cannot read properties of null (reading 'activeTabStoreId')` on the Notifications Center if it's not yet unitized. After speaking with David and Pablo, it was thought that a change to an empty array would serve better.

### 🎤 Why is this feature needed ?

Potentially better error handling. 

### ✌️ How do you aim to achieve this?

Change the `null` value for `{}`

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1456951983,2057,"[NV-1196] Add some reference to reactrouter - navigate, for the get started page in docs","In docs, the getting started page:
[https://docs.novu.co/notification-center/getting-started](https://docs.novu.co/notification-center/getting-started)

We have a copy-paste code that should work out-of-box. It doesn't really becaue ""Navigate"" triggers an error if reactRouter is not there installed and imported.

Perhaps include the import in the code, which suggests it needs to be installed.

---

Created via [Raycast](https://www.raycast.com)

> From [SyncLinear.com](https://synclinear.com) | [NV-1196](https://linear.app/novu/issue/NV-1196/add-some-reference-to-reactrouter-navigate-for-the-get-started-page-in)",,
1456951612,2056,"[NV-1196] Add some reference to reactrouter - navigate, for the get started page in docs","In docs, the getting started page:
[https://docs.novu.co/notification-center/getting-started](https://docs.novu.co/notification-center/getting-started)

We have a copy-paste code that should work out-of-box. It doesn't really becaue ""Navigate"" triggers an error if reactRouter is not there installed and imported.

Perhaps include the import in the code, which suggests it needs to be installed.

---

Created via [Raycast](https://www.raycast.com)

> From [SyncLinear.com](https://synclinear.com) | [NV-1196](https://linear.app/novu/issue/NV-1196/add-some-reference-to-reactrouter-navigate-for-the-get-started-page-in)",,
1449188206,2026,[NV-1178] MSTeams integration throwing error,"### What?

As reported by a community member on [Discord](https://discord.com/channels/895029566685462578/1041671116063780864/1041671116063780864) sending an MS team notification throws an error:

```
{
  ""stack"": ""SyntaxError: Unexpected token z in JSON at position 0\n    at JSON.parse (<anonymous>)\n    at MsTeamsProvider.<anonymous> (/usr/src/app/providers/ms-teams/build/main/lib/msTeams.provider.js:57:86)\n    at step (/usr/src/app/providers/ms-teams/build/main/lib/msTeams.provider.js:33:23)\n    at Object.next (/usr/src/app/providers/ms-teams/build/main/lib/msTeams.provider.js:14:53)\n    at /usr/src/app/providers/ms-teams/build/main/lib/msTeams.provider.js:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/usr/src/app/providers/ms-teams/build/main/lib/msTeams.provider.js:4:12)\n    at MsTeamsProvider.sendMessage (/usr/src/app/providers/ms-teams/build/main/lib/msTeams.provider.js:53:16)\n    at MSTeamsHandler.<anonymous> (/usr/src/app/apps/api/dist/main.js:15864:40)\n    at Generator.next (<anonymous>)\n    at /usr/src/app/apps/api/dist/main.js:15846:71\n    at new Promise (<anonymous>)\n    at __awaiter (/usr/src/app/apps/api/dist/main.js:15842:12)\n    at MSTeamsHandler.send (/usr/src/app/apps/api/dist/main.js:15860:16)\n    at SendMessageChat.<anonymous> (/usr/src/app/apps/api/dist/main.js:15750:50)\n    at Generator.next (<anonymous>)"",
  ""message"": ""Unexpected token z in JSON at position 0""
}
```

 The credentials provided:

```
{
      ""providerId"": ""msteams"",
      ""credentials"": {
          ""webhookUrl"":""url""
      }
    }
```

> From [SyncLinear.com](https://synclinear.com) | [NV-1178](https://linear.app/novu/issue/NV-1178/msteams-integration-throwing-error)",,
1444807367,2005,"🐛 Bug Report: ButtonTypeEnum, MessageActionStatusEnum, IMessage are not exported","### 📜 Description

I believe that these types need to be exported for customization in `@novu/notification-center`

### 👟 Reproduction steps

Import ButtonTypeEnum, MessageActionStatusEnum, IMessage 

### 👍 Expected behavior

It shows errors because there are no exports for these types

### 👎 Actual Behavior with Screenshots

Can import these type

### 💻 Operating system

Windows

### 🤖 Node Version

18.12.1

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

_No response_",,
1444737108,2004,🐛 Bug Report: Cannot assign to read only property 'unseenBadgeBackgroundColor' of object '#<Object>',"### 📜 Description

Integrate with built-in notification-center. I am using Vite
I think this issue related to `lodash.merge`

### 👟 Reproduction steps

Click on the bell

### 👍 Expected behavior

Notification popup appeared

### 👎 Actual Behavior with Screenshots

It crashed

### 💻 Operating system

Windows

### 🤖 Node Version

18.12.1

### 📃 Provide any additional context for the Bug.

```
Cannot assign to read only property 'unseenBadgeBackgroundColor' of object '#<Object>'
    at baseAssignValue (index.js:811:12)
    at assignMergeValue (index.js:753:5)
    at index.js:933:7
    at index.js:1193:11
    at baseMerge (index.js:920:3)
    at index.js:1912:3
    at index.js:1170:9
    at apply (index.js:136:25)
    at index.js:1406:12
    at be2 (use-default-theme.hook.ts:45:9)
```

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

_No response_",,
1444527230,2002,🚀 Feature: Allow content engine to be extended or replaced,"### 🔖 Feature description

Currently the content engine is based on functions that process the template using handlebars. The way this is currently done does not allow the engine to be extended or replaced. If the content engine is abstracted and provided through constructor injection it can be extended and / or replaced.

### 🎤 Why is this feature needed ?

While some may prefer Handlebars, others might prefer Twig, Blade or any kind of custom templating logic.

### ✌️ How do you aim to achieve this?

```ts
export interface IContentEngine {
  compileTemplate(content: string, payload: ITriggerPayload): string;
}

export class EmailHandler {
  constructor(
    private message: IMessage,
    private provider: IEmailProvider,
    private contentEngine: IContentEngine,
    private theme?: ITheme
  ) {}
}
```

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1426611548,1878,🚀 Feature: i18n - Maithali support,"### 🔖 Feature description

Adding Maithili language

### 🎤 Why is this feature needed ?

For the speakers of Maithili language.

### ✌️ How do you aim to achieve this?

I am a Maithili language speaker and can translate it.


   - Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the `en.ts` example.
   - Add your translation import to the TRANSLATIONS object at `packages/notification-center/src/i18n/lang.ts`
   - Add the language code to the I18NLanguage type at `lang.ts` file.
   - Updating `/docs/docs/notification-center/react-components.md` for the language added.
   - Submit a PR


### 🔄️ Additional Information

Maithili is a very old language spoken by people of eastern plains of Nepal and in Bihar and Jharkhand states of India. It has more than 34 million native speakers.

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1424362377,1860,Feature: i18n support - Bosnian,"## Why?

Recently novu introduced an easy way to add translations for the @novu/notification-center component interface. So we can either specify a translation object or pass a premade translation.

**Note:**

Bosnian, though similar to Croatian and other Balkan languages, is widely used (almost by 50% population) in Bosnia.

## How?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.

- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts

- Add the language code to I18NLanguage type at lang.ts file.


I'd like to work on this issue.

",,
1423097441,1850,🚀 Feature: Latvian translation @novu/notification-center.,"### 🔖 Feature description

Latvian translation @novu/notification-center.

### 🎤 Why is this feature needed ?

Because many people use Latvian as their native language.

### ✌️ How do you aim to achieve this?

1) Create `lv.ts` file and add its content.
2) Connect it to `lang.ts`.
3) Update `react-components.md`.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1421064307,1839,🚀 Feature: lithuanian i18n support,"### 🔖 Feature description

Lithuanian translation of @novu/notification-center.

### 🎤 Why is this feature needed ?

Because a lot of people used Lithuanian language as their native.

### ✌️ How do you aim to achieve this?

1) Create `lt.ts` file and add its content.
2) Connect it to `lang.ts`.
3) Update docs.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1419386278,1824,Feature: i18n support - Albanian (SQ),"## Why?

Recently novu introduced an easy way to add translations for the @novu/notification-center component interface. So we can either specify a translation object or pass a premade translation.

## How?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.

- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts

- Add the language code to I18NLanguage type at lang.ts file.


I'd like to work on this issue.

",,
1413862275,1781,🚀 Feature: there is no logo-link on web.novu.co,"### 🔖 Feature description

When user click on logo on `web.novu.co` page it leads to home, i.e. `web.novu.co`, for example if user is on `web.novu.co/integrations`.

### 🎤 Why is this feature needed ?

Because all other `Novu` websites have this feature:

- <img align=""center"" width=""185"" alt=""demo-1"" src=""https://user-images.githubusercontent.com/87207122/196545981-e200a0e9-4981-41c8-816e-114b2c45fb87.png"">

- <img align=""center"" width=""150"" alt=""demo-2"" src=""https://user-images.githubusercontent.com/87207122/196546027-080a13fa-7371-426a-91d7-ae5420b22190.png"">

But `web.novu.co` does not:

- <img align=""center"" width=""172"" alt=""demo-3"" src=""https://user-images.githubusercontent.com/87207122/196546141-c4cb39cf-7462-4ad0-9dc8-07738cc44520.png"">


### ✌️ How do you aim to achieve this?

1) Go to `components/layout/components/HeaderNav.tsx`.
2) ```import { Link } from 'react-router-dom';```
3) Embed `<img/>` into `<Link/>`.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1411534783,1755,🐛 Bug Report: postmark test is failing,"### 📜 Description

Postmark test is failing because of date comparison. 

https://github.com/shtelzerartem/novu/blob/4b91c54bf251c2fa0d9cf29057d8149b641db3d7/providers/postmark/src/lib/postmark.provider.spec.ts

<img width=""466"" alt=""image"" src=""https://user-images.githubusercontent.com/20266461/196182095-d15b4f2a-2e05-4519-a9c0-f766ed0287f4.png"">


### 👟 Reproduction steps

1. Go to postmark provider 
https://github.com/shtelzerartem/novu/blob/feat-mailersend-check-integration/providers/postmark
2. Run tests

### 👍 Expected behavior

Should run successfully constantly

### 👎 Actual Behavior with Screenshots

<img width=""466"" alt=""image"" src=""https://user-images.githubusercontent.com/20266461/196182095-d15b4f2a-2e05-4519-a9c0-f766ed0287f4.png"">

Right now it's failing both in CI/CD and locally, because date differ in microsenconds.


### 💻 Operating system

MacOS

### 🤖 Node Version

v16.14.2

### 📃 Provide any additional context for the Bug.

Relates to #1470
and PR https://github.com/novuhq/novu/pull/1542

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1411426363,1753,🐛 Bug Report: nodemailer sendername field & secure field,"### 📜 Description

1. Nodemailer has a `Sender name` field in UI, even though it's not used in 
https://github.com/novuhq/novu/blob/2ee01b8c97d77b9f3295e46720385c137a0bfd57/providers/nodemailer/src/lib/nodemailer.provider.ts
![image](https://user-images.githubusercontent.com/20266461/196166799-88318ba6-8185-4c47-a846-572b1f9755e9.png)

2. Secure field is a textfield, therefore not intuitive, user should leave this field empty if it's `false` and provide some value if `true`

### 👟 Reproduction steps

1. Go to integration Store
2. Click on Nodemailer integration

- Check https://github.com/novuhq/novu/blob/2ee01b8c97d77b9f3295e46720385c137a0bfd57/providers/nodemailer/src/lib/nodemailer.provider.ts


### 👍 Expected behavior

1. There should be no `Sender name` field in UI.
2. Secure field should be checkbox or switch 

### 👎 Actual Behavior with Screenshots

![image](https://user-images.githubusercontent.com/20266461/196166799-88318ba6-8185-4c47-a846-572b1f9755e9.png)
![image](https://user-images.githubusercontent.com/20266461/196168245-b803ea54-f5dc-4276-95a3-2112bff9f299.png)


### 💻 Operating system

MacOS

### 🤖 Node Version

v16.14.2

### 📃 Provide any additional context for the Bug.

From my point of view it's better to rename it to custom SMTP connection and not Nodemailer :)

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1411353119,1752,🚀 Feature: i18n - Bhojpuri Support ,"### 🔖 Feature description

Adding Bhojpuri language support.

### 🎤 Why is this feature needed ?

For Bhojpuri people who are not familiar with English.

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to I18NLanguage type at lang.ts file.
Updating /docs/docs/notification-center/react-components.md for the language added.
Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

_No response_",,
1411334010,1751,🚀 Feature:  i18n - Mandarin Support ,"### 🔖 Feature description

Adding Mandarin language support.

### 🎤 Why is this feature needed ?

For Chinese people who are not familiar with English.

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to the I18NLanguage type in the lang.ts file.
Updating /docs/docs/notification-center/react-components.md for the language added.
Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

_No response_",,
1410203968,1740,🚀 Feature: i18n Belarusian language support.,"### 🔖 Feature description

Belarusian translation of @novu/notification-center component Belarusian translation.

### 🎤 Why is this feature needed ?

Because, Belarusian language is becoming more and more popular.

### ✌️ How do you aim to achieve this?

1) Create `be.ts` file and add its content.
2) Connect it to `lang.ts`.
3) Update docs.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1409297440,1725,i18n - Afrikaans Support,"## Why?

Recently novu introduced an easy way to add translations for the @novu/notification-center component interface. So we can either specify a translation object or pass a premade translation.

## How?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.

- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts

- Add the language code to I18NLanguage type at lang.ts file.


I'd like to work on this issue.

",,
1405548898,1671,🚀 Feature: i18n - Melayu Language Support,"### 🔖 Feature description

Adding Melayu Language Support

### 🎤 Why is this feature needed ?

For Melayu Peoples, Who don't understand other languages or have trouble dealing with them.

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to I18NLanguage type at lang.ts file.
Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1404983814,1660,🚀 Feature: Add i18n - Armenian Language Support ,"### 🔖 Feature description

People in Armenia speak in armenian so this feature is to help them. 



### 🎤 Why is this feature needed ?

This feature is needed for the people who don't know english but know Armenian.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Updating /docs/docs/notification-center/react-components.md for the language added.
- Submit a PR


### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1404983699,1654,[NV-961] - `@novu/node`: complete the notification templates module,"* [ ] Get all
* [ ] Get one
* [ ] Create
* [ ] Update
* [ ] Delete
* [ ] Update status
* [ ] Completed docs

Feel free to tell me if there's more I'm missing and I'll update the list.
**Issue URL:** [https://github.com/novuhq/novu/issues/1320](https://github.com/novuhq/novu/issues/1320)",,
1404983683,1653,[NV-960] - `@novu/node`: complete the notification groups module,"* [ ] Get all
* [ ] Get one (no endpoint)
* [ ] Create
* [ ] Update (no endpoint)
* [ ] Delete (no endpoint)
* [ ] Completed docs

Feel free to tell me if there's more I'm missing and I'll update the list.
**Issue URL:** [https://github.com/novuhq/novu/issues/1321](https://github.com/novuhq/novu/issues/1321)",,
1404983666,1652,[NV-959] - `@novu/node`: complete the changes module,"* [ ] Get
* [ ] Get count
* [ ] Apply one
* [ ] Apply many
* [ ] Completed docs

Feel free to tell me if there's more I'm missing and I'll update the list.
**Issue URL:** [https://github.com/novuhq/novu/issues/1322](https://github.com/novuhq/novu/issues/1322)",,
1404983642,1651,[NV-958] - `@novu/node`: complete the environments module,"* [ ] Get current
* [ ] Get all
* [ ] Create
* [ ] Get API keys
* [ ] Update widget settings
* [ ] Update (no endpoint or not documented)
* [ ] Delete (no endpoint or not documented)
* [ ] Completed docs

Feel free to tell me if there's more I'm missing and I'll update the list.
**Issue URL:** [https://github.com/novuhq/novu/issues/1323](https://github.com/novuhq/novu/issues/1323)",,
1404983624,1650,[NV-957] - `@novu/node`: complete the feed module,"* [ ] Create
* [ ] Get
* [ ] Delete
* [ ] Update (no endpoint or not documented)
* [ ] Completed docs

Feel free to tell me if there's more I'm missing and I'll update the list.
**Issue URL:** [https://github.com/novuhq/novu/issues/1324](https://github.com/novuhq/novu/issues/1324)",,
1404983601,1649,[NV-984] - Test EmailJS provider connection when creating/updating integration,"**Why?**

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.
Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.
We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.


**How?**
We will need to create a new method i.e,checkIntegration for the `EmailJS` provider. 
Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.
Path to the file : `providers/emailjs/src/lib/emailjs.provider.ts`
Look into the EmailJS docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.
If there's no dedicated endpoint/method provided by EmailJS, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.
P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this pr for more details.",,
1404983589,1648,[NV-988] - Test MailerSend provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `MailerSend` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/mailersend/src/lib/mailersend.provider.ts`

Look into the MailerSend docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by MailerSend, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.",,
1402869724,1603,🚀 Feature: Add i18n - Hebrew Language support,"### 🔖 Feature description

People in Israel speak Hebrew, so this feature is to help them.

### 🎤 Why is this feature needed ?

This feature is needed for people who don't know English but know Hebrew.

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to the I18NLanguage type in the lang.ts file.
Updating /docs/docs/notification-center/react-components.md for the language added.
Finally submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1402352400,1594,🚀 Feature: Add i18n - Thai Language support,"### 🔖 Feature description

People in Thailand speak in Thai so this feature is to help them.

### 🎤 Why is this feature needed ?

This feature is needed for the people who don't know English, but know Thai.

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to I18NLanguage type at lang.ts file.
Updating /docs/docs/notification-center/react-components.md for the language added.
Finally Submitting a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1402347455,1592,🚀 Feature: Add i18n - Zulu Language Support,"### 🔖 Feature description

People in South Africe(RSA) speak in Zulu so this feature is to help them.

### 🎤 Why is this feature needed ?

This feature is needed for the people who don't know English, but know Zulu

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to I18NLanguage type at lang.ts file.
Updating /docs/docs/notification-center/react-components.md for the language added.
Finally Submitting a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1402347101,1591,🚀 Feature:  Add i18n - SpanishLanguage Support,"### 🔖 Feature description

People in Spain speak Spanish so this feature is to help them.

### 🎤 Why is this feature needed ?

This feature is needed for people who don't know English but know Spanish.

### ✌️ How do you aim to achieve this?

-Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
-Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
-Add the language code to the I18NLanguage type in lang.ts file.
-Updating /docs/docs/notification-center/react-components.MD for the language added.
Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

_No response_",,
1402318608,1588,🚀 Feature: Add i18n - Uzbek Language Support,"### 🔖 Feature description

People in Uzbekistan speak in Uzbek so this feature is to help them.

### 🎤 Why is this feature needed ?

This feature is needed for the people who don't know english but know Uzbek.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Updating /docs/docs/notification-center/react-components.md for the language added.
- Submit a PR


### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1402307000,1585,🚀 Feature: i18n - Azerbaijani Language support,"### 🔖 Feature description

Feature to add i18n - Azerbaijani Language Support



### 🎤 Why is this feature needed ?

For people who are not familiar with English but are familiar with Azerbaijani.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Updating /docs/docs/notification-center/react-components.md for the language added.
- Submit a PR

 

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1402227013,1581,🚀 Feature: i18n - Swedish Language support,"### 🔖 Feature description


Feature to add i18n - Swedish Language Support

### 🎤 Why is this feature needed ?

For people who are not familiar with English.

### ✌️ How do you aim to achieve this?


- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Updating /docs/docs/notification-center/react-components.md for the language added.
- Submit a PR


### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1401929368,1568,🚀 Feature: i18n - Dutch language support,"### 🔖 Feature description

Recently we introduced an easy way to add translations for the @novu/notification-center component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language).

### 🎤 Why is this feature needed ?

For Dutch people who don't understand English

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to I18NLanguage type at lang.ts file.
Submit a PR :)

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1401865459,1560,🚀 Feature: i18n Language support (Hindi),"### 🔖 Feature description

Adding Hindi Language support.

### 🎤 Why is this feature needed ?

For Hindi people who are not familiar with English

### ✌️ How do you aim to achieve this?

- Add a new translation file here: `packages/notification-center/src/i18n/languages` . You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at `package/notification-center/src/i18n/lang.ts`
- Add the language code to I18NLanguage type at `lang.ts` file.
- Updating `/docs/docs/notification-center/react-components.md` for the language added.
- Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1401858148,1558,🚀 Feature: i18n - Filipino Support,"### 🔖 Feature description

Adding Filipino language support.


### 🎤 Why is this feature needed ?

For Filipino people who are not familiar with English.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at `packages/notification-center/src/i18n/lang.ts`
- Add the language code to I18NLanguage type at `lang.ts` file.
- Updating `/docs/docs/notification-center/react-components.md` for the language added.
- Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1401855964,1557,🚀 Feature: i18n - Hmong Support,"### 🔖 Feature description

Adding Hmong language support.

### 🎤 Why is this feature needed ?

For Hmong people who are not familiar with English.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at `packages/notification-center/src/i18n/lang.ts`
- Add the language code to I18NLanguage type at `lang.ts` file.
- Updating `/docs/docs/notification-center/react-components.md` for the language added.
- Submit a PR


### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1401851343,1556,i18n - Norwegian support,"### 🔖 Feature description

Feature to add i18n - Norwegian Language Support

### 🎤 Why is this feature needed ?

For Norwegian people who are not familiar with English.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Updating /docs/docs/notification-center/react-components.md for the language added.
- Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1401837524,1551,🚀 Feature: Vietnamese Support,"### 🔖 Feature description

Adding Vietnamese language support.

### 🎤 Why is this feature needed ?

For Vietnamese people who are not familiar with English.

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to I18NLanguage type at lang.ts file.
Updating /docs/docs/notification-center/react-components.md for the language added.
Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1401837482,1550,🐛 Bug Report:  Inaccurate Translation in bn.ts [ Bengali Lang ],"### 📜 Description

The current translation for notifications in Bengali lang translation file  bn.ts is  বিজ্ঞপ্তি which means **notice** and hence inaccurate.

### 👟 Reproduction steps

navigate to  https://github.com/novuhq/novu/blob/main/packages/notification-center/src/i18n/languages/bn.ts

### 👍 Expected behavior

The attribute value should translate to notifications

### 👎 Actual Behavior with Screenshots

-

### 💻 Operating system

Windows

### 🤖 Node Version

16.17.1

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1400817409,1525,🚀 Feature:  i18n Language Support [ Romanian ],"### 🔖 Feature description

Adding Romanian language support to the project.

### 🎤 Why is this feature needed ?

It will be helpful Romanian people who may not be familiar with English.

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages.
Add the translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to I18NLanguage type at lang.ts file.
Updating /docs/docs/notification-center/react-components.md for the language added.
Submitting a PR :)

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1400651312,1518,🚀 Feature: i18n Language Support [ Bangla ] ,"### 🔖 Feature description

Adding Bengali language support to the project.


### 🎤 Why is this feature needed ?

Will be helpful Bengali people who may not be familiar with English.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add the translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Updating /docs/docs/notification-center/react-components.md for the language added.
- Submitting PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1400143540,1510,🚀 Feature: Add i18n - Sinhala Support,"### 🔖 Feature description

- Add Sinhala language support.

### 🎤 Why is this feature needed ?

- For Sinhalese people who are not familiar with English.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: packages/notification-center/src/i18n/languages.
- Add translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Updating /docs/docs/notification-center/react-components.md for the language added.
- Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1400071295,1509,🚀 Feature: i18n - Maithili Support,"### 🔖 Feature description

Adding Maithili language support.

### 🎤 Why is this feature needed ?

For Maithili people who are not familiar with English.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Updating /docs/docs/notification-center/react-components.md for the language added.
- Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1399766525,1503,🚀 Feature: i18n - Turkish Support,"### 🔖 Feature description

Adding Turkish language support.

### 🎤 Why is this feature needed ?

For Turkish people who are not familiar with English.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Updating /docs/docs/notification-center/react-components.md for the language added.
- Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1398855411,1494,🚀 Feature: i18n - Lao Support ,"### 🔖 Feature description

Adding Lao language support.

### 🎤 Why is this feature needed ?

For Lao people who are not familiar with English.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at `packages/notification-center/src/i18n/lang.ts`
- Add the language code to I18NLanguage type at `lang.ts` file.
- Updating `/docs/docs/notification-center/react-components.md` for the language added.
- Submit a PR


### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1398846297,1491,🚀 Feature: i18n - Basque Support,"### 🔖 Feature description

Adding Basque language support.

### 🎤 Why is this feature needed ?

For Basque people who are not familiar with English.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at `packages/notification-center/src/i18n/lang.ts`
- Add the language code to I18NLanguage type at `lang.ts` file.
- Updating `/docs/docs/notification-center/react-components.md` for the language added.
- Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

> Yes I am willing to submit a PR!",,
1398808455,1488,🚀 Feature: i18n - Telugu Support,"### 🔖 Feature description

Adding Telugu language support.

### 🎤 Why is this feature needed ?

For Telugu people who are not familiar with English.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at `packages/notification-center/src/i18n/lang.ts`
- Add the language code to I18NLanguage type at `lang.ts` file.
- Updating `/docs/docs/notification-center/react-components.md` for the language added.
- Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1398197684,1475,🚀 Feature: Danish Support,"### 🔖 Feature description

Adding Danish language support.

### 🎤 Why is this feature needed ?

For Danish people who are not familiar with English.

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to I18NLanguage type at lang.ts file.
Updating /docs/docs/notification-center/react-components.md for the language added.
Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1397869227,1471,[NV-997] - Test Amazon SES provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `SES` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/ses/src/lib/ses.provider.ts`

Look into the SES docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by SES, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.",,
1397869213,1470,[NV-995] - Test Postmark provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Postmark` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/postmark/src/lib/postmark.provider.ts`

Look into the Postmark docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Postmark, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.",,
1397869183,1469,[NV-990] - Test Mailjet provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Mailjet` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/mailjet/src/lib/mailjet.provider.ts`

Look into the Mailjet docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Mailjet, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.",,
1397869181,1468,[NV-994] - Test Nodemailer provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Nodemailer` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/nodemailer/src/lib/nodemailer.provider.ts`

Look into the Nodemailer docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Nodemailer, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.",,
1397869163,1467,[NV-991] - Test Mandrill provider connection when creating/updating integration,"## Why?

Currently, when the user connects a provider from the Integration store, there's no option to `Test the provider connection` before saving/updating it for wrong/bad credentials or other possible issues.

Without the `Test` functionality, the provider connection is saved with the possible wrong credentials and the issue is discovered at a much later stage.

We want to have a `Test` functionality during the connection stage to let users catch the errors as early as possible.

## How?

We will need to create a new method i.e,checkIntegration for the `Mandrill` provider.

Currently, we have a placeholder `checkIntegration` method, you will need to update this method accordingly.

Path to the file : `providers/mandrill/src/lib/mandrill.provider.ts`

Look into the Mandrill docs and if they provide a dedicated endpoint or method to test the connection, then implement the same inside the checkIntegration method.

If there's no dedicated endpoint/method provided by Mandrill, then re-use the `send` functionality of the provider to check and ensure proper integration, and return the errors if any.

P.S: We have integrated the same for the `sendgrid` provider, you may use it as a reference or follow this [pr](https://github.com/novuhq/novu/pull/1254) for more details.",,
1397648422,1452,🚀 Feature: i18n - Korean Support,"### 🔖 Feature description

Adding Korean language support.

### 🎤 Why is this feature needed ?

For Korean people who are not familiar with English.

### ✌️ How do you aim to achieve this?

- Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at `packages/notification-center/src/i18n/lang.ts`
- Add the language code to I18NLanguage type at `lang.ts` file.
- Updating `/docs/docs/notification-center/react-components.md` for the language added.
- Submit a PR

### 🔄️ Additional Information

I haven't found any alternatives. I want to work on this issue as part of hacktoberfest

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1397461433,1443,🚀 Feature: i18n - Japanese Support,"### 🔖 Feature description

Adding Japanese language support.

### 🎤 Why is this feature needed ?

For Japanese people who are not familiar with English.

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to I18NLanguage type at lang.ts file.
Updating /docs/docs/notification-center/react-components.md for the language added.
Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1396451043,1426,🚀 Feature: i18n - Add catalan support,"### 🔖 Feature description

Adding Catalan language support

### 🎤 Why is this feature needed ?

To reach more customers with a personalized UI for their language

### ✌️ How do you aim to achieve this?

I will add a new translations file in `/packages/notification-center/src/i18n/languages/ca.ts`.
Import the translations in `lang.ts` file, in the parent directory.
Add the new language to docs.
Submit a PR.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1396061645,1422,🚀 Feature: i18n - Indonesian Support,"### 🔖 Feature description

Adding Indonesian Language Support

### 🎤 Why is this feature needed ?

For Indonesian Peoples, Who don't understand other languages or have trouble dealing with them.

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to I18NLanguage type at lang.ts file.
Submit a PR

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1395889308,1419,i18n - Gujarati Support,"### 🔖 Feature description

Adding Gujarati Language Support

### 🎤 Why is this feature needed ?

For Gujarati Peoples, Who don't understand other languages or have trouble dealing with them.

### ✌️ How do you aim to achieve this?

Add a new translation file here: packages/notification-center/src/i18n/languages.
Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
Add the language code to I18NLanguage type at lang.ts file.
Finally submitting a PR 

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1394948066,1405,i18n - Tamil Support ,"## Why?

Recently novu introduced an easy way to add translations for the @novu/notification-center component interface. So we can either specify a translation object or pass a premade translation.

## How?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.

- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts

- Add the language code to I18NLanguage type at lang.ts file.



I'd like to work on this issue.

",,
1393841022,1378,🚀 Feature: add Polish language support,"### 🔖 Feature description

Add Polish language to the library

### 🎤 Why is this feature needed ?

Recently we introduced an easy way to add translations for the @novu/notification-center component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language).

### ✌️ How do you aim to achieve this?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Submit a PR 🙂

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1393790930,1374,i18n - Punjabi Support ,"## Why?

Recently we introduced an easy way to add translations for the @novu/notification-center component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language).

## How?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.

Submit a PR 🙂",,
1393782585,1372, i18n - Urdu Support ,"## Why?

Recently we introduced an easy way to add translations for the @novu/notification-center component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language).

## How?

- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.

Submit a PR 🙂",,
1393758212,1367,i18n - Marathi Support,"## Why

Recently we introduced an easy way to add translations for the `@novu/notification-center` component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language).

## How

* Add a new translation file here: `packages/notification-center/src/i18n/languages`.
* Add your translation import to the `TRANSLATIONS` object at `packages/notification-center/src/i18n/lang.ts`
* Add the language code to `I18NLanguage` type at `lang.ts` file.
* Submit a PR :)",,
1393711317,1356,I18n(FR) ,"Recently Novu has introduced an easy way to add translations for the `@novu/notification-center` component interface. So I would like to add support for the French language.

Please assign this issue to me.",,
1393709530,1355,i18n - Nepali Support,"Recently Novu has introduced an easy way to add translations for the @novu/notification-center component interface. So I would like to add support for the Nepali language.

Please assign this issue to me.",,
1393642974,1352,i18n - Kannada Support,"## Why

Recently we introduced an easy way to add translations for the `@novu/notification-center` component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language).

## How

* Add a new translation file here: `packages/notification-center/src/i18n/languages`.
* Add your translation import to the `TRANSLATIONS` object at `packages/notification-center/src/i18n/lang.ts`
* Add the language code to `I18NLanguage` type at `lang.ts` file.
* Submit a PR :)",,
1393243495,1327,i18n - Odia Support,"## Why?
Recently we introduced an easy way to add translations for the @novu/notification-center component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language).

## How?
- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Submit a PR 🙂",,
1391366313,1324,`@novu/node`: complete the feed module,"- [ ] Create
- [ ] Get
- [ ] Delete
- [ ] Update (no endpoint or not documented)
- [ ] Completed docs

Feel free to tell me if there's more I'm missing and I'll update the list.",,
1391365231,1323,`@novu/node`: complete the environments module,"- [x] #1928
- [x] #1370
- [x] https://github.com/novuhq/api-docs/pull/22

Feel free to tell me if there's more I'm missing and I'll update the list.",,
1391363633,1322,`@novu/node`: complete the changes module,"- [x] Get
- [x] Get count
- [x] Apply one
- [x] Apply many
- [x] https://github.com/novuhq/api-docs/pull/15

Feel free to tell me if there's more I'm missing and I'll update the list.",,
1391362386,1321,`@novu/node`: complete the notification groups module,"- [x] #1741 (Get all, create)
- [x] Get one (no endpoint)
- [x] Update (no endpoint)
- [x] Delete (no endpoint)
- [x] https://github.com/novuhq/api-docs/pull/32

Feel free to tell me if there's more I'm missing and I'll update the list.",,
1391361075,1320,`@novu/node`: complete the notification templates module,"- [x] Get all
- [x] Get one
- [x] Create
- [x] Update
- [x] Delete
- [x] Update status
- [x] https://github.com/novuhq/api-docs/pull/18

Feel free to tell me if there's more I'm missing and I'll update the list.",,
1391360151,1319,`@novu/node`: complete the integrations module,"- [ ] Get all
- [ ] Get one (no endpoint or not documented)
- [ ] Create
- [ ] Get active
- [ ] Update
- [ ] Delete
- [ ] Completed docs

Feel free to tell me if there's more I'm missing and I'll update the list.",,
1391358380,1318,`@novu/node`: complete the subscribers module,"- [x] #1538
- [x] https://github.com/novuhq/api-docs/pull/19

Moreover, it would be great if naming across API and client was consistent (e.g. ""Update subscriber credentials"" & ""subscribers.setCredendials"")

Feel free to tell me if there's more I'm missing and I'll update the list.",,
1391349179,1317,`@novu/node`: complete the events module,"Trigger, Broadcast, Cancel

- [x] #1357
- [x] https://github.com/novuhq/api-docs/pull/17

Feel free to tell me if there's more I'm missing and I'll update the list.",,
1384617271,1294,🚀 Feature: Change Admin features access,"### 🔖 Feature description

Would be great if the access to admin features (`@Roles(MemberRoleEnum.ADMIN)` decorator) used a special token instead, like Supabase and its SERVICE_ROLE key.

### 🎤 Why is this feature needed ?

When interacting with the API programmatically, some endpoints are only available for Admin users. However, it requires them to be logged in, which may not be possible for instance when using social providers or the user might not want to put its credentials in the app, even using env variables.

### ✌️ How do you aim to achieve this?

I'd like another Api key for each environment that only admins can access and that have admin privileges in the api. In a way, that looks like Supabase ANON key (that can be public) and SERVICE_ROLE key (which can bypass RLS).

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

_No response_",,
1379736288,1275,🐛 Bug Report: Typescript theme,"### 📜 Description

When customizing the `PopoverNotificationCenter` 
When
```js
theme={{
  dark: {
    notificationItem: {
      unseen: {
        background: ""#2c3646""
      },
      seen: {
        background: ""#1a202c""
      }
    }
  }
}}
```

![image](https://user-images.githubusercontent.com/34971091/191319673-959b00b2-3ef2-4261-a65a-aeab45b63758.png)
I get an error that styling button is not optional and I think it should be.

### 👟 Reproduction steps

It's self explanatory :) 

### 👍 Expected behavior

In this file https://github.com/novuhq/novu/blob/0aee8ca5cbf51a930305cf424166b9825851914a/packages/notification-center/src/store/novu-theme.context.ts#L64
I think `buttons `should be optional like `seen `and `unseen `properties 

### 👎 Actual Behavior with Screenshots

I don't think this is necessary 

### 💻 Operating system

Windows

### 🤖 Node Version

12

### 📃 Provide any additional context for the Bug.

_No response_

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

### Are you willing to submit PR?

Yes I am willing to submit a PR!",,
1360714598,1191,"🐛 Bug Report: notification center attempts to include child_process, fs, etc.","### 📜 Description

```
Module ""child_process"" has been externalized for browser compatibility. Cannot access ""child_process.spawn"" in client code.
```

This appears to be due to the reliance on `axios` which does not support esm (or at least known issues with vite).

Ref: https://github.com/vitejs/vite/issues/174, https://github.com/vitejs/vite/issues/184, etc.

Please consider using fetch instead.

### 👟 Reproduction steps

1. Use vite (ts react)
2. `import { NovuProvider } from ""@novu/notification-center"";`
3. There ya go

### 👍 Expected behavior

Probably want it to work with vite.

### 👎 Actual Behavior with Screenshots

Crashes entire app.

### 💻 Operating system

Linux

### 🤖 Node Version

16

### 📃 Provide any additional context for the Bug.

Technically running via Tauri, but I don't think relevant to the bug

### 👀 Have you spent some time to check if this bug has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Contributing Guidelines?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)",,
1353001494,1138,[NV-1248] 🚀 Feature: Use the Provider's template.,"### 🔖 Feature description

Provides a new type of integration that serves to combine the template id and Variable and forward it to the SMS provider.

### 🎤 Why is this feature needed ?

In China SMS templates must be reviewed by the provider.
The provider's interface is to pass the SMS template id and variables, not the full text content.

### ✌️ How do you aim to achieve this?

Add a forward type integration.
Add an action in Workflow Editor, select Integration in the action and fill in the template id from the vendor.

### 🔄️ Additional Information

_No response_

### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)

My native language is not English, so there may be errors in the description.

<sub>[NV-1248](https://linear.app/novu/issue/NV-1248/🚀-feature-use-the-providers-template)</sub>",,
1352999149,1137,🚀 Feature: SSE (Server Sent Events) support,"### 🔖 Feature description

Support for SSE

### 🎤 Why is this feature needed ?

SSE is best used when it's not necessary to send data from client to server. In status updates and push notification applications, the data flow -usually- follows a single path that is from the server to the client only.

This is what SSE is designed for, so WebSocket would be overkill as you are opening UDP bi-directional channels at each request/user which will consume server resources with all probability.

### ✌️ How do you aim to achieve this?

Replicating websocket implementation with SSE should be relatively easy. See [Server-Sent Events](https://docs.nestjs.com/techniques/server-sent-events) in Nest JS documentation.

### 🔄️ Additional Information

Websockets and SSE (Server Sent Events) are both capable of pushing data **to** browsers, however they are not competing technologies.

Websockets connections can both send data to the browser and receive data from the browser. A good example of an application that could use websockets is a chat application.

**SSE connections can only push data to the browser**. Notifications, Online stock quotes, or RRSS updating the timeline or feed are good examples of an application that could benefit from SSE.

In practice since everything that can be done with SSE can also be done with Websockets, however, it can be overkill for some types of application, and the server will consume less resources when using SSE.

SSE applies a _publish-subscribe pattern_ or _request-respond pattern_, despite the response is a stream.

**Browser support:**

[Server-sent events. Eventsource](https://caniuse.com/eventsource) ~97.97%

Furthermore SSE can be polyfilled into older browsers that do not support it natively using just JavaScript. Some implementations of SSE polyfills can be found on the [Moderniz github page](https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills).

**Related Libs:**
- [EventSource](https://github.com/Yaffle/EventSource/blob/master/src/eventsource.js) by Yaffle.
- [EventSource](https://github.com/remy/polyfills/blob/master/EventSource.js) by Remi Sharp.
- [Nest JS - SSE](https://github.com/serkyron/nestjs-sse) by serkyron (Note that it's not using HTTP2).

**Limitations:**

- **Maximum open connections limit.** SSE over HTTP/1.1 suffers from a limitation to the maximum number of open connections, which can be specially painful when opening various tabs as the limit is per browser and set to a very low number (6). The issue has been marked as ""Won't fix"" in [Chrome](https://bugs.chromium.org/p/chromium/issues/detail?id=275955) and [Firefox](https://bugzilla.mozilla.org/show_bug.cgi?id=906896). This limit is per browser + domain, so that means that you can open 6 SSE connections across all of the tabs to www.mywebsite1.com and another 6 SSE connections to www.mywebsite2.com.
- When using **HTTP/2** (recommended), the maximum number of simultaneous HTTP streams is negotiated between the server and the client (defaults to 100).
- **No binary support.** While WS can transmit both binary data and UTF-8, SSE is limited to UTF-8.

**Extended information sources:**
- [EventSource basics](https://web.dev/eventsource-basics/)
- [EventSource MDN](https://developer.mozilla.org/en-US/docs/Web/API/EventSource)
- [WHATWG Specification](https://html.spec.whatwg.org/multipage/server-sent-events.html#the-eventsource-interface)

**TL;DR**
In Server-sent Events, the communication is carried out from server to browser only, the browser/client cannot send any data to the server through the same connection. This kind of communication is mainly used when the need is only to show the updated data, then the server sends the message whenever the data gets updated. It is a one-way communication from the Server to the client attached to a given event.


### 👀 Have you spent some time to check if this feature request has been raised before?

- [X] I checked and didn't find similar issue

### 🏢 Have you read the Code of Conduct?

- [X] I have read the [Contributing Guidelines](https://github.com/novuhq/novu/blob/main/CONTRIBUTING.md)",,
1344866760,1084,[NV-796] - i18n - Sanskrit Support,"## Why?
Recently we introduced an easy way to add translations for the @novu/notification-center component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language).

## How?
- Add a new translation file here: packages/notification-center/src/i18n/languages. You can follow the en.ts example.
- Add your translation import to the TRANSLATIONS object at packages/notification-center/src/i18n/lang.ts
- Add the language code to I18NLanguage type at lang.ts file.
- Submit a PR  🙂",,
1341193190,1050,Add Kannel SMS provider,"## What?
To add [kannel](https://kannel.org/) as a new SMS provider, similar the the NodeMailer Email provider, an underlying protocol provider.

## Why?
So kannel users, and people who want to use SMS gateway could do that with Novu, while simply hosting kannel on their network.

## How?
First thing, the assumption is a kannel server is already up and running. Looking into [kannel userguide](https://kannel.org/download/1.4.5/userguide-1.4.5/userguide.html), section Table 7-17. SMS Push (send-sms) CGI Variables we can see how send SMS using this game. See below basic 

| Property  | Description |
| ------------- | ------------- |
| username  | configured to use kannel interface  |
| password  | configured to use kannel interface  |
| from  | shortcode  |
| to  | cellphone number  |
| smsc  | an id of the connection,  usually given for each mobile operator  |
| text  | text of the SMS, URL encoded  |
| priority  | Sets the Priority value (range 0-3 is allowed). (Defaults to 0, which is the lowest priority). |
| meta-data - optional  | For SMPP  |
| dlr-mask  | Request for delivery reports with the state of the sent message  |
| dlr-url  | Request for delivery reports with the state of the sent message wehbook url  |





Add new provider based on [this guide](https://docs.notifire.co/docs/community/create-provider)

## Usage
Example for Kannel SMS provider registration needs to be finalized.
```ts
await notifire.registerProvider(
  new KannelSmsProvider({
    username: process.env.KANNEL_USERNAME,
    password: process.env.KANNEL_PASSWORD,
    host: process.env.KANNEL_HOST,
    port: process.env.KANNEL_PORT,
    dlr-mask: process.env.KANNEL_DLR_MASK, // most likely mask 31 so Novu can get all reports
    dlr-url: process.env.KANNEL_DLR_URL,
  })
);
```

## More Information
In order for Kannel integration to work there is one major change from other ""simple"" SMS provider, that is the smsc variable. In most cases this is being handled by SMS provider, in Kannel this needs to be passed, and in case the mobile operator was not found/found not found on mobile operator, a response using dlr-mask,  another mobile operator should be tried.

This could be resolved as a variable in the `trigger` function, and an iterative process up until the message was received on the phone or the mobile operator. Can see mapping [here](https://gist.github.com/grantpullen/3d550f31c454e80fda8fc0d5b9105fd0).
",,
1327776600,948,Failing e2e test in the notifications-editor.spec.ts file,"## What?
The e2e test `should edit notification` in the `notifications-editor.spec.ts` file is failing.
In the PR: #937 I've marked it with `it.skip` so it will be skipped by now. 
We should verify the cause and fix it.

## How?
Remove the `.skip` from the test, then run the e2e tests by `pnpm run cypress:open` in the `web` app folder.
Choose the browser and select the `notifications-editor.spec.ts` file. 

",,
1327092840,944,[NV-738] - i18n - Spanish Support,"## Why?

Recently we introduced an easy way to add translations for the `@novu/notification-center` component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language). 

## How?

* Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the `en.ts` example.
* Add your translation import to the `TRANSLATIONS` object at `packages/notification-center/src/i18n/lang.ts` 
* Add the language code to `I18NLanguage` type at `lang.ts` file.
* Submit a PR :)",,
1327092814,943,[NV-739] - i18n - Hindi Support,"## Why?

Recently we introduced an easy way to add translations for the `@novu/notification-center` component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language). 

## How?

* Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the `en.ts` example.
* Add your translation import to the `TRANSLATIONS` object at `packages/notification-center/src/i18n/lang.ts` 
* Add the language code to `I18NLanguage` type at `lang.ts` file.
* Submit a PR :)",,
1327092794,942,[NV-740] - i18n - French support,"## Why?

Recently we introduced an easy way to add translations for the `@novu/notification-center` component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language). 

## How?

* Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the `en.ts` example.
* Add your translation import to the `TRANSLATIONS` object at `packages/notification-center/src/i18n/lang.ts` 
* Add the language code to `I18NLanguage` type at `lang.ts` file.
* Submit a PR :)",,
1327092784,941,[NV-742] - i18n - Bengali support,"## Why?

Recently we introduced an easy way to add translations for the `@novu/notification-center` component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language). 

## How?

* Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the `en.ts` example.
* Add your translation import to the `TRANSLATIONS` object at `packages/notification-center/src/i18n/lang.ts` 
* Add the language code to `I18NLanguage` type at `lang.ts` file.
* Submit a PR :)",,
1327092771,940,[NV-741] - i18n - Russian support,"## Why?

Recently we introduced an easy way to add translations for the `@novu/notification-center` component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language). 

## How?

* Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the `en.ts` example.
* Add your translation import to the `TRANSLATIONS` object at `packages/notification-center/src/i18n/lang.ts` 
* Add the language code to `I18NLanguage` type at `lang.ts` file.
* Submit a PR :)",,
1327092727,939,[NV-743] - i18n - Italian Support,"## Why?

Recently we introduced an easy way to add translations for the `@novu/notification-center` component interface. So you can either specify a translation object or pass a premade translation. Read more about it on the [docs](https://docs.novu.co/notification-center/react-components#customize-the-ui-language). 

## How?

* Add a new translation file here: `packages/notification-center/src/i18n/languages`. You can follow the `en.ts` example.
* Add your translation import to the `TRANSLATIONS` object at `packages/notification-center/src/i18n/lang.ts` 
* Add the language code to `I18NLanguage` type at `lang.ts` file.
* Submit a PR :)",,
1324146682,928,[NV-363] - Improve command.create static method to be reused,"## What?

Right now each usecase command in our API does a code duplication for the static create method for example in the `CompileTemplateCommand` command:

```
export class CompileTemplateCommand {
  static create(data: CompileTemplateCommand) {
    return CommandHelper.create<CompileTemplateCommand>(CompileTemplateCommand, data);
  }

  @IsDefined()
  templateId: 'basic' | 'custom';
}
```

This is repetitive and prone to errors, would be great if we could abstract this static call and still preserve the validation functionality and type support from typescript from each individual command.

The command `create` method is called on the `controller` file when using a usecase, the create will run `class-validators` on all the validation annotations. 

## Why?

The static method is copied around for all commands and it's very repetitive. Are there better solutions for this?

## Done Criteria

* The `create` method is reused rather than duplicated
* Each command provides the correct type completion when used
* `class-validators` are still working as previously.",,
1312746064,878,update mailjet logo in dark theme,"**Describe the bug**
Looks like the Mailjet logo is not the most compatible in dark mode. The error in the logo is black.

**To Reproduce**
Steps to reproduce the behavior:
1. Go to IntegrationStore page

**Expected behavior**
We won't have too dark colors on the dark theme.

**Screenshots**
![image](https://user-images.githubusercontent.com/39195835/180146258-781aa059-9fa8-4ee5-b9ee-7ce5c20c393e.png)

**Additional context**
Maybe it will be a good idea to change the arrow to white.

If the new logo will be a png type the steps that will be done are only a change of logo file that located in `apps/web/public/static/images/providers/dark`
If the new logo will be svg type you will need to update the file on the location above and update the name of the file that is located in 
`libs/shared/src/consts/providers/providers.ts` under the Mailjet instance.",1195703171,"@djabarovgeorge I did it, could you check if it's good enough to close this issue?"
1312746064,878,update mailjet logo in dark theme,"**Describe the bug**
Looks like the Mailjet logo is not the most compatible in dark mode. The error in the logo is black.

**To Reproduce**
Steps to reproduce the behavior:
1. Go to IntegrationStore page

**Expected behavior**
We won't have too dark colors on the dark theme.

**Screenshots**
![image](https://user-images.githubusercontent.com/39195835/180146258-781aa059-9fa8-4ee5-b9ee-7ce5c20c393e.png)

**Additional context**
Maybe it will be a good idea to change the arrow to white.

If the new logo will be a png type the steps that will be done are only a change of logo file that located in `apps/web/public/static/images/providers/dark`
If the new logo will be svg type you will need to update the file on the location above and update the name of the file that is located in 
`libs/shared/src/consts/providers/providers.ts` under the Mailjet instance.",1195713674,Closing :)
1308670273,865,Allow non AWS infrastructure setups NV-681,"## What?
Currently, Novu is coupled to AWS through its .env config. It would be nice to allow a developer to setup with an alternative infrastructure provider, such as Google Cloud Platform (a.k.a GCP), instead.

## Why?
Some company's are known to be a complete AWS, GCP, or Azure shop. They wouldn't be able to adopt this repo on-prem if they were not on AWS. The only way about this is to fork this repo, update the AWS logic, and replace it with a GCP one. Adding logic to a forked repo just makes it a little harder to keep it up to date with the upstream source. It would be best if we can avoid that and make the adoption to this repo a little easier.

## How?
A potentially better experience might be to allow a developer to either specify the minimum GCP, AWS, or Azure configurations to get the application running with their chosen infrastructure provider. Since I'm only writing because I'm interested in GCP, I'll list out the items that should be done for that.

1. .env.example. : demonstrate the GCP related configs that can be potentially placed there (i.e `GCP_SECRETY_ACCESS_KEY`, `GCS_REGION`, etc). I'm not fully sure what minimum information is required to store items in Google Cloud Storage, but those would have to be laid out in this file. 
2. env-validator.ts : Update to see if either S3 or GCS (Google Cloud Storage) information has been provided. If not, an error can be thrown.
3. storage.service.ts: Update this file to provide to determine whether to store items in GCP or in AWS. To make this scalable, beyond the GCP scope,  it may make sense to create 1 file per provider (i.e. S3StorageService and a GCSStorageService) with a common interface. Then, storage.service.ts, can be used to simply select between the different tech depending on the env configs.

More work may be required, but I think this is all that's necessary.
",1188767493,Sounds like a good request to me  - @scopsy  WDYT?  Can this be communitized?
1308670273,865,Allow non AWS infrastructure setups NV-681,"## What?
Currently, Novu is coupled to AWS through its .env config. It would be nice to allow a developer to setup with an alternative infrastructure provider, such as Google Cloud Platform (a.k.a GCP), instead.

## Why?
Some company's are known to be a complete AWS, GCP, or Azure shop. They wouldn't be able to adopt this repo on-prem if they were not on AWS. The only way about this is to fork this repo, update the AWS logic, and replace it with a GCP one. Adding logic to a forked repo just makes it a little harder to keep it up to date with the upstream source. It would be best if we can avoid that and make the adoption to this repo a little easier.

## How?
A potentially better experience might be to allow a developer to either specify the minimum GCP, AWS, or Azure configurations to get the application running with their chosen infrastructure provider. Since I'm only writing because I'm interested in GCP, I'll list out the items that should be done for that.

1. .env.example. : demonstrate the GCP related configs that can be potentially placed there (i.e `GCP_SECRETY_ACCESS_KEY`, `GCS_REGION`, etc). I'm not fully sure what minimum information is required to store items in Google Cloud Storage, but those would have to be laid out in this file. 
2. env-validator.ts : Update to see if either S3 or GCS (Google Cloud Storage) information has been provided. If not, an error can be thrown.
3. storage.service.ts: Update this file to provide to determine whether to store items in GCP or in AWS. To make this scalable, beyond the GCP scope,  it may make sense to create 1 file per provider (i.e. S3StorageService and a GCSStorageService) with a common interface. Then, storage.service.ts, can be used to simply select between the different tech depending on the env configs.

More work may be required, but I think this is all that's necessary.
",1188782799,"Thanks for the suggestion @alaboudi !

I definitely thinks it's ok to introduce another `StorageService` to interact with GCP depending on the actually provided keys. We can use the existence of `S3_BUCKET_NAME` or `GCP_BUCKET_NAME` to identify which storage service to actually use. 

Same methodology might be relevant when using other cloud-related services in the future. "
1308670273,865,Allow non AWS infrastructure setups NV-681,"## What?
Currently, Novu is coupled to AWS through its .env config. It would be nice to allow a developer to setup with an alternative infrastructure provider, such as Google Cloud Platform (a.k.a GCP), instead.

## Why?
Some company's are known to be a complete AWS, GCP, or Azure shop. They wouldn't be able to adopt this repo on-prem if they were not on AWS. The only way about this is to fork this repo, update the AWS logic, and replace it with a GCP one. Adding logic to a forked repo just makes it a little harder to keep it up to date with the upstream source. It would be best if we can avoid that and make the adoption to this repo a little easier.

## How?
A potentially better experience might be to allow a developer to either specify the minimum GCP, AWS, or Azure configurations to get the application running with their chosen infrastructure provider. Since I'm only writing because I'm interested in GCP, I'll list out the items that should be done for that.

1. .env.example. : demonstrate the GCP related configs that can be potentially placed there (i.e `GCP_SECRETY_ACCESS_KEY`, `GCS_REGION`, etc). I'm not fully sure what minimum information is required to store items in Google Cloud Storage, but those would have to be laid out in this file. 
2. env-validator.ts : Update to see if either S3 or GCS (Google Cloud Storage) information has been provided. If not, an error can be thrown.
3. storage.service.ts: Update this file to provide to determine whether to store items in GCP or in AWS. To make this scalable, beyond the GCP scope,  it may make sense to create 1 file per provider (i.e. S3StorageService and a GCSStorageService) with a common interface. Then, storage.service.ts, can be used to simply select between the different tech depending on the env configs.

More work may be required, but I think this is all that's necessary.
",1189074979,"Yes, exactly what I was thinking. We can let the `StorageService`, or any other service concerned with infrastructure, to abstract away any cloud-service providers. And ya, I like the idea of using something like the key used for the bucket name as the discriminator to decide between cloud storage providers "
1308670273,865,Allow non AWS infrastructure setups NV-681,"## What?
Currently, Novu is coupled to AWS through its .env config. It would be nice to allow a developer to setup with an alternative infrastructure provider, such as Google Cloud Platform (a.k.a GCP), instead.

## Why?
Some company's are known to be a complete AWS, GCP, or Azure shop. They wouldn't be able to adopt this repo on-prem if they were not on AWS. The only way about this is to fork this repo, update the AWS logic, and replace it with a GCP one. Adding logic to a forked repo just makes it a little harder to keep it up to date with the upstream source. It would be best if we can avoid that and make the adoption to this repo a little easier.

## How?
A potentially better experience might be to allow a developer to either specify the minimum GCP, AWS, or Azure configurations to get the application running with their chosen infrastructure provider. Since I'm only writing because I'm interested in GCP, I'll list out the items that should be done for that.

1. .env.example. : demonstrate the GCP related configs that can be potentially placed there (i.e `GCP_SECRETY_ACCESS_KEY`, `GCS_REGION`, etc). I'm not fully sure what minimum information is required to store items in Google Cloud Storage, but those would have to be laid out in this file. 
2. env-validator.ts : Update to see if either S3 or GCS (Google Cloud Storage) information has been provided. If not, an error can be thrown.
3. storage.service.ts: Update this file to provide to determine whether to store items in GCP or in AWS. To make this scalable, beyond the GCP scope,  it may make sense to create 1 file per provider (i.e. S3StorageService and a GCSStorageService) with a common interface. Then, storage.service.ts, can be used to simply select between the different tech depending on the env configs.

More work may be required, but I think this is all that's necessary.
",1189938057,"Cool, then @alaboudi  are you going to take this one?
No pressure, but if you need this little fix fast, then that would be the fastest way :)"
1308670273,865,Allow non AWS infrastructure setups NV-681,"## What?
Currently, Novu is coupled to AWS through its .env config. It would be nice to allow a developer to setup with an alternative infrastructure provider, such as Google Cloud Platform (a.k.a GCP), instead.

## Why?
Some company's are known to be a complete AWS, GCP, or Azure shop. They wouldn't be able to adopt this repo on-prem if they were not on AWS. The only way about this is to fork this repo, update the AWS logic, and replace it with a GCP one. Adding logic to a forked repo just makes it a little harder to keep it up to date with the upstream source. It would be best if we can avoid that and make the adoption to this repo a little easier.

## How?
A potentially better experience might be to allow a developer to either specify the minimum GCP, AWS, or Azure configurations to get the application running with their chosen infrastructure provider. Since I'm only writing because I'm interested in GCP, I'll list out the items that should be done for that.

1. .env.example. : demonstrate the GCP related configs that can be potentially placed there (i.e `GCP_SECRETY_ACCESS_KEY`, `GCS_REGION`, etc). I'm not fully sure what minimum information is required to store items in Google Cloud Storage, but those would have to be laid out in this file. 
2. env-validator.ts : Update to see if either S3 or GCS (Google Cloud Storage) information has been provided. If not, an error can be thrown.
3. storage.service.ts: Update this file to provide to determine whether to store items in GCP or in AWS. To make this scalable, beyond the GCP scope,  it may make sense to create 1 file per provider (i.e. S3StorageService and a GCSStorageService) with a common interface. Then, storage.service.ts, can be used to simply select between the different tech depending on the env configs.

More work may be required, but I think this is all that's necessary.
",1192761710,I can take this on. First Novu contribution 🙌
1308670273,865,Allow non AWS infrastructure setups NV-681,"## What?
Currently, Novu is coupled to AWS through its .env config. It would be nice to allow a developer to setup with an alternative infrastructure provider, such as Google Cloud Platform (a.k.a GCP), instead.

## Why?
Some company's are known to be a complete AWS, GCP, or Azure shop. They wouldn't be able to adopt this repo on-prem if they were not on AWS. The only way about this is to fork this repo, update the AWS logic, and replace it with a GCP one. Adding logic to a forked repo just makes it a little harder to keep it up to date with the upstream source. It would be best if we can avoid that and make the adoption to this repo a little easier.

## How?
A potentially better experience might be to allow a developer to either specify the minimum GCP, AWS, or Azure configurations to get the application running with their chosen infrastructure provider. Since I'm only writing because I'm interested in GCP, I'll list out the items that should be done for that.

1. .env.example. : demonstrate the GCP related configs that can be potentially placed there (i.e `GCP_SECRETY_ACCESS_KEY`, `GCS_REGION`, etc). I'm not fully sure what minimum information is required to store items in Google Cloud Storage, but those would have to be laid out in this file. 
2. env-validator.ts : Update to see if either S3 or GCS (Google Cloud Storage) information has been provided. If not, an error can be thrown.
3. storage.service.ts: Update this file to provide to determine whether to store items in GCP or in AWS. To make this scalable, beyond the GCP scope,  it may make sense to create 1 file per provider (i.e. S3StorageService and a GCSStorageService) with a common interface. Then, storage.service.ts, can be used to simply select between the different tech depending on the env configs.

More work may be required, but I think this is all that's necessary.
",1192781585,@alaboudi I have assigned you now :)
1308670273,865,Allow non AWS infrastructure setups NV-681,"## What?
Currently, Novu is coupled to AWS through its .env config. It would be nice to allow a developer to setup with an alternative infrastructure provider, such as Google Cloud Platform (a.k.a GCP), instead.

## Why?
Some company's are known to be a complete AWS, GCP, or Azure shop. They wouldn't be able to adopt this repo on-prem if they were not on AWS. The only way about this is to fork this repo, update the AWS logic, and replace it with a GCP one. Adding logic to a forked repo just makes it a little harder to keep it up to date with the upstream source. It would be best if we can avoid that and make the adoption to this repo a little easier.

## How?
A potentially better experience might be to allow a developer to either specify the minimum GCP, AWS, or Azure configurations to get the application running with their chosen infrastructure provider. Since I'm only writing because I'm interested in GCP, I'll list out the items that should be done for that.

1. .env.example. : demonstrate the GCP related configs that can be potentially placed there (i.e `GCP_SECRETY_ACCESS_KEY`, `GCS_REGION`, etc). I'm not fully sure what minimum information is required to store items in Google Cloud Storage, but those would have to be laid out in this file. 
2. env-validator.ts : Update to see if either S3 or GCS (Google Cloud Storage) information has been provided. If not, an error can be thrown.
3. storage.service.ts: Update this file to provide to determine whether to store items in GCP or in AWS. To make this scalable, beyond the GCP scope,  it may make sense to create 1 file per provider (i.e. S3StorageService and a GCSStorageService) with a common interface. Then, storage.service.ts, can be used to simply select between the different tech depending on the env configs.

More work may be required, but I think this is all that's necessary.
",1202995475,I'm unassigning myself in favor of @Lian1230. He just put up a PR for this https://github.com/novuhq/novu/pull/934
1308670273,865,Allow non AWS infrastructure setups NV-681,"## What?
Currently, Novu is coupled to AWS through its .env config. It would be nice to allow a developer to setup with an alternative infrastructure provider, such as Google Cloud Platform (a.k.a GCP), instead.

## Why?
Some company's are known to be a complete AWS, GCP, or Azure shop. They wouldn't be able to adopt this repo on-prem if they were not on AWS. The only way about this is to fork this repo, update the AWS logic, and replace it with a GCP one. Adding logic to a forked repo just makes it a little harder to keep it up to date with the upstream source. It would be best if we can avoid that and make the adoption to this repo a little easier.

## How?
A potentially better experience might be to allow a developer to either specify the minimum GCP, AWS, or Azure configurations to get the application running with their chosen infrastructure provider. Since I'm only writing because I'm interested in GCP, I'll list out the items that should be done for that.

1. .env.example. : demonstrate the GCP related configs that can be potentially placed there (i.e `GCP_SECRETY_ACCESS_KEY`, `GCS_REGION`, etc). I'm not fully sure what minimum information is required to store items in Google Cloud Storage, but those would have to be laid out in this file. 
2. env-validator.ts : Update to see if either S3 or GCS (Google Cloud Storage) information has been provided. If not, an error can be thrown.
3. storage.service.ts: Update this file to provide to determine whether to store items in GCP or in AWS. To make this scalable, beyond the GCP scope,  it may make sense to create 1 file per provider (i.e. S3StorageService and a GCSStorageService) with a common interface. Then, storage.service.ts, can be used to simply select between the different tech depending on the env configs.

More work may be required, but I think this is all that's necessary.
",1203831135,Merged at #934 🥳
1300945072,823,Allow nested access to payload with handlebars,"## What?
Users cannot access data in payload, if it is nested.

## Why?
Users might want to use nested objects instead of long variable names to make payloads more clear.
Discord [thread](https://discord.com/channels/895029566685462578/895029567125872653)

## How?
Currently [customly made](https://github.com/novuhq/novu/blob/main/apps/api/src/app/shared/helpers/content.service.ts#L4-L14), but a library like [handlebars.js](https://handlebarsjs.com/) could be utilized, or a add a nested feature to the custom functionality ([example](https://stackoverflow.com/a/38640223))

![image](https://user-images.githubusercontent.com/29684625/178312228-5b652aa9-be3b-443c-ade5-d00771241398.png)
",,
1293339568,781,Infinite Loop in colors.js #5,"https://github.com/novuhq/novu/security/dependabot/5

## Info
The package colors after 1.4.0 are vulnerable to Denial of Service (DoS) that was introduced through an infinite loop in the americanFlag module. Unfortunately this appears to have been a purposeful attempt by a maintainer of colors to make the package unusable, other maintainers' controls over this package appear to have been revoked in an attempt to prevent them from fixing the issue. Vulnerable Code js for (let i = 666; i < Infinity; i++;) { Alternative Remediation Suggested 

* Pin dependancy to 1.4.0",,
1288816807,754,[NV-592] - Make Nodemailer options optional,"## What?

I have a local novu running inside docker. In my network is a plain SMTP server without authentication. With the current Nodemailer in novu I can't use it without specifying username and password. I also would have to specify ""Secure"" which I also don't use. Please make these properties optional instead of mandatory.

## Why?

For a test setup or a setup where the SMTP server authenticates through network username, password and secure shouldn't be mandatory.

## How?

Dima Grossman#8096 in the novu discord already pointed this out:

```
so looks like it happens here https://github.com/novuhq/novu/blob/4b1103fdd806abbc461d8c2d90eddb64f2d2dc54/apps/web/src/pages/integrations/components/ConnectIntegrationForm.tsx#L120
We actually can just specify in the config array that those 2 fields can be not mandatory
We can add an optional field of ""required"" on this interface https://github.com/novuhq/novu/blob/b093fe5c2d1619df0ce0cc963b3a5ef86f54df4e/libs/shared/src/consts/providers/provider-credentials.ts#L96
```

**Issue URL:** [https://github.com/novuhq/novu/issues/739](https://github.com/novuhq/novu/issues/739)",,
1287061541,739,Make Nodemailer options optional,"## What?
I have a local novu running inside docker. In my network is a plain SMTP server without authentication. With the current Nodemailer in novu I can't use it without specifying username and password. I also would have to specify ""Secure"" which I also don't use. Please make these properties optional instead of mandatory.

## Why?
For a test setup or a setup where the SMTP server authenticates through network username, password and secure shouldn't be mandatory.

## How?
Dima Grossman#8096 in the novu discord already pointed this out:
```
so looks like it happens here https://github.com/novuhq/novu/blob/4b1103fdd806abbc461d8c2d90eddb64f2d2dc54/apps/web/src/pages/integrations/components/ConnectIntegrationForm.tsx#L120
We actually can just specify in the config array that those 2 fields can be not mandatory
We can add an optional field of ""required"" on this interface https://github.com/novuhq/novu/blob/b093fe5c2d1619df0ce0cc963b3a5ef86f54df4e/libs/shared/src/consts/providers/provider-credentials.ts#L96
```
",,
1276894679,697,"Documentation update: ""PopoverNotificationCenter"", colorScheme","
**To Reproduce**
Steps to reproduce the behavior:
1. Go to 'https://docs.novu.co/docs/notification-center/react-components#dark-mode-support'
2. Try to add colorScheme into NovuProvider 
3. PopoverNotificationCenter does not change color, it stays in ""light"" mode

or

1. open novu documentation
2. go to notification-center
3. Click on 'react-components'
4. Scroll down to 'dark-mode-support'
5. Try to add colorScheme into NovuProvider 
6. PopoverNotificationCenter does not change color, it stays in ""light"" mode
 
**Expected behavior**
PopoverNotificationCenter  component changes color when colorScheme={'dark'} to dark mode.

Solution: 
The colorSchema prop should be passed in ""PopoverNotificationCenter"" component.

```
import { NovuProvider, PopoverNotificationCenter, NotificationBell } from '@novu/notification-center';

function Header() {
  function onNotificationClick(notification: IMessage) {
    navigate(notification.cta.data.url);
  }
  
  return (
    <NovuProvider subscriberId={'USER_ID'} applicationIdentifier={'APP_ID_FROM_ADMIN_PANEL'}>
      <PopoverNotificationCenter onNotificationClick={onNotificationClick} colorScheme={'dark' || 'light'}>
        {({ unseenCount }) => <NotificationBell unseenCount={unseenCount} />}
      </PopoverNotificationCenter>
    </NovuProvider>
  );
}
```",,
1275969993,691,Provider generator still import old @novu/node package,"**Describe the bug**
Provider generator file imports the @novu/node instead of @novu/stateless 

**To Reproduce**
Steps to reproduce the behavior:
1. Go to the project directory
2. Run the following cmd `yarn run generate:provider` and follow the prompt
3. cd `provider/YourProviderName` Check the generated file under `lib/YourProviderName.provider.ts`
4. See line 6

**Expected behavior**
Should import from `@novu/stateless` package

**Details (please complete the following information):**
 - OS: Mac
 - Node Version: v14.16.1

**Additional context**
",,
1257265354,619,Activity Feed breaks down and can't resubscribe a user with same phone and different id,"**Describe the bug**
After subscribing and unsubscribing a user, the Activity Feed breaks down and I cannot subscribe another user with different id and same phone number as the previously unsubscribed user

**To Reproduce**
Steps to reproduce the behavior:
1. Using '@novu/node' module
2. Connected to Novu Cloud account and using its API and Web Dashboard
3. Set up an active notification template with sms channel
4. Set up a Twilio Integration
6. Subscribe an user only with an ID and a phone number 
7. Up until this point the trigger is working
8. Unsubscribe previously subscribed user
9. Dashboard's Activity Feed now shows TypeError: Cannot read properties of null (reading 'firstName')
10. Can't seem to be able to subscribe another user with the same phone number and different id.

**I MIGHT HAVE SUBSCRIBED A USER, THEN UNSUBSCRIBED, THEN TRIGGERED**

**Expected behavior**
I expected to be able to unsubscribe the user and just subscribe another one with a different id and the same phone number as the previously unsubscribed one
Now I can't get the trigger working with the same number as before

**Screenshots**
This is the Activity Feed after unsubscribing a user
![Screenshot from 2022-06-01 20-01-39](https://user-images.githubusercontent.com/63589213/171515501-52d884cf-cfee-400d-b153-3e0a4fcbe538.png)

This is the small node implementation I got the bug with
![Screenshot from 2022-06-01 20-14-07](https://user-images.githubusercontent.com/63589213/171516633-03a07e31-07d9-4134-9755-8ccb2ef92803.png)


**Details (please complete the following information):**
 - OS: Ubuntu 22.04
 - Node version: 16.13.0
- @novu/node version: 0.4.1

**Additional context**
I recreated the same error both in Development and Production enviroments
There's also the possibility that I'm doing something wrong. If that's the case, I'm sorry for opening an issue. If not, then I hope this feedback helps.",,
1253818332,612,[NV-438] - Add payload content to notification object,"## Why?

After triggering an event and passing a `payload` object to it, the payload object is never saved on the message entity returned by the notifications API specifically for the notification center usecase.

## What?

Persist the payload object inside the generated Notification Message for the channel including the original `payload` object sent by the API Users.

## Where?

The unit responsible for creating the notification message is located inside the `trigger-event.usecase.ts` file inside the @novu/api package. 

## Done definition

* e2e test for the trigger event asserting the created message to contain the `payload` object when returned by the API.",,
1244733566,587,[NV-412] - Add support for attachments passing with the Novu API,"## Why?

Currently, the interface of the `trigger` payload exposes an `attachments` interface but the `trigger-event.usecase.ts` is not passing the attachments payload to the provider handlers. 

## How?

When attachments are passed to  the `trigger-event.usecase.ts` they should be passed successfully to the provider and received by the user.

## Done Criteria

* The user is able to receive attachments passed to the trigger payload. (Can be manually tested on a single provider such as SendGrid).
* The name of the attachment matches the name provided by the user
* The attachment can be opened and viewed in the email client",,
1238427843,569,"TypeError: (0 , tslib__WEBPACK_IMPORTED_MODULE_9__.__spreadArray) is not a function","**To Reproduce**
Steps to reproduce the behavior:
1. Create new Next JS App 'yarn create next-app --typescript'
2. Setup novu notification center using following instructions https://docs.novu.co/docs/notification-center/react-components.
3. Add `typeof window !== 'undefined'` to avoid localstorage undefined issue.
4. Start dev server
5. Trigger one or multiple notifications from backend
6. Click on notification bell icon

**Expected behavior**
It should show the notification triggered

**Screenshots**
<img width=""958"" alt=""Screenshot 2022-05-17 at 3 44 06 PM"" src=""https://user-images.githubusercontent.com/36273489/168790001-b6833f86-add9-4174-89c8-d6fd9bed9715.png"">


**Details (please complete the following information):**
 - OS: Mac, M1 Chip
 - Node Version: v14.18.3
 - NPM Version: 6.14.15
 - React Version: 17.0.2
 - next: 12.0.2
 - @novu/notification-center: 0.4.0-alpha.12
",,
1237319949,567,Can't checkout repository on Windows,"**To Reproduce**
Steps to reproduce the behavior:
1. Try to checkout repo on Windows:
D:\>git clone https://github.com/novuhq/novu
2. Catch error:
Cloning into 'novu'...
remote: Enumerating objects: 21945, done.
remote: Counting objects: 100% (1493/1493), done.
remote: Compressing objects: 100% (633/633), done.
remote: Total 21945 (delta 857), reused 1414 (delta 836), pack-reused 20452
Receiving objects: 100% (21945/21945), 19.01 MiB | 2.31 MiB/s, done.
Resolving deltas: 100% (13594/13594), done.
error: invalid path 'apps/api/src/app/change/usecases/promote-notification-group-change /promote-notification-group-change.ts'
fatal: unable to checkout working tree
warning: Clone succeeded, but checkout failed.
You can inspect what was checked out with 'git status'
and retry with 'git restore --source=HEAD :/'

**Details:**
 - OS: Windows",,
1228862651,543,[NV-384] - Add Sentry breadcrumb on the CommandHelper validation,"## Why?

Currently, when viewing errors in Sentry, in the case of Bad Exception we can't really know what was the validation error that caused the issue.

![CleanShot 2022-05-08 at 14.14.09@2x.png](https://uploads.linear.app/f13f1996-c9b0-4fea-8ee7-2c3faf6a832d/ec268415-261f-4f6d-b260-312839ce895e/575202d1-8ed6-4627-9230-43e17dd81e9c)

## How?

Sentry supports breadcrumbs [https://docs.sentry.io/product/issues/issue-details/breadcrumbs/](https://docs.sentry.io/product/issues/issue-details/breadcrumbs/) a way to add custom metadata before capturing the exception.

We can add it to `apps/api/src/app/shared/commands/command.helper.ts` Just before sending `BadRequestException` the breadcrumb can contain the `mappedErrors` contents.",,
1228862632,542,[NV-385] - Templates - Handlebars - new pluralize helper,"## Why?

When triggering an event on the `@novu/api`a message is compiled using handlebars. We want to allow the user to specify some handlebars helpers when creating a message template in the UI. 

## What?

A new handlebars helper read more about it ([https://handlebarsjs.com/guide/#custom-helpers](https://handlebarsjs.com/guide/#custom-helpers)) called `pluralize` when applied, receives the first param of an integer, if the integer is one, the helper returns the first parameter, if it's greater than one the second one will be returned. 

### Example of usage within a template

```
gone for a walk
```

## Done Criteria

* added a test for those use cases`apps/api/src/app/content-templates/usecases/compile-template/compile-template.spec.ts`",,
1222189922,517,[NV-370] - Templates - Handlebars - new titlecase helper,"## Why?

When triggering an event on the `@novu/api`a message is compiled using handlebars. We want to allow the user to specify some handlebars helpers when creating a message template in the UI. 

## What?

A new handlebars helper read more about it ([https://handlebarsjs.com/guide/#custom-helpers](https://handlebarsjs.com/guide/#custom-helpers)) called `titlecase` when applied, the variable content will be converted to a title cased version of it. For example:

* `hello world` > `Hello World`
* `hello World` > `Hello World`

### Example of usage within a template

```
Hello !
```

## Done Criteria

* added a test for those use cases`apps/api/src/app/content-templates/usecases/compile-template/compile-template.spec.ts`",,
1222157865,515,[NV-368] - WS - Remove google ping from health-check,"## Why? 

Really an un-needed check for network connectivity causes some false positives when calling the health check endpoint. 

## What?

Remove the ping for google.com when performing the health-check request.

## Where?

Located under the `apps/ws/src/health/health.controller.ts `",,
1222153062,514,[NV-367] - API - Remove google.com ping from health-check request,"## Why? 

Really an un-needed check for network connectivity causes some false positives when calling the health check endpoint. 

## What?

Remove the ping for google.com when performing the health-check request.

## Where?

Located under the `apps/api/src/app/health/health.controller.ts`",,
1210613958,501,Change Providers Constructor Into An Interface,"**Describe the bug**
Today except for SES and EmailJS, providers don't have an interface.
You can import the interface in different libraries, and you need to copy the object that might change in the future.

**To Reproduce**
Try to import any provider config interface

**Expected behavior**
Convert the provider's object type into an interface",,
1208464127,500,[NV-338] - Passing a subscriber object to the template compilation,"## Why?

Currently inside the message template the information of the subscriber cannot be accessed, and must be duplicated inside the payload. We want to easily allow using subscriber information inside the template.

## What?

When compiling a template, we want to add a `subscriber` object that can be accessed inside the message template as follows:

```

```

## How?

Currently inside `apps/api/src/app/events/usecases/trigger-event/trigger-event.usecase.ts` we only pass the payload data when calling the `compileTemplate` usecase. The subscriber returned from the repository needs to be passed to the compileTemplate aswell. 

So for the following usecase:

```
novu.trigger('event-name', {
  to: {
    subscriberId: 1,
    firstName: 'John',
    lastName: 'Doe'
  },
  payload: {

  }
});
```

Should replace inside the template that contains `` to be John.

## Done Criteria

* Templates containing subscriber. access will use the subscriber data returned from the subscriberRepository
* compileTemplate tests for handling this behaviour
* Event trigger e2e test that uses a template with subscriber data, and verifies the contents of the generated email/other channel message.",,
1206434858,493,[NV-339] - React helmet warning - Switch to react-helmet-async,"## What?

react-helmet in the `apps/web` causes the following warning: 

> warning: Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See [https://reactjs.org/link/unsafe-component-lifecycles](https://reactjs.org/link/unsafe-component-lifecycles) for details.
>
> * Move code with side effects to componentDidMount, and set initial state in the constructor.
>
> Please update the following components: SideEffect(NullComponent)

Looks like the way to go is to switch to using [https://www.npmjs.com/package/react-helmet-async](https://www.npmjs.com/package/react-helmet-async) instead of react helmet.

## How?

Migrate from react-helmet to use react-helmet-async 

## Done Definition

* The warning UNSAFE message is removed from the console",,
1202663343,470,Testing libraries are showing several errors...,"**Describe the bug**
Errors found when running `pnpm start`

**To Reproduce**
Steps to reproduce the behavior:
1. `pnpm install`
2. `pnpm start`

**Expected behavior**
A clear and concise description of what you expected to happen.

**Screenshots**
```
⎡⚑ testing
⎢
⎢rc/environment.service.ts:2:10 - error TS2305: Module '""../node_modules/@novu/dal/dist""' has no exported member 'EnvironmentRepository'.
⎢
⎢ 2 import { EnvironmentRepository } from '@novu/dal';
⎢            ~~~~~~~~~~~~~~~~~~~~~
⎢
⎢ src/notification-template.service.ts:66:9 - error TS2345: Argument of type '{ type: any; cta: any; content: any; subject: any; name: any; _creatorId: string; _organizationId: string; _environmentId: string; }'⎢is not assignable to parameter of type 'Partial<MessageTemplateEntity>'.
⎢   Object literal may only specify known properties, and '_environmentId' does not exist in type 'Partial<MessageTemplateEntity>'.
⎢
⎢ 66         _environmentId: this.environmentId,
⎢            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
⎢
⎢ src/notification-template.service.ts:77:7 - error TS2322: Type '{ steps: NotificationStepEntity[]; _id?: string; description: string; _applicationId?: string; _organizationId: string; _creatorId: string; name:⎢string; active: boolean; ... 5 more ...; _environmentId: string; }' is not assignable to type 'NotificationTemplateEntity'.
⎢   Object literal may only specify known properties, and '_environmentId' does not exist in type 'NotificationTemplateEntity'.
⎢
⎢ 77       _environmentId: this.environmentId,
⎢          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
⎢
⎢ src/subscribers.service.ts:14:7 - error TS2345: Argument of type '{ lastName: string; firstName: string; email: string; _environmentId: string; _organizationId: string; subscriberId: string; }' is not assignab⎢e to parameter of type 'Partial<SubscriberEntity>'.
⎢   Object literal may only specify known properties, and '_environmentId' does not exist in type 'Partial<SubscriberEntity>'.
⎢
⎢ 14       _environmentId: this._environmentId,
⎢          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
⎢
⎢ src/user.session.ts:12:3 - error TS2305: Module '""../node_modules/@novu/dal/dist""' has no exported member 'EnvironmentEntity'.
⎢
⎢ 12   EnvironmentEntity,
⎢      ~~~~~~~~~~~~~~~~~
⎢
⎢ src/user.session.ts:15:3 - error TS2305: Module '""../node_modules/@novu/dal/dist""' has no exported member 'EnvironmentRepository'.
⎢
⎢ 15   EnvironmentRepository,
⎢      ~~~~~~~~~~~~~~~~~~~~~
⎢
⎢ [2:08:09 AM] Found 6 errors. Watching for file changes.
```

**Details (please complete the following information):**
 - OS: macOS 11.5.2
 - Node Version v14.15.0

**Additional context**",,
1172490557,378,[NV-241] - Enable runtime dynamic environment variables in web project,"### Why?

Currently when we want to pass dynamic variables for example the API URL (check out `apps/web/src/config/index.ts for example`). We do this using the Create-react-app env variables mechanism that replaces revert process.env with the appropriate value during **build** time. Since there is no such thing as process.env within the browser environment.

When running within a docker environment (check out the docker folder within the project) it forces us to use the ""build"" command inside the CMD command that is triggered when the end-user performance `docker-compose`  Check out the end of the file within `apps/web/Dockerfile`. What we want eventually is to server the already build an application without rebuilding it again each time the docker is started.

### How?

Import the variables from a dynamically populated file. Some examples for this approach can be found in these links:

* [https://dev.to/akdevcraft/react-runtime-variables-49dc](https://dev.to/akdevcraft/react-runtime-variables-49dc)
* [https://www.freecodecamp.org/news/how-to-implement-runtime-environment-variables-with-create-react-app-docker-and-nginx-7f9d42a91d70/](https://www.freecodecamp.org/news/how-to-implement-runtime-environment-variables-with-create-react-app-docker-and-nginx-7f9d42a91d70/)
* Or maybe another approach to solve this?

### Done criteria

* Make sure that the web docker is being able to build successfully
* The built docker can be run and the application can be accessed via localhost:4200 from docker
* Running the local builds from outside of docker should work as expected (pnpm start:dev)",,
1169670910,365,[NV-220] - TypeError: Cannot read properties of null (reading '_id'),"### What?

When a request to initialize session is made with an invalid application identifier we don't throw and continue to the next section where the API throws the following exception.

Sentry Issue: [API-1](https://sentry.io/organizations/novu-r9/issues/3085983507/?referrer=Linear)

```
TypeError: Cannot read properties of null (reading '_id')
  File ""/usr/src/app/apps/api/src/app/widgets/usecases/initialize-session/initialize-session.usecase.ts"", line 22, col 34, in InitializeSession.<anonymous>
    applicationId: application._id,
  ?, in Generator.next
  File ""/usr/src/app/apps/api/dist/src/app/widgets/usecases/initialize-session/initialize-session.usecase.js"", line 14, col 58, in fulfilled
    function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
  ?, in runMicrotasks
  File ""node:internal/process/task_queues"", line 96, col 5, in processTicksAndRejections
```

### How?

We can add an `if` statement and throw an `ApiException` indicating the the application was not found with the specified id.",,
1160600461,343,[NV-216] - Team invite page,"## Why?

To allow people to invite new team members to their instance.

## How?

Using the current logic provided in the `apps/web/src/legacy/pages/organization-settings/OrganizationSettingsPage.tsx `page, we need to create a new page under: `apps/web/src/pages/invites/MembersInvitePage.tsx`, after generating the page we need to exclude the page path from displaying under the old layout can be configured here: `apps/web/src/components/layout/AppLayout.tsx`

* Currently no need to implement the ""Editor/Viewer"" select box, just showing the member role in a label is enought.
* No need to implement the 3 dots on the right(just the label near it).

**Table and page layout design:**

[Team Members - Ready for Dev (Figma)](https://www.figma.com/file/IpAw7sGWYZ8DHTem0tSM8r/Ready-for-Dev?node-id=28%3A7377)

## Done criteria

* All cypress tests pass at `apps/web/cypress/tests/organization-settings.spec.ts` 
* Sending an invite triggers the invite event and adds the person to the table",,
1160597097,340,[NV-243] - Activity Page Table and filters,"## Why?

To display the activities of the page based on the user's activity log.

## How?

Using the current logic provided in the `apps/web/src/legacy/pages/activities/ActivitiesPage.tsx` page, we need to create a new page under: `apps/web/src/pages/activities/ActivitiesPage.tsx`, after generating the page we need to exclude the page path from displaying under the old layout can be configured here: `apps/web/src/components/layout/AppLayout.tsx`

In the scope of the task **only** implement the **Table** above the **3 table filters**: Select Channel, template, and email fields.

(Use select and inputs from the design system components).

**Table and page layout design:**

[Activity Feed - Ready for Dev (Figma)](https://www.figma.com/file/IpAw7sGWYZ8DHTem0tSM8r/Ready-for-Dev?node-id=54%3A1497)

## Done criteria

* All cypress tests pass at `apps/web/cypress/tests/activities-page.spec.ts`
* The table is paginated on server-side, only loading the visible page from the server",,
1155480920,318,Add async module configuration to @notifire/nest,"## What?
Add the ability the configure the NotifireModule using factory method or class 

## Why?
In most cases, notifire providers must be configured with some secret like API Key.
These values are usually found in the environment and in Nestjs architecture, typically supplied by some configService (or other async modules).
In order to be able to pass these values in runtime to the NotifireModule, please provide some method to configure this module asynchronously.

## How?
Support a ""forRootAsync"" method that accepts asyncModuleConfig to create the dynamicModule.

## Additional Info
Another possibility is to use [nestjs-modules](https://www.npmjs.com/package/@golevelup/nestjs-modules) package to reduce the boilerplate necessary to create the module.",,
1141543281,271,npm run setup:project failed,"**Describe the bug**
npm run setup:project failed

**To Reproduce**
Steps to reproduce the behavior:
1. git clone https://github.com/abrl91/notifire.git
2. cd notifire
3. npm run setup:project
4. See errors on init.ts and http-server.ts
```
Cannot find name 'REDIRECT_ROUTH'.
src/server/http-server.ts(2,36): error TS2724: '""../constants""' has no exported member named 'REDIRECT_ROUTH'. Did you mean 'REDIRECT_ROUTE'?
```


**Expected behavior**
![image](https://user-images.githubusercontent.com/39680385/154521720-18894cb1-31f7-45ce-9f8d-864ea06d42d6.png)


**Details (please complete the following information):**
 - OS: macOS
 - Node Version 14.17.3

",,
1109144090,190,Dependency Dashboard,"This issue lists Renovate updates and detected dependencies. Read the [Dependency Dashboard](https://docs.renovatebot.com/key-concepts/dashboard/) docs to learn more.

## Config Migration Needed

 - [ ] <!-- create-config-migration-pr --> Select this checkbox to let Renovate create an automated Config Migration PR.

> [!WARNING]
These dependencies are deprecated:

| Datasource | Name | Replacement PR? |
|------------|------|--------------|
| npm | `@babel/plugin-proposal-optional-chaining` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `@babel/polyfill` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `@bandwidth/messaging` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `@opentelemetry/exporter-collector` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `@types/bull` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `@types/socket.io` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `@types/testing-library__jest-dom` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `codecov` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `cpx` | ![Available](https://img.shields.io/badge/available-green?style=flat-square) |
| npm | `eslint-plugin-eslint-comments` | ![Available](https://img.shields.io/badge/available-green?style=flat-square) |
| npm | `npm-run-all` | ![Available](https://img.shields.io/badge/available-green?style=flat-square) |
| npm | `react-flow-renderer` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `rollup-plugin-commonjs` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `rollup-plugin-json` | ![Available](https://img.shields.io/badge/available-green?style=flat-square) |
| npm | `rollup-plugin-terser` | ![Available](https://img.shields.io/badge/available-green?style=flat-square) |
| npm | `shortid` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `sms77-client` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `xterm` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |
| npm | `xterm-addon-fit` | ![Unavailable](https://img.shields.io/badge/unavailable-orange?style=flat-square) |

## Rate-Limited

These updates are currently rate-limited. Click on a checkbox below to force their creation now.

 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-eslint-comments-replacement -->chore(deps): replace dependency eslint-plugin-eslint-comments with @eslint-community/eslint-plugin-eslint-comments ^3.2.0
 - [ ] <!-- unlimit-branch=renovate/npm-run-all-replacement -->chore(deps): replace dependency npm-run-all with npm-run-all2 ^5.0.0
 - [ ] <!-- unlimit-branch=renovate/aws-actions-amazon-ecs-deploy-task-definition-digest -->chore(deps): update aws-actions/amazon-ecs-deploy-task-definition digest to 96cda52
 - [ ] <!-- unlimit-branch=renovate/aws-actions-amazon-ecs-render-task-definition-digest -->chore(deps): update aws-actions/amazon-ecs-render-task-definition digest to 170b097
 - [ ] <!-- unlimit-branch=renovate/cspell-monorepo -->chore(deps): update cspell monorepo to v6.31.3 (`@cspell/eslint-plugin`, `cspell`)
 - [ ] <!-- unlimit-branch=renovate/nestjs-swagger-7.x -->chore(deps): update dependency @nestjs/swagger to v7.4.2
 - [ ] <!-- unlimit-branch=renovate/octokit-monorepo -->chore(deps): update dependency @octokit/core to v4.2.4
 - [ ] <!-- unlimit-branch=renovate/aws-lambda-8.x-lockfile -->chore(deps): update dependency @types/aws-lambda to v8.10.145
 - [ ] <!-- unlimit-branch=renovate/express-4.x-lockfile -->chore(deps): update dependency @types/express to v4.17.21
 - [ ] <!-- unlimit-branch=renovate/html-to-text-9.x-lockfile -->chore(deps): update dependency @types/html-to-text to v9.0.4
 - [ ] <!-- unlimit-branch=renovate/lodash.get-4.x-lockfile -->chore(deps): update dependency @types/lodash.get to v4.4.9
 - [ ] <!-- unlimit-branch=renovate/lodash.merge-4.x-lockfile -->chore(deps): update dependency @types/lodash.merge to v4.6.9
 - [ ] <!-- unlimit-branch=renovate/multer-1.x-lockfile -->chore(deps): update dependency @types/multer to v1.4.12
 - [ ] <!-- unlimit-branch=renovate/newrelic-9.x-lockfile -->chore(deps): update dependency @types/newrelic to v9.14.5
 - [ ] <!-- unlimit-branch=renovate/node-mailjet-3.x-lockfile -->chore(deps): update dependency @types/node-mailjet to v3.3.12
 - [ ] <!-- unlimit-branch=renovate/nodemailer-6.x-lockfile -->chore(deps): update dependency @types/nodemailer to v6.4.16
 - [ ] <!-- unlimit-branch=renovate/passport-github-1.x-lockfile -->chore(deps): update dependency @types/passport-github to v1.1.12
 - [ ] <!-- unlimit-branch=renovate/passport-jwt-3.x-lockfile -->chore(deps): update dependency @types/passport-jwt to v3.0.13
 - [ ] <!-- unlimit-branch=renovate/prompts-2.x -->chore(deps): update dependency @types/prompts to v2.4.9
 - [ ] <!-- unlimit-branch=renovate/smtp-server-3.x-lockfile -->chore(deps): update dependency @types/smtp-server to v3.5.10
 - [ ] <!-- unlimit-branch=renovate/sparkpost-2.x-lockfile -->chore(deps): update dependency @types/sparkpost to v2.1.8
 - [ ] <!-- unlimit-branch=renovate/supertest-2.x-lockfile -->chore(deps): update dependency @types/supertest to v2.0.16
 - [ ] <!-- unlimit-branch=renovate/testing-library__jest-dom-5.x-lockfile -->chore(deps): update dependency @types/testing-library__jest-dom to v5.14.9
 - [ ] <!-- unlimit-branch=renovate/validate-npm-package-name-3.x -->chore(deps): update dependency @types/validate-npm-package-name to v3.0.3
 - [ ] <!-- unlimit-branch=renovate/ws-8.x-lockfile -->chore(deps): update dependency @types/ws to v8.5.13
 - [ ] <!-- unlimit-branch=renovate/autoprefixer-10.x-lockfile -->chore(deps): update dependency autoprefixer to v10.4.20
 - [ ] <!-- unlimit-branch=renovate/cross-spawn-7.x-lockfile -->chore(deps): update dependency cross-spawn to v7.0.5
 - [ ] <!-- unlimit-branch=renovate/cssnano-7.x-lockfile -->chore(deps): update dependency cssnano to v7.0.6
 - [ ] <!-- unlimit-branch=renovate/eslint-import-resolver-webpack-0.x-lockfile -->chore(deps): update dependency eslint-import-resolver-webpack to v0.13.9
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-html-8.x-lockfile -->chore(deps): update dependency eslint-plugin-html to v8.1.2
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-react-refresh-0.x-lockfile -->chore(deps): update dependency eslint-plugin-react-refresh to v0.4.14
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-sonarjs-2.x-lockfile -->chore(deps): update dependency eslint-plugin-sonarjs to v2.0.4
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-unused-imports-4.x-lockfile -->chore(deps): update dependency eslint-plugin-unused-imports to v4.1.4
 - [ ] <!-- unlimit-branch=renovate/pkg-pr-new-0.x -->chore(deps): update dependency pkg-pr-new to ^0.0.30
 - [ ] <!-- unlimit-branch=renovate/postcss-8.x-lockfile -->chore(deps): update dependency postcss to v8.4.47
 - [ ] <!-- unlimit-branch=renovate/prettier-2.x-lockfile -->chore(deps): update dependency prettier to v2.8.8
 - [ ] <!-- unlimit-branch=renovate/prettier-3.x-lockfile -->chore(deps): update dependency prettier to v3.3.3
 - [ ] <!-- unlimit-branch=renovate/prettier-plugin-tailwindcss-0.x-lockfile -->chore(deps): update dependency prettier-plugin-tailwindcss to v0.6.8
 - [ ] <!-- unlimit-branch=renovate/storybook-dark-mode-4.x-lockfile -->chore(deps): update dependency storybook-dark-mode to v4.0.2
 - [ ] <!-- unlimit-branch=renovate/tailwindcss-3.x-lockfile -->chore(deps): update dependency tailwindcss to v3.4.14
 - [ ] <!-- unlimit-branch=renovate/terser-webpack-plugin-5.x-lockfile -->chore(deps): update dependency terser-webpack-plugin to v5.3.10
 - [ ] <!-- unlimit-branch=renovate/ts-node-10.x-lockfile -->chore(deps): update dependency ts-node to v10.9.2
 - [ ] <!-- unlimit-branch=renovate/typescript-5.x -->chore(deps): update dependency typescript to v5.6.3
 - [ ] <!-- unlimit-branch=renovate/ghcr.io-novuhq-novu-api-2.x -->chore(deps): update ghcr.io/novuhq/novu/api docker tag to v2.0.1
 - [ ] <!-- unlimit-branch=renovate/ghcr.io-novuhq-novu-web-2.x -->chore(deps): update ghcr.io/novuhq/novu/web docker tag to v2.0.1
 - [ ] <!-- unlimit-branch=renovate/ghcr.io-novuhq-novu-worker-2.x -->chore(deps): update ghcr.io/novuhq/novu/worker docker tag to v2.0.1
 - [ ] <!-- unlimit-branch=renovate/ghcr.io-novuhq-novu-ws-2.x -->chore(deps): update ghcr.io/novuhq/novu/ws docker tag to v2.0.1
 - [ ] <!-- unlimit-branch=renovate/nest-monorepo -->chore(deps): update nest monorepo (`@nestjs/cli`, `@nestjs/common`, `@nestjs/core`, `@nestjs/platform-express`, `@nestjs/platform-socket.io`, `@nestjs/schematics`, `@nestjs/testing`, `@nestjs/websockets`)
 - [ ] <!-- unlimit-branch=renovate/nrwl-monorepo -->chore(deps): update nrwl monorepo (`@nx/eslint-plugin`, `@nx/jest`, `@nx/plugin`, `@nx/workspace`, `nx`)
 - [ ] <!-- unlimit-branch=renovate/react-monorepo -->chore(deps): update react monorepo (`@types/react`, `@types/react-dom`)
 - [ ] <!-- unlimit-branch=renovate/testing-library-monorepo -->chore(deps): update testing-library monorepo (`@testing-library/dom`, `@testing-library/jest-dom`)
 - [ ] <!-- unlimit-branch=renovate/update-rollup-packages -->chore(deps): update update rollup packages (`@rollup/plugin-replace`, `rollup-plugin-json`, `rollup-plugin-terser`, `rollup-plugin-typescript2`)
 - [ ] <!-- unlimit-branch=renovate/vishnudxb-redis-cluster-1.x -->chore(deps): update vishnudxb/redis-cluster action to v1.0.9
 - [ ] <!-- unlimit-branch=renovate/vitest-monorepo -->chore(deps): update vitest monorepo
 - [ ] <!-- unlimit-branch=renovate/ant-design-icons-4.x-lockfile -->fix(deps): update dependency @ant-design/icons to v4.8.3
 - [ ] <!-- unlimit-branch=renovate/bandwidth-messaging-4.x-lockfile -->fix(deps): update dependency @bandwidth/messaging to v4.1.7
 - [ ] <!-- unlimit-branch=renovate/clerk-clerk-react-5.x-lockfile -->fix(deps): update dependency @clerk/clerk-react to v5.15.2
 - [ ] <!-- unlimit-branch=renovate/clerk-clerk-sdk-node-5.x-lockfile -->fix(deps): update dependency @clerk/clerk-sdk-node to v5.0.61
 - [ ] <!-- unlimit-branch=renovate/clerk-themes-2.x-lockfile -->fix(deps): update dependency @clerk/themes to v2.1.42
 - [ ] <!-- unlimit-branch=renovate/floating-ui-dom-1.x-lockfile -->fix(deps): update dependency @floating-ui/dom to v1.6.12
 - [ ] <!-- unlimit-branch=renovate/hookform-resolvers-3.x-lockfile -->fix(deps): update dependency @hookform/resolvers to v3.9.1
 - [ ] <!-- unlimit-branch=renovate/mailchimp-mailchimp_transactional-1.x-lockfile -->fix(deps): update dependency @mailchimp/mailchimp_transactional to v1.0.59
 - [ ] <!-- unlimit-branch=renovate/radix-ui-react-icons-1.x-lockfile -->fix(deps): update dependency @radix-ui/react-icons to v1.3.1
 - [ ] <!-- unlimit-branch=renovate/react-email-components-0.x -->fix(deps): update dependency @react-email/components to ^0.0.28
 - [ ] <!-- unlimit-branch=renovate/ringcentral-sdk-5.x-lockfile -->fix(deps): update dependency @ringcentral/sdk to v5.0.3
 - [ ] <!-- unlimit-branch=renovate/sendgrid-nodejs-monorepo -->fix(deps): update dependency @sendgrid/mail to v8.1.4
 - [ ] <!-- unlimit-branch=renovate/cross-spawn-6.x -->fix(deps): update dependency @types/cross-spawn to v6.0.6
 - [ ] <!-- unlimit-branch=renovate/iframe-resizer-3.x-lockfile -->fix(deps): update dependency @types/iframe-resizer to v3.5.13
 - [ ] <!-- unlimit-branch=renovate/react-table-7.x-lockfile -->fix(deps): update dependency @types/react-table to v7.7.20
 - [ ] <!-- unlimit-branch=renovate/xyflow-react-12.x-lockfile -->fix(deps): update dependency @xyflow/react to v12.3.4
 - [ ] <!-- unlimit-branch=renovate/antd-4.x-lockfile -->fix(deps): update dependency antd to v4.24.16
 - [ ] <!-- unlimit-branch=renovate/async-3.x-lockfile -->fix(deps): update dependency async to v3.2.6 (`async`, `@types/async`)
 - [ ] <!-- unlimit-branch=renovate/babel-plugin-import-1.x-lockfile -->fix(deps): update dependency babel-plugin-import to v1.13.8
 - [ ] <!-- unlimit-branch=renovate/cmdk-1.x -->fix(deps): update dependency cmdk to v1.0.4
 - [ ] <!-- unlimit-branch=renovate/compression-1.x-lockfile -->fix(deps): update dependency compression to v1.7.5
 - [ ] <!-- unlimit-branch=renovate/cross-fetch-3.x-lockfile -->fix(deps): update dependency cross-fetch to v3.1.8
 - [ ] <!-- unlimit-branch=renovate/cross-spawn-7.x -->fix(deps): update dependency cross-spawn to v7.0.5
 - [ ] <!-- unlimit-branch=renovate/fast-glob-3.x -->fix(deps): update dependency fast-glob to v3.3.2
 - [ ] <!-- unlimit-branch=renovate/form-data-4.x-lockfile -->fix(deps): update dependency form-data to v4.0.1
 - [ ] <!-- unlimit-branch=renovate/handlebars-4.x-lockfile -->fix(deps): update dependency handlebars to v4.7.8
 - [ ] <!-- unlimit-branch=renovate/json-schema-to-ts-3.x-lockfile -->fix(deps): update dependency json-schema-to-ts to v3.1.1
 - [ ] <!-- unlimit-branch=renovate/launchdarkly-node-server-sdk-7.x-lockfile -->fix(deps): update dependency launchdarkly-node-server-sdk to v7.0.4
 - [ ] <!-- unlimit-branch=renovate/mailgun.js-8.x-lockfile -->fix(deps): update dependency mailgun.js to v8.2.2
 - [ ] <!-- unlimit-branch=renovate/mdx-bundler-10.x -->fix(deps): update dependency mdx-bundler to v10.0.3
 - [ ] <!-- unlimit-branch=renovate/mongoose-delete-1.x-lockfile -->fix(deps): update dependency mongoose-delete to v1.0.2
 - [ ] <!-- unlimit-branch=renovate/nanoid-3.x-lockfile -->fix(deps): update dependency nanoid to v3.3.7
 - [ ] <!-- unlimit-branch=renovate/node-fetch-3.x-lockfile -->fix(deps): update dependency node-fetch to v3.3.2
 - [ ] <!-- unlimit-branch=renovate/node-mailjet-6.x-lockfile -->fix(deps): update dependency node-mailjet to v6.0.6
 - [ ] <!-- unlimit-branch=renovate/pino-pretty-9.x-lockfile -->fix(deps): update dependency pino-pretty to v9.4.1
 - [ ] <!-- unlimit-branch=renovate/postmark-4.x-lockfile -->fix(deps): update dependency postmark to v4.0.5
 - [ ] <!-- unlimit-branch=renovate/pushpad-1.x -->fix(deps): update dependency pushpad to v1.0.1
 - [ ] <!-- unlimit-branch=renovate/react-frame-component-5.x-lockfile -->fix(deps): update dependency react-frame-component to v5.2.7
 - [ ] <!-- unlimit-branch=renovate/sanitize-html-2.x-lockfile -->fix(deps): update dependency sanitize-html to v2.13.1 (`sanitize-html`, `@types/sanitize-html`)
 - [ ] <!-- unlimit-branch=renovate/simple-statistics-7.x-lockfile -->fix(deps): update dependency simple-statistics to v7.8.7
 - [ ] <!-- unlimit-branch=renovate/solid-motionone-1.x-lockfile -->fix(deps): update dependency solid-motionone to v1.0.2
 - [ ] <!-- unlimit-branch=renovate/storybook-dark-mode-3.x-lockfile -->fix(deps): update dependency storybook-dark-mode to v3.0.3
 - [ ] <!-- unlimit-branch=renovate/swagger-ui-express-4.x-lockfile -->fix(deps): update dependency swagger-ui-express to v4.6.3
 - [ ] <!-- unlimit-branch=renovate/uuid-9.x-lockfile -->fix(deps): update dependency uuid to v9.0.1
 - [ ] <!-- unlimit-branch=renovate/zod-to-json-schema-3.x-lockfile -->fix(deps): update dependency zod-to-json-schema to v3.23.5
 - [ ] <!-- unlimit-branch=renovate/radix-ui-primitives-monorepo -->fix(deps): update radix-ui-primitives monorepo (`@radix-ui/react-dropdown-menu`, `@radix-ui/react-popover`)
 - [ ] <!-- unlimit-branch=renovate/auto-monorepo -->chore(deps): update auto monorepo to v10.46.0 (`@auto-it/npm`, `@auto-it/released`, `auto`)
 - [ ] <!-- unlimit-branch=renovate/apidevtools-json-schema-ref-parser-11.x -->chore(deps): update dependency @apidevtools/json-schema-ref-parser to v11.7.2
 - [ ] <!-- unlimit-branch=renovate/eslint-compat-1.x-lockfile -->chore(deps): update dependency @eslint/compat to v1.2.2
 - [ ] <!-- unlimit-branch=renovate/pandacss-eslint-plugin-0.x -->chore(deps): update dependency @pandacss/eslint-plugin to ^0.2.0
 - [ ] <!-- unlimit-branch=renovate/playwright-monorepo -->chore(deps): update dependency @playwright/test to v1.48.2
 - [ ] <!-- unlimit-branch=renovate/pnpm-filter-workspace-packages-7.x-lockfile -->chore(deps): update dependency @pnpm/filter-workspace-packages to v7.2.14
 - [ ] <!-- unlimit-branch=renovate/pnpm-logger-5.x-lockfile -->chore(deps): update dependency @pnpm/logger to v5.2.0
 - [ ] <!-- unlimit-branch=renovate/stoplight-spectral-cli-6.x-lockfile -->chore(deps): update dependency @stoplight/spectral-cli to v6.13.1
 - [ ] <!-- unlimit-branch=renovate/jasmine-4.x -->chore(deps): update dependency @types/jasmine to ~4.6.0
 - [ ] <!-- unlimit-branch=renovate/sanitize-html-2.x -->chore(deps): update dependency @types/sanitize-html to v2.13.0
 - [ ] <!-- unlimit-branch=renovate/vitejs-plugin-react-4.x-lockfile -->chore(deps): update dependency @vitejs/plugin-react to v4.3.3
 - [ ] <!-- unlimit-branch=renovate/vue-tsconfig-0.x -->chore(deps): update dependency @vue/tsconfig to ^0.5.0
 - [ ] <!-- unlimit-branch=renovate/acorn-8.x-lockfile -->chore(deps): update dependency acorn to v8.14.0
 - [ ] <!-- unlimit-branch=renovate/babel-loader-8.x-lockfile -->chore(deps): update dependency babel-loader to v8.4.1
 - [ ] <!-- unlimit-branch=renovate/chai-4.x-lockfile -->chore(deps): update dependency chai to v4.5.0 (`chai`, `@types/chai`)
 - [ ] <!-- unlimit-branch=renovate/cypress-13.x-lockfile -->chore(deps): update dependency cypress to v13.15.2
 - [ ] <!-- unlimit-branch=renovate/detect-port-1.x-lockfile -->chore(deps): update dependency detect-port to v1.6.1
 - [ ] <!-- unlimit-branch=renovate/esbuild-plugin-inline-import-1.x-lockfile -->chore(deps): update dependency esbuild-plugin-inline-import to v1.1.0
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-cypress-3.x-lockfile -->chore(deps): update dependency eslint-plugin-cypress to v3.6.0
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-functional-7.x-lockfile -->chore(deps): update dependency eslint-plugin-functional to v7.1.0
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-import-2.x-lockfile -->chore(deps): update dependency eslint-plugin-import to v2.31.0
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-jest-28.x-lockfile -->chore(deps): update dependency eslint-plugin-jest to v28.9.0
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-jsx-a11y-6.x-lockfile -->chore(deps): update dependency eslint-plugin-jsx-a11y to v6.10.2
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-no-secrets-1.x-lockfile -->chore(deps): update dependency eslint-plugin-no-secrets to v1.1.2
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-no-unsanitized-4.x-lockfile -->chore(deps): update dependency eslint-plugin-no-unsanitized to v4.1.2
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-react-7.x -->chore(deps): update dependency eslint-plugin-react to v7.37.2
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-storybook-0.x -->chore(deps): update dependency eslint-plugin-storybook to ^0.11.0
 - [ ] <!-- unlimit-branch=renovate/execa-9.x-lockfile -->chore(deps): update dependency execa to v9.5.1
 - [ ] <!-- unlimit-branch=renovate/globals-15.x-lockfile -->chore(deps): update dependency globals to v15.12.0
 - [ ] <!-- unlimit-branch=renovate/h3-1.x-lockfile -->chore(deps): update dependency h3 to v1.13.0
 - [ ] <!-- unlimit-branch=renovate/html-webpack-plugin-5.x -->chore(deps): update dependency html-webpack-plugin to v5.6.3
 - [ ] <!-- unlimit-branch=renovate/jest-monorepo -->chore(deps): update dependency jest-environment-jsdom to v29.7.0
 - [ ] <!-- unlimit-branch=renovate/jsdom-24.x-lockfile -->chore(deps): update dependency jsdom to v24.1.3
 - [ ] <!-- unlimit-branch=renovate/knip-5.x-lockfile -->chore(deps): update dependency knip to v5.36.3
 - [ ] <!-- unlimit-branch=renovate/less-4.x-lockfile -->chore(deps): update dependency less to v4.2.0
 - [ ] <!-- unlimit-branch=renovate/markdownlint-cli-0.x -->chore(deps): update dependency markdownlint-cli to ^0.42.0
 - [ ] <!-- unlimit-branch=renovate/mocha-10.x-lockfile -->chore(deps): update dependency mocha to v10.8.2 (`mocha`, `@types/mocha`)
 - [ ] <!-- unlimit-branch=renovate/nock-13.x-lockfile -->chore(deps): update dependency nock to v13.5.5
 - [ ] <!-- unlimit-branch=renovate/nodemon-3.x-lockfile -->chore(deps): update dependency nodemon to v3.1.7
 - [ ] <!-- unlimit-branch=renovate/postcss-preset-mantine-1.x-lockfile -->chore(deps): update dependency postcss-preset-mantine to v1.17.0
 - [ ] <!-- unlimit-branch=renovate/react-router-monorepo -->chore(deps): update dependency react-router-dom to v6.28.0
 - [ ] <!-- unlimit-branch=renovate/react-scanner-1.x-lockfile -->chore(deps): update dependency react-scanner to v1.2.0
 - [ ] <!-- unlimit-branch=renovate/solid-devtools-0.x -->chore(deps): update dependency solid-devtools to ^0.30.0
 - [ ] <!-- unlimit-branch=renovate/stop-only-3.x-lockfile -->chore(deps): update dependency stop-only to v3.4.1
 - [ ] <!-- unlimit-branch=renovate/tar-7.x -->chore(deps): update dependency tar to v7.4.3
 - [ ] <!-- unlimit-branch=renovate/ts-loader-9.x-lockfile -->chore(deps): update dependency ts-loader to v9.5.1
 - [ ] <!-- unlimit-branch=renovate/ts-loader-9.x -->chore(deps): update dependency ts-loader to ~9.5.0
 - [ ] <!-- unlimit-branch=renovate/tsconfig-paths-4.x -->chore(deps): update dependency tsconfig-paths to ~4.2.0
 - [ ] <!-- unlimit-branch=renovate/tsup-8.x-lockfile -->chore(deps): update dependency tsup to v8.3.5
 - [ ] <!-- unlimit-branch=renovate/tsx-4.x -->chore(deps): update dependency tsx to v4.19.2
 - [ ] <!-- unlimit-branch=renovate/typedoc-0.x -->chore(deps): update dependency typedoc to ^0.26.0
 - [ ] <!-- unlimit-branch=renovate/typescript-eslint-monorepo -->chore(deps): update dependency typescript-eslint to v8.13.0
 - [ ] <!-- unlimit-branch=renovate/verdaccio-5.x-lockfile -->chore(deps): update dependency verdaccio to v5.32.2
 - [ ] <!-- unlimit-branch=renovate/vite-plugin-dts-3.x-lockfile -->chore(deps): update dependency vite-plugin-dts to v3.9.1
 - [ ] <!-- unlimit-branch=renovate/webpack-bundle-analyzer-4.x-lockfile -->chore(deps): update dependency webpack-bundle-analyzer to v4.10.2
 - [ ] <!-- unlimit-branch=renovate/webpack-dev-server-4.x -->chore(deps): update dependency webpack-dev-server to v4.15.2
 - [ ] <!-- unlimit-branch=renovate/emotion-monorepo -->chore(deps): update emotion monorepo (`@emotion/babel-plugin`, `@emotion/css`, `@emotion/react`, `@emotion/styled`)
 - [ ] <!-- unlimit-branch=renovate/eslint-monorepo -->chore(deps): update eslint monorepo to v9.14.0 (`@eslint/js`, `eslint`)
 - [ ] <!-- unlimit-branch=renovate/microsoft-pr-metrics-1.x -->chore(deps): update microsoft/pr-metrics action to v1.6.3
 - [ ] <!-- unlimit-branch=renovate/newrelic-deployment-marker-action-2.x -->chore(deps): update newrelic/deployment-marker-action action to v2.5.1
 - [ ] <!-- unlimit-branch=renovate/panda-css-monorepo -->chore(deps): update panda-css monorepo to ^0.47.0 (`@pandacss/dev`, `@pandacss/studio`)
 - [ ] <!-- unlimit-branch=renovate/pnpm-9.x -->chore(deps): update pnpm to v9.12.3
 - [ ] <!-- unlimit-branch=renovate/slackapi-slack-github-action-1.x -->chore(deps): update slackapi/slack-github-action action to v1.27.0
 - [ ] <!-- unlimit-branch=renovate/storybook-monorepo -->chore(deps): update storybook monorepo (`@storybook/addon-actions`, `@storybook/addon-controls`, `@storybook/addon-docs`, `@storybook/addon-essentials`, `@storybook/addon-interactions`, `@storybook/addon-links`, `@storybook/addon-mdx-gfm`, `@storybook/client-api`, `@storybook/node-logger`, `@storybook/preset-create-react-app`, `@storybook/react`, `@storybook/react-vite`, `@storybook/react-webpack5`, `@storybook/theming`, `@storybook/types`, `storybook`)
 - [ ] <!-- unlimit-branch=renovate/supercharge-redis-github-action-1.x -->chore(deps): update supercharge/redis-github-action action to v1.8.0
 - [ ] <!-- unlimit-branch=renovate/swc-monorepo -->chore(deps): update swc monorepo (`@swc-node/register`, `@swc/cli`, `@swc/core`)
 - [ ] <!-- unlimit-branch=renovate/update-babel-packages -->chore(deps): update update babel packages (`@babel/plugin-transform-react-display-name`, `@babel/plugin-transform-runtime`, `@babel/preset-env`, `@babel/preset-react`, `@babel/preset-typescript`, `@babel/runtime`)
 - [ ] <!-- unlimit-branch=renovate/aws-sdk-js-v3-monorepo -->fix(deps): update aws-sdk-js-v3 monorepo (`@aws-sdk/client-cloudwatch`, `@aws-sdk/client-s3`, `@aws-sdk/client-ses`, `@aws-sdk/client-sns`, `@aws-sdk/s3-request-presigner`)
 - [ ] <!-- unlimit-branch=renovate/azure-communication-sms-1.x-lockfile -->fix(deps): update dependency @azure/communication-sms to v1.1.0
 - [ ] <!-- unlimit-branch=renovate/azure-storage-blob-12.x-lockfile -->fix(deps): update dependency @azure/storage-blob to v12.25.0
 - [ ] <!-- unlimit-branch=renovate/clerk-backend-1.x-lockfile -->fix(deps): update dependency @clerk/backend to v1.16.0
 - [ ] <!-- unlimit-branch=renovate/clerk-types-4.x-lockfile -->fix(deps): update dependency @clerk/types to v4.31.0
 - [ ] <!-- unlimit-branch=renovate/editorjs-editorjs-2.x-lockfile -->fix(deps): update dependency @editorjs/editorjs to v2.30.6
 - [ ] <!-- unlimit-branch=renovate/editorjs-paragraph-2.x-lockfile -->fix(deps): update dependency @editorjs/paragraph to v2.11.6
 - [ ] <!-- unlimit-branch=renovate/godaddy-terminus-4.x-lockfile -->fix(deps): update dependency @godaddy/terminus to v4.12.1
 - [ ] <!-- unlimit-branch=renovate/google-cloud-storage-6.x-lockfile -->fix(deps): update dependency @google-cloud/storage to v6.12.0
 - [ ] <!-- unlimit-branch=renovate/nestjs-axios-3.x -->fix(deps): update dependency @nestjs/axios to v3.1.2
 - [ ] <!-- unlimit-branch=renovate/nestjs-config-3.x-lockfile -->fix(deps): update dependency @nestjs/config to v3.3.0
 - [ ] <!-- unlimit-branch=renovate/opentelemetry-auto-instrumentations-node-0.x -->fix(deps): update dependency @opentelemetry/auto-instrumentations-node to ^0.52.0
 - [ ] <!-- unlimit-branch=renovate/plunk-node-2.x -->fix(deps): update dependency @plunk/node to v2.1.0
 - [ ] <!-- unlimit-branch=renovate/pyroscope-nodejs-0.x -->fix(deps): update dependency @pyroscope/nodejs to ^0.4.0
 - [ ] <!-- unlimit-branch=renovate/rive-app-react-canvas-4.x-lockfile -->fix(deps): update dependency @rive-app/react-canvas to v4.16.1
 - [ ] <!-- unlimit-branch=renovate/segment-analytics-next-1.x-lockfile -->fix(deps): update dependency @segment/analytics-next to v1.76.0
 - [ ] <!-- unlimit-branch=renovate/segment-analytics-next-1.x -->fix(deps): update dependency @segment/analytics-next to v1.76.0
 - [ ] <!-- unlimit-branch=renovate/segment-analytics-node-1.x-lockfile -->fix(deps): update dependency @segment/analytics-node to v1.3.0
 - [ ] <!-- unlimit-branch=renovate/stripe-react-stripe-js-2.x-lockfile -->fix(deps): update dependency @stripe/react-stripe-js to v2.8.1
 - [ ] <!-- unlimit-branch=renovate/tanstack-table-monorepo -->fix(deps): update dependency @tanstack/react-table to v8.20.5
 - [ ] <!-- unlimit-branch=renovate/team-plain-typescript-sdk-5.x -->fix(deps): update dependency @team-plain/typescript-sdk to v5.5.0
 - [ ] <!-- unlimit-branch=renovate/vonage-auth-1.x-lockfile -->fix(deps): update dependency @vonage/auth to v1.12.0
 - [ ] <!-- unlimit-branch=renovate/vonage-server-sdk-3.x-lockfile -->fix(deps): update dependency @vonage/server-sdk to v3.19.1
 - [ ] <!-- unlimit-branch=renovate/webcontainer-api-1.x-lockfile -->fix(deps): update dependency @webcontainer/api to v1.5.0
 - [ ] <!-- unlimit-branch=renovate/ace-builds-1.x-lockfile -->fix(deps): update dependency ace-builds to v1.36.4
 - [ ] <!-- unlimit-branch=renovate/africastalking-0.x -->fix(deps): update dependency africastalking to ^0.7.0
 - [ ] <!-- unlimit-branch=renovate/ajv-8.x-lockfile -->fix(deps): update dependency ajv to v8.17.1
 - [ ] <!-- unlimit-branch=renovate/async-sema-3.x -->fix(deps): update dependency async-sema to v3.1.1
 - [ ] <!-- unlimit-branch=renovate/aws-sdk-2.x-lockfile -->fix(deps): update dependency aws-sdk to v2.1692.0
 - [ ] <!-- unlimit-branch=renovate/bcrypt-5.x-lockfile -->fix(deps): update dependency bcrypt to v5.1.1
 - [ ] <!-- unlimit-branch=renovate/braze-api-2.x-lockfile -->fix(deps): update dependency braze-api to v2.10.1
 - [ ] <!-- unlimit-branch=renovate/bull-4.x-lockfile -->fix(deps): update dependency bull to v4.16.4
 - [ ] <!-- unlimit-branch=renovate/bullmq-3.x-lockfile -->fix(deps): update dependency bullmq to v3.16.2
 - [ ] <!-- unlimit-branch=renovate/chroma-js-2.x-lockfile -->fix(deps): update dependency chroma-js to v2.6.0
 - [ ] <!-- unlimit-branch=renovate/date-fns-2.x-lockfile -->fix(deps): update dependency date-fns to v2.30.0
 - [ ] <!-- unlimit-branch=renovate/date-fns-2.x -->fix(deps): update dependency date-fns to v2.30.0
 - [ ] <!-- unlimit-branch=renovate/expo-server-sdk-3.x-lockfile -->fix(deps): update dependency expo-server-sdk to v3.11.0
 - [ ] <!-- unlimit-branch=renovate/firebase-admin-11.x-lockfile -->fix(deps): update dependency firebase-admin to v11.11.1
 - [ ] <!-- unlimit-branch=renovate/framer-motion-11.x-lockfile -->fix(deps): update dependency framer-motion to v11.11.11
 - [ ] <!-- unlimit-branch=renovate/helmet-6.x-lockfile -->fix(deps): update dependency helmet to v6.2.0
 - [ ] <!-- unlimit-branch=renovate/highlight.js-11.x -->fix(deps): update dependency highlight.js to v11.10.0
 - [ ] <!-- unlimit-branch=renovate/i18next-23.x-lockfile -->fix(deps): update dependency i18next to v23.16.5
 - [ ] <!-- unlimit-branch=renovate/iframe-resizer-4.x-lockfile -->fix(deps): update dependency iframe-resizer to v4.4.5
 - [ ] <!-- unlimit-branch=renovate/ioredis-5.x -->fix(deps): update dependency ioredis to v5.4.1
 - [ ] <!-- unlimit-branch=renovate/ioredis-5.x-lockfile -->fix(deps): update dependency ioredis to v5.4.1
 - [ ] <!-- unlimit-branch=renovate/launchdarkly-react-client-sdk-3.x-lockfile -->fix(deps): update dependency launchdarkly-react-client-sdk to v3.6.0
 - [ ] <!-- unlimit-branch=renovate/liquidjs-10.x-lockfile -->fix(deps): update dependency liquidjs to v10.18.0
 - [ ] <!-- unlimit-branch=renovate/lucide-monorepo -->fix(deps): update dependency lucide-react to ^0.456.0
 - [ ] <!-- unlimit-branch=renovate/mailersend-1.x-lockfile -->fix(deps): update dependency mailersend to v1.5.0
 - [ ] <!-- unlimit-branch=renovate/mailtrap-3.x-lockfile -->fix(deps): update dependency mailtrap to v3.4.0
 - [ ] <!-- unlimit-branch=renovate/mixpanel-0.x -->fix(deps): update dependency mixpanel to ^0.18.0
 - [ ] <!-- unlimit-branch=renovate/mixpanel-browser-2.x-lockfile -->fix(deps): update dependency mixpanel-browser to v2.56.0 (`mixpanel-browser`, `@types/mixpanel-browser`)
 - [ ] <!-- unlimit-branch=renovate/monaco-editor-0.x -->fix(deps): update dependency monaco-editor to ^0.52.0
 - [ ] <!-- unlimit-branch=renovate/mongoose-7.x-lockfile -->fix(deps): update dependency mongoose to v7.8.2
 - [ ] <!-- unlimit-branch=renovate/next-themes-0.x -->fix(deps): update dependency next-themes to ^0.4.0
 - [ ] <!-- unlimit-branch=renovate/nimma-0.x -->fix(deps): update dependency nimma to ^0.7.0
 - [ ] <!-- unlimit-branch=renovate/pino-http-8.x-lockfile -->fix(deps): update dependency pino-http to v8.6.1
 - [ ] <!-- unlimit-branch=renovate/plivo-4.x-lockfile -->fix(deps): update dependency plivo to v4.69.2
 - [ ] <!-- unlimit-branch=renovate/polished-4.x-lockfile -->fix(deps): update dependency polished to v4.3.1
 - [ ] <!-- unlimit-branch=renovate/proxy-agent-6.x-lockfile -->fix(deps): update dependency proxy-agent to v6.4.0
 - [ ] <!-- unlimit-branch=renovate/qs-6.x-lockfile -->fix(deps): update dependency qs to v6.13.0
 - [ ] <!-- unlimit-branch=renovate/react-hook-form-7.x -->fix(deps): update dependency react-hook-form to v7.53.2
 - [ ] <!-- unlimit-branch=renovate/react-icons-5.x-lockfile -->fix(deps): update dependency react-icons to v5.3.0
 - [ ] <!-- unlimit-branch=renovate/react-joyride-2.x-lockfile -->fix(deps): update dependency react-joyride to v2.9.2
 - [ ] <!-- unlimit-branch=renovate/react-syntax-highlighter-15.x-lockfile -->fix(deps): update dependency react-syntax-highlighter to v15.6.1
 - [ ] <!-- unlimit-branch=renovate/rrule-2.x-lockfile -->fix(deps): update dependency rrule to v2.8.1
 - [ ] <!-- unlimit-branch=renovate/sms77-client-2.x-lockfile -->fix(deps): update dependency sms77-client to v2.27.0
 - [ ] <!-- unlimit-branch=renovate/solid-js-1.x-lockfile -->fix(deps): update dependency solid-js to v1.9.3
 - [ ] <!-- unlimit-branch=renovate/sonner-1.x-lockfile -->fix(deps): update dependency sonner to v1.7.0
 - [ ] <!-- unlimit-branch=renovate/svix-1.x-lockfile -->fix(deps): update dependency svix to v1.39.0
 - [ ] <!-- unlimit-branch=renovate/tailwind-merge-2.x-lockfile -->fix(deps): update dependency tailwind-merge to v2.5.4
 - [ ] <!-- unlimit-branch=renovate/telnyx-1.x-lockfile -->fix(deps): update dependency telnyx to v1.27.0
 - [ ] <!-- unlimit-branch=renovate/tslib-2.x-lockfile -->fix(deps): update dependency tslib to v2.8.1
 - [ ] <!-- unlimit-branch=renovate/twilio-4.x-lockfile -->fix(deps): update dependency twilio to v4.23.0
 - [ ] <!-- unlimit-branch=renovate/winston-3.x-lockfile -->fix(deps): update dependency winston to v3.16.0
 - [ ] <!-- unlimit-branch=renovate/xterm-monorepo -->fix(deps): update dependency xterm-addon-fit to ^0.8.0
 - [ ] <!-- unlimit-branch=renovate/zod-3.x-lockfile -->fix(deps): update dependency zod to v3.23.8
 - [ ] <!-- unlimit-branch=renovate/angular-monorepo -->fix(deps): update dependency zone.js to ~0.15.0
 - [ ] <!-- unlimit-branch=renovate/font-awesome -->fix(deps): update font awesome (`@fortawesome/fontawesome-svg-core`, `@fortawesome/free-regular-svg-icons`, `@fortawesome/free-solid-svg-icons`, `@fortawesome/react-fontawesome`)
 - [ ] <!-- unlimit-branch=renovate/mantine-monorepo -->fix(deps): update mantine monorepo to v7.13.5 (`@mantine/code-highlight`, `@mantine/core`, `@mantine/hooks`, `@mantine/tiptap`)
 - [ ] <!-- unlimit-branch=renovate/opentelemetry-js-monorepo -->fix(deps): update opentelemetry-js monorepo (`@opentelemetry/context-async-hooks`, `@opentelemetry/core`, `@opentelemetry/exporter-jaeger`, `@opentelemetry/exporter-prometheus`, `@opentelemetry/exporter-trace-otlp-http`, `@opentelemetry/instrumentation`, `@opentelemetry/propagator-b3`, `@opentelemetry/propagator-jaeger`, `@opentelemetry/resources`, `@opentelemetry/sdk-node`, `@opentelemetry/sdk-trace-base`, `@opentelemetry/sdk-trace-node`, `@opentelemetry/semantic-conventions`)
 - [ ] <!-- unlimit-branch=renovate/rjsf-monorepo -->fix(deps): update rjsf monorepo to v5.22.3 (`@rjsf/core`, `@rjsf/utils`, `@rjsf/validator-ajv8`)
 - [ ] <!-- unlimit-branch=renovate/sentry-javascript-monorepo -->fix(deps): update sentry-javascript monorepo (`@sentry/browser`, `@sentry/nestjs`, `@sentry/node`, `@sentry/profiling-node`, `@sentry/react`, `@sentry/tracing`)
 - [ ] <!-- unlimit-branch=renovate/socket.io-packages -->fix(deps): update socket.io packages to v4.8.1 (`socket.io`, `socket.io-client`)
 - [ ] <!-- unlimit-branch=renovate/tanstack-query-monorepo -->fix(deps): update tanstack-query monorepo (`@tanstack/query-core`, `@tanstack/react-query`, `@tanstack/react-query-devtools`)
 - [ ] <!-- unlimit-branch=renovate/tiptap-monorepo -->fix(deps): update tiptap monorepo to v2.9.1 (`@tiptap/extension-document`, `@tiptap/extension-history`, `@tiptap/extension-mention`, `@tiptap/extension-paragraph`, `@tiptap/extension-text`, `@tiptap/pm`, `@tiptap/react`, `@tiptap/suggestion`)
 - [ ] <!-- unlimit-branch=renovate/actions-labeler-5.x -->chore(deps): update actions/labeler action to v5
 - [ ] <!-- unlimit-branch=renovate/major-angular-cli-monorepo -->chore(deps): update angular-cli monorepo to v18 (major) (`@angular-devkit/build-angular`, `@angular/cli`)
 - [ ] <!-- unlimit-branch=renovate/major-auto-monorepo -->chore(deps): update auto monorepo to v11 (major) (`@auto-it/npm`, `@auto-it/released`, `auto`)
 - [ ] <!-- unlimit-branch=renovate/crazy-max-ghaction-setup-docker-3.x -->chore(deps): update crazy-max/ghaction-setup-docker action to v3
 - [ ] <!-- unlimit-branch=renovate/major-cspell-monorepo -->chore(deps): update cspell monorepo to v8 (major) (`@cspell/eslint-plugin`, `cspell`)
 - [ ] <!-- unlimit-branch=renovate/nestjs-swagger-8.x -->chore(deps): update dependency @nestjs/swagger to v8
 - [ ] <!-- unlimit-branch=renovate/major-octokit-monorepo -->chore(deps): update dependency @octokit/core to v6
 - [ ] <!-- unlimit-branch=renovate/pnpm-filter-workspace-packages-10.x -->chore(deps): update dependency @pnpm/filter-workspace-packages to v10
 - [ ] <!-- unlimit-branch=renovate/sveltejs-kit-2.x -->chore(deps): update dependency @sveltejs/kit to v2
 - [ ] <!-- unlimit-branch=renovate/bull-4.x -->chore(deps): update dependency @types/bull to v4
 - [ ] <!-- unlimit-branch=renovate/configstore-6.x -->chore(deps): update dependency @types/configstore to v6
 - [ ] <!-- unlimit-branch=renovate/express-5.x -->chore(deps): update dependency @types/express to v5
 - [ ] <!-- unlimit-branch=renovate/inquirer-9.x -->chore(deps): update dependency @types/inquirer to v9
 - [ ] <!-- unlimit-branch=renovate/jasmine-5.x -->chore(deps): update dependency @types/jasmine to v5
 - [ ] <!-- unlimit-branch=renovate/passport-jwt-4.x -->chore(deps): update dependency @types/passport-jwt to v4
 - [ ] <!-- unlimit-branch=renovate/sinon-17.x -->chore(deps): update dependency @types/sinon to v17
 - [ ] <!-- unlimit-branch=renovate/supertest-6.x -->chore(deps): update dependency @types/supertest to v6
 - [ ] <!-- unlimit-branch=renovate/testing-library__jest-dom-6.x -->chore(deps): update dependency @types/testing-library__jest-dom to v6
 - [ ] <!-- unlimit-branch=renovate/uuid-10.x -->chore(deps): update dependency @types/uuid to v10
 - [ ] <!-- unlimit-branch=renovate/validate-npm-package-name-4.x -->chore(deps): update dependency @types/validate-npm-package-name to v4
 - [ ] <!-- unlimit-branch=renovate/major-typescript-eslint-monorepo -->chore(deps): update dependency @typescript-eslint/parser to v8
 - [ ] <!-- unlimit-branch=renovate/vercel-node-3.x -->chore(deps): update dependency @vercel/node to v3
 - [ ] <!-- unlimit-branch=renovate/vitejs-plugin-vue-5.x -->chore(deps): update dependency @vitejs/plugin-vue to v5
 - [ ] <!-- unlimit-branch=renovate/vitejs-plugin-vue-jsx-4.x -->chore(deps): update dependency @vitejs/plugin-vue-jsx to v4
 - [ ] <!-- unlimit-branch=renovate/vue-eslint-config-prettier-10.x -->chore(deps): update dependency @vue/eslint-config-prettier to v10
 - [ ] <!-- unlimit-branch=renovate/vue-eslint-config-typescript-14.x -->chore(deps): update dependency @vue/eslint-config-typescript to v14
 - [ ] <!-- unlimit-branch=renovate/babel-loader-9.x -->chore(deps): update dependency babel-loader to v9
 - [ ] <!-- unlimit-branch=renovate/chai-5.x -->chore(deps): update dependency chai to v5 (`chai`, `@types/chai`)
 - [ ] <!-- unlimit-branch=renovate/chalk-animation-2.x -->chore(deps): update dependency chalk-animation to v2
 - [ ] <!-- unlimit-branch=renovate/compression-webpack-plugin-11.x -->chore(deps): update dependency compression-webpack-plugin to v11
 - [ ] <!-- unlimit-branch=renovate/concurrently-9.x -->chore(deps): update dependency concurrently to v9
 - [ ] <!-- unlimit-branch=renovate/cross-env-7.x -->chore(deps): update dependency cross-env to v7
 - [ ] <!-- unlimit-branch=renovate/major-eslint-monorepo -->chore(deps): update dependency eslint to v9
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-cypress-4.x -->chore(deps): update dependency eslint-plugin-cypress to v4
 - [ ] <!-- unlimit-branch=renovate/major-react-monorepo -->chore(deps): update dependency eslint-plugin-react-hooks to v5
 - [ ] <!-- unlimit-branch=renovate/eslint-plugin-unicorn-56.x -->chore(deps): update dependency eslint-plugin-unicorn to v56
 - [ ] <!-- unlimit-branch=renovate/fs-extra-11.x -->chore(deps): update dependency fs-extra to v11
 - [ ] <!-- unlimit-branch=renovate/gh-pages-6.x -->chore(deps): update dependency gh-pages to v6
 - [ ] <!-- unlimit-branch=renovate/globby-14.x -->chore(deps): update dependency globby to v14
 - [ ] <!-- unlimit-branch=renovate/http-server-14.x -->chore(deps): update dependency http-server to v14
 - [ ] <!-- unlimit-branch=renovate/husky-9.x -->chore(deps): update dependency husky to v9
 - [ ] <!-- unlimit-branch=renovate/major-jasmine-monorepo -->chore(deps): update dependency jasmine-core to v5
 - [ ] <!-- unlimit-branch=renovate/major-jest-monorepo -->chore(deps): update dependency jest-config to v29
 - [ ] <!-- unlimit-branch=renovate/jsdom-25.x -->chore(deps): update dependency jsdom to v25
 - [ ] <!-- unlimit-branch=renovate/major-lerna-monorepo -->chore(deps): update dependency lerna to v8
 - [ ] <!-- unlimit-branch=renovate/less-loader-12.x -->chore(deps): update dependency less-loader to v12
 - [ ] <!-- unlimit-branch=renovate/lint-staged-15.x -->chore(deps): update dependency lint-staged to v15
 - [ ] <!-- unlimit-branch=renovate/meow-13.x -->chore(deps): update dependency meow to v13
 - [ ] <!-- unlimit-branch=renovate/mocha-10.x -->chore(deps): update dependency mocha to v10 (`mocha`, `@types/mocha`)
 - [ ] <!-- unlimit-branch=renovate/newrelic-12.x -->chore(deps): update dependency newrelic to v12
 - [ ] <!-- unlimit-branch=renovate/ng-packagr-18.x -->chore(deps): update dependency ng-packagr to v18
 - [ ] <!-- unlimit-branch=renovate/nyc-17.x -->chore(deps): update dependency nyc to v17
 - [ ] <!-- unlimit-branch=renovate/open-cli-8.x -->chore(deps): update dependency open-cli to v8
 - [ ] <!-- unlimit-branch=renovate/postcss-prefix-selector-2.x -->chore(deps): update dependency postcss-prefix-selector to v2
 - [ ] <!-- unlimit-branch=renovate/postcss-preset-env-10.x -->chore(deps): update dependency postcss-preset-env to v10
 - [ ] <!-- unlimit-branch=renovate/prettier-3.x -->chore(deps): update dependency prettier to v3
 - [ ] <!-- unlimit-branch=renovate/replace-in-file-8.x -->chore(deps): update dependency replace-in-file to v8
 - [ ] <!-- unlimit-branch=renovate/rimraf-6.x -->chore(deps): update dependency rimraf to v6
 - [ ] <!-- unlimit-branch=renovate/sinon-19.x -->chore(deps): update dependency sinon to v19
 - [ ] <!-- unlimit-branch=renovate/uuid-11.x -->chore(deps): update dependency uuid to v11
 - [ ] <!-- unlimit-branch=renovate/verdaccio-6.x -->chore(deps): update dependency verdaccio to v6
 - [ ] <!-- unlimit-branch=renovate/vite-5.x -->chore(deps): update dependency vite to v5
 - [ ] <!-- unlimit-branch=renovate/vite-plugin-dts-4.x -->chore(deps): update dependency vite-plugin-dts to v4
 - [ ] <!-- unlimit-branch=renovate/vite-plugin-static-copy-2.x -->chore(deps): update dependency vite-plugin-static-copy to v2
 - [ ] <!-- unlimit-branch=renovate/vite-tsconfig-paths-5.x -->chore(deps): update dependency vite-tsconfig-paths to v5
 - [ ] <!-- unlimit-branch=renovate/major-vitest-monorepo -->chore(deps): update dependency vitest to v2
 - [ ] <!-- unlimit-branch=renovate/vue-tsc-2.x -->chore(deps): update dependency vue-tsc to v2
 - [ ] <!-- unlimit-branch=renovate/wait-port-1.x -->chore(deps): update dependency wait-port to v1
 - [ ] <!-- unlimit-branch=renovate/webpack-dev-server-5.x -->chore(deps): update dependency webpack-dev-server to v5
 - [ ] <!-- unlimit-branch=renovate/github-codeql-action-3.x -->chore(deps): update github/codeql-action action to v3
 - [ ] <!-- unlimit-branch=renovate/localstack-localstack-3.x -->chore(deps): update localstack/localstack docker tag to v3
 - [ ] <!-- unlimit-branch=renovate/mcr.microsoft.com-vscode-devcontainers-javascript-node-1.x -->chore(deps): update mcr.microsoft.com/vscode/devcontainers/javascript-node docker tag to v1
 - [ ] <!-- unlimit-branch=renovate/nwtgck-actions-netlify-3.x -->chore(deps): update nwtgck/actions-netlify action to v3
 - [ ] <!-- unlimit-branch=renovate/peter-evans-create-or-update-comment-4.x -->chore(deps): update peter-evans/create-or-update-comment action to v4
 - [ ] <!-- unlimit-branch=renovate/major-storybook-monorepo -->chore(deps): update storybook monorepo to v8 (major) (`@storybook/addon-actions`, `@storybook/addon-docs`, `@storybook/addon-essentials`, `@storybook/addon-interactions`, `@storybook/addon-links`, `@storybook/addon-mdx-gfm`, `@storybook/node-logger`, `@storybook/preset-create-react-app`, `@storybook/react`, `@storybook/react-webpack5`, `@storybook/theming`, `storybook`)
 - [ ] <!-- unlimit-branch=renovate/major-testing-library-monorepo -->chore(deps): update testing-library monorepo (major) (`@testing-library/dom`, `@testing-library/jest-dom`, `@testing-library/react`, `@testing-library/user-event`)
 - [ ] <!-- unlimit-branch=renovate/tj-actions-branch-names-8.x -->chore(deps): update tj-actions/branch-names action to v8
 - [ ] <!-- unlimit-branch=renovate/major-update-jest-packages -->chore(deps): update update jest packages to v29 (major) (`jest`, `ts-jest`)
 - [ ] <!-- unlimit-branch=renovate/major-update-rollup-packages -->chore(deps): update update rollup packages (major) (`@rollup/plugin-node-resolve`, `@rollup/plugin-replace`)
 - [ ] <!-- unlimit-branch=renovate/major-angular-monorepo -->fix(deps): update angular monorepo to v18 (major) (`@angular/animations`, `@angular/common`, `@angular/compiler`, `@angular/compiler-cli`, `@angular/core`, `@angular/forms`, `@angular/platform-browser`, `@angular/platform-browser-dynamic`, `@angular/router`)
 - [ ] <!-- unlimit-branch=renovate/ant-design-icons-5.x -->fix(deps): update dependency @ant-design/icons to v5
 - [ ] <!-- unlimit-branch=renovate/faker-js-faker-9.x -->fix(deps): update dependency @faker-js/faker to v9
 - [ ] <!-- unlimit-branch=renovate/google-cloud-storage-7.x -->fix(deps): update dependency @google-cloud/storage to v7
 - [ ] <!-- unlimit-branch=renovate/hookform-resolvers-3.x -->fix(deps): update dependency @hookform/resolvers to v3
 - [ ] <!-- unlimit-branch=renovate/parse-node-apn-6.x -->fix(deps): update dependency @parse/node-apn to v6
 - [ ] <!-- unlimit-branch=renovate/plunk-node-3.x -->fix(deps): update dependency @plunk/node to v3
 - [ ] <!-- unlimit-branch=renovate/segment-analytics-node-2.x -->fix(deps): update dependency @segment/analytics-node to v2
 - [ ] <!-- unlimit-branch=renovate/major-sentry-javascript-monorepo -->fix(deps): update dependency @sentry/react to v8
 - [ ] <!-- unlimit-branch=renovate/socket.io-redis-adapter-8.x -->fix(deps): update dependency @socket.io/redis-adapter to v8
 - [ ] <!-- unlimit-branch=renovate/stripe-stripe-js-4.x -->fix(deps): update dependency @stripe/stripe-js to v4
 - [ ] <!-- unlimit-branch=renovate/upstash-ratelimit-2.x -->fix(deps): update dependency @upstash/ratelimit to v2
 - [ ] <!-- unlimit-branch=renovate/ajv-formats-3.x -->fix(deps): update dependency ajv-formats to v3
 - [ ] <!-- unlimit-branch=renovate/antd-5.x -->fix(deps): update dependency antd to v5
 - [ ] <!-- unlimit-branch=renovate/autoprefixer-10.x -->fix(deps): update dependency autoprefixer to v10
 - [ ] <!-- unlimit-branch=renovate/axios-retry-4.x -->fix(deps): update dependency axios-retry to v4
 - [ ] <!-- unlimit-branch=renovate/bcrypt-5.x -->fix(deps): update dependency bcrypt to ~5.1.0 (`bcrypt`, `@types/bcrypt`)
 - [ ] <!-- unlimit-branch=renovate/bluebird-3.x -->fix(deps): update dependency bluebird to v3
 - [ ] <!-- unlimit-branch=renovate/bullmq-5.x -->fix(deps): update dependency bullmq to v5
 - [ ] <!-- unlimit-branch=renovate/chalk-5.x -->fix(deps): update dependency chalk to v5
 - [ ] <!-- unlimit-branch=renovate/chart.js-4.x -->fix(deps): update dependency chart.js to v4
 - [ ] <!-- unlimit-branch=renovate/chroma-js-3.x -->fix(deps): update dependency chroma-js to v3
 - [ ] <!-- unlimit-branch=renovate/commander-12.x -->fix(deps): update dependency commander to v12
 - [ ] <!-- unlimit-branch=renovate/configstore-7.x -->fix(deps): update dependency configstore to v7
 - [ ] <!-- unlimit-branch=renovate/cross-fetch-4.x -->fix(deps): update dependency cross-fetch to v4
 - [ ] <!-- unlimit-branch=renovate/date-fns-4.x -->fix(deps): update dependency date-fns to v4
 - [ ] <!-- unlimit-branch=renovate/extend-3.x -->fix(deps): update dependency extend to v3
 - [ ] <!-- unlimit-branch=renovate/firebase-admin-12.x -->fix(deps): update dependency firebase-admin to v12
 - [ ] <!-- unlimit-branch=renovate/get-port-7.x -->fix(deps): update dependency get-port to v7
 - [ ] <!-- unlimit-branch=renovate/googleapis-144.x -->fix(deps): update dependency googleapis to v144
 - [ ] <!-- unlimit-branch=renovate/got-14.x -->fix(deps): update dependency got to v14
 - [ ] <!-- unlimit-branch=renovate/gradient-string-3.x -->fix(deps): update dependency gradient-string to v3
 - [ ] <!-- unlimit-branch=renovate/helmet-8.x -->fix(deps): update dependency helmet to v8
 - [ ] <!-- unlimit-branch=renovate/iframe-resizer-5.x -->fix(deps): update dependency iframe-resizer to v5
 - [ ] <!-- unlimit-branch=renovate/inquirer-12.x -->fix(deps): update dependency inquirer to v12
 - [ ] <!-- unlimit-branch=renovate/jsonwebtoken-9.x -->fix(deps): update dependency jsonwebtoken to v9.0.2 (`jsonwebtoken`, `@types/jsonwebtoken`)
 - [ ] <!-- unlimit-branch=renovate/jwt-decode-4.x -->fix(deps): update dependency jwt-decode to v4
 - [ ] <!-- unlimit-branch=renovate/languagedetect-2.x -->fix(deps): update dependency languagedetect to v2
 - [ ] <!-- unlimit-branch=renovate/mailersend-2.x -->fix(deps): update dependency mailersend to v2
 - [ ] <!-- unlimit-branch=renovate/mailgun.js-10.x -->fix(deps): update dependency mailgun.js to v10
 - [ ] <!-- unlimit-branch=renovate/mailparser-3.x -->fix(deps): update dependency mailparser to v3
 - [ ] <!-- unlimit-branch=renovate/mongoose-8.x -->fix(deps): update dependency mongoose to v8
 - [ ] <!-- unlimit-branch=renovate/nanoid-5.x -->fix(deps): update dependency nanoid to v5
 - [ ] <!-- unlimit-branch=renovate/open-10.x -->fix(deps): update dependency open to v10
 - [ ] <!-- unlimit-branch=renovate/ora-8.x -->fix(deps): update dependency ora to v8
 - [ ] <!-- unlimit-branch=renovate/pino-http-10.x -->fix(deps): update dependency pino-http to v10
 - [ ] <!-- unlimit-branch=renovate/pino-pretty-12.x -->fix(deps): update dependency pino-pretty to v12
 - [ ] <!-- unlimit-branch=renovate/react-ace-13.x -->fix(deps): update dependency react-ace to v13
 - [ ] <!-- unlimit-branch=renovate/react-chartjs-2-5.x -->fix(deps): update dependency react-chartjs-2 to v5
 - [ ] <!-- unlimit-branch=renovate/react-editor-js-2.x -->fix(deps): update dependency react-editor-js to v2
 - [ ] <!-- unlimit-branch=renovate/react-error-boundary-4.x -->fix(deps): update dependency react-error-boundary to v4
 - [ ] <!-- unlimit-branch=renovate/react-helmet-async-2.x -->fix(deps): update dependency react-helmet-async to v2
 - [ ] <!-- unlimit-branch=renovate/react-use-intercom-5.x -->fix(deps): update dependency react-use-intercom to v5
 - [ ] <!-- unlimit-branch=renovate/resend-4.x -->fix(deps): update dependency resend to v4
 - [ ] <!-- unlimit-branch=renovate/smtp-server-3.x -->fix(deps): update dependency smtp-server to v3
 - [ ] <!-- unlimit-branch=renovate/storybook-dark-mode-4.x -->fix(deps): update dependency storybook-dark-mode to v4
 - [ ] <!-- unlimit-branch=renovate/stripe-17.x -->fix(deps): update dependency stripe to v17
 - [ ] <!-- unlimit-branch=renovate/swagger-ui-express-5.x -->fix(deps): update dependency swagger-ui-express to v5
 - [ ] <!-- unlimit-branch=renovate/twilio-5.x -->fix(deps): update dependency twilio to v5
 - [ ] <!-- unlimit-branch=renovate/validate-npm-package-name-6.x -->fix(deps): update dependency validate-npm-package-name to v6
 - [ ] <!-- unlimit-branch=renovate/web-vitals-4.x -->fix(deps): update dependency web-vitals to v4
 - [ ] <!-- unlimit-branch=renovate/major-mantine-monorepo -->fix(deps): update mantine monorepo (major) (`@mantine/core`, `@mantine/dropzone`, `@mantine/form`, `@mantine/hooks`, `@mantine/notifications`, `@mantine/prism`, `@mantine/spotlight`)
 - [ ] <!-- unlimit-branch=renovate/major-nrwl-monorepo -->fix(deps): update nrwl monorepo (major) (`@nx/devkit`, `@nx/js`, `nrwl/nx-set-shas`, `nx`)
 - [ ] <!-- unlimit-branch=renovate/major-tanstack-query-monorepo -->fix(deps): update tanstack-query monorepo to v5 (major) (`@tanstack/query-core`, `@tanstack/react-query`, `@tanstack/react-query-devtools`)
 - [ ] <!-- create-all-rate-limited-prs -->🔐 **Create all rate-limited PRs at once** 🔐

## Pending Status Checks

These updates await pending status checks. To force their creation now, click the checkbox below.

 - [ ] <!-- approvePr-branch=renovate/arethetypeswrong-cli-0.x -->chore(deps): update dependency @arethetypeswrong/cli to ^0.17.0


---

> [!WARNING]
> Renovate failed to look up the following dependencies: `Failed to look up npm package @taskforcesh/bullmq-pro`.
> 
> Files affected: `libs/application-generic/package.json`

---


## Open

These updates have all been created already. Click a checkbox below to force a retry/rebase of any.

 - [ ] <!-- rebase-branch=renovate/npm-body-parser-vulnerability -->[fix(deps): update dependency body-parser to v1.20.3 [security]](../pull/6619)
 - [ ] <!-- rebase-branch=renovate/npm-nodemailer-vulnerability -->[fix(deps): update dependency nodemailer to v6.9.9 [security]](../pull/6620)
 - [ ] <!-- rebase-branch=renovate/npm-rollup-vulnerability -->[chore(deps): update dependency rollup to v3.29.5 [security]](../pull/6623)
 - [ ] <!-- rebase-branch=renovate/npm-webpack-vulnerability -->[chore(deps): update dependency webpack to v5.94.0 [security]](../pull/6399)
 - [ ] <!-- rebase-branch=renovate/npm-sanitize-html-vulnerability -->[fix(deps): update dependency sanitize-html to v2.12.1 [security]](../pull/6621)
 - [ ] <!-- rebase-branch=renovate/npm-vite-vulnerability -->[chore(deps): update dependency vite to v5.4.6 [security]](../pull/6624)
 - [ ] <!-- rebase-branch=renovate/npm-next-vulnerability -->[fix(deps): update dependency next [security]](../pull/5538)
 - [ ] <!-- rebase-branch=renovate/cpx-replacement -->[chore(deps): replace dependency cpx with cpx2 ^2.0.0](../pull/5714)
 - [ ] <!-- rebase-branch=renovate/update-jest-packages -->[chore(deps): update update jest packages](../pull/5715) (`@types/jest`, `jest`, `ts-jest`)
 - [ ] <!-- rebase-all-open-prs -->**Click on this checkbox to rebase all open PRs at once**

## Ignored or Blocked

These are blocked by an existing closed PR and will not be recreated unless you click a checkbox below.

 - [ ] <!-- recreate-branch=renovate/npm-http-proxy-middleware-vulnerability -->[chore(deps): update dependency http-proxy-middleware to v3.0.3 [security]](../pull/6746)
 - [ ] <!-- recreate-branch=renovate/express-4.x -->[chore(deps): update dependency @types/express to v4.17.21](../pull/4764)

## Detected dependencies

> [!NOTE]
> Detected dependencies section has been truncated

<details><summary>devcontainer</summary>
<blockquote>

<details><summary>.devcontainer/devcontainer.json</summary>

 - `ghcr.io/devcontainers-contrib/features/pnpm 2`

</details>

</blockquote>
</details>

<details><summary>docker-compose</summary>
<blockquote>

<details><summary>.devcontainer/docker-compose.yml</summary>


</details>

<details><summary>docker/community/docker-compose.yml</summary>

 - `ghcr.io/novuhq/novu/api 2.0.0`
 - `ghcr.io/novuhq/novu/worker 2.0.0`
 - `ghcr.io/novuhq/novu/ws 2.0.0`
 - `ghcr.io/novuhq/novu/web 2.0.0`

</details>

<details><summary>docker/local/docker-compose.e2e.yml</summary>

 - `localstack/localstack 0.14.5`

</details>

<details><summary>docker/local/docker-compose.local.yml</summary>


</details>

<details><summary>docker/local/docker-compose.yml</summary>

 - `localstack/localstack 0.14.5`

</details>

</blockquote>
</details>

<details><summary>dockerfile</summary>
<blockquote>

<details><summary>.devcontainer/Dockerfile</summary>

 - `mcr.microsoft.com/vscode/devcontainers/javascript-node 0-20-bullseye`

</details>

<details><summary>.gitpod.dockerfile</summary>


</details>

<details><summary>apps/api/Dockerfile</summary>


</details>

<details><summary>apps/inbound-mail/Dockerfile</summary>


</details>

<details><summary>apps/web/Dockerfile</summary>


</details>

<details><summary>apps/webhook/Dockerfile</summary>


</details>

<details><summary>apps/widget/Dockerfile</summary>


</details>

<details><summary>apps/worker/Dockerfile</summary>


</details>

<details><summary>apps/ws/Dockerfile</summary>


</details>

<details><summary>libs/embed/Dockerfile</summary>


</details>

</blockquote>
</details>

<details><summary>github-actions</summary>
<blockquote>

<details><summary>.github/actions/cache/action.yml</summary>

 - `crazy-max/ghaction-github-runtime v3`

</details>

<details><summary>.github/actions/checkout-submodules/action.yml</summary>

 - `actions/checkout v4`

</details>

<details><summary>.github/actions/docker/build-api/action.yml</summary>

 - `docker/setup-buildx-action v3`
 - `aws-actions/configure-aws-credentials v4`
 - `aws-actions/amazon-ecr-login v2`

</details>

<details><summary>.github/actions/docker/build-worker/action.yml</summary>

 - `docker/setup-buildx-action v3`
 - `aws-actions/configure-aws-credentials v4`
 - `aws-actions/amazon-ecr-login v2`

</details>

<details><summary>.github/actions/run-api/action.yml</summary>

 - `mansagroup/nrwl-nx-action v3`

</details>

<details><summary>.github/actions/setup-project/action.yml</summary>

 - `pnpm/action-setup v3`
 - `actions/setup-node v4`
 - `supercharge/redis-github-action 1.5.0`
 - `supercharge/mongodb-github-action 1.11.0`

</details>

<details><summary>.github/actions/setup-redis-cluster/action.yml</summary>

 - `vishnudxb/redis-cluster 1.0.5`

</details>

<details><summary>.github/actions/slack-notify-on-failure/action.yml</summary>

 - `ravsamhq/notify-slack-action v2`

</details>

<details><summary>.github/actions/validate-openapi/action.yml</summary>

 - `mansagroup/nrwl-nx-action v3`

</details>

<details><summary>.github/workflows/codeql-analysis.yml</summary>

 - `actions/checkout v4`
 - `github/codeql-action v2`
 - `github/codeql-action v2`
 - `github/codeql-action v2`

</details>

<details><summary>.github/workflows/community-label.yml</summary>

 - `actions/checkout v4`
 - `actions/setup-node v4`

</details>

<details><summary>.github/workflows/conventional-commit.yml</summary>

 - `actions/checkout v4`
 - `pnpm/action-setup v3`
 - `amannn/action-semantic-pull-request v5`
 - `marocchino/sticky-pull-request-comment v2`
 - `marocchino/sticky-pull-request-comment v2`

</details>

<details><summary>.github/workflows/dev-deploy-api.yml</summary>

 - `actions/checkout v4`
 - `aws-actions/configure-aws-credentials v4`
 - `hashicorp/setup-terraform v3`
 - `aws-actions/amazon-ecs-render-task-definition 39c13cf530718ffeb524ec8ee0c15882bcb13842`
 - `aws-actions/amazon-ecs-deploy-task-definition 3e7310352de91b71a906e60c22af629577546002`
 - `getsentry/action-release v1`
 - `novuhq/actions-novu-sync v2`
 - `newrelic/deployment-marker-action v2.3.0`

</details>

<details><summary>.github/workflows/dev-deploy-inbound-mail.yml</summary>

 - `actions/checkout v4`
 - `docker/setup-buildx-action v3`
 - `aws-actions/configure-aws-credentials v4`
 - `aws-actions/amazon-ecr-login v2`
 - `hashicorp/setup-terraform v3`
 - `aws-actions/amazon-ecs-render-task-definition 39c13cf530718ffeb524ec8ee0c15882bcb13842`
 - `aws-actions/amazon-ecs-render-task-definition 39c13cf530718ffeb524ec8ee0c15882bcb13842`
 - `getsentry/action-release v1`

</details>

<details><summary>.github/workflows/dev-deploy-web-component.yml</summary>

 - `actions/checkout v4`
 - `actions/download-artifact v4`

</details>

<details><summary>.github/workflows/dev-deploy-worker.yml</summary>

 - `actions/checkout v4`

</details>

</blockquote>
</details>

---

- [ ] <!-- manual job -->Check this box to trigger a request for Renovate to run again on this repository

",,
1106393035,180,Async Delivery Reports to Other Services,"## What?
Ability to send reports of delivery to an external service using a webhook.

## Why?
Extensibility to other services. 

## How?
Currently there is no way for a provider to send delivery reports to the application. Is this currently in the pipeline?

On the downstream of what to do with success/failure of a notification,
EventEmitter `postSend` can be used to handle sending this and can be processed further. Although I do thing that the config for managing webhooks for delivery reports can be part of the exiting application.
https://github.com/notifirehq/notifire/blob/4ee74c9abe3d717410766738e7364a77df77c232/packages/core/src/lib/events/types.d.ts#L14
",,
1097169644,173,[RLD-47] - Implement OAuth flow with GitHub,"## Why?

Allow developers to onboard quickly with their GitHub account.

## What?

GitHub OAuth flow is currently available in the code we just need to test it with some GitHub Client Id to make sure it works and creates a user correctly in the DB. The GitHub strategy is in [this file](https://github.com/notifirehq/notifire/blob/master/apps/api/src/app/auth/services/passport/github.strategy.ts) and can be accessed at `http://localhost:3000/v1/auth/github`.

To test the auth endpoint the following env variables must be added (Create a GitHub app and the keys to the `.env` file in `apps/api/src/.env`):

```
GITHUB_OAUTH_CLIENT_ID=
GITHUB_OAUTH_CLIENT_SECRET=
GITHUB_OAUTH_REDIRECT=
```

## Acceptance tests

* [ ] Test the entire flow to make sure a user is created when not exist
* [ ] If a user exists make sure that he is matched and authenticates
* [ ] After authentication flow the user should be redirected to `localhost:4200` with the jwt token in the query params",,
1089279246,152,Allow `subject` to be passed a `function` and not only `string`,"**Is your feature request related to a problem? Please describe.**
When sending notifications we need to localize the content of the message to the target user. Currently it is only allowed for `template` to be passed as a `function` [see here](https://github.com/notifirehq/notifire/blob/ed8f6b8d85035e85aa7075b6c22e6bd3d93a5772/packages/core/src/lib/handler/email.handler.ts#L37). It is useful to be able to localize the `subject` as well.

Unfortunately the `subject` only allows a `string` to be passed which will get evaluated when the template is registered. In cases of a webserver (such as express) this is not a viable solution because the string gets evaluated as soon as it is registered.

There are several projects using `i18n` as a singleton

```js
import i18n form 'i18n';

i18n.configure({
  directory: path.join(__dirname, '../translations'),
});
```

and the language is modified on the fly when an HTTP request is made to the application. Since the template was registered on application boot the `subject` cannot be re-evaluated, making us having to create several `messages`:

```js
await notifire.registerTemplate({
    id: ""password-reset"",
    messages: [
      {
        subject: ""Your password reset request english"",
        channel: ChannelTypeEnum.EMAIL,
        template: """",
        active: (payload) => {
          return payload.language === ""en"";
        },
      },
      {
        subject: ""Your password reset request french"",
        channel: ChannelTypeEnum.EMAIL,
        template: "",
        active: (payload) => {
          return payload.language === ""fr"";
        },
      },
    ],
  });
```

Which does not use `i18n` anywhere, but more like hardcoding the values. This brings a problem when the translations are managed by a different team. 

**Describe the solution you'd like**
A way to register the `subject` on demand respecting changes in a dynamic app. Something like:

```js
import { getTranslation } from './plugins/i18n'

  await notifire.registerTemplate({
    id: 'password-reset',
    messages: [
      {
        subject: () => getTranslation('translation-key'),
        channel: ChannelTypeEnum.EMAIL,
        template: ""this is the awesome template"",
      },
    ],
  });
```

We could even pass the configuration of the template in here as well to evaluate something other:

```js
subject: (template: ITemplate) => {
  if (template.someFutureConfiguration === 'foo') {
    return getTranslation('translation-key-foo')
  }
  
  return getTranslation('translation-key-bar');
},
```

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.

**Additional context**
For the person that will work on this feature (mostly me) he can see examples of the same logic [here](https://github.com/notifirehq/notifire/blob/ed8f6b8d85035e85aa7075b6c22e6bd3d93a5772/packages/core/src/lib/handler/email.handler.ts#L37)
",,
1088448122,147,AWS SES: undefined is not iterable,"**Describe the bug**
When trying to send an email with was ses without attachments getting this error:

```
(node:25076) UnhandledPromiseRejectionWarning: TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
    at __read (/home/whatever/todozito/todozito-notifire/node_modules/@notifire/ses/build/main/lib/ses.provider.js:39:46)
    at SESEmailProvider.<anonymous> (/home/whatever/todozito/..
```
",,
1082747695,139,[NV-1633] [Feature Request] Webhook Provider,"**Is your feature request related to a problem? Please describe.**
I was excited to see the `DirectProvider`, hoping I could use it as the base for sending arbitrary content to webhook endpoints. However it seems that the content is typed as a string.
 
**Describe the solution you'd like**
A dedicated Webhook provider interface, or a genericized DirectProvider where we parameterize the content type.

**Describe alternatives you've considered**
Currently the closest provider in functionality is the direct provider, so this is the only one I've considered.

**Additional context**
If end-users have more complicated requirements (like retries, backoff, status code mapping) then it would make sense to have a separate provider type.

If there's a design put forth for such a provider, I'd be willing to devote some effort to implement it.
 

<sub>[NV-1633](https://linear.app/novu/issue/NV-1633/[feature-request]-webhook-provider)</sub>",,
1050281078,109,Email.js attachments support,"## What?
Add support for sending attachments for our [Email.js](https://github.com/notifirehq/notifire/tree/master/providers/emailjs) provider.

### Why?
To have the ability to use send attachments.

### How?
Based on Notifire IAttachmentOptions interface found [here](https://github.com/notifirehq/notifire/blob/master/packages/core/src/lib/template/template.interface.ts).
And Email.js methods found [here](https://github.com/eleith/emailjs)

### Usage
Based on Notifire IAttachmentOptions interface on the trigger. ",,
1050014308,108,Create direct message interface,"### What?
Adds a direct provider interface to send a message based on a channel id.",,
1046822990,103,Create an interface for attachments,,,
1046822056,102,Mandrill attachments support,"## What?
Add support for sending attachments for our [Mandrill](https://github.com/notifirehq/notifire/tree/master/providers/mandrill) provider.

### Why?
To have the ability to use send attachments.

### How?
Based on Notifire IAttachmentOptions interface found [here](https://github.com/notifirehq/notifire/blob/master/packages/core/src/lib/template/template.interface.ts).
And Mandrill methods found [here](https://mailchimp.com/developer/transactional/api/messages/send-new-message/)

### Usage
Based on Notifire IAttachmentOptions interface on the trigger. ",,
1046822035,101,Mailjet attachments support,"## What?
Add support for sending attachments for our [Mailjet](https://github.com/notifirehq/notifire/tree/master/providers/mailjet) provider.

### Why?
To have the ability to use send attachments.

### How?
Based on Notifire IAttachmentOptions interface found [here](https://github.com/notifirehq/notifire/blob/master/packages/core/src/lib/template/template.interface.ts).
And Mailjet method found [here](https://dev.mailjet.com/email/guides/send-api-V3/#send-with-attached-files)

### Usage
Based on Notifire IAttachmentOptions interface on the trigger. ",,
1046822027,100,NodeMailer attachments support,"## What?
Add support for sending attachments for our [NodeMailer](https://github.com/notifirehq/notifire/tree/master/providers/nodemailer) provider.

### Why?
To have the ability to use send attachments.

### How?
Based on Notifire IAttachmentOptions interface found [here](https://github.com/notifirehq/notifire/blob/master/packages/core/src/lib/template/template.interface.ts).
And NodeMailer methods found [here](https://nodemailer.com/message/attachments/)

### Usage
Based on Notifire IAttachmentOptions interface on the trigger. ",,
1046822018,99,Postmark attachments support,"## What?
Add support for sending attachments for our [Postmark](https://github.com/notifirehq/notifire/tree/master/providers/postmark) provider.

### Why?
To have the ability to use send attachments.

### How?
Based on Notifire IAttachmentOptions interface found [here](https://github.com/notifirehq/notifire/blob/master/packages/core/src/lib/template/template.interface.ts).
And Postmark methods found [here](https://github.com/wildbit/postmark.js/wiki/Email-sending)

### Usage
Based on Notifire IAttachmentOptions interface on the trigger. ",,
1046822009,98,SES attachments support,"## What?
Add support for sending attachments for our (SES)(https://github.com/notifirehq/notifire/tree/master/providers/ses) provider.

### Why?
To have the ability to use send attachments.

### How?
Based on Notifire IAttachmentOptions interface found [here](https://github.com/notifirehq/notifire/blob/master/packages/core/src/lib/template/template.interface.ts).
Optionally use this [guide](https://medium.com/@jensposingies/how-to-send-an-email-with-an-attachment-using-aws-ses-2e333d16d39f) by Jens Posingies, if that can assist.

### Usage
Based on Notifire IAttachmentOptions interface on the trigger. 
",,
1046822001,97,Mailgun attachments support,"## What?
Add support for sending attachments for our [Mailgun](https://github.com/notifirehq/notifire/tree/master/providers/mailgun) provider.

### Why?
To have the ability to use send attachments.

### How?
Based on Notifire IAttachmentOptions interface found [here](https://github.com/notifirehq/notifire/blob/master/packages/core/src/lib/template/template.interface.ts).
And Mailgun methods found [here](https://github.com/mailgun/mailgun.js#methods)

### Usage
Based on Notifire IAttachmentOptions interface on the trigger. ",,
1046820633,94,Sendgrid attachments support,"## What?
Add support for sending attachments for our [Sendgrid](https://github.com/notifirehq/notifire/tree/master/providers/sendgrid) provider.

### Why?
To have the ability to use send attachments.

### How?
Based on Notifire IAttachmentOptions interface found [here](https://github.com/notifirehq/notifire/blob/master/packages/core/src/lib/template/template.interface.ts).
And Sendgrid methods found [here](https://github.com/sendgrid/sendgrid-nodejs/blob/main/docs/use-cases/attachments.md)

### Usage
Based on Notifire IAttachmentOptions interface on the trigger. ",,
1041052362,82,Suggestion: separate providers from core,"- **I'm submitting a ...**
 [ ] bug report
 [x] feature request
 [ ] question about the decisions made in the repository
 [ ] question about how to use this project

- **Summary**
I think currently notifire core (pubsub system) and providers are all in the same package. I think to reduce bundle size and bloat-ness it would be great to separate providers to individual packages and make core package dependency independent.

```ts
import { Notifire } from '@notifire/core';
import { SomeProvider } from '@notifire/some-provider';

...
```

",,
1040230348,74,Create NestJS module wrapper,"### I'm submitting a ...
-  feature request

### Summary
Add a module for [NestJS](https://nestjs.com/), for nice and easy usage within NestJs based code-bases.


#### Module API
The initialization module should create a notifire instance registered with providers and templates. Accessing the module at a later stage should allow adding more templates and providers at run time.

```typescript
import { NotifireModule } from ""@notifire/nest"";

@Module({
  imports: [
    NotifireModule.forRoot({
      providers: [
        new SendgridEmailProvider({
          apiKey: process.env.SENDGRID_API_KEY,
          from: ""sender@mail.com"",
        }),
      ],
      templates: [
        {
          id: ""password-reset"",
          messages: [
            {
              subject: ""Your password reset request"",
              channel: ChannelTypeEnum.EMAIL,
              template: `
          Hi {{firstName}}!
          
          To reset your password click <a href=""{{resetLink}}"">here.</a>
          
          {{#if organization}}
            <img src=""{{organization.logo}}"" />
          {{/if}}
      `,
            },
          ],
        },
      ],
    }),
  ],
})
export class CustomerModule {}
```

### Injectable notifire instance
And `@Injectable` singleton service should be accessible in other nestjs services and modules.
```typescript
@Injectable()
class UserService {
   constructor(private notifire: Notifire) {

   }

  async triggerEvent() {
      await this.notifire.trigger(.....)
   }
}
```

The new module can be added to `packages/nest` folder. Boilerplate for the package can be taken from running `yarn run generate:provider` and then copying the folder to the packages folder.",,
1038242743,68,Bug: ITheme and ITriggerPayload throws type errors with strict mode enabled,"- **I'm submitting a ...**
  [ x] bug report
  [ ] feature request
  [ ] question about the decisions made in the repository
  [ ] question about how to use this project

- **Summary**
Calling `const notifire = await new Notifire()` with Typescript strict mode enabled causes type errors.

- **Other information** (e.g. detailed explanation, stack traces, related issues, suggestions how to fix, links for us to have context, eg. StackOverflow, personal fork, etc.)

Affected types are `ITriggerPayload` and `ITheme` Something like this fixes the problem:

```
export interface ITheme {
    branding: {
        mainColor?: string;
        logo?: string;
    } & CustomBranding
    emailTemplate: IEmailTemplate;
}
interface CustomBranding {
    [key: string]: string;
}
```

Errors:

```
node_modules/@notifire/core/build/main/lib/template/template.interface.d.ts:17:5 - error TS2411: Property '$email' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean'.

17     $email?: string;
       ~~~~~~

node_modules/@notifire/core/build/main/lib/template/template.interface.d.ts:18:5 - error TS2411: Property '$phone' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean'.

18     $phone?: string;
       ~~~~~~

node_modules/@notifire/core/build/main/lib/template/template.interface.d.ts:20:5 - error TS2411: Property '$theme_id' of type 'string | undefined' is not assignable to 'string' index type 'string | number | boolean'.

20     $theme_id?: string;
       ~~~~~~~~~

node_modules/@notifire/core/build/main/lib/theme/theme.interface.d.ts:3:9 - error TS2411: Property 'mainColor' of type 'string | undefined' is not assignable to 'string' index type 'string'.

3         mainColor?: string;
          ~~~~~~~~~

node_modules/@notifire/core/build/main/lib/theme/theme.interface.d.ts:4:9 - error TS2411: Property 'logo' of type 'string | undefined' is not assignable to 'string' index type 'string'. 

4         logo?: string;
        ```
",,
1027687804,45,Describe and enforce patterns in our providers better (with TypeScript),"- **I'm submitting a ...**
 [ ] bug report
 [x] feature request
 [x] question about the decisions made in the repository
 [ ] question about how to use this project

- **Summary**
While using the project, I noticed that there are a few places where the typing information could be better. Enforcing some patterns is also possible by providing an abstract class to derive from, for example. Just wanted to bring these ideas up for discussion.

- **Other information** (e.g. detailed explanation, stack traces, related issues, suggestions how to fix, links for us to have context, eg. StackOverflow, personal fork, etc.)
I want to talk about a few things, so let me add numbers as a way to refer to the ideas:

I'm providing code context here so people can contribute to this issue/discussion without having to go through source.
```typescript
export interface IProvider {
  id: string;
  channelType: ChannelTypeEnum;
}

export interface IEmailOptions {
  to: string | string[];
  subject: string;
  html: string;
  from?: string;
  text?: string;
}

export interface ISmsOptions {
  to: string;
  content: string;
  from?: string;
}

export interface IEmailProvider extends IProvider {
  channelType: ChannelTypeEnum.EMAIL;

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  sendMessage(options: IEmailOptions): Promise<any>;
}

export interface ISmsProvider extends IProvider {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  sendMessage(options: ISmsOptions): Promise<any>;

  channelType: ChannelTypeEnum.SMS;
}
```
1. Our `Provider`s are always tied to the `ChannelTypeEnum`. We could write the definition as:
```typescript
export interface IProvider<C extends ChannelTypeEnum> {
  channelType: C;
}
export interface IEmailProvider extends IProvider<ChannelTypeEnum.EMAIL> {
  sendMessage(options: IEmailOptions): Promise<any>;
}
```

2. In general, none of the properties of the provider and even options are supposed to be writable. so we could add [`readonly`](https://basarat.gitbook.io/typescript/type-system/readonly#readonly) attributes to all properties so that it's clear and consumers of the API (at least in TypeScript) can't make mistakes like changing the channel type of a provider or the to address of an `IEmailOptions`.
```typescript
export interface IProvider {
  readonly channelType: ChannelTypeEnum;
}
export interface ISmsOptions {
  readonly to: string;
  readonly content: string;
  readonly from?: string;
}
```
Another way to use records like `ISmsOptions` is to [control consumers](https://basarat.gitbook.io/typescript/type-system/readonly#readonly-1) from not being able to edit them:
```typescript
export interface ISmsProvider extends IProvider {
  sendMessage(options: Readonly<ISmsOptions>): Promise<any>;
}
```

3. Provide a standard interface for configurations. As an example, in the PR #44 we have an `EmailJsConfig` interface:
```typescript
export interface EmailJsConfig {
  from: string;
  host: string;
  port: number;
  secure: boolean;
  user: string;
  password: string;
}
```
We could provide an interface for API-based and SMTP-based email providers so that the shape of the configuration is consistent.
```typescript
export interface EmailProviderConfig {
}
export interface SmtpBasedEmailProviderConfig extends EmailProviderConfig {
  from: string;
  host: string;
  port: number;
  secure: boolean;
  user: string;
  password: string;
}
export interface EmailJsConfig extends SmtpBasedEmailProviderConfig {
}
export interface NodeMailerConfig extends SmtpBasedEmailProviderConfig {
}
export interface ApiBasedEmailProviderConfig extends EmailProviderConfig {
  api_key: string;
}
export interface SendgridConfig extends ApiBasedEmailProviderConfig {
}
```
4. Provide easy ways to enforce patterns with `IProvider` implementations.

For example, if we want to enforce usage of EmailProviderConfig, we can expose an abstract class for the same:
```typescript
public abstract class ConfigBasedEmailProvider<E extends EmailProviderConfig> {
  constructor(protected config: E) {
  }
}
```
That would enable writing new config based providers easily. For example, the EmailJsProvider could've been written as:
```typescript
public class EmailJsProvider extends ConfigBasedEmailProvider<EmailJsConfig> implements IEmailProvider {
  ..
}
```

5. ~I would discourage returning `Promise<any>` - but I'd like to first understand why it's used. I think in most instances of current usage it can safely be `Promise<void>` if we don't care about the result but want to signal an `async` operation. Returning an any is pretty useless as the result always needs to be casted. Converting a result this way can be done by something like `promise().then(() => {})`. Combining this with idea 4 would mean we don't even need individual providers to write this code. They can return `Promise<T>` and we can always ensure the final return is a `Promise<void>`.~ Already taken care of in #41 

6. Some interfaces which are closed, could just be [type aliases](https://www.typescriptlang.org/docs/handbook/advanced-types.html#interfaces-vs-type-aliases). Example:
```typescript
type SmsOptions = {
  to: string;
  content: string;
  from?: string;
}
```
because we don't expect the options to be extended, whereas `EmailProviderConfig` in idea 3 is expected to be extended.

These ideas are composable. For example, combining the ideas 1, 3, and 4, we can write the EmailJsProvider as
```typescript
public abstract class ConfigBasedEmailProvider<E extends EmailProviderConfig> implements IProvider<ChannelTypeEnum.EMAIL> {
  channelType: ChannelTypeEnum.EMail;
  constructor(protected config: E) {
 }
  abstract sendMessage(options: IEmailOptions): Promise<any>;
}
public class EmailJsProvider extends ConfigBasedEmailProvider<EmailJsConfig> {
  ..
}
```
Notice the lack of `readonly` since we didn't use idea 2.

These were my initial thoughts. Please let me know what you think.",,
1023990325,42,Add text field for IEmailOptions,"- **I'm submitting a ...**
  [ ] bug report
  [X] feature request
  [ ] question about the decisions made in the repository
  [ ] question about how to use this project

- **Summary**
For fallback, it is required for some providers to supply simple text (not HTML), this field is just for that.

- **Other information** (e.g. detailed explanation, stack traces, related issues, suggestions how to fix, links for us to have context, eg. StackOverflow, personal fork, etc.) 
New field should be added to the interface called text

```ts
export interface IEmailOptions {
  to: string | string[];
  subject: string;
  html: string;
  from?: string;
  text?: string; // <- this is new
}
```",,
