issue_id,issue_number,issue_title,issue_body,comment_id,comment_body
2691138622,6519,[BUG] wrong return type of `useOne`,"### Describe the bug

The type of `data` in the following code is `GetOneResponse<BaseRecord>`, but actually it should not be

```
import { useOne } from ""@refinedev/core"";
const { data } = useOne();`
```

Now the typings say that `data` has another entry with key `data` inside. This is not true.

### Steps To Reproduce

1. Use `useOne`
2. The typing is wrong: `ReturnType<typeof useOne<T>>['data']` is `T` in reality and not `GetOneResponse<T>` as indicated by the typing

### Expected behavior

`ReturnType<typeof useOne<T>>['data']` should be `T`

### Packages

- @refinedev/core

### Additional Context

[See also another issue, possibly related](https://github.com/refinedev/refine/issues/6517)",,
2689368860,6517,[BUG] wrong return type of `useInfiniteList`,"### Describe the bug

The type of `data` in the following code is `GetListResponse<BaseRecord>`, but actually it should not be
```
import { useInfiniteList } from ""@refinedev/core"";
const { data } = useInfiniteList();`
```


### Steps To Reproduce

1. use `useInfiniteList`
2. the typing is wrong

### Expected behavior

The return data of `useInfiniteList` should contains `pageParams` and `pages`, not `data` and `total`

### Packages

- @refinedev/core

### Additional Context

_No response_",,
2678925836,6513,[BUG] Create Button `@refinedev/mui`  onClick still works when `disabled` prop is applied,"### Describe the bug

- I added disabled to `CreateButton` while already specufying onClick and and although it greys out, the onClick still opens my modal.

```tsx
  const createModalFormProps = useModalForm<
    ITranslationCreate,
    HttpError,
    Nullable<ITranslationCreate>
  >({
    refineCoreProps: { action: ""create"" },
    syncWithLocation: true,
    defaultValues: defaultTranslationCreateValues
  });

  const {
    modal: { show: showCreateModal }
  } = createModalFormProps;

<CreateButton disabled onClick={() => showCreateModal()}>
  New Translation
</CreateButton>
```

- I believe the issue is the way the disabled and onClick conditionals work in the component, the early return doesn't seem to work.

```tsx

// refine mui CreateButton
  return (
    <LinkComponent
      to={to}
      replace={false}
      onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {
        if (disabled) { // NOT WORKING
          e.preventDefault();
          return; 
        }
        if (onClick) {
          e.preventDefault();
          onClick(e);
        }
      }}
      style={{ textDecoration: ""none"" }}
    >
      <Button
        disabled={disabled}
        startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}
        title={title}
        variant=""contained""
        sx={{ minWidth: 0, ...sx }}
        data-testid={RefineButtonTestIds.CreateButton}
        className={RefineButtonClassNames.CreateButton}
        {...restProps}
      >
        {hideText ? (
          <AddBoxOutlined fontSize=""small"" {...svgIconProps} />
        ) : (
          children ?? label
        )}
      </Button>
    </LinkComponent>
  );
```

- The issue persists  on the EditButton as well.

### Steps To Reproduce

- Import the CreateButton component from refine/mui
- add the disabled prop
- add the onClick prop: 
- the onClick function will still work

### Expected behavior

the button is disabled with its onClick not functional as well.

### Packages

- ""@refinedev/mui"": ""^5.14.4"",


### Additional Context

_No response_",2490990402,"Hello @arndom, thank you for reporting this issue!

The bug happens because the component doesn’t properly use the provided props on the following lines: https://github.com/refinedev/refine/blob/716123cad4c2ef8d2ab1907f8abe1fea48fcdd00/packages/mui/src/components/buttons/create/index.tsx#L48
https://github.com/refinedev/refine/blob/716123cad4c2ef8d2ab1907f8abe1fea48fcdd00/packages/mui/src/components/buttons/create/index.tsx#L60

Instead of relying on `useCreateButton().disabled`, `<Button />` and `<LinkComponent />` should use the following code:

```typescript
const isDisabled = disabled || rest.disabled;
```

This issue likely exists in the other UI packages as well (@refinedev/antd, @refinedev/mantine, @refinedev/chakra-ui), and they should be updated accordingly as part of this fix.

Do you want to work on this?"
2678925836,6513,[BUG] Create Button `@refinedev/mui`  onClick still works when `disabled` prop is applied,"### Describe the bug

- I added disabled to `CreateButton` while already specufying onClick and and although it greys out, the onClick still opens my modal.

```tsx
  const createModalFormProps = useModalForm<
    ITranslationCreate,
    HttpError,
    Nullable<ITranslationCreate>
  >({
    refineCoreProps: { action: ""create"" },
    syncWithLocation: true,
    defaultValues: defaultTranslationCreateValues
  });

  const {
    modal: { show: showCreateModal }
  } = createModalFormProps;

<CreateButton disabled onClick={() => showCreateModal()}>
  New Translation
</CreateButton>
```

- I believe the issue is the way the disabled and onClick conditionals work in the component, the early return doesn't seem to work.

```tsx

// refine mui CreateButton
  return (
    <LinkComponent
      to={to}
      replace={false}
      onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {
        if (disabled) { // NOT WORKING
          e.preventDefault();
          return; 
        }
        if (onClick) {
          e.preventDefault();
          onClick(e);
        }
      }}
      style={{ textDecoration: ""none"" }}
    >
      <Button
        disabled={disabled}
        startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}
        title={title}
        variant=""contained""
        sx={{ minWidth: 0, ...sx }}
        data-testid={RefineButtonTestIds.CreateButton}
        className={RefineButtonClassNames.CreateButton}
        {...restProps}
      >
        {hideText ? (
          <AddBoxOutlined fontSize=""small"" {...svgIconProps} />
        ) : (
          children ?? label
        )}
      </Button>
    </LinkComponent>
  );
```

- The issue persists  on the EditButton as well.

### Steps To Reproduce

- Import the CreateButton component from refine/mui
- add the disabled prop
- add the onClick prop: 
- the onClick function will still work

### Expected behavior

the button is disabled with its onClick not functional as well.

### Packages

- ""@refinedev/mui"": ""^5.14.4"",


### Additional Context

_No response_",2491690571,"hey @alicanerdurmaz i am up for this .
"
2678925836,6513,[BUG] Create Button `@refinedev/mui`  onClick still works when `disabled` prop is applied,"### Describe the bug

- I added disabled to `CreateButton` while already specufying onClick and and although it greys out, the onClick still opens my modal.

```tsx
  const createModalFormProps = useModalForm<
    ITranslationCreate,
    HttpError,
    Nullable<ITranslationCreate>
  >({
    refineCoreProps: { action: ""create"" },
    syncWithLocation: true,
    defaultValues: defaultTranslationCreateValues
  });

  const {
    modal: { show: showCreateModal }
  } = createModalFormProps;

<CreateButton disabled onClick={() => showCreateModal()}>
  New Translation
</CreateButton>
```

- I believe the issue is the way the disabled and onClick conditionals work in the component, the early return doesn't seem to work.

```tsx

// refine mui CreateButton
  return (
    <LinkComponent
      to={to}
      replace={false}
      onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {
        if (disabled) { // NOT WORKING
          e.preventDefault();
          return; 
        }
        if (onClick) {
          e.preventDefault();
          onClick(e);
        }
      }}
      style={{ textDecoration: ""none"" }}
    >
      <Button
        disabled={disabled}
        startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}
        title={title}
        variant=""contained""
        sx={{ minWidth: 0, ...sx }}
        data-testid={RefineButtonTestIds.CreateButton}
        className={RefineButtonClassNames.CreateButton}
        {...restProps}
      >
        {hideText ? (
          <AddBoxOutlined fontSize=""small"" {...svgIconProps} />
        ) : (
          children ?? label
        )}
      </Button>
    </LinkComponent>
  );
```

- The issue persists  on the EditButton as well.

### Steps To Reproduce

- Import the CreateButton component from refine/mui
- add the disabled prop
- add the onClick prop: 
- the onClick function will still work

### Expected behavior

the button is disabled with its onClick not functional as well.

### Packages

- ""@refinedev/mui"": ""^5.14.4"",


### Additional Context

_No response_",2491720755,"Hi @OmkarBansod02, I assigned it to you. Thanks!"
2672957125,6508,[FEAT] ThemedSiderV2 Persist Collapsed State,"### Is your feature request related to a problem? Please describe.

Would be nice to persist out of the box the collapsed state, or add an option to do so, maybe a ""peristCollapsed"" boolean. This would avoid having to write extra code for this important UX feature.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

See above.",2498660704,"hey @BatuhanW  I'm getting a TypeScript error: Property `onSiderCollapsed` does not exist on type `RefineThemedLayoutV2Props`. while implementing it in [ThemedLayoutV2](https://github.com/refinedev/refine/blob/master/packages/antd/src/components/themedLayoutV2/index.tsx)  Even though I've declared `onSiderCollapsed?: (collapsed: boolean) => void;` in the `RefineThemedLayoutV2Props` interface, the error still persists. "
2670119710,6505,[BUG] useUpdate throws an error when using empty id,"### Describe the bug

I have a page that edits a strapi single type using the `useForm` hook
after I have upgraded the ""@refinedev/core"" package this page has stopped working and throwing an Error in the browser console that ""id"" is not provided.
I cannot provide an id because I want to edit a strapi single type instance and strapi's rest api does not accept an id in the url path.
until now I passed an empty string any everything worked fine.
I researched and it looks like this bug (or an api-breaking feature...) is because of [this commit](https://github.com/refinedev/refine/commit/7e71f12b81954fd3a59678d7fcccd7b557879a94) in [this line](https://github.com/refinedev/refine/blame/961e1fea5e505d133d735bd99111eb26c61f1186/packages/core/src/hooks/data/useUpdate.ts#L243)

### Steps To Reproduce

1. use the `useForm` or `useUpdate` hooks
2. pass an empty string as the id argument

### Expected behavior

the hook does not throws an error and sends the request using the data provider

### Packages

- @refinedev/core

### Additional Context

I am importing the ""useForm"" hook from @refinedev/antd but I don't think that the problem is there...",2484854222,"Hello @itaysmalia, thanks for the bug report.

I'm sorry for your trouble, the last thing we want while developing is to introduce breaking changes in minor or patch versions. 

The reason I added that `id` check in this PR is that `id` was [already required on the TypeScript](https://github.com/refinedev/refine/commit/7e71f12b81954fd3a59678d7fcccd7b557879a94#diff-85aeb33cfc5f222b2eca2e2667b6c2ac7a7c639e6f32cdb8c74abc34bde20e5eL85) in previous versions. Are you using JavaScript?"
2670119710,6505,[BUG] useUpdate throws an error when using empty id,"### Describe the bug

I have a page that edits a strapi single type using the `useForm` hook
after I have upgraded the ""@refinedev/core"" package this page has stopped working and throwing an Error in the browser console that ""id"" is not provided.
I cannot provide an id because I want to edit a strapi single type instance and strapi's rest api does not accept an id in the url path.
until now I passed an empty string any everything worked fine.
I researched and it looks like this bug (or an api-breaking feature...) is because of [this commit](https://github.com/refinedev/refine/commit/7e71f12b81954fd3a59678d7fcccd7b557879a94) in [this line](https://github.com/refinedev/refine/blame/961e1fea5e505d133d735bd99111eb26c61f1186/packages/core/src/hooks/data/useUpdate.ts#L243)

### Steps To Reproduce

1. use the `useForm` or `useUpdate` hooks
2. pass an empty string as the id argument

### Expected behavior

the hook does not throws an error and sends the request using the data provider

### Packages

- @refinedev/core

### Additional Context

I am importing the ""useForm"" hook from @refinedev/antd but I don't think that the problem is there...",2486741029,"Hi @alicanerdurmaz!
thanks for responding this fast...
Looks like my explanation wasn't detailed enough :sweat_smile: 
I am using typescript, and I am passing an empty string as the id, something like this:
```typescript
const {...} = useForm({id: '', ...});
```
and typescript allowed it...
The problem is probably because `!""""` evaluates to `true` then the ""missing id"" error is thrown.
I am using an empty string because in strapi-v4 data provider the id part of the api requests is empty, then then the path ends with `...<resource>/` and it works with the single types rest api paths of strapi.
The possible solution might be checking for null/undefined value in this if statement...
Thank you very much!"
2670119710,6505,[BUG] useUpdate throws an error when using empty id,"### Describe the bug

I have a page that edits a strapi single type using the `useForm` hook
after I have upgraded the ""@refinedev/core"" package this page has stopped working and throwing an Error in the browser console that ""id"" is not provided.
I cannot provide an id because I want to edit a strapi single type instance and strapi's rest api does not accept an id in the url path.
until now I passed an empty string any everything worked fine.
I researched and it looks like this bug (or an api-breaking feature...) is because of [this commit](https://github.com/refinedev/refine/commit/7e71f12b81954fd3a59678d7fcccd7b557879a94) in [this line](https://github.com/refinedev/refine/blame/961e1fea5e505d133d735bd99111eb26c61f1186/packages/core/src/hooks/data/useUpdate.ts#L243)

### Steps To Reproduce

1. use the `useForm` or `useUpdate` hooks
2. pass an empty string as the id argument

### Expected behavior

the hook does not throws an error and sends the request using the data provider

### Packages

- @refinedev/core

### Additional Context

I am importing the ""useForm"" hook from @refinedev/antd but I don't think that the problem is there...",2487967876,"Hello again @itaysmalia, thank you for the detailed explanation!

You're absolutely right, the mentioned PR introduced a breaking change due to a bug. We're targeting the December release to address this issue.

Here's how it should have been handled:  
https://github.com/refinedev/refine/commit/7e71f12b81954fd3a59678d7fcccd7b557879a94#diff-85aeb33cfc5f222b2eca2e2667b6c2ac7a7c639e6f32cdb8c74abc34bde20e5eR324  
```diff
- if (!id) throw missingIdError;
+ if (typeof id === ""undefined"") throw missingIdError;
```

We also believe that making the ID optional is the right approach, but implementing this change affects several parts of the core. We plan to introduce this improvement with Refine 5."
2669863803,6504,[BUG] AuthPage Issue with Async Login,"### Describe the bug

I am facing an issue where the google provider don't wait for me confirming the account and accepting to the term before jumping to the next lines of codes despite stating await with Supabase.

### Steps To Reproduce

```js
const authProvider = {
  login: async ({ email, password, providerName }) => {
    try {
      const { data, error } = providerName
        ? await supabaseClient.auth.signInWithOAuth({
            provider: providerName,
          })
        : await supabaseClient.auth.signInWithPassword({
            email,
            password,
          });

      if (error) throw error;

      console.log({ data, error });

      if (data?.user)
        return {
          success: true,
          redirectTo: ""/dashboard"",
        };
    } catch (error) {
      return {
        success: false,
        error,
      };
    }
  },
  --- SNIP ---
```

The `console.log` and `return` get triggered straightaway regardless of the `await`.

### Expected behavior

Should pause the code execution until `supabaseClient.auth.signInWithOAuth` gets executed and return something.

### Packages

Latest.

### Additional Context

_No response_",2487940284,Hey @aress31 please use our AI chatbot in documentation for your questions & issues and try to create issues only if you are sure it's about Refine source code itself.
2668400952,6499,[BUG] AuthPage Conflicting Styles,"### Describe the bug

With the AuthPage, there is too many non-user controlleable styles that impact with how to customise the page wrapper, see:

```js
import * as React from ""react"";
import {
  type LoginPageProps,
  type LoginFormTypes,
  useActiveAuthProvider,
} from ""@refinedev/core"";
import { useForm } from ""@refinedev/react-hook-form"";
import { FormProvider } from ""react-hook-form"";

import Button from ""@mui/material/Button"";
import TextField from ""@mui/material/TextField"";
import Box from ""@mui/material/Box"";
import Typography from ""@mui/material/Typography"";
import Container from ""@mui/material/Container"";
import Card from ""@mui/material/Card"";
import CardContent from ""@mui/material/CardContent"";
import Checkbox from ""@mui/material/Checkbox"";
import FormControlLabel from ""@mui/material/FormControlLabel"";
import Divider from ""@mui/material/Divider"";
import MuiLink from ""@mui/material/Link"";
import Stack from ""@mui/material/Stack"";

import type { BoxProps } from ""@mui/material/Box"";
import type { CardContentProps } from ""@mui/material/CardContent"";

import {
  type BaseRecord,
  type HttpError,
  useLogin,
  useTranslate,
  useRouterContext,
  useRouterType,
  useLink,
} from ""@refinedev/core"";
import { layoutStyles, titleStyles } from ""../styles"";

import type { FormPropsType } from ""../../index"";
import { ThemedTitleV2 } from ""@components"";

type LoginProps = LoginPageProps<BoxProps, CardContentProps, FormPropsType>;

/**
 * login will be used as the default type of the <AuthPage> component. The login page will be used to log in to the system.
 * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#login} for more details.
 */
export const LoginPage: React.FC<LoginProps> = ({
  providers,
  registerLink,
  forgotPasswordLink,
  rememberMe,
  contentProps,
  wrapperProps,
  renderContent,
  formProps,
  title,
  hideForm,
  mutationVariables,
}) => {
  const { onSubmit, ...useFormProps } = formProps || {};
  const methods = useForm<BaseRecord, HttpError, LoginFormTypes>({
    ...useFormProps,
  });
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = methods;

  const authProvider = useActiveAuthProvider();
  const { mutate: login, isLoading } = useLogin<LoginFormTypes>({
    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),
  });
  const translate = useTranslate();
  const routerType = useRouterType();
  const Link = useLink();
  const { Link: LegacyLink } = useRouterContext();

  const ActiveLink = routerType === ""legacy"" ? LegacyLink : Link;

  const PageTitle =
    title === false ? null : (
      <div
        style={{
          display: ""flex"",
          justifyContent: ""center"",
          marginBottom: ""32px"",
          fontSize: ""20px"",
        }}
      >
        {title ?? (
          <ThemedTitleV2
            collapsed={false}
            wrapperStyles={{
              gap: ""8px"",
            }}
          />
        )}
      </div>
    );

  const renderProviders = () => {
    if (providers && providers.length > 0) {
      return (
        <>
          <Stack spacing={1}>
            {providers.map((provider: any) => {
              return (
                <Button
                  key={provider.name}
                  variant=""outlined""
                  fullWidth
                  sx={{
                    color: ""primary.light"",
                    borderColor: ""primary.light"",
                    textTransform: ""none"",
                  }}
                  onClick={() =>
                    login({ ...mutationVariables, providerName: provider.name })
                  }
                  startIcon={provider.icon}
                >
                  {provider.label}
                </Button>
              );
            })}
          </Stack>
          {!hideForm && (
            <Divider
              sx={{
                fontSize: ""12px"",
                marginY: ""16px"",
              }}
            >
              {translate(""pages.login.divider"", ""or"")}
            </Divider>
          )}
        </>
      );
    }
    return null;
  };

  const Content = (
    <Card {...(contentProps ?? {})}>
      <CardContent sx={{ p: ""32px"", ""&:last-child"": { pb: ""32px"" } }}>
        <Typography
          component=""h1""
          variant=""h5""
          align=""center""
          style={titleStyles}
          color=""primary""
          fontWeight={700}
        >
          {translate(""pages.login.title"", ""Sign in to your account"")}
        </Typography>
        {renderProviders()}
        {!hideForm && (
          <Box
            component=""form""
            onSubmit={handleSubmit((data) => {
              if (onSubmit) {
                return onSubmit(data);
              }

              return login({ ...mutationVariables, ...data });
            })}
          >
            <TextField
              {...register(""email"", {
                required: translate(
                  ""pages.login.errors.requiredEmail"",
                  ""Email is required"",
                ),
              })}
              id=""email""
              margin=""normal""
              fullWidth
              label={translate(""pages.login.fields.email"", ""Email"")}
              error={!!errors.email}
              name=""email""
              type=""email""
              autoComplete=""email""
              sx={{
                mt: 0,
              }}
            />
            <TextField
              {...register(""password"", {
                required: translate(
                  ""pages.login.errors.requiredPassword"",
                  ""Password is required"",
                ),
              })}
              id=""password""
              margin=""normal""
              fullWidth
              name=""password""
              label={translate(""pages.login.fields.password"", ""Password"")}
              helperText={errors?.password?.message}
              error={!!errors.password}
              type=""password""
              placeholder=""●●●●●●●●""
              autoComplete=""current-password""
              sx={{
                mb: 0,
              }}
            />
            <Box
              component=""div""
              sx={{
                mt: ""24px"",
                display: ""flex"",
                justifyContent: ""space-between"",
                alignItems: ""center"",
              }}
            >
              {rememberMe ?? (
                <FormControlLabel
                  sx={{
                    span: {
                      fontSize: ""14px"",
                      color: ""text.secondary"",
                    },
                  }}
                  color=""secondary""
                  control={
                    <Checkbox
                      size=""small""
                      id=""remember""
                      {...register(""remember"")}
                    />
                  }
                  label={translate(
                    ""pages.login.buttons.rememberMe"",
                    ""Remember me"",
                  )}
                />
              )}
              {forgotPasswordLink ?? (
                <MuiLink
                  variant=""body2""
                  color=""primary""
                  fontSize=""12px""
                  component={ActiveLink}
                  underline=""none""
                  to=""/forgot-password""
                >
                  {translate(
                    ""pages.login.buttons.forgotPassword"",
                    ""Forgot password?"",
                  )}
                </MuiLink>
              )}
            </Box>
            <Button
              type=""submit""
              fullWidth
              variant=""contained""
              disabled={isLoading}
              sx={{ mt: ""24px"" }}
            >
              {translate(""pages.login.signin"", ""Sign in"")}
            </Button>
          </Box>
        )}
        {registerLink ?? (
          <Box
            sx={{
              mt: ""24px"",
              display: ""flex"",
              justifyContent: ""center"",
              alignItems: ""center"",
            }}
          >
            <Typography
              textAlign=""center""
              variant=""body2""
              component=""span""
              fontSize=""12px""
            >
              {translate(
                ""pages.login.buttons.noAccount"",
                ""Don’t have an account?"",
              )}
            </Typography>
            <MuiLink
              ml=""4px""
              fontSize=""12px""
              variant=""body2""
              color=""primary""
              component={ActiveLink}
              underline=""none""
              to=""/register""
              fontWeight=""bold""
            >
              {translate(""pages.login.signup"", ""Sign up"")}
            </MuiLink>
          </Box>
        )}
      </CardContent>
    </Card>
  );

  return (
    <FormProvider {...methods}>
      <Box component=""div"" style={layoutStyles} {...(wrapperProps ?? {})}>
        <Container
          component=""main""
          sx={{
            display: ""flex"",
            flexDirection: ""column"",
            justifyContent: hideForm ? ""flex-start"" : ""center"",
            alignItems: ""center"",
            minHeight: ""100dvh"",
            padding: ""16px"",
            width: ""100%"",
            maxWidth: ""400px"",
          }}
        >
          <Box
            sx={{
              width: ""100%"",
              maxWidth: ""400px"",
              display: ""flex"",
              flexDirection: ""column"",
              paddingTop: hideForm ? ""15dvh"" : 0,
            }}
          >
            {renderContent ? (
              renderContent(Content, PageTitle)
            ) : (
              <>
                {PageTitle}
                {Content}
              </>
            )}
          </Box>
        </Container>
      </Box>
    </FormProvider>
  );
};
```

The focus is on:

```js
        <Container
          component=""main""
          sx={{
            display: ""flex"",
            flexDirection: ""column"",
            justifyContent: hideForm ? ""flex-start"" : ""center"",
            alignItems: ""center"",
            minHeight: ""100dvh"",
            padding: ""16px"",
            width: ""100%"",
            maxWidth: ""400px"",
          }}
        >
          <Box
            sx={{
              width: ""100%"",
              maxWidth: ""400px"",
              display: ""flex"",
              flexDirection: ""column"",
              paddingTop: hideForm ? ""15dvh"" : 0,
            }}
          >
```

These styles should be as much as possible be integrated to the wrapping `<Box component=""div"" style={layoutStyles} {...(wrapperProps ?? {})}>` so that the customisation of the outer Container is possible.

### Steps To Reproduce

N/A

### Expected behavior

See above.

### Packages

N/A

### Additional Context

_No response_",2483095573,"Hello @aress31, you have valid points, but we don't believe <AuthPage /> needs to be fully customized. It currently works well and is sufficient for starting a new project. While implementing <AuthPage />, we considered those who wouldn’t want to spend time on a login mechanism in the first weeks of a new project. Each app may have its unique design language and allowing this level of customization would make things overly complex. Also, `<AuthPage />` can be [swizzled](https://refine.dev/docs/packages/cli/#commands) and customized for small adjustments as needed.

However, if you’d like to work on this issue, we’re open to all contributions! I’m closing the issue for now, but feel free to reopen it if you decide to implement this."
2666897409,6498,[FEAT] ThemedLayoutV2 Control Over Children,"### Is your feature request related to a problem? Please describe.

Right now it is not possible to control the children fully, for example background color and padding as children is already wrapped by a styled Box, see:

```js
import React from ""react"";

import Box from ""@mui/material/Box"";

import { ThemedLayoutContextProvider } from ""@contexts"";
import { ThemedSiderV2 as DefaultSider } from ""./sider"";
import { ThemedHeaderV2 as DefaultHeader } from ""./header"";
import type { RefineThemedLayoutV2Props } from ""./types"";

export const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({
  Sider,
  Header,
  Title,
  Footer,
  OffLayoutArea,
  children,
  initialSiderCollapsed,
}) => {
  const SiderToRender = Sider ?? DefaultSider;
  const HeaderToRender = Header ?? DefaultHeader;

  return (
    <ThemedLayoutContextProvider initialSiderCollapsed={initialSiderCollapsed}>
      <Box display=""flex"" flexDirection=""row"">
        <SiderToRender Title={Title} />
        <Box
          sx={[
            {
              display: ""flex"",
              flexDirection: ""column"",
              flex: 1,
              minWidth: ""1px"",
              minHeight: ""1px"",
            },
          ]}
        >
          <HeaderToRender />
          <Box
            component=""main""
            sx={{
              p: { xs: 1, md: 2, lg: 3 },
              flexGrow: 1,
              bgcolor: (theme) => theme.palette.background.default,
            }}
          >
            {children}
          </Box>
          {Footer && <Footer />}
        </Box>
        {OffLayoutArea && <OffLayoutArea />}
      </Box>
    </ThemedLayoutContextProvider>
  );
};
```

### Describe alternatives you've considered

Provide full control over children rendering.

### Additional context

The only thing to do is to delete the wrapping Box component. 

### Describe the thing to improve

See above.",2482846786,"Whilst at it might as well make the siderbar and header conditional rendering like the footer, this way there will be no need to do something like:

```js
<ThemedLayoutV2 Header={CustomHeader} Sider={() => null}>
```
"
2666897409,6498,[FEAT] ThemedLayoutV2 Control Over Children,"### Is your feature request related to a problem? Please describe.

Right now it is not possible to control the children fully, for example background color and padding as children is already wrapped by a styled Box, see:

```js
import React from ""react"";

import Box from ""@mui/material/Box"";

import { ThemedLayoutContextProvider } from ""@contexts"";
import { ThemedSiderV2 as DefaultSider } from ""./sider"";
import { ThemedHeaderV2 as DefaultHeader } from ""./header"";
import type { RefineThemedLayoutV2Props } from ""./types"";

export const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({
  Sider,
  Header,
  Title,
  Footer,
  OffLayoutArea,
  children,
  initialSiderCollapsed,
}) => {
  const SiderToRender = Sider ?? DefaultSider;
  const HeaderToRender = Header ?? DefaultHeader;

  return (
    <ThemedLayoutContextProvider initialSiderCollapsed={initialSiderCollapsed}>
      <Box display=""flex"" flexDirection=""row"">
        <SiderToRender Title={Title} />
        <Box
          sx={[
            {
              display: ""flex"",
              flexDirection: ""column"",
              flex: 1,
              minWidth: ""1px"",
              minHeight: ""1px"",
            },
          ]}
        >
          <HeaderToRender />
          <Box
            component=""main""
            sx={{
              p: { xs: 1, md: 2, lg: 3 },
              flexGrow: 1,
              bgcolor: (theme) => theme.palette.background.default,
            }}
          >
            {children}
          </Box>
          {Footer && <Footer />}
        </Box>
        {OffLayoutArea && <OffLayoutArea />}
      </Box>
    </ThemedLayoutContextProvider>
  );
};
```

### Describe alternatives you've considered

Provide full control over children rendering.

### Additional context

The only thing to do is to delete the wrapping Box component. 

### Describe the thing to improve

See above.",2483107722,"Hello, @aress31, Nice catch! thanks.

I believe `<ThemedLayoutV2 />` can take new props called `childrenBoxProps` and `containerBoxProps` (I'm fully open to better names) to customize these `<Box />` components.

Do you want to work on this?"
2666897409,6498,[FEAT] ThemedLayoutV2 Control Over Children,"### Is your feature request related to a problem? Please describe.

Right now it is not possible to control the children fully, for example background color and padding as children is already wrapped by a styled Box, see:

```js
import React from ""react"";

import Box from ""@mui/material/Box"";

import { ThemedLayoutContextProvider } from ""@contexts"";
import { ThemedSiderV2 as DefaultSider } from ""./sider"";
import { ThemedHeaderV2 as DefaultHeader } from ""./header"";
import type { RefineThemedLayoutV2Props } from ""./types"";

export const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({
  Sider,
  Header,
  Title,
  Footer,
  OffLayoutArea,
  children,
  initialSiderCollapsed,
}) => {
  const SiderToRender = Sider ?? DefaultSider;
  const HeaderToRender = Header ?? DefaultHeader;

  return (
    <ThemedLayoutContextProvider initialSiderCollapsed={initialSiderCollapsed}>
      <Box display=""flex"" flexDirection=""row"">
        <SiderToRender Title={Title} />
        <Box
          sx={[
            {
              display: ""flex"",
              flexDirection: ""column"",
              flex: 1,
              minWidth: ""1px"",
              minHeight: ""1px"",
            },
          ]}
        >
          <HeaderToRender />
          <Box
            component=""main""
            sx={{
              p: { xs: 1, md: 2, lg: 3 },
              flexGrow: 1,
              bgcolor: (theme) => theme.palette.background.default,
            }}
          >
            {children}
          </Box>
          {Footer && <Footer />}
        </Box>
        {OffLayoutArea && <OffLayoutArea />}
      </Box>
    </ThemedLayoutContextProvider>
  );
};
```

### Describe alternatives you've considered

Provide full control over children rendering.

### Additional context

The only thing to do is to delete the wrapping Box component. 

### Describe the thing to improve

See above.",2483163397,"Why not remove the Box entirely? If a user needs it, they can wrap the content like this:

```js
<Box
    component=""main""
    sx={{
        p: { xs: 1, md: 2, lg: 3 },
        flexGrow: 1,
        bgcolor: (theme) => theme.palette.background.default,
    }}
>
```

Feel free to assign it to me. For the PR, do you create the branch, or should I create it with the issue number?"
2666897409,6498,[FEAT] ThemedLayoutV2 Control Over Children,"### Is your feature request related to a problem? Please describe.

Right now it is not possible to control the children fully, for example background color and padding as children is already wrapped by a styled Box, see:

```js
import React from ""react"";

import Box from ""@mui/material/Box"";

import { ThemedLayoutContextProvider } from ""@contexts"";
import { ThemedSiderV2 as DefaultSider } from ""./sider"";
import { ThemedHeaderV2 as DefaultHeader } from ""./header"";
import type { RefineThemedLayoutV2Props } from ""./types"";

export const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({
  Sider,
  Header,
  Title,
  Footer,
  OffLayoutArea,
  children,
  initialSiderCollapsed,
}) => {
  const SiderToRender = Sider ?? DefaultSider;
  const HeaderToRender = Header ?? DefaultHeader;

  return (
    <ThemedLayoutContextProvider initialSiderCollapsed={initialSiderCollapsed}>
      <Box display=""flex"" flexDirection=""row"">
        <SiderToRender Title={Title} />
        <Box
          sx={[
            {
              display: ""flex"",
              flexDirection: ""column"",
              flex: 1,
              minWidth: ""1px"",
              minHeight: ""1px"",
            },
          ]}
        >
          <HeaderToRender />
          <Box
            component=""main""
            sx={{
              p: { xs: 1, md: 2, lg: 3 },
              flexGrow: 1,
              bgcolor: (theme) => theme.palette.background.default,
            }}
          >
            {children}
          </Box>
          {Footer && <Footer />}
        </Box>
        {OffLayoutArea && <OffLayoutArea />}
      </Box>
    </ThemedLayoutContextProvider>
  );
};
```

### Describe alternatives you've considered

Provide full control over children rendering.

### Additional context

The only thing to do is to delete the wrapping Box component. 

### Describe the thing to improve

See above.",2483347414,"@aress31 You have a point but If we remove `<Box />` right now it causes breaking changes. So, because of that, we can't remove it.

You can create the branch ofc and we have [contributing guide](https://refine.dev/docs/guides-concepts/contributing/). Feel free to ask any questions if you encounter any problems. 🚀"
2666824722,6497,[BUG] Breadcumbs Only Work on N2 Level,"### Describe the bug

It appears that the breadcrumb component doesn't display anything when the array contains only a single element. This undermines the consistency of the layout, as I would like to maintain a consistent breadcrumb style across all pages, even when there is only one breadcrumb item. Could you kindly add a property to define the minimum number of elements required for the breadcrumb to be displayed?

### Steps To Reproduce

```js
import { Toolbar } from ""@mui/material"";
import { useBreadcrumb } from ""@refinedev/core"";
import { Breadcrumb, ThemedLayoutV2 } from ""@refinedev/mui"";
import { Outlet } from ""react-router-dom"";

const Header = () => {
  const breadcumb = useBreadcrumb();
  console.log(breadcumb);

  return (
    <Toolbar>
      <Breadcrumb showHome meta={{ projectId: ""123"" }} key={1} />
    </Toolbar>
  );
};

const SidebarLayout = () => (
  <ThemedLayoutV2 Header={Header}>
    <Outlet context={{ component: ""main"", sx: { flex: 1 } }} />
  </ThemedLayoutV2>
);

export default SidebarLayout;
```

### Expected behavior

See above.

### Packages

Latest.

### Additional Context

_No response_",2483046468,"Hello, @aress31, Thanks for the detailed explanation! 

Yes, It would be great! Do you want to work on this?

Source code:
https://github.com/refinedev/refine/blob/9ecbd45fe0b0f4e09c5389a9095691c6511a4445/packages/mui/src/components/breadcrumb/index.tsx#L44-L45"
2666824722,6497,[BUG] Breadcumbs Only Work on N2 Level,"### Describe the bug

It appears that the breadcrumb component doesn't display anything when the array contains only a single element. This undermines the consistency of the layout, as I would like to maintain a consistent breadcrumb style across all pages, even when there is only one breadcrumb item. Could you kindly add a property to define the minimum number of elements required for the breadcrumb to be displayed?

### Steps To Reproduce

```js
import { Toolbar } from ""@mui/material"";
import { useBreadcrumb } from ""@refinedev/core"";
import { Breadcrumb, ThemedLayoutV2 } from ""@refinedev/mui"";
import { Outlet } from ""react-router-dom"";

const Header = () => {
  const breadcumb = useBreadcrumb();
  console.log(breadcumb);

  return (
    <Toolbar>
      <Breadcrumb showHome meta={{ projectId: ""123"" }} key={1} />
    </Toolbar>
  );
};

const SidebarLayout = () => (
  <ThemedLayoutV2 Header={Header}>
    <Outlet context={{ component: ""main"", sx: { flex: 1 } }} />
  </ThemedLayoutV2>
);

export default SidebarLayout;
```

### Expected behavior

See above.

### Packages

Latest.

### Additional Context

_No response_",2483059573,Sure
2666824722,6497,[BUG] Breadcumbs Only Work on N2 Level,"### Describe the bug

It appears that the breadcrumb component doesn't display anything when the array contains only a single element. This undermines the consistency of the layout, as I would like to maintain a consistent breadcrumb style across all pages, even when there is only one breadcrumb item. Could you kindly add a property to define the minimum number of elements required for the breadcrumb to be displayed?

### Steps To Reproduce

```js
import { Toolbar } from ""@mui/material"";
import { useBreadcrumb } from ""@refinedev/core"";
import { Breadcrumb, ThemedLayoutV2 } from ""@refinedev/mui"";
import { Outlet } from ""react-router-dom"";

const Header = () => {
  const breadcumb = useBreadcrumb();
  console.log(breadcumb);

  return (
    <Toolbar>
      <Breadcrumb showHome meta={{ projectId: ""123"" }} key={1} />
    </Toolbar>
  );
};

const SidebarLayout = () => (
  <ThemedLayoutV2 Header={Header}>
    <Outlet context={{ component: ""main"", sx: { flex: 1 } }} />
  </ThemedLayoutV2>
);

export default SidebarLayout;
```

### Expected behavior

See above.

### Packages

Latest.

### Additional Context

_No response_",2488156514,"We discussed with the core team and decided that the implementation would be better as follows:

1. `<Breadcrumb />` should take a new prop as `minItems`(or better name) and the [breadcrumbs.length === 1](https://github.com/refinedev/refine/blob/master/packages/mui/src/components/breadcrumb/index.tsx#L44) check should be compared with this new prop.

2. new prop's type should be added to [@refinedev/ui-types](https://github.com/refinedev/refine/blob/master/packages/ui-types/src/types/breadcrumb.tsx#L1)
```ts
/** 
* Minimum number of breadcrumb items required for rendering. Component won't render if items * are less than this number. 
*/
minItems?: number;
```
3. All UI packages should be updated
- https://github.com/refinedev/refine/tree/master/packages/mui/src/components/breadcrumb
- https://github.com/refinedev/refine/tree/master/packages/core/src/hooks/breadcrumb
- https://github.com/refinedev/refine/tree/master/packages/antd/src/components/breadcrumb
- https://github.com/refinedev/refine/tree/master/packages/mantine/src/components/breadcrumb
- https://github.com/refinedev/refine/tree/master/packages/chakra-ui/src/components/breadcrumb

4. All tests should be updated. If possible, it should be implemented in the `@refinedev/ui-tests` package; otherwise, it can be implemented in the package's own test file.

5. All documentation should be updated.


I’d also like to point out that `<Breadcrumb />` can be globally configurable by passing a prop to the `<Refine />` component. 

[You can find usage examples in the documentation here.](https://github.com/refinedev/refine/issues/6497#issuecomment-2488156514)

---

If I missed anything, please feel free to update it 🚀"
2666824722,6497,[BUG] Breadcumbs Only Work on N2 Level,"### Describe the bug

It appears that the breadcrumb component doesn't display anything when the array contains only a single element. This undermines the consistency of the layout, as I would like to maintain a consistent breadcrumb style across all pages, even when there is only one breadcrumb item. Could you kindly add a property to define the minimum number of elements required for the breadcrumb to be displayed?

### Steps To Reproduce

```js
import { Toolbar } from ""@mui/material"";
import { useBreadcrumb } from ""@refinedev/core"";
import { Breadcrumb, ThemedLayoutV2 } from ""@refinedev/mui"";
import { Outlet } from ""react-router-dom"";

const Header = () => {
  const breadcumb = useBreadcrumb();
  console.log(breadcumb);

  return (
    <Toolbar>
      <Breadcrumb showHome meta={{ projectId: ""123"" }} key={1} />
    </Toolbar>
  );
};

const SidebarLayout = () => (
  <ThemedLayoutV2 Header={Header}>
    <Outlet context={{ component: ""main"", sx: { flex: 1 } }} />
  </ThemedLayoutV2>
);

export default SidebarLayout;
```

### Expected behavior

See above.

### Packages

Latest.

### Additional Context

_No response_",2488416472,"@alicanerdurmaz, I’ve made further updates to the PR, and it’s now ready for your review. However, I have a few points:

1. I’m unsure how to implement the requested changes in [https://github.com/refinedev/refine/tree/master/packages/core/src/hooks/breadcrumb](https://github.com/refinedev/refine/tree/master/packages/core/src/hooks/breadcrumb). Any clarification or guidance would be appreciated.
2. One (1) test is failing, and I suspect it’s because I haven’t yet addressed the issues mentioned in [https://github.com/refinedev/refine/tree/master/packages/core/src/hooks/breadcrumb](https://github.com/refinedev/refine/tree/master/packages/core/src/hooks/breadcrumb). Could you kindly review that part?

    ```
    > @refinedev/mui:test --testNamePattern=breadcrumb --onlyFailures
    
    @refinedev/mui: > @refinedev/mui@5.22.0 test D:\Github\refine\packages\mui
    @refinedev/mui: > jest --passWithNoTests --runInBand ""--testNamePattern=breadcrumb"" ""--onlyFailures""
    @refinedev/mui:  FAIL   mui  src/components/breadcrumb/index.spec.tsx
    @refinedev/mui:   ● Console
    @refinedev/mui:     console.error
    @refinedev/mui:       Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.
    @refinedev/mui: 
    @refinedev/mui:       11 |   return render(
    @refinedev/mui:       12 |     <Routes>
    @refinedev/mui:     > 13 |       <Route path=""/:resource/:action"" element={children} />
    @refinedev/mui:          |                                        ^
    @refinedev/mui:       14 |     </Routes>,
    @refinedev/mui:       15 |     {
    @refinedev/mui:       16 |       wrapper: TestWrapper(wrapperProps),
    @refinedev/mui:
    @refinedev/mui:       at printWarning (../../node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
    @refinedev/mui:       at error (../../node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
    @refinedev/mui:       at actWithWarning (../../node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
    @refinedev/mui:       at ../../node_modules/@testing-library/react/dist/act-compat.js:63:25
    @refinedev/mui:       at renderRoot (../../node_modules/@testing-library/react/dist/pure.js:159:26)
    @refinedev/mui:       at render (../../node_modules/@testing-library/react/dist/pure.js:246:10)
    @refinedev/mui:       at V (../ui-tests/src/tests/breadcrumb.tsx:13:40)
    @refinedev/mui:       at Object.<anonymous> (../ui-tests/src/tests/breadcrumb.tsx:33:42)
    @refinedev/mui:   ● Breadcrumb › [@refinedev/ui-tests] Common Tests / CRUD Create › should render successfully when at least 1 breadcrumb item is present
    @refinedev/mui:     TestingLibraryElementError: Unable to find an element with the text: Posts. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.
    @refinedev/mui:     Ignored nodes: comments, script, style
    @refinedev/mui:     <body>
    @refinedev/mui:       <div />
    @refinedev/mui:     </body>
    @refinedev/mui:
    @refinedev/mui:       50 |
    @refinedev/mui:       51 |     it(""should render breadcrumb items with link"", async () => {
    @refinedev/mui:     > 52 |       const { container } = renderBreadcrumb(<Breadcrumb />, {
    @refinedev/mui:          |        ^
    @refinedev/mui:       53 |         resources: [{ name: ""posts"", list: DummyResourcePage }],
    @refinedev/mui:       54 |         routerInitialEntries: [""/posts/create""],
    @refinedev/mui:       55 |       });
    @refinedev/mui:
    @refinedev/mui:       at Object.getElementError (../../node_modules/@testing-library/dom/dist/config.js:37:19)
    @refinedev/mui:       at ../../node_modules/@testing-library/dom/dist/query-helpers.js:76:38
    @refinedev/mui:       at ../../node_modules/@testing-library/dom/dist/query-helpers.js:52:17
    @refinedev/mui:       at ../../node_modules/@testing-library/dom/dist/query-helpers.js:95:19
    @refinedev/mui:       at Object.<anonymous> (../ui-tests/src/tests/breadcrumb.tsx:52:8)
    @refinedev/mui: Test Suites: 1 failed, 2 skipped, 1 of 3 total
    @refinedev/mui: Tests:       1 failed, 22 skipped, 8 passed, 31 total
    @refinedev/mui: Snapshots:   0 total
    @refinedev/mui: Time:        16.606 s, estimated 38 s
    @refinedev/mui: Ran all test suites with tests matching ""breadcrumb"".
    @refinedev/mui:  ELIFECYCLE  Test failed. See above for more details.
    ```

3. I’m finding it difficult to work on the PR as I don’t have full visibility of the changes. I’ve followed the [contributing guide](https://refine.dev/docs/guides-concepts/contributing/), but running `pnpm dev --scope @refinedev/mui` doesn’t start a local server where I can preview the changes. Could you provide guidance on this? It would also be helpful if the guide could be improved for future contributors."
2666050640,6496,What would you like to name your p(node:11704) [DEP0040] DeprecationWarning: The `punycode` module is deprecated.,"![image](https://github.com/user-attachments/assets/aa930f62-2db8-4633-9a41-36b37da85af4)

I'd like to name my `p(node:11704) [DEP0040] DeprecationWarning: The 'punycode' module is deprecated.`  :rofl:",2481322108,"(you should probably find out why the `punycode` module is being used, but I made this issue as a joke)"
2666050640,6496,What would you like to name your p(node:11704) [DEP0040] DeprecationWarning: The `punycode` module is deprecated.,"![image](https://github.com/user-attachments/assets/aa930f62-2db8-4633-9a41-36b37da85af4)

I'd like to name my `p(node:11704) [DEP0040] DeprecationWarning: The 'punycode' module is deprecated.`  :rofl:",2482117195,"@ArjixWasTaken can you let us know your environment information? Node js version, OS etc."
2666050640,6496,What would you like to name your p(node:11704) [DEP0040] DeprecationWarning: The `punycode` module is deprecated.,"![image](https://github.com/user-attachments/assets/aa930f62-2db8-4633-9a41-36b37da85af4)

I'd like to name my `p(node:11704) [DEP0040] DeprecationWarning: The 'punycode' module is deprecated.`  :rofl:",2487917793,@ArjixWasTaken closing the issue now. Feel free to re-open it when you can provide proper bug report details.
2666050640,6496,What would you like to name your p(node:11704) [DEP0040] DeprecationWarning: The `punycode` module is deprecated.,"![image](https://github.com/user-attachments/assets/aa930f62-2db8-4633-9a41-36b37da85af4)

I'd like to name my `p(node:11704) [DEP0040] DeprecationWarning: The 'punycode' module is deprecated.`  :rofl:",2488029466,"NodeJS: v22.8.0
PNPM: 9.12.3
OS: Windows 11"
2666050640,6496,What would you like to name your p(node:11704) [DEP0040] DeprecationWarning: The `punycode` module is deprecated.,"![image](https://github.com/user-attachments/assets/aa930f62-2db8-4633-9a41-36b37da85af4)

I'd like to name my `p(node:11704) [DEP0040] DeprecationWarning: The 'punycode' module is deprecated.`  :rofl:",2488040329,"I can't provide more details as I decided to discard that project and it no longer exists.

But I simply followed the getting started instructions."
2661126912,6493,[BUG] @refinedev/graphql Error Handling does not work as it should,"### Describe the bug

Refine's GraphQL package is loosely based on nestjs-query. However, uses urql under the hood. urql uses 2 different types of error handling mechanisms, an errorExchange in exchanges or response.error on the result. The way refine is built using Tanstack query it is expecting an exception **new Error** to be thrown in order to be caught and treated as an error. But urql does not do this out of the box, and so refine always treats any error as a success, which impact the notifications provider.

### Steps To Reproduce

Create a new project using the GraphQL dataProvider with the below dataProvider.tsx file

My apologies for the badly formatted codeblock below. Could not get markdown to work correctly.
```ts
import { Client, OperationResult, fetchExchange, errorExchange } from ""urql"";
import createDataProvider from ""@refinedev/graphql"";
export const API_BASE_URL = ""http://localhost:5000"";
export const API_URL = `${API_BASE_URL}/graphql`;

// This is the global error handling process
const customErrorExchange = errorExchange({
  onError: (error) => {
    let errorMsg = """";

    if (error.networkError) {
      errorMsg = ""Network error: Please check your internet connection."";
    }

    if (error.graphQLErrors) {
      // Create a combined message for all GraphQL errors
      const message = error.graphQLErrors
        .map(({ message }) => message)
        .join("", "");
      errorMsg = message;
    }
    
    console.log(errorMsg);
    throw new Error(errorMsg); //this does not work
    throw Promise.reject(new Error(errorMsg)); //this does not work as it says Uncaught in Promise
    
  },
});

export const client = new Client({
  url: API_URL,
  exchanges: [customErrorExchange, fetchExchange]
});

export const dataProvider = createDataProvider(client);
```

All of the error handling above gives an **Uncaught (in promise)**

### Expected behavior

Since refine is using urql, the way that it should behave would be to catch the error in the @refinedev/graphql dataprovider class and throw the error there, like it does at 

https://github.com/refinedev/refine/blob/961e1fea5e505d133d735bd99111eb26c61f1186/packages/graphql/src/dataProvider/index.ts#L20

urql provides this error back so it is easy to catch and rethrow by adding in a handler function as below

```ts
const errorHandler = (error : CombinedError | undefined): string => {
  let errorMsg = """";

  if (error?.networkError) errorMsg = ""error.networkerror"";

  if (error?.graphQLErrors) {
      const message = error.graphQLErrors
          .map(({ message }) => message)
          .join("", "");
    errorMsg = message;
  }
  
  return errorMsg
}
```
And then after we get the response at line 
https://github.com/refinedev/refine/blob/961e1fea5e505d133d735bd99111eb26c61f1186/packages/graphql/src/dataProvider/index.ts#L23
or any other line where the error could come back from the server.
Add in 

`if (response.error) throw new Error(errorHandler(response.error));`


### Packages

@refinedev/graphql
Using refine without a UI package as I am using shadcn's ui components.

### Additional Context

I also see that on the Documentation for GraphQL on the Authentication section

https://refine.dev/docs/data/packages/graphql/#authentication

The codeblock refers to **GraphQLClient** which no longer exists in the @refinedev/graphql package and the code block needs to be updated to use urql as shown in the top section of the document.

I would love to support in resolving this issue, but I am not very good at putting together fixes or PR's on github, my apologies. Support for another community member for a fix would be highly appreciated. Thanks.",2478560894,"Hey @sudeepjd-cyient, really appreciate the detailed issue and providing a great context! 

If you would like to work on this issue, we'd be more than happy to help you through. You can check our contribution guide [here](https://refine.dev/docs/guides-concepts/contributing). If you can't, I'll try to spare some time until the next release.
"
2661126912,6493,[BUG] @refinedev/graphql Error Handling does not work as it should,"### Describe the bug

Refine's GraphQL package is loosely based on nestjs-query. However, uses urql under the hood. urql uses 2 different types of error handling mechanisms, an errorExchange in exchanges or response.error on the result. The way refine is built using Tanstack query it is expecting an exception **new Error** to be thrown in order to be caught and treated as an error. But urql does not do this out of the box, and so refine always treats any error as a success, which impact the notifications provider.

### Steps To Reproduce

Create a new project using the GraphQL dataProvider with the below dataProvider.tsx file

My apologies for the badly formatted codeblock below. Could not get markdown to work correctly.
```ts
import { Client, OperationResult, fetchExchange, errorExchange } from ""urql"";
import createDataProvider from ""@refinedev/graphql"";
export const API_BASE_URL = ""http://localhost:5000"";
export const API_URL = `${API_BASE_URL}/graphql`;

// This is the global error handling process
const customErrorExchange = errorExchange({
  onError: (error) => {
    let errorMsg = """";

    if (error.networkError) {
      errorMsg = ""Network error: Please check your internet connection."";
    }

    if (error.graphQLErrors) {
      // Create a combined message for all GraphQL errors
      const message = error.graphQLErrors
        .map(({ message }) => message)
        .join("", "");
      errorMsg = message;
    }
    
    console.log(errorMsg);
    throw new Error(errorMsg); //this does not work
    throw Promise.reject(new Error(errorMsg)); //this does not work as it says Uncaught in Promise
    
  },
});

export const client = new Client({
  url: API_URL,
  exchanges: [customErrorExchange, fetchExchange]
});

export const dataProvider = createDataProvider(client);
```

All of the error handling above gives an **Uncaught (in promise)**

### Expected behavior

Since refine is using urql, the way that it should behave would be to catch the error in the @refinedev/graphql dataprovider class and throw the error there, like it does at 

https://github.com/refinedev/refine/blob/961e1fea5e505d133d735bd99111eb26c61f1186/packages/graphql/src/dataProvider/index.ts#L20

urql provides this error back so it is easy to catch and rethrow by adding in a handler function as below

```ts
const errorHandler = (error : CombinedError | undefined): string => {
  let errorMsg = """";

  if (error?.networkError) errorMsg = ""error.networkerror"";

  if (error?.graphQLErrors) {
      const message = error.graphQLErrors
          .map(({ message }) => message)
          .join("", "");
    errorMsg = message;
  }
  
  return errorMsg
}
```
And then after we get the response at line 
https://github.com/refinedev/refine/blob/961e1fea5e505d133d735bd99111eb26c61f1186/packages/graphql/src/dataProvider/index.ts#L23
or any other line where the error could come back from the server.
Add in 

`if (response.error) throw new Error(errorHandler(response.error));`


### Packages

@refinedev/graphql
Using refine without a UI package as I am using shadcn's ui components.

### Additional Context

I also see that on the Documentation for GraphQL on the Authentication section

https://refine.dev/docs/data/packages/graphql/#authentication

The codeblock refers to **GraphQLClient** which no longer exists in the @refinedev/graphql package and the code block needs to be updated to use urql as shown in the top section of the document.

I would love to support in resolving this issue, but I am not very good at putting together fixes or PR's on github, my apologies. Support for another community member for a fix would be highly appreciated. Thanks.",2478692092,"Thank you will try and work on this issue and will reach out here if I need help with it. The guide is pretty detailed, so will follow it."
2660391902,6492,[BUG] Redirect Doesn't Work with `useForm` following the docs,"### Describe the bug

I get this error when trying to add redirect on a `useForm`

```
Object literal may only specify known properties, and 'redirect' does not exist in type 'UseFormProps<BaseRecord, HttpError, FieldValues, {}, BaseRecord, BaseRecord, HttpError>'.ts(2353)
```


### Steps To Reproduce

```tsx
import { useForm } from ""@refinedev/react-hook-form"";
```

```tsx
  const {
    refineCore: { onFinish },
    register,
    handleSubmit,
    formState: { errors },
  } = useForm({redirect: ""show"",});
```

### Expected behavior

For it to work per the docs https://refine.dev/tutorial/routing/redirects/react-router/#showing-the-record-after-update

### Packages

- @refinedev/react-hook-form

### Additional Context

Was trying to follow the tutorial here https://refine.dev/tutorial/routing/redirects/react-router/#showing-the-record-after-update",2478091623,"Hello @daninus14, 

In the tutorial, we use `useForm` from ""**@refinedev/core**"", but if you want to use it from ""**@refinedev/react-hook-form**"", the API might be a bit different.

To make it work, you need to pass the [`redirect`](https://refine.dev/docs/packages/react-hook-form/use-form/#redirect) prop like this:

```tsx
import { useForm } from ""@refinedev/react-hook-form"";

useForm({
  refineCoreProps: {
    redirect: false,
  },
});
```

Sorry for the confusion. The name `refineCoreProps` is different because `@refinedev/react-hook-form` internally uses the core functionality from `@refinedev/core`. To pass specific options or configurations to the core, these are grouped under the `refineCoreProps` property. 

"
2660391902,6492,[BUG] Redirect Doesn't Work with `useForm` following the docs,"### Describe the bug

I get this error when trying to add redirect on a `useForm`

```
Object literal may only specify known properties, and 'redirect' does not exist in type 'UseFormProps<BaseRecord, HttpError, FieldValues, {}, BaseRecord, BaseRecord, HttpError>'.ts(2353)
```


### Steps To Reproduce

```tsx
import { useForm } from ""@refinedev/react-hook-form"";
```

```tsx
  const {
    refineCore: { onFinish },
    register,
    handleSubmit,
    formState: { errors },
  } = useForm({redirect: ""show"",});
```

### Expected behavior

For it to work per the docs https://refine.dev/tutorial/routing/redirects/react-router/#showing-the-record-after-update

### Packages

- @refinedev/react-hook-form

### Additional Context

Was trying to follow the tutorial here https://refine.dev/tutorial/routing/redirects/react-router/#showing-the-record-after-update",2482447443,Thanks so much for the explanation! 😄 
2654854055,6489,[BUG] Docker build fails,"### Describe the bug

Building refine app for production in docker gets stuck for dozens of minutes

### Steps To Reproduce

1. Dockerize refine application
2. Run docker build for Dockerfile specified in refinedev github repo
3. Wait till the process goes to row RUN npm run build
4. Build is completed in several seconds (app. 30 seconds)
5. After that, build is stuck for 15 minutes

### Expected behavior

Creating docker image finishes shortly after npm run build

### Packages

""@refinedev/antd"": ""^5.44.0"",
""@refinedev/cli"": ""^2.16.39"",
""@refinedev/core"": ""^4.56.0"",
""@refinedev/devtools"": ""^1.2.9"",
""@refinedev/inferencer"": ""^4.7.1"",
""@refinedev/kbar"": ""^1.3.12"",
""@refinedev/react-router-v6"": ""^4.6.0"",
""@refinedev/simple-rest"": ""^5.0.8"",

### Additional Context

The whole application build and deployment is part of a CICD pipeline defined in GitLab. Docker images are built using kaniko. Every time a build is executed, a new build container is spawned where the Dockerfile instructions are being executed by kaniko. 

The application finishes the build phase (in app. 30 seconds) with the following output:
> tsc -b && refine build
(node:119) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
vite v5.4.11 building for production...
transforming...
[plugin:vite:resolve] [plugin vite:resolve] Module ""fs"" has been externalized for browser compatibility, imported by ""/app/refine/node_modules/casbin/lib/esm/enforcer.js"". See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.
✓ 10515 modules transformed.
rendering chunks...
computing gzip size...
dist/index.html                     1.43 kB │ gzip:     0.68 kB
dist/assets/index-B6snAd4S.css      2.97 kB │ gzip:     1.19 kB
dist/assets/index-CSrEYHIK.js   3,368.44 kB │ gzip: 1,029.78 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 27.36s 


After this point it gets stuck for 15-20 minutes a

When exploring the container where the kaniko build is running I see a process node /app/refine/node_modules/.bin/refine build still hanging there even after the build has finished based on log output - therefore I assume the refine build can't finish for some reason and continue with rest of the dockerfile instructions.
",2473830345,"Hello @gabosvk thanks for creating the issue. I think this problem isn't specific to Refine, but probably with your app configuration, dependencies or CI process. You can ask AI Chatbot in [our documentation](https://refine.dev/docs) to get some help. 

Closing the issue fornow, but if you can pin down issue to a some specific problem with Refine code, you can re-open the issue. "
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2473841792,"Hello @davidgoli,

What does `listMenuItems` return?"
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2474333120,"> Hello @davidgoli,
> 
> What does `listMenuItems` return?

It performs an API call to our BE which returns a list of resources the user has access to, like:

```
{ menuItems: [{ name: 'conversations' }, { name: 'moderation_items' }] }
```"
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2474360911,"What's odd is, with a log or a breakpoint, I can see that `can` is being called several times on initial render - but it has no apparent effect on the initial page route or the sidebar menu items"
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2475548537,"Hey @davidgoli an explicit `<AccessControl />` component is required to trigger access control. It won't run every resource by default. You need to wrap your pages/components with it.

You can check Authorization guides & concepts page here https://refine.dev/docs/guides-concepts/authorization/#canaccess-component"
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2475644575,"Hello @davidgoli, Thanks for the detailed explanation.


### 1. Scenario
I couldn't reproduce the issue. If you can provide us with a reproducible example we will be happy to debug it.

My example:
```tsx
import { Refine, useMenu, CanAccess, Link } from ""@refinedev/core"";
import { useNotificationProvider, ThemedLayoutV2 } from ""@refinedev/antd"";

import dataProvider from ""@refinedev/simple-rest"";
import routerProvider from ""@refinedev/react-router-v6"";
import { BrowserRouter, Routes, Route, Outlet } from ""react-router-dom"";
import { App as AntdApp } from ""antd"";

import ""@refinedev/antd/dist/reset.css"";

const API_URL = ""https://api.fake-rest.refine.dev"";

const getListMenuItems = async () => {
  // sleep for 1 second to simulate a real-world scenario
  await new Promise((resolve) => setTimeout(resolve, 1000));

  return [
    { name: ""home"" },
    { name: ""posts"" },
    // { name: ""categories"" }
  ];
};

const App: React.FC = () => {
  return (
    <BrowserRouter>
      <AntdApp>
        <Refine
          dataProvider={dataProvider(API_URL)}
          routerProvider={routerProvider}
          accessControlProvider={{
            can: async (options) => {
              const menuItems = await getListMenuItems();

              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              );
              return { can };
            },
          }}
          resources={[
            {
              name: ""home"",
              list: ""/"",
            },
            {
              name: ""posts"",
              list: ""/posts"",
            },
            {
              name: ""categories"",
              list: ""/categories"",
            },
          ]}
          notificationProvider={useNotificationProvider}
          options={{
            syncWithLocation: true,
            warnWhenUnsavedChanges: true,
          }}
        >
          <Routes>
            <Route
              element={
                <ThemedLayoutV2
                  Sider={() => {
                    const { menuItems } = useMenu();

                    return (
                      <div
                        style={{
                          padding: ""16px"",
                          minWidth: ""200px"",
                        }}
                      >
                        {menuItems.map((item) => {
                          if (!item.route) return null;

                          return (
                            <CanAccess
                              key={item.name}
                              resource={item.name}
                              action=""list""
                            >
                              <Link to={item.route}>
                                <h2 key={item.name}>{item.label}</h2>
                              </Link>
                            </CanAccess>
                          );
                        })}
                      </div>
                    );
                  }}
                >
                  <Outlet />
                </ThemedLayoutV2>
              }
            >
              <Route path=""/"" element={<h1>Home</h1>} />
              <Route path=""/posts"" element={<h1>Posts</h1>} />
              <Route path=""/categories"" element={<h1>Categories</h1>} />
            </Route>
          </Routes>
        </Refine>
      </AntdApp>
    </BrowserRouter>
  );
};

export default App;
```

----

### 2. Scenario

Unfortunately `<NavigateToResource />` doesn’t work with `useCan`. I’ll talk to the core team about adding this feature. Thanks!"
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2476760978,"> Hey @davidgoli an explicit `<AccessControl />` component is required to trigger access control. It won't run every resource by default. You need to wrap your pages/components with it.
> 
> You can check Authorization guides & concepts page here https://refine.dev/docs/guides-concepts/authorization/#canaccess-component

@BatuhanW Yes, see my description in the OP. `<CanAccess />` works for me at the page level, unfortunately what I'm asking about here  is not the page-level access control, but rather the layout-level navigation elements that are independent of the specific page, such as `<NavMenu />` which gets its content from `useMenu` and ultimately `useResource`, which _should_ but apparently does _not_ filter the elements based on `useCan`."
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2476780603,"@davidgoli You can check our Ant Design ThemedLayoutV2 implementation for a similar example [here]( https://github.com/refinedev/refine/blob/961e1fea5e505d133d735bd99111eb26c61f1186/packages/antd/src/components/themedLayoutV2/sider/index.tsx#L94). We are using CanAccess component here to render menu items. Depends on your code, you can also use `useCan` hook, see docs [here](https://refine.dev/docs/authorization/hooks/use-can/)

A suggestion performance wise would be to fetch available menuItems once and use cached version, since for every resource, `can` method of Access Control Provider will be called.

Please let me know if that answers your question."
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2476894899,"@BatuhanW I am not finding much use for the `accessControlProvider` pattern as currently designed, because I'm not in control of the caching, and adding an additional cache layer as you recommend doesn't make much sense. I'd much rather just use React Query, so I probably will. I can trivially implement `useCan` and `CanAccess` on top of RQ. It sounds like `accessControlProvider` doesn't actually give much, because it doesn't work out of the box to filter `useMenu` or many other hooks that rely on `useResource`. The example @alicanerdurmaz gives above is precisely what I was hoping to avoid - _manually_ filtering the resources wherever I need to read them. Its support seems very partial and indeed it isn't compatible with many otherwise recommended components like `NavigateToResource`. So, I will be forgoing it for now. Looking forward to deeper support in the future. Thanks for answering my questions though!"
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2477234305,"@davidgoli Can you let me know what doesn't work for you here? https://github.com/refinedev/refine/blob/961e1fea5e505d133d735bd99111eb26c61f1186/packages/antd/src/components/themedLayoutV2/sider/index.tsx#L94 Please check the implementation. You can use that sider, which does it for you. Am I missing something? You are assuming useResource hook will not list, but useResource hook has much more use cases than that. We can't put AC there. 

By the way, access control provider's can method is already cached, also can be configured. What I meant was fetching available list items outside the can method. You can check it here: https://refine.dev/docs/authorization/access-control-provider/#performance"
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2477252286,"@davidgoli you can also use UI Integration buttons, for example, Edit, Create, etc.. They won't  be visible to users if they don't have access to. Can method takes `resource` and `action`, so if user can't edit posts resource, edit button won't be visible or disabled. Depends on your configuration."
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2487863935,"Directly adding the access control feature to `<NavigateToResource />` is not ideal, as we aim to keep Refine as atomic as possible and provide users complete freedom without imposing any opinions. Instead, users can wrap `<NavigateToResource />` with `<CanAccess />` to handle access control, as shown below: 

```tsx
import { NavigateToResource } from ""@refinedev/react-router-v6"";
import { Navigate } from ""react-router-dom"";

<CanAccess resource=""posts"" action=""list"" fallback={<Navigate to=""/"" />}>
  <NavigateToResource resource=""posts"" />
</CanAccess>
```

By offering atomic components and hooks like `useCan` and `<CanAccess />`, we allow users to manage access control in a way that best suits their needs."
2653571861,6486,[BUG] Resources + app router doesn't check access control?,"### Describe the bug

I might be confused or missing something, but AFAICT there's no code that would make this work.

I've got a Refine app (4.47.1) using Next.js app router. My Refine context:

```ts
        <Refine
          routerProvider={routerProvider}
          authProvider={auth0AuthProvider}
          accessControlProvider={{
            can: async (options) => {
              const { menuItems } = await menuItemsApi.listMenuItems()
              const can = !!menuItems.find(
                (item) => item.name === options.resource,
              )
              return { can }
            },
          }}
          resources={[
            {
              name: 'conversations',
              list: '/conversations',
              show: '/conversations/show/:id',
            },
            {
              name: 'messages',
            },
            {
              name: 'users',
              list: '/users',
              show: '/users/show/:id',
            },
            {
              name: 'moderation_items',
              list: '/moderation-items',
              show: '/moderation-items/show/:id',
            },
          ]
      >
          {props.children}
          <RefineKbar />
      </Refine>
```

1. I have a `Menu` component, pretty much identical to the template's, that uses `useMenu` to build the left-hand menu. I expect for the menu items to be a list of resources filtered by accessControlProvider's `can` method. Instead, I see all resources without filtering.
2. When I log in as a restricted-access user, I expect for my initial route, set by `<NavigateToResource />`, to be the first resource I have access to. Instead, I am redirected to a route to which I do _not_ have access, because it's using the same `useResource()` list that is not filtered by accessControl.
3. An explicit `<CanAccess>` wrapper around pages _does_ work correctly.

Digging through the code, I do not see any mechanism or check for `accessControlProvider.can` to filter the resources. I'm not sure how this is supposed to work - short of me reimplementing everything built on top of `useResource()`?

Bug or documentation defect - I'm not sure!

### Steps To Reproduce

n/a

### Expected behavior

see above

### Packages

- @refinedev/core 4.47.1
- @refinedev/nextjs-router 6.0.0

### Additional Context

_No response_",2489108976,"@alicanerdurmaz the use case I have in mind is precisely the one where we do _not_ have a specific resource, but instead need to navigate the user to the appropriate landing page given the access control they have. I'm not blocked by this as I've implemented it on my own. I do not think it is essential that `<NavigateToResource>` must use access control, but the access control support for basic use cases like mine IMO is incomplete, and Refine could use a story on what to do - not that component perhaps, but which? what _is_ the recommended technique for handling such common scenarios?"
2647071418,6479,[DOC] Tutorial is Broken,"### Documentation issue

https://refine.dev/tutorial/essentials/forms/#using-the-useform-hook

```typescript
const data = Object.fromEntries(new FormData(event.target).entries());
```


### Describe the thing to improve

The lint breaks on the tutorial provided example when doing it on an app generated by the CLI.

```
Argument of type 'EventTarget' is not assignable to parameter of type 'HTMLFormElement'
```



### Describe the solution (optional)

Should be `event.currentTarget` instead of `event.target`

See this for more details:

https://stackoverflow.com/questions/73819465/argument-of-type-eventtarget-is-not-assignable-to-parameter-of-type-htmlforme",,
2641398171,6471,[DOC]How to use useTable with medusajs v1 ,"### Documentation issue

This is my custom modified index.tsx from 
https://refine.dev/templates/next-js-ecommerce-store/
```js
import React from ""react"";
import type { GetServerSideProps } from ""next"";
import {
  type CrudFilter,
  type GetListResponse,
  useGo,
  useList,
  useParsed,
  useTable,
} from ""@refinedev/core"";
import { dataProvider } from ""@refinedev/medusa"";
import type {
  Product,
  ProductCollection,
  StoreCartsRes,
} from ""@medusajs/medusa"";
import nookies from ""nookies"";

import { useCartContext } from ""@lib/context"";
import {
  CART_COOKIE_KEY,
  REGION_COOKIE_KEY,
  SERVER_API_URL,
} from ""src/contants"";
import clsx from ""clsx"";
import { ButtonCategory } from ""@components/ui/button-category"";
import { ProductGridItem } from ""@components/product/product-grid-item"";
import { ProductGridItemSkeleton } from ""@components/product/product-grid-item-skeleton"";

import { useRouter } from ""next/router"";

import medusaRequest from ""@lib/medusa-fetch""


type Props = {
  initialResults?: GetListResponse<Product>;
  initialCategories?: GetListResponse<ProductCollection>;
  initialCategory?: string;
  initialQuery?: string;
};

const Home = ({
  initialCategories,
  initialResults,
  initialCategory,
  initialQuery,
}: Props) => {
  
  console.log(initialResults)

  const router = useRouter();
  const go = useGo();
  const { params } = useParsed();
  const { cartId } = useCartContext();
  const [filteredResults, setFilteredResults] = React.useState(initialResults);
/*
  const { data: categories } = useList<ProductCollection>({
    resource: ""product-categories"",
    queryOptions: {
      initialData: initialCategories,
      enabled: false,
    },
  });*/
  //console.warn(""INDEXP"")
  //console.warn(initialCategories)
  if(typeof initialCategories === 'undefined')
  {
    initialCategories=[]
  }


  const [priceRange, setPriceRange] = React.useState<number[]>([0, 1000]);

  const updatePriceRange = (newRange: number[]) => {
    setPriceRange(newRange);
    // Update the URL with new min and max prices
    router.push(
      {
        pathname: router.pathname,
        query: {
          ...router.query,
          minPrice: newRange[0],
          maxPrice: newRange[1],
        },
      },
      undefined,
      { shallow: true } // Prevent full page reload
    );
  };

  const handleMinPriceChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newMin = Math.min(Number(e.target.value), priceRange[1] - 1);
    updatePriceRange([newMin, priceRange[1]]);
  };

  const handleMaxPriceChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newMax = Math.max(Number(e.target.value), priceRange[0] + 1);
    updatePriceRange([priceRange[0], newMax]);
  };

  let categories = initialCategories 

  const searchQuery = params?.q;
  let selectedCategory = false
  let selectedCategoryId = false

  for(let i=0;i<categories.length; i++)
  {
    if(categories[i].handle === params?.category)
    {
       selectedCategory = categories[i]
       selectedCategoryId = categories[i].id
    }
  }
  
  React.useEffect(() => {
    const newFilteredResults: typeof initialResults = [];
  
    // Using forEach to populate newFilteredResults based on price range
    initialResults.forEach((product) => {
      //console.warn(product)
      const price = product.variants[0]?.calculated_price;
      //console.warn(price)
      if (price >= priceRange[0] && price <= priceRange[1]) {
        newFilteredResults.push(product);
      }
    });
    //console.warn(newFilteredResults)
    setFilteredResults(newFilteredResults);
  }, [priceRange, initialResults]);

  //console.warn(initialResults)
  /*const selectedCategory = categories?.find(
    (category) => category.handle === params?.category,
  );
  const selectedCategoryId = selectedCategory?.id;
*/
    if(params?.category !== null)
    {
      selectedCategoryId = params?.category
    }
    const {
      tableQueryResult: { data: products, isLoading, isFetching },
      filters,
      setFilters,
    } = useTable<Product>({
      resource: ""products"",
      filters: {
        permanent: [
          {
            field: ""cart_id"",
            value: cartId,
            operator: ""eq"",
          },
        ],
        initial: [
          ...(selectedCategoryId
            ? [
                {
                  field: ""category_id"",
                  value: [selectedCategoryId],
                  operator: ""eq"",
                } as CrudFilter,
              ]
            : []),
          ...(searchQuery
            ? [
                {
                  field: ""q"",
                  value: searchQuery,
                  operator: ""eq"",
                } as CrudFilter,
              ]
            : []),
        ],
      },
      pagination: { mode: ""off"" },
      queryOptions: {
        initialData:
          searchQuery === initialQuery &&
          selectedCategoryId === initialCategory
            ? filteredResults
            : undefined,
        keepPreviousData: false,
        select: (response) => {
          // Assuming the actual data array is inside response.data
          const sortedData = response.data.sort(hsCodeSorter);
          return {
            ...response,
            data: sortedData,
          };
        },
      },
    });

  const activeSearchQuery = filters.find(
    (f) => ""field"" in f && f.field === ""q"",
  )?.value;
  const activeCategoryId = filters.find(
    (f) => ""field"" in f && f.field === ""category_id"",
  )?.value?.[0];

  const [localizedCatNames, setLocalizedCatNames] = React.useState<any[]>([]); // Ensure it's initialized as an array


  React.useEffect(() => {
    if (
      selectedCategoryId !== activeCategoryId ||
      searchQuery !== activeSearchQuery
    ) {
      setFilters(
        [
          {
            field: ""category_id"",
            operator: ""eq"",
            value: selectedCategoryId ? [selectedCategoryId] : undefined,
          },
          {
            field: ""q"",
            operator: ""eq"",
            value: searchQuery ? searchQuery : undefined,
          },
        ],
        ""merge"",
      );
    }

    const getCookieValue = (name) => {
      console.log(document.cookie)
      const cookies = document.cookie.split('; ');
      for (let cookie of cookies) {
        const [cookieName, cookieValue] = cookie.split('=');
        if (cookieName === name) {
          return decodeURIComponent(cookieValue);
        }
      }
      return null;
    };

    // Get language based on the cookie `medusa_region`
    const getLanguageFromRegionCookie = () => {
      const cookie = getCookieValue(""medusa_region""); // Retrieve the cookie
      if (cookie) {
        try {
          const region = JSON.parse(cookie);
          const countryCode = region?.countryCode?.toLowerCase();
  
          console.log(countryCode)
          // Map country codes to language codes if needed
          switch (countryCode) {
            case ""pt"":
              return ""pt"";
            case ""es"":
              return ""es"";
            default:
              return ""en"";
          }
        } catch (e) { 
          console.error(""Error parsing medusa_region cookie:"", e);
        }
      }
      console.log(cookie)
      return ""en""; // Default to English if not found
    };

    // Parse the description to extract the language-specific content
    const getLocalizedDescription = (description: string, lang: string) => {
      const regex = new RegExp(`<lang\\s+l=""${lang}""\\s*>([\\s\\S]*?)</lang>`, ""i"");
      const match = description.match(regex);
  
      if (match && match[1]) {
        return match[1]; // Return the localized description
      }
  
      // If no match is found, fall back to the default or full description
      return description;
    };
    console.warn(categories)

    const getLocalizedCatNames = (categories: any[], lang: string) => {
      categories.forEach((category) => {
        console.log(category['name'])
        category['name'] = getLocalizedDescription(category['name'], lang); // Modify the name property directly
      });

      return categories
    };
    const userLang = getLanguageFromRegionCookie();
    const localizedCatNames = getLocalizedCatNames(categories, userLang)
    //console.warn(localizedCatNames)
    setLocalizedCatNames(localizedCatNames)

  }, [selectedCategoryId, activeCategoryId, searchQuery, activeSearchQuery, categories]);

  const selectCategory = React.useCallback(
    (value?: string | undefined) => {
      go({
        query: {
          category: value,
        },
        options: { keepQuery: false },
      });
    },
    [go],
  );

  const [menuOpen, setMenuOpen] = React.useState(false);
  const [filterOpen, setFilterOpen] = React.useState(false);

  return (
    <orinoco>
      <button
      className=""lghidden appearance-none text-left transition-colors duration-200 ease-in-out w-full py-3 px-5 text-base font-bold text-gray-darkest rounded-3xl bg-gray-light hover:bg-gray-light""
      onClick={() => setFilterOpen(!filterOpen)}
      >
        Filters
      </button>
      <div
          className={clsx(
            ""w-[200px]"",
            ""flex-shrink-0"",
            ""lg:flex"",
            ""flex-col"",
            ""gap-2"",
            filterOpen ? ""flex"" : ""hidden"",  // toggled on small screens
          )}
        >

        <div >
        <h3>Price Range</h3>
        
        {/* Custom Price Slider */}
        <div className=""price-slider"">
          <input
            type=""range""
            min=""0""
            max=""2000""
            step=""50""
            value={priceRange[0]}
            onChange={(e) => handleMinPriceChange(e)}
          />
          <input
            type=""range""
            min=""0""
            max=""2000""
            step=""50""
            value={priceRange[1]}
            onChange={(e) => handleMaxPriceChange(e)}
          />
          <div className=""slider-ticks"">
            {[0, 500, 1000, 1500, 2000].map((tick) => (
              <span key={tick} className=""tick"" style={{ left: `${(tick / 2000) * 100}%` }}>
                ${tick}
              </span>
            ))}
          </div>
        </div>
        </div>

          <ButtonCategory
            onClick={() => {
              selectCategory();
              setFilterOpen(false);
            }}
            active={params?.category === undefined}
          >
            Reset Filters
          </ButtonCategory>
        </div>
            
      <button
      className=""lghidden appearance-none text-left transition-colors duration-200 ease-in-out w-full py-3 px-5 text-base font-bold text-gray-darkest rounded-3xl bg-gray-light hover:bg-gray-light""
      onClick={() => setMenuOpen(!menuOpen)}
      >
        Categories
      </button>
      <div className={clsx(""flex"", ""items-start"", ""justify-center"", ""gap-8"")}>
      
        <div
          className={clsx(
            ""w-[200px]"",
            ""flex-shrink-0"",
            ""lg:flex"",
            ""flex-col"",
            ""gap-2"",
            menuOpen ? ""flex"" : ""hidden"",  // toggled on small screens
          )}
        >
          <ButtonCategory
            onClick={() => {
              selectCategory();
              setMenuOpen(false);
            }}
            active={params?.category === undefined}
          >
            All Items
          </ButtonCategory>
          {localizedCatNames?.map((category) => (
            
            (category.parent_category === null || params?.category !== null) && (
  
              <ButtonCategory
                key={category.id}
                onClick={() => {
                  selectCategory(category.handle);
                  setMenuOpen(false);
                }}
                active={params?.category === category.handle}
                hidden = {false}
              >
                {category.name}
              </ButtonCategory>
            )
            
          ))}
        </div>
        <div
          className={clsx(
            ""flex-1"",
            ""grid"",
            ""grid-cols-1"",
            ""md:grid-cols-2"",
            ""lg:grid-cols-3"",
            ""gap-x-8"",
            ""gap-y-16"",
          )}
        >
          {products?.data.map((product) => (
            <ProductGridItem key={product.id} product={product} />
          ))}
          {isLoading
            ? Array.from({ length: 6 }).map((_, i) => (
                <ProductGridItemSkeleton key={i} />
              ))
            : null}
          {!isLoading && !products?.data.length ? (
            <div
              className={clsx(""text-xl"", ""font-semibold"", ""text-gray-darkest"")}
            >
              <p>No products found.</p>
            </div>
          ) : null}
        </div>
      </div>
    </orinoco>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps<Props> = async (
  context,
) => {
  const { query } = context;
  const { category = undefined, q = undefined, minPrice = ""0"", maxPrice = ""1000"" } = query;
  
  const minPriceNumber = parseInt(minPrice as string, 10) || 0;
  const maxPriceNumber = parseInt(maxPrice as string, 10) || 1000;
  console.log(""PRICES BETWEEN ""+minPriceNumber+"" AND ""+maxPriceNumber)
  console.log(""CAT IS:"")
  console.log(category)
  const cookies = nookies.get(context);

  const medusaDataProvider = dataProvider(SERVER_API_URL);

  const getRegion = () => {
    const region = cookies[REGION_COOKIE_KEY];

    if (region) {
      return JSON.parse(region) as {
        regionId: string;
        countryCode: string;
      };
    }
    return null;
  };

  const createNewCart = async () => {
    const region = getRegion();

    const { data } = await medusaDataProvider.create<StoreCartsRes>({
      resource: ""store/carts"",
      variables: {
        region_id: region?.regionId,
      },
    });

    nookies.set(context, CART_COOKIE_KEY, data.cart.id, {
      path: ""/"",
    });
    nookies.set(
      context,
      REGION_COOKIE_KEY,
      JSON.stringify({
        regionId: data.cart.region.id,
        countryCode: region?.countryCode ?? data.cart.region.countries[0].iso_2,
      }),
      {
        path: ""/"",
      },
    );

    return data.cart.id;
  };



  try {
    let cartId = cookies[CART_COOKIE_KEY];

    if (!cartId) {
      cartId = await createNewCart();
    }
    let AFC = category
    if (category===undefined)
    {
      AFC = null
    }
/*
    const categories = await medusaDataProvider.getList<ProductCollection>({
      resource: ""product-categories"",
    });*/


    let categories = await medusaRequest(""GET"", ""/product-categories"", {
      query: {
        limit:750,
        parent_category_id:AFC
      }

    })
    categories = categories.body.product_categories
    //console.log(categories)
    /*if (!categories.length) {
      throw new Error(`Failed to fetch Categories`)
    }*/
   // console.log(""CAT"")
    //console.log(categories.body.product_categories)
    console.log(""CAT"")
    console.log(category)
    
    let categoryId = 0;
    if( AFC !== null)
    {
      categoryId = AFC;
      console.log(""AFC"")
    }
    /*if(category){
    categoryId = categories?.find(
      (cat) => cat.handle === category,
    )?.id;
    }*/
    /*
    const filters: CrudFilter[] = [
      {
        field: ""cart_id"",
        value: cartId,
        operator: ""eq"",
      },//@ts-ignore
      ...(categoryId && !q
        ? [
            {
              field: ""category_id"",
              operator: ""eq"",//@ts-ignore
              value: [categoryId],
            } as CrudFilter,
          ]
        : []),
      ...(q
        ? [
            {
              field: ""q"",
              operator: ""eq"",
              value: q,
            } as CrudFilter,
          ]
        : []),
    ];*/
    //console.log(filters)
    let products = false
    //console.log(priceRange)
    if (categoryId && !q)
    {
      products = await medusaRequest(""GET"", ""/products"", {
        query: {
          cart_id: cartId,
          category_id:[ categoryId]
        },
      })
  
    }
    if (q)
    {
      products = await medusaRequest(""GET"", ""/products"", {
        query: {
          cart_id: cartId,
          q: q
        },
      })
    }
    if (!products)
    {
      products = await medusaRequest(""GET"", ""/products"", {
        query: {
          cart_id: cartId,
        },
      })
    }
    //@ts-ignore
    products = products.body.products;

    const newFilteredResults: Product[] = [];  
    products.forEach((product) => {
      const price = product.variants[0]?.calculated_price;
      if (price >= minPriceNumber && price <= maxPriceNumber) {
        newFilteredResults.push(product);
      }
    });

/*
    const products = await medusaDataProvider.getList<Product>({
      resource: ""products"",
      filters,
    });*/

    context.res.setHeader(
      ""Cache-Control"",
      // cache for 12 hours
      // serve stale content while revalidating for 24 hours
      `public, s-maxage=${60 * 60 * 12}, stale-while-revalidate=${
        60 * 60 * 24
      }`,
      );
      console.log(newFilteredResults)
      console.log(minPriceNumber)
      console.log(maxPriceNumber)
      newFilteredResults.forEach((product) => {
        const price = product.variants[0]?.calculated_price;
        console.log(""PP is"" + price)
      })
    return {
      props: {
        initialResults: newFilteredResults,
        initialCategories: categories,
        ...(q && { initialQuery: q as string }),
        ...(category && { initialCategory: category as string }),
      },
    };
  } catch (error) {
    console.log(""EER"")
    console.log(error)
    console.log(""EER"")
    return { props: {} };
  }
};

const hsCodeSorter = (a: Product, b: Product) => {
  return Number(a.hs_code ?? 0) - Number(b.hs_code ?? 0);
};
```



### Describe the thing to improve

As you can see in the above code in the clientside section I have code that edits the URL in the browser and tries to make a priceRange selector thing:

  ```tsx

const Home = ({
  initialCategories,
  initialResults,
  initialCategory,
  initialQuery,
}: Props) => {
//  ...
const updatePriceRange = (newRange: number[]) => {
    setPriceRange(newRange);
    // Update the URL with new min and max prices
    router.push(
      {
        pathname: router.pathname,
        query: {
          ...router.query,
          minPrice: newRange[0],
          maxPrice: newRange[1],
        },
      },
      undefined,
      { shallow: true } // Prevent full page reload
    );
  };

  const handleMinPriceChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newMin = Math.min(Number(e.target.value), priceRange[1] - 1);
    updatePriceRange([newMin, priceRange[1]]);
  };

  const handleMaxPriceChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newMax = Math.max(Number(e.target.value), priceRange[0] + 1);
    updatePriceRange([priceRange[0], newMax]);
  };

```
and also note that on clientside I am arleady **_TRYING mY BEST_** to filter the results:
  
```tsx
  React.useEffect(() => {
    const newFilteredResults: typeof initialResults = [];
  
    // Using forEach to populate newFilteredResults based on price range
    initialResults.forEach((product) => {
      //console.warn(product)
      const price = product.variants[0]?.calculated_price;
      //console.warn(price)
      if (price >= priceRange[0] && price <= priceRange[1]) {
        newFilteredResults.push(product);
      }
    });
    //console.warn(newFilteredResults)
    setFilteredResults(newFilteredResults);
  }, [priceRange, initialResults]);
//...
//and then I pass them to here
      queryOptions: {
        initialData:
          searchQuery === initialQuery &&
          selectedCategoryId === initialCategory
            ? filteredResults //<-------- SEE HOW I PASS THEM FILTERED???? IT DONT WORK FOR SOME REASON
            : undefined,
        keepPreviousData: false,
        select: (response) => {
          // Assuming the actual data array is inside response.data
          const sortedData = response.data.sort(hsCodeSorter);
          return {
            ...response,
            data: sortedData,
          };
        },
      },
```
But it dont work simply working with the initialResults on clientside no matter how I change the priceRange values it won't filter them the way I want.
So I tried working on serverSide:

```tsx

export const getServerSideProps: GetServerSideProps<Props> = async (
  context,
) => {
  const { query } = context;
  const { category = undefined, q = undefined, minPrice = ""0"", maxPrice = ""1000"" } = query;
  
  const minPriceNumber = parseInt(minPrice as string, 10) || 0;
  const maxPriceNumber = parseInt(maxPrice as string, 10) || 1000;
  console.log(""PRICES BETWEEN ""+minPriceNumber+"" AND ""+maxPriceNumber)
```
...
```tsx
      console.log(newFilteredResults)
      console.log(minPriceNumber)
      console.log(maxPriceNumber)
      newFilteredResults.forEach((product) => {
        const price = product.variants[0]?.calculated_price;
        console.log(""PP is"" + price)
      })
    return {
      props: {
        initialResults: newFilteredResults,
        initialCategories: categories,
        ...(q && { initialQuery: q as string }),
        ...(category && { initialCategory: category as string }),
      },
    };
```
According to my console.log's in clientSide alone, the priceFiltering should work, but visually I'm seeing all products the same. 
And serverSide section the console.log ""PP is""+price only prints the filtered products, so the serverside also works BUT on UI I see all products, not only the filtered products.
What am I doing wrong?


### Describe the solution (optional)


I also have another clientSide implementation that I don't know how to make work:

```js
    const updatePriceRange = React.useMemo(
      () => (newRange: number[]) => {
        setPriceRange(newRange);
        router.push(
          {
            pathname: router.pathname,
            query: {
              ...router.query,
              minPrice: newRange[0],
              maxPrice: newRange[1],
            },
          },
          undefined,
          { shallow: true }
        );
        setFilters((prevFilters) => [
          ...prevFilters.filter(
            (filter) => filter.field !== ""variants.calculated_price""
          ),
          { field: ""variants.calculated_price"", operator: ""gte"", value: newRange[0] },
          { field: ""variants.calculated_price"", operator: ""lte"", value: newRange[1] },
        ], ""replace"");
      },
      [router, setFilters]
    );

```
how do I make it access product.variants.calculated_price I dont think the way I implemented it it works good for medusajs data structure because it must access object within object or smth like this? 

Thx
",,
2637465439,6463,[BUG] `<Link />` component ref type is too restrictive,"### Describe the bug

The [`<Link />`](https://refine.dev/docs/routing/components/link/) component’s ref type is set to `HTMLAnchorElement` only, which means it can’t be used with other types of elements. This makes it hard to use with custom components or different HTML elements.

### Steps To Reproduce

 This will cause a type error

```tsx
const MyComponent = () => {
  const ref = useRef<HTMLDivElement>(null);
  return <Link ref={ref} to=""/posts"" />;
};
```

### Expected behavior

The `<Link />` component should accept refs of any valid element type

### Packages

#### System:
 - OS: macOS 14.5
 - CPU: (10) arm64 Apple M2 Pro
#### Binaries:
 - Node: 20.11.0 - ~/.nvm/versions/node/v20.11.0/bin/node
 - Yarn: 1.22.17 - /opt/homebrew/bin/yarn
 - npm: 10.2.4 - ~/.nvm/versions/node/v20.11.0/bin/npm
#### Browsers:
 - Chrome: 130.0.6723.116
 - Safari: 17.5

#### Refine Packages:
 - @refinedev/antd: 5.43.1
 - @refinedev/cli: 2.16.39
 - @refinedev/core: 4.55.0
 - @refinedev/devtools: 1.2.9
 - @refinedev/react-router-v6: 4.6.0
 - @refinedev/simple-rest: 5.0.8


### Additional Context

_No response_",,
2635095346,6458,[BUG] useForm from `refinedev/react-hook-form` incorrectly checks `autoSave`,"### Describe the bug

- I used the useForm from `@refinedev/react-hook-form` while specifying the autoSave.enabled to `false` and yet it autoSaves. 
- I then noticed that if unspecified it works as autoSave false because that is the default.
- In my case, I'd like to explicitly define it as false without having to do this:

```tsx
  const {
    saveButtonProps,
    control,
    formState: { errors },
    watch
  } = useForm({
    ...useFormProps,
    refineCoreProps: {
      // autoSave: {
      //   enabled: false
      // },

      //@ts-ignore
      autoSave: false,
      queryOptions: {
        enabled: false
      },
      onMutationSuccess(data, variables, context, isAutoSave) {
        onUpdate?.();
        console.log({ data, variables, context, isAutoSave });
        alert(""saved"");
      },

      ...useFormProps?.refineCoreProps
    }
  });
```

- I checked the code and the issue seems to be coming from the definition of the onChange handler within the hook
![image](https://github.com/user-attachments/assets/76d60fcc-7d40-4a18-9065-0eac3fefa8a8)




 


### Steps To Reproduce

1. Import the useForm hook from react-hook-form
2. set autoSave.enable = false
3. it will autoSave form elements even when specified not to.

### Expected behavior

autoSave specification works

### Packages

- ""@refinedev/react-hook-form"": ""^4.8.14"",

### Additional Context

_No response_",,
2630900618,6450,[BUG]Infinite Rendering on List View with useTable in Next.js App Routing,"### Describe the bug

I was trying to create a list view following the example of useTable. However, when I load the page, it renders infinitely.

The issue seems to be that tableQuery's fetchStatus remains in the ""fetching"" state. However, there is no call to the data provider's getList action, and tableQuery.data remains undefined, resulting in no data being displayed.

### Steps To Reproduce

1. Set up a list view using useTable following the usage example in the documentation.
2. Implement this in a Next.js project using app routing.
3. Load the list view page.
4. Observe the page entering an infinite rendering loop.

### Expected behavior

Data should be fetched from the data provider and displayed in the table. The page should render once with the fetched data.

### Packages

- next@14.2.5
- react@18.3.1
- react-dom@18.3.1
- @refinedev/react-table@5.6.13
- @tanstack/react-table@8.20.1
- @refinedev/core@4.54.0
- @refinedev/nextjs-router@6.1.0
- @refinedev/chakra-ui@2.32.0
- @chakra-ui/react@2.8.2

### Additional Context

```
<Refine
  routerProvider={routerProvider}
  dataProvider={DataProviderClient}
  authProvider={authProvider}
  notificationProvider={useNotificationProvider}
  resources={[
    {
       name: ""users"",
       list: ""users"",
       create: ""users/create"",
       edit: ""users/:id/edit"",
       show: ""users/:id"",
    },
  ]}
  options={{
    syncWithLocation: true,
    warnWhenUnsavedChanges: true,
    useNewQueryKeys: true,
  }}
>
  {children}
</Refine>

```

_List View Page (/src/app/users/page.tsx)_

```
""use client"";

import { HStack, Table, TableContainer, Tbody, Td, Th, Thead, Tr } from ""@chakra-ui/react"";
import { ColumnFilter } from ""@components/DataDisplay/ColumnFilter"";
import { Pagination } from ""@components/Pagination"";
import { capitalize } from ""@lib/helpers/string.helper"";
import { DateField, EditButton, List, ShowButton, TagField, TextField } from ""@refinedev/chakra-ui"";
import { useTable } from ""@refinedev/react-table"";
import { ColumnDef, flexRender } from ""@tanstack/react-table"";
import { useMemo } from ""react"";
import { UserProps } from ""./schema/user.schema"";

const LIST_PROPS_AS_TEXT = [""name"", ""email""];

export default function UsersPage() {
  const columns = useMemo<ColumnDef<UserProps>[]>(
    () => [
      {
        id: ""_id"",
        header: ""ID"",
        accessorKey: ""_id"",
        meta: {
          filterOperator: ""eq"",
        },
      },
      ...LIST_PROPS_AS_TEXT.map((field) => ({
        id: field,
        header: capitalize(field),
        accessorKey: field,
      })),
      {
        id: ""roles"",
        header: ""Roles"",
        accessorKey: ""roles"",
        cell: (props) => {
          return (
            <HStack>
              {(props.getValue() as string[]).map((role: string, index) => (
                <TagField key={index} value={role} />
              ))}
            </HStack>
          );
        },
      },
      {
        id: ""createdAt"",
        header: ""Created At"",
        accessorKey: ""createdAt"",
        cell: (props) => <DateField value={props.getValue() as string} format=""HH:mm DD/MM/YYYY"" />,
      },
      {
        id: ""actions"",
        header: ""Actions"",
        accessorKey: ""_id"",
        cell: (props) => {
          return (
            <HStack>
              <EditButton recordItemId={props.getValue() as string} />
              <ShowButton recordItemId={props.getValue() as string} />
            </HStack>
          );
        },
      },
    ],
    [],
  );

  const {
    getHeaderGroups,
    getRowModel,
    refineCore: { tableQuery, pageCount, current, setCurrent },
  } = useTable<UserProps>({ columns });

  console.log(""🚀 ~ UsersPage ~ Render"", tableQuery);
  const total = tableQuery?.data?.total ?? 0;

  return (
    <List>
      <p>Total: {total}</p>
      <TableContainer marginTop={12}>
        <Table variant=""simple"">
          <Thead>
            {getHeaderGroups().map((headerGroup) => {
              return (
                <Tr key={headerGroup.id}>
                  {headerGroup.headers.map((header) => {
                    return (
                      <Th key={header.id}>
                        {!header.isPlaceholder && (
                          <HStack spacing={2}>
                            <TextField
                              value={flexRender(
                                header.column.columnDef.header,
                                header.getContext(),
                              )}
                            />
                            <ColumnFilter<UserProps> column={header.column} />
                          </HStack>
                        )}
                      </Th>
                    );
                  })}
                </Tr>
              );
            })}
          </Thead>
          <Tbody>
            {getRowModel().rows.map((row) => {
              return (
                <Tr key={row.id}>
                  {row.getVisibleCells().map((cell) => {
                    return (
                      <Td key={cell.id}>
                        {flexRender(cell.column.columnDef.cell, cell.getContext())}
                      </Td>
                    );
                  })}
                </Tr>
              );
            })}
          </Tbody>
        </Table>
      </TableContainer>
      <Pagination current={current} pageCount={pageCount} setCurrent={setCurrent} />
    </List>
  );
}

```",,
2628091350,6444,"[FEAT] Simplified, Automated and Consistent Forms","### Is your feature request related to a problem? Please describe.

Currently, the Show, Edit, and Create pages/forms need to be implemented manually, which can become cumbersome when dealing with a large number of tables - even if using common layout pages.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

It would be great to infer column types from data fetched in databases like Supabase and implement a global renderer to maintain a consistent user experience with minimal code.

For example, a foreign key relationship could be represented as a select or autocomplete field, while an int8 type would correspond to a number input, and so forth.",,
2626757032,6443,[BUG] CommonJS/Module Error,"### Describe the bug

I am getting this error:

```js
ERROR in ./src/configs/index.js 5:0-51
Module not found: Error: Can't resolve './router' in 'D:\Github\cronus\src\configs'
Did you mean 'index.js'?
BREAKING CHANGE: The request './router' failed to resolve only because it was resolved as fully specified
(probably because the origin is strict EcmaScript Module, e. g. a module with javascript mimetype, a '*.mjs' file, or a '*.js' file where the package.json contains '""type"": ""module""').
The extension in the request is mandatory for it to be fully specified.
Add the extension to the request.

ERROR in ./src/index.js 13:12-24
export 'routerConfig' (imported as 'routerConfig') was not found in './configs/index.js' (module has no exports)
```

I have tried to put ""type"": ""module"" in my packages.json but that is breaking my entire project.

How to fix this?

### Steps To Reproduce

Migrate an existing React + MUI project in `CommonJS`.

### Expected behavior

Should just work.

### Packages

```js
""dependencies"": {
    ""@emotion/react"": ""^11.13.3"",
    ""@emotion/styled"": ""^11.13.0"",
    ""@mui/icons-material"": ""^6.1.5"",
    ""@mui/lab"": ""^6.0.0-beta.13"",
    ""@mui/material"": ""^6.1.5"",
    ""@mui/x-charts"": ""^7.22.0"",
    ""@mui/x-data-grid"": ""^7.22.0"",
    ""@mui/x-date-pickers"": ""^7.22.0"",
    ""@refinedev/cli"": ""^2.16.39"",
    ""@refinedev/core"": ""^4.55.0"",
    ""@refinedev/mui"": ""^5.21.0"",
    ""@refinedev/simple-rest"": ""^5.0.8"",
    ""@toolpad/core"": ""^0.8.1"",
    ""angular-expressions"": ""^1.4.0"",
    ""dayjs"": ""^1.11.13"",
    ""docxtemplater"": ""^3.51.2"",
    ""dompurify"": ""^3.1.7"",
    ""firebase"": ""^11.0.1"",
    ""firebase-admin"": ""^12.7.0"",
    ""formik"": ""^2.4.6"",
    ""mui-file-input"": ""^6.0.0"",
    ""pizzip"": ""^3.1.7"",
    ""react"": ""^18.3.1"",
    ""react-dom"": ""^18.3.1"",
    ""react-router-dom"": ""^6.27.0"",
    ""react-scripts"": ""5.0.1"",
    ""refine-firebase"": ""^1.2.1"",
    ""uuid"": ""^11.0.2"",
    ""web-vitals"": ""^4.2.4"",
    ""yup"": ""^1.4.0""
  },
  ""devDependencies"": {
    ""@babel/plugin-proposal-private-property-in-object"": ""^7.21.11"",
    ""@commitlint/cli"": ""^19.5.0"",
    ""@commitlint/config-conventional"": ""^19.5.0"",
    ""commitlint"": ""^19.5.0"",
    ""eslint"": ""^9.13.0"",
    ""eslint-config-prettier"": ""^9.1.0"",
    ""eslint-plugin-react"": ""^7.37.2"",
    ""eslint-plugin-simple-import-sort"": ""^12.1.1"",
    ""husky"": ""^9.1.6"",
    ""prettier"": ""^3.3.3""
  }
```

### Additional Context

_No response_",,
2598570170,6419,[FEAT] DataProvider should be able to compute the API route from resource,"### Is your feature request related to a problem? Please describe.

Ive been digging into the resource system and one thing I have noticed is that providers like simple-rest take the resource id as-is for building a url. However we have 

```
export interface IResourceComponents {
  list?: ResourceRouteComposition;
  create?: ResourceRouteComposition;
  clone?: ResourceRouteComposition;
  edit?: ResourceRouteComposition;
  show?: ResourceRouteComposition;
}
```

It would make a lot more sense if allow the data provider to do so, so that we can better organize the API paths.

I understand that `IResourceComponents` is intended for the client, so I think it can be extended or new types made that target the servers path.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Have data providers receive or be able to compute the API route path for a resource for calling an API, based off `IResourceComponents` or similar.",,
2598218320,6418,[FEAT] Expose router helpers,"### Is your feature request related to a problem? Please describe.

I was dealing with needs to do some custom route-related computation/manipulation not to long ago and may need to again in the future.

I would like to see everything in https://github.com/refinedev/refine/blob/32c4549896c180b471ffb5ed4e2dfc4327f4f91d/packages/core/src/definitions/helpers/router/index.ts exported at https://github.com/refinedev/refine/blob/32c4549896c180b471ffb5ed4e2dfc4327f4f91d/packages/core/src/definitions/helpers/index.ts. Currently only `getActionRoutesFromResource` is.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Export the router helpers",,
2598197858,6417,[FEAT] Disable minify,"### Is your feature request related to a problem? Please describe.

I have recently discovered a vite configuration issue that I fixed that prevented sourcemaps for refine core from working (I have had a lot of issues before then). However, even with this, is seems at-least 1 code path while debugging skipped an if statement based on the if for no reason at all.

I am requesting the project consider disabling minify in builds so that pages can properly be debugged without needing to jump through hoops as building locally, creating a patch and use pnpm or patch-package is honestly a last resort type of PITA. This to be clear, is so debugging can happen without sourcemaps since I have found they are not always perfect.

Additionally if minify is really considered valuable for a reason I don't need or don't agree with, create a new package export on packages for a different variation.

As I see it minify optimization should be the job of a bundler and npm code should not be pre-minified. It has been a pet peeve of mind as well when i come across this.

Kudos

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Disable minify in published builds",,
2589310636,6409,[DOC] Editing modules,"### Documentation issue

#6380 
@aliemir 
> Hey @spacewalkingninja, I'm not sure what are you trying to achieve here, Refine has 35 packages, 200+ examples and a documentation in the repo. It is unclear that which template you're referencing or why are you editing the `index.mjs`.
> 
> Check out the [Quick Start Guide](https://refine.dev/docs/getting-started/quickstart/) and [Development Guide](https://refine.dev/docs/guides-concepts/development/) to get started with Refine.
> 
> Feel free to re-open when you can define the issues you're facing and the goals you're trying to achieve more clearly.


It is very simple: I am building a medusajs store based on the medusa V1 api, using the SWAG template, and I am trying to edit the SWAG store template which you have developed to work +/- OK on medusajs V1 api.

https://github.com/refinedev/refine/tree/master/examples/store

I have had to mod some files so far, and all of them are in the tsx files, which is easy to develop for, But the issue I am encountering is that there are some things that aren't so straightforward to edit:

I am in refine/examples/store/pages/_app.tsx 

and there is this originally
```

 ...
 return (
    <ManagedUIContext>
      <GitHubBanner />
      <main className={clsx(inter.variable, ""font-sans"", ""bg-gray-lightest"")}>
        <Refine
...

```

this github banner is baked in a core module somewhere, which I must edit (No, I DO NOT WANT to create my custom files for this, I like the banner as is, I just want to edit the text and link that appears, so I had to edit the mjs files and created custom banners there).

I am trying to reuse it for ""Free shipping on orders above N euros"" and I am making it multilanguage because poor medusajs doesnt support multilang in the traditional way so I have to code it from scratch. 

Here is what I am doing right now:

```

    // Get user's browser language if no relevant cookie is found
    const userLang = cookieLang || navigator.language;
    if (userLang.startsWith(""pt"")) {
      setGitHubBannerComponent(<GitHubBannerPt />);
    } else if (userLang.startsWith(""es"")) {
      setGitHubBannerComponent(<GitHubBannerEs />);
    } else {
      setGitHubBannerComponent(<GitHubBanner />);
    }

    //... some irrelevant code

  }, []);

  const renderComponent = () => {
    if (Component.noLayout) {
      return <Component {...pageProps} />;
    }

    return (
      <Layout>
        <Component {...pageProps} />
      </Layout>
    );
  };

  return (
    <ManagedUIContext>
      {GitHubBannerComponent} {/* Display the correct GitHubBanner based on language */}
      <main className={clsx(inter.variable, ""font-sans"", ""bg-gray-lightest"")}>

```

basically what I am asking for is to make it easier to edit, I don't want to unminify mjs files to edit some simple html/css - makes sense? 
If you have ever modded or written PHP/HTML/CSS you know how easy it is. 
This is something I code on top of my head, that reads https://url.com/index.php?Theme=Dark || Pink || Unset to show how easy something like this MUST be:
```

<html>
<head>
<?php 

if ($_GET['Theme']==""Dark"") {
?>
<style>
html {
background:black
}
</style>
<title>DarkVersion</title>
<?php 
}
elseif ($_GET['Theme']==""Pink"")
{ ?>

<style>
html {
background:pink
}
</style>
<title>PinkVersion</title>

<?php
}
else
{
?>
<style>
html {
background:#ccc
}
</style>
<title>Default : LightVersion</title>

<?php
}
?>
</head>
<body>
<h1> content goes here </h1>
</body>
</html>
```



### Describe the thing to improve

Since I am just trying to edit a simple banner, **I mustn't be made to jump through so much hoops, my head feels like sonic** writing things for Refine, Medusa, React. 
And yes, I know there are lots of files for organisation purposes but I am not organized and I don't care about organization, I care about writing and seeing code working. 

### Describe the solution (optional)

_No response_",,
2587811667,6408,[BUG] mutationObserver.ts:61  Uncaught TypeError: __privateGet(...).defaultMutationOptions is not a function,"### Describe the bug

Hi,
Today I deleted the pnpm's pnpm-lock.yml and reinstalled the modules. However Refine stops working, showing the following errors:
```
hook.js:591 Warning: [antd: Menu] `children` is deprecated. Please use `items` instead. Error Component Stack:
    at menu.js:39:26
    at index.js:12:19
    at div (<anonymous>)
    at aside (<anonymous>)
    at Sider.js:41:18
    at ThemedSiderV2 (sider.tsx:41:69)
    at Sider (<anonymous>)
    at div (<anonymous>)
    at layout.js:59:13
    at Layout (<anonymous>)
    at ThemedLayoutContextProvider (index.tsx:15:9)
    at ThemedLayoutV2 (index.tsx:10:74)
    at Authenticated (index.tsx:95:3)
    at RenderedRoute (hooks.tsx:658:26)
    at Routes (components.tsx:504:3)
    at UnsavedWarnContextProvider (index.tsx:8:3)
    at RefineContextProvider (index.tsx:83:3)
    at UndoableQueueContextProvider (index.tsx:68:3)
    at AuditLogContextProvider (index.tsx:9:8)
    at AccessControlContextProvider (index.tsx:20:8)
    at I18nContextProvider (index.tsx:11:3)
    at ResourceContextProvider (index.tsx:14:19)
    at LegacyRouterContextProvider (index.tsx:19:3)
    at RouterContextProvider (index.tsx:12:8)
    at LiveContextProvider (index.tsx:8:3)
    at DataContextProvider (index.tsx:17:3)
    at AuthBindingsContextProvider (index.tsx:85:8)
    at LegacyAuthContextProvider (index.tsx:17:8)
    at NotificationContextProvider (index.tsx:12:8)
    at QueryClientProvider (QueryClientProvider.tsx:30:3)
    at Refine (index.tsx:40:3)
    at GoogleOAuthProvider (index.esm.js:36:32)
    at LocaleProvider (index.js:11:5)
    at MotionWrapper (MotionWrapper.js:8:5)
    at ProviderChildren (index.js:105:5)
    at ConfigProvider (index.js:396:25)
    at Router (components.tsx:413:13)
    at BrowserRouter (index.tsx:783:3)
    at App (app.tsx:49:45)
overrideMethod @ hook.js:591
hook.js:591 Warning: findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node Error Component Stack:
    at SingleObserver (index.js:10:24)
    at ResizeObserver3 (index.js:12:24)
    at index.js:33:34
    at Tooltip2 (Tooltip.js:11:32)
    at index.js:30:16
    at MenuItem2 (MenuItem.js:15:5)
    at CanAccess (index.tsx:61:13)
    at index.js:261:24
    at SubMenu2 (SubMenu.js:13:5)
    at CanAccess (index.tsx:61:13)
    at div (<anonymous>)
    at InheritableContextProvider (MenuContext.js:19:23)
    at Menu.js:47:27
    at menu.js:39:26
    at index.js:12:19
    at div (<anonymous>)
    at aside (<anonymous>)
    at Sider.js:41:18
    at ThemedSiderV2 (sider.tsx:41:69)
    at Sider (<anonymous>)
    at div (<anonymous>)
    at layout.js:59:13
    at Layout (<anonymous>)
    at ThemedLayoutContextProvider (index.tsx:15:9)
    at ThemedLayoutV2 (index.tsx:10:74)
    at Authenticated (index.tsx:95:3)
    at RenderedRoute (hooks.tsx:658:26)
    at Routes (components.tsx:504:3)
    at UnsavedWarnContextProvider (index.tsx:8:3)
    at RefineContextProvider (index.tsx:83:3)
    at UndoableQueueContextProvider (index.tsx:68:3)
    at AuditLogContextProvider (index.tsx:9:8)
    at AccessControlContextProvider (index.tsx:20:8)
    at I18nContextProvider (index.tsx:11:3)
    at ResourceContextProvider (index.tsx:14:19)
    at LegacyRouterContextProvider (index.tsx:19:3)
    at RouterContextProvider (index.tsx:12:8)
    at LiveContextProvider (index.tsx:8:3)
    at DataContextProvider (index.tsx:17:3)
    at AuthBindingsContextProvider (index.tsx:85:8)
    at LegacyAuthContextProvider (index.tsx:17:8)
    at NotificationContextProvider (index.tsx:12:8)
    at QueryClientProvider (QueryClientProvider.tsx:30:3)
    at Refine (index.tsx:40:3)
    at GoogleOAuthProvider (index.esm.js:36:32)
    at LocaleProvider (index.js:11:5)
    at MotionWrapper (MotionWrapper.js:8:5)
    at ProviderChildren (index.js:105:5)
    at ConfigProvider (index.js:396:25)
    at Router (components.tsx:413:13)
    at BrowserRouter (index.tsx:783:3)
    at App (app.tsx:49:45)
overrideMethod @ hook.js:591
hook.js:591 Warning: Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?
overrideMethod @ hook.js:591
30mutationObserver.ts:61 Uncaught TypeError: __privateGet(...).defaultMutationOptions is not a function
    at _a10.setOptions (mutationObserver.ts:61:33)
    at new _a10 (mutationObserver.ts:45:10)
    at useMutation.ts:28:7
    at mountState (react-dom.development.js:16167:20)
    at Object.useState (react-dom.development.js:16880:16)
    at Object.useState (react.development.js:1622:21)
    at useMutation (useMutation.ts:26:28)
    at useLog (index.ts:92:15)
    at useDelete (useDelete.ts:164:19)
    at useDeleteButton (index.tsx:41:44)
15hook.js:591 The above error occurred in the <DeleteButton> component:

    at DeleteButton (http://localhost:4000/node_modules/.vite/deps/@refinedev_antd.js?v=002fc8b6:27802:26)
    at div
    at Item3 (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:62313:5)
    at div
    at http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:62349:16
    at td
    at Cell2 (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:93110:5)
    at tr
    at BodyRow (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:93468:5)
    at ImmutableComponent2 (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:92914:7)
    at tbody
    at Body (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:93584:5)
    at ImmutableComponent2 (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:92914:7)
    at table
    at div
    at div
    at div
    at DomWrapper4 (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:2714:5)
    at SingleObserver (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:2728:24)
    at ResizeObserver3 (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:2805:24)
    at Provider2 (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:92808:22)
    at Table (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:94594:32)
    at ImmutableComponent2 (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:92886:38)
    at div
    at div
    at Spin (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:68892:16)
    at div
    at InternalTable (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:101535:16)
    at Table2 (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:101869:36)
    at div
    at div
    at div
    at DomWrapper4 (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:2714:5)
    at SingleObserver (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:2728:24)
    at ResizeObserver3 (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:2805:24)
    at PageHeader2 (http://localhost:4000/node_modules/.vite/deps/@refinedev_antd.js?v=002fc8b6:26615:34)
    at PageHeader (http://localhost:4000/node_modules/.vite/deps/@refinedev_antd.js?v=002fc8b6:27986:26)
    at div
    at List (http://localhost:4000/node_modules/.vite/deps/@refinedev_antd.js?v=002fc8b6:27852:27)
    at AccessoryProductList (http://localhost:4000/src/pages/accessory-product/list.tsx:35:44)
    at RenderedRoute (http://localhost:4000/node_modules/.vite/deps/chunk-CN3UI2YZ.js?v=9376b192:4069:5)
    at RenderedRoute (http://localhost:4000/node_modules/.vite/deps/chunk-CN3UI2YZ.js?v=9376b192:4069:5)
    at Outlet (http://localhost:4000/node_modules/.vite/deps/chunk-CN3UI2YZ.js?v=9376b192:4444:26)
    at div
    at div
    at main
    at http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:67009:16
    at Content
    at div
    at http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:67028:16
    at Layout
    at div
    at http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:67028:16
    at Layout
    at ThemedLayoutContextProvider (http://localhost:4000/node_modules/.vite/deps/@refinedev_antd.js?v=002fc8b6:27664:26)
    at ThemedLayoutV2 (http://localhost:4000/node_modules/.vite/deps/@refinedev_antd.js?v=002fc8b6:27774:26)
    at Authenticated (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:6084:31)
    at RenderedRoute (http://localhost:4000/node_modules/.vite/deps/chunk-CN3UI2YZ.js?v=9376b192:4069:5)
    at Routes (http://localhost:4000/node_modules/.vite/deps/chunk-CN3UI2YZ.js?v=9376b192:4508:5)
    at UnsavedWarnContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:4565:25)
    at RefineContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:4458:29)
    at UndoableQueueContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:5390:25)
    at AuditLogContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:5762:23)
    at AccessControlContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:5670:20)
    at I18nContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:5411:25)
    at ResourceContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:5301:26)
    at LegacyRouterContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:5664:25)
    at RouterContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:5310:25)
    at LiveContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:5268:29)
    at DataContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:5231:25)
    at AuthBindingsContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:4169:25)
    at LegacyAuthContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:4136:25)
    at NotificationContextProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:5399:21)
    at QueryClientProvider (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:3807:3)
    at Refine (http://localhost:4000/node_modules/.vite/deps/chunk-CIXOZQBT.js?v=9376b192:6051:35)
    at GoogleOAuthProvider (http://localhost:4000/node_modules/.vite/deps/@react-oauth_google.js?v=e3a1b638:42:32)
    at LocaleProvider (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:5106:13)
    at MotionWrapper (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:7622:5)
    at ProviderChildren (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:7727:5)
    at ConfigProvider (http://localhost:4000/node_modules/.vite/deps/chunk-TO7ZTMCR.js?v=9376b192:8007:27)
    at Router (http://localhost:4000/node_modules/.vite/deps/chunk-CN3UI2YZ.js?v=9376b192:4451:15)
    at BrowserRouter (http://localhost:4000/node_modules/.vite/deps/chunk-CN3UI2YZ.js?v=9376b192:5196:5)
    at App (http://localhost:4000/src/app.tsx:57:328)

Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.
overrideMethod @ hook.js:591
react-dom.development.js:12056 Uncaught TypeError: __privateGet(...).defaultMutationOptions is not a function
    at _a10.setOptions (mutationObserver.ts:61:33)
    at new _a10 (mutationObserver.ts:45:10)
    at useMutation.ts:28:7
    at mountState (react-dom.development.js:16167:20)
    at Object.useState (react-dom.development.js:16880:16)
    at Object.useState (react.development.js:1622:21)
    at useMutation (useMutation.ts:26:28)
    at useLog (index.ts:92:15)
    at useDelete (useDelete.ts:164:19)
```
Looks like it's a react query dependency issue. I upgraded all modules to the most current version and they still don't work. What could be the fix and what version of react query does refine require?

### Steps To Reproduce

1. Go to any listing page, which has a delete button
2. The error shows.

### Expected behavior

Not to throw an error.

### Packages

    ""@refinedev/antd"": ""^5.37.5"",
    ""@refinedev/core"": ""^4.48.0"",
    ""@refinedev/react-router-v6"": ""^4.5.6"",
     ""antd"": ""^5.15.1"",
     ""@tanstack/react-query"": ""^5.59.13""

### Additional Context

_No response_",,
2587443715,6407,"[BUG] Module '""@refinedev/core""' has no exported member 'Link'","### Describe the bug

```
src/components/header/index.tsx:3:25 - error TS2305: Module '""@refinedev/core""' has no exported member 'Link'.

3 import { useNavigation, Link } from ""@refinedev/core"";
                          ~~~~


Found 1 error in src/components/header/index.tsx:3
```


### Steps To Reproduce

Try example invoicer app
```
npm create refine-app@latest -- --example invoicer
```

run build command
```
npm run build
```

### Expected behavior

the invoicer app should sucessfuly builded

### Packages

    ""@refinedev/antd"": ""^5.43.1"",
    ""@refinedev/cli"": ""^2.16.38"",
    ""@refinedev/core"": ""^4.54.1"",
    ""@refinedev/devtools"": ""^1.2.8"",
    ""@refinedev/react-router-v6"": ""^4.6.0"",
    ""@refinedev/strapi-v4"": ""^6.0.8"",
    ""antd"": ""^5.17.0"",
    ""antd-style"": ""^3.6.1"",
    ""axios"": ""^1.6.2"",
    ""react"": ""^18.0.0"",
    ""react-dom"": ""^18.0.0"",
    ""react-input-mask"": ""^2.0.4"",
    ""react-router-dom"": ""^6.8.1""


### Additional Context

The latest changes on the invoicer app that i try is https://github.com/refinedev/refine/commit/ac31926c2e8701ccaf8d6111ade924df35133aab",,
2574179899,6397,[BUG] `strapi-v4` has missing files after swizzling,"### Describe the bug

<img width=""400px"" src='https://github.com/user-attachments/assets/716fdae6-cf7f-45f0-a9bb-f7dc2cca9773' alt='refine swizzle screenshot' />

### Steps To Reproduce

1. create Refine project
2. install ""@refinedev/strapi-v4""
3. run `npm run refine swizzle`
4. select ""@refinedev/strapi-v4""
5. check output

### Expected behavior

following files should be copied to the project directory:
- [transformErrorMessages.ts](https://github.com/refinedev/refine/blob/master/packages/strapi-v4/src/utils/transformErrorMessages.ts)
- [transformHttpError.ts](https://github.com/refinedev/refine/blob/master/packages/strapi-v4/src/utils/transformHttpError.ts)

following files should not be available for swizzle. They are for [""@refinedev/strapi""](https://www.npmjs.com/package/@refinedev/strapi)
- src/providers/strapi-v4/hooks/index.ts
- src/providers/strapi-v4/hooks/upload.t
 

### Packages

## System:
 - OS: macOS 14.5
 - CPU: (10) arm64 Apple M2 Pro
## Binaries:
 - Node: 20.11.0 - ~/.nvm/versions/node/v20.11.0/bin/node
 - Yarn: 1.22.17 - /opt/homebrew/bin/yarn
 - npm: 10.2.4 - ~/.nvm/versions/node/v20.11.0/bin/npm
## Browsers:
 - Chrome: 129.0.6668.91
 - Safari: 17.5

## Refine Packages:
 - @refinedev/cli: 2.16.38
 - @refinedev/core: 4.54.1
 - @refinedev/devtools: 1.2.8
 - @refinedev/kbar: 1.3.12
 - @refinedev/react-router-v6: 4.6.0
 - @refinedev/strapi-v4: 6.0.8

### Additional Context

_No response_",,
2571656990,6395,[BUG] queryOptions has extra type baggage that's unnecessary with ReactQuery,"### Describe the bug

Look at the types at https://github.com/refinedev/refine/blob/0842b702dad2c95966b2a2b49da0a66527bcbea3/packages/core/src/hooks/show/types.ts#L54C1-L58

```ts
  queryOptions?: UseQueryOptions<
    GetOneResponse<TQueryFnData>,
    TError,
    GetOneResponse<TData>
  >;
```

They should be:

```ts
  queryOptions?: UseQueryOptions<
    TQueryFnData,
    TError,
    TData
  >;
```

(This also applies elsewhere to `useTable` and other hooks with a `queryOptions` property)

The problem with the former is they are inconsistent with how ReactQuery defines query types.

For example, if I implement `queryOptions.queryFn`, It won't accept an API that returns type `TQueryFnData`, insisting that it's wrapped in a `{ data: TQueryFnData }` container. However, in ReactQuery, you just return `TQueryFnData` from `queryFn` and ReactQuery itself owns the metadata/lifecycle container, wrapping the returned value in a `QueryObserverBaseResult` which contains a `{ data: TQueryFnData }` property.

As a consequence, the result object is doubly wrapped: `{ data: { data: TQueryFnData }}`!

I can work around this by wrapping the response in a redundant `GetOneResponse`, but this should not be necessary. It would be better if the double wrapping were removed.

### Steps To Reproduce

Implement `queryOptions.queryFn` using options that work in a plain `useQuery` invocation

### Expected behavior

Use of ReactQuery should be a thin wrapper that works along with existing knowledge of the ReactQuery APIs

### Packages

@refinedev/core

### Additional Context

_No response_",,
2557201617,6381,[FEAT] Add a dataprovider using KY,"### Is your feature request related to a problem? Please describe.

Most data providers use of Axios which is considered deprecated by (many/some). See [adios-axios](https://www.adios-axios.com/). Nowadays Native Fetch APIs are widely supported by all big browsers. A thin wrapper like `KY` provides an easy API to make use of functionalities like interceptors.

### Describe alternatives you've considered

_No response_

### Additional context

Axios was once a convenient library that utilized [XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) in web browsers and the [http](https://nodejs.org/api/http.html) module in Node environments. However, in today's modern development landscape, this approach has been surpassed by the native Fetch API, which offers consistent functionality across browsers, Node, and even other environments.

With the adoption of a unified API like Fetch, you can easily eliminate Axios as an additional dependency in your modern codebase, resulting in reduced bundle sizes. Moreover, the Fetch API has undergone full standardization, unlike Axios, which comes with its own set of nuances that often catch developers off-guard. This includes differences in how fetch and Axios handle promise rejection in various scenarios.

Furthermore, certain frameworks, like Next.js, have begun exposing additional features within the Fetch API that may not be readily accessible when using Axios.

Discussion was started here:
https://github.com/refinedev/refine/discussions/6375#discussioncomment-10799548

Issue was opened for better tracking.

### Describe the thing to improve

Add ky support `@refinedev/simple-rest/ky`
Once the simple-rest-ky provider is implemented it might be used as a blueprint for upcoming providers e.g. Strapi 5",,
2557055457,6380,[DOC] Building modules,"### Documentation issue

              Hey @spacewalkingninja I'm not sure why you are trying to build refine inside node modules. If you want to remove the banner, you can search for `<GitHubBanner />` and remove it.

https://refine.dev/docs/guides-concepts/faq/#how-can-i-remove-github-banner

_Originally posted by @BatuhanW in https://github.com/refinedev/refine/issues/6373#issuecomment-2383071727_
            

### Describe the thing to improve

Find an EASY way to edit the refine banner on top. And the menus ((Documentation || Tutorial || Templates || Community)) and pretty much anything thats baked in the core module. 

### Describe the solution (optional)

Currently I am editing the index.mjs after having it unminified on unminify2.com (first tool that worked decently i found on the web) . What I need is an easy way to edit this template. I don't want to be bothered to create thousands of custom files and things, I need fast, easy, reliable code editing like in the good old PHP days.",,
2555171344,6377,[BUG] Queries are not responding to URL parameter changes,"### Discussed in https://github.com/refinedev/refine/discussions/6318

<div type='discussions-op-text'>

<sup>Originally posted by **TomCaserta** September 11, 2024</sup>
Essentially I'm reading over the multitenancy documentation https://refine.dev/docs/guides-concepts/multi-tenancy/ and I've implemented what it suggests:

1. Route parameter called `:tenantId`
2. My data provider uses the `tenantId` found in the meta and sends it to my endpoints via a header

The issue seems to be when I replace the tenantId parameter in the URL it doesn't actually reload the data. 

After looking at the examples it seems it uses the params and the tenant ID as a filter parameter in the multi tenancy strapi example.

This seems to be different to the suggested approach and of course works in that scenario as the param changing causes the query key to change as the filters are changing. As far as I can tell the meta (combinedMeta) is not taken into consideration in the `useList` query key creation, is this intentional?:

https://github.com/refinedev/refine/blob/master/packages/core/src/hooks/data/useList.ts#L238

Is there any way to make this work using route parameters and without specifying a filter on every usage of a useList/useOne/useMany hook?</div>

### Proposed Fix

When generating query and mutation keys, `combinedMeta` should be used instead of `preferredMeta`. This case needs to be done for every data hook to be consistent. A related test case needs to be added.",,
2554170827,6374,[BUG] getOne method doesn't use `meta.gqlVariables` in `@refinedev/hasura`,"### Describe the bug

Trying to pass custom variables other than ID to a query is not working. Here is the code that I have. I am using useForm and what in my getOne query to have extra variable not only the ID. 

  ```ts
  const { formProps: editFormProps, saveButtonProps: editSaveButtonProps } =
    useForm<
      GetFields<UpdateSettingValueMutation>,
      HttpError,
      GetVariables<UpdateSettingValueMutationVariables>
    >({
      action: ""edit"",
      resource: ""settings"",
      id: editingId?.toString(),
      meta: {
        gqlQuery: SETTINGS_WITH_VALUES_DATA_QUERY,
        gqlMutation: UPDATE_SETTING_VALUES_MUTATION,
        gqlVariables: {
          extraValue: 1,
        },
      },
      queryMeta: {
        meta: {
          extraValue: 1,
        },
        gqlVariables: {
          extraValue: 1,
        },
      },
      queryOptions: {
        meta: {
          extraValue: 1,
        },
      },
      mutationMode: ""pessimistic"",
      onMutationSuccess: () => {
        setEditingId(null);
      },
    });
```

My graphql is this:
```gql
export const SETTINGS_WITH_VALUES_DATA_QUERY = gql`
  query SettingsWithValuesDataOne($id: ID!, $extraValue: Int!) {
    setting(id: $id, extraValue: $extraValue) {
        ...SettingsWithValuesDataFields
    }
  }
  ${SETTINGS_WITH_VALUES_DATA_FIELDS},
`;

```

I am not sure if I am missing something from the documentation but i have tried multiple ways as you can see in the above code and nothing seems to be helping it always sends only` variables : {id: ""1""}` , the extraValue i am trying to pass its not there.

### Steps To Reproduce

Test with the code provided

### Expected behavior

Custom variables should be included 

### Packages

- @refinedev/antd

### Additional Context

_No response_",,
2554139614,6373,[DOC] Building modules,"### Documentation issue

I've recently encountered issues building the CORE module, which I am modifying in a medusaJS store I will be launching. 

```

user@instance:~/refinedev/store/node_modules/@refinedev/core$ pnpm build --scope @refinedev/core --scope core

> @refinedev/core@4.53.0 build /home/ubuntu/refinedev/store/node_modules/@refinedev/core
> tsup && node ../shared/generate-declarations.js ""--scope"" ""@refinedev/core"" ""--scope"" ""core""

No input files, try ""tsup <your-file>"" instead
 ELIFECYCLE  Command failed with exit code 1.

```

it's constantly giving me this error, and I do not have this shared folder, neither the generate-declarations.js file thing. I didn't find in the doc's where they are, or how to generate them.

The issue is that I simply need to edit the banner you have on top.

### Describe the thing to improve

Find an EASY way to edit the refine banner on top. 
 

### Describe the solution (optional)

Easy way to edit some simple html/css, just like in the good ol' PHP scriptkiddie days",,
2539784924,6362,[BUG] installation with pnpm + DeleteButton (antd) crashes the app,"### Describe the bug

Installing node modules with pnpm causes including a DeleteButton to crash the app. 

### Steps To Reproduce

1. pnpm install
2. pnpm dev

3. 
```
import { DeleteButton } from ""@refinedev/antd"";

return <>
...
<DeleteButton />
...
<>
```

### Expected behavior

installing with pnpm and using a DeleteButton should't crash the app

### Packages

    ""@refinedev/antd"": ""^5.43.1"",
    ""@refinedev/cli"": ""^2.16.38"",
    ""@refinedev/core"": ""^4.54.1"",
     ""vite"": ""^5.4.7""

### Additional Context

there is no issue when installing with bun. haven't tested with yarn/npm, but can do so if it helps

pnpm -v
9.10.0

<img width=""523"" alt=""image"" src=""https://github.com/user-attachments/assets/37486e3a-c42b-477b-ada5-227ff9bd7820"">
",,
2537334037,6360,[BUG] Multiple Filters not Supported by Supabase Realtime,"### Describe the bug

Right now, Supabase Realtime does not support multiple filters. If used, the live provider for supabase will send an invalid filter payload, causing the realtime request to fail.

### Steps To Reproduce

1. Create any realtime resource
2. Add more than 1 filter to the resource (I was using a useList hook with multiple objects in the filters option)
3. Watch websocket network requests, it will show an error.

### Expected behavior

I think we should either log a warning if we see multiple filters, or naively take the first one? 

### Packages

- supabase realtime v2.30.34 (not latest, but also not fixed in latest)
- @refinedev/supabase 5.9.4

### Additional Context

See here for Refine's implementation, where it is joining each filter with a comma. 

https://github.com/refinedev/refine/blame/8be95d808ae2f3f280ebd015bd95eb04238fe463/packages/supabase/src/liveProvider/index.ts#L67

See here for feature that is being discussed. No real activity it seems.

https://github.com/supabase/realtime/issues/486
https://github.com/supabase/realtime-js/issues/97",,
2533935822,6352,[BUG] `label` and `route` fields of `useMenu().menuItems` shouldn't be deprecated,"### Describe the bug

The `label` and `route` fields in `useMenu().menuItems` were marked as deprecated, but they are not deprecated. This issue was caused by `menuItems` extending from `IResourceItem`, however, `menuItems` populates these fields and handles deprecation of these fields internally.

<img 
width=""150px""
src=""https://github.com/user-attachments/assets/a7626dfa-57b8-4a68-8c56-e4445eaabf4d"" alt=""reproducible example code screenshot"" />


### Steps To Reproduce

use, `useMenu` anywhere in your project and check the deprecation warning.

```tsx
export const Sider = () => {
  const { menuItems } = useMenu();
  menuItems.map((item) => {
    console.log(item.label);
    console.log(item.route);
    item.children.map((child) => {
      console.log(child.label);
      console.log(child.route);
    });
  });

  return <div>{/* ... */}</div>;
};
```


### Expected behavior

The `label` and `route` fields in `useMenu().menuItems` shouldn't be deprecated.

### Packages

## System:
 - OS: macOS 14.5
 - CPU: (10) arm64 Apple M2 Pro
## Binaries:
 - Node: 20.11.0 - ~/.nvm/versions/node/v20.11.0/bin/node
 - Yarn: 1.22.17 - /opt/homebrew/bin/yarn
 - npm: 10.2.4 - ~/.nvm/versions/node/v20.11.0/bin/npm
## Browsers:
 - Chrome: 129.0.6668.58
 - Safari: 17.5

## Refine Packages:
 - @refinedev/antd: 5.43.1
 - @refinedev/cli: 2.16.38
 - @refinedev/core: 4.54.1
 - @refinedev/devtools: 1.2.8
 - @refinedev/react-router-v6: 4.6.0
 - @refinedev/simple-rest: 5.0.8

### Additional Context

_No response_",,
2528589956,6341,[FEAT] export useInvalidateAuthStore or provide similar hooks,"### Is your feature request related to a problem? Please describe.

I am in need of invalidating the users identity state and force a react query refresh. `useInvalidateAuthStore` is not exposed through.

I would like to see this exported, or create hooks that can be used to invalidate the individual queries it invalidates all at once.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

export `useInvalidateAuthStore` or provide similar apis",,
2528465854,6339,[BUG] create refine app uses outdated dependencies,"### Describe the bug

npm create refine-app@latest generates a lot of warnings because it is using outdated dependencies.

Warnings 1:
```
warning @refinedev/cli > marked-terminal@6.3.0: should have been major release. Use 7.0.0
warning @refinedev/cli > temp > rimraf@2.6.3: Rimraf versions prior to v4 are no longer supported
warning @refinedev/cli > jscodeshift > temp > rimraf@2.6.3: Rimraf versions prior to v4 are no longer supported
warning @refinedev/cli > temp > rimraf > glob@7.2.3: Glob versions prior to v9 are no longer supported
warning @refinedev/cli > temp > rimraf > glob > inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
warning eslint > @humanwhocodes/config-array@0.11.14: Use @eslint/config-array instead
warning eslint > file-entry-cache > flat-cache > rimraf@3.0.2: Rimraf versions prior to v4 are no longer supported
warning eslint > file-entry-cache > flat-cache > rimraf > glob@7.2.3: Glob versions prior to v9 are no longer supported
warning eslint > @humanwhocodes/config-array > @humanwhocodes/object-schema@2.0.3: Use @eslint/object-schema instead
warning @graphql-codegen/cli > @graphql-codegen/client-preset > @graphql-codegen/visitor-plugin-common > @graphql-tools/relay-operation-optimizer > @ardatan/relay-compiler > glob@7.2.3: Glob versions prior to v9 are no longer supported
warning @graphql-codegen/cli > @graphql-codegen/client-preset > @graphql-codegen/visitor-plugin-common > @graphql-tools/relay-operation-optimizer > @ardatan/relay-compiler > babel-preset-fbjs > @babel/plugin-proposal-class-properties@7.18.6: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-class-properties instead.
warning @graphql-codegen/cli > @graphql-codegen/client-preset > @graphql-codegen/visitor-plugin-common > @graphql-tools/relay-operation-optimizer > @ardatan/relay-compiler > babel-preset-fbjs > @babel/plugin-proposal-object-rest-spread@7.20.7: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-object-rest-spread instead.
warning "" > @refinedev/core@4.54.1"" has unmet peer dependency ""@tanstack/react-query@^4.10.1"".
warning "" > @refinedev/devtools@1.2.8"" has unmet peer dependency ""@refinedev/devtools-server@1.1.36"".
warning ""@refinedev/kbar > kbar > react-virtual@2.10.4"" has incorrect peer dependency ""react@^16.6.3 || ^17.0.0"".
warning "" > @refinedev/nestjs-query@1.3.3"" has unmet peer dependency ""gql-query-builder@^3.5.5"".
warning "" > @refinedev/nestjs-query@1.3.3"" has unmet peer dependency ""graphql-request@^5.2.0"".
warning "" > graphql-ws@5.16.0"" has unmet peer dependency ""graphql@>=0.11 <=16"".
warning "" > graphql-tag@2.12.6"" has unmet peer dependency ""graphql@^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning "" > @refinedev/mui@5.21.0"" has unmet peer dependency ""dayjs@^1.10.7"".
warning "" > @mui/x-data-grid@6.20.4"" has unmet peer dependency ""@mui/system@^5.4.1"".
```
Warnings 2:
```
warning ""@graphql-codegen/cli > @graphql-codegen/plugin-helpers@5.0.4"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/cli > @graphql-tools/url-loader > @graphql-tools/executor-legacy-ws@1.1.0"" has unmet peer dependency ""graphql@^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"".
warning ""@graphql-codegen/cli > @graphql-codegen/client-preset > @graphql-codegen/gql-tag-operations@4.0.9"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/cli > @graphql-codegen/client-preset > @graphql-codegen/add@5.0.3"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning "" > @graphql-codegen/typescript@4.0.9"" has unmet peer dependency ""graphql@^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/cli > @graphql-codegen/client-preset > @graphql-tools/documents@1.0.1"" has unmet peer dependency ""graphql@^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"".
warning "" > @graphql-codegen/typescript-operations@4.2.3"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/cli > @graphql-codegen/client-preset > @graphql-codegen/visitor-plugin-common@5.3.1"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/cli > @graphql-tools/graphql-file-loader > @graphql-tools/import@7.0.1"" has unmet peer dependency ""graphql@^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"".
warning ""@graphql-codegen/cli > @graphql-tools/url-loader > @graphql-tools/delegate > @graphql-tools/batch-execute@9.0.4"" has unmet peer dependency ""graphql@^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"".
warning ""@graphql-codegen/cli > @graphql-codegen/client-preset > @graphql-codegen/typed-document-node@5.0.9"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/cli > @graphql-codegen/client-preset > @graphql-codegen/typescript > @graphql-codegen/schema-ast@4.1.0"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/cli > @graphql-codegen/client-preset > @graphql-codegen/visitor-plugin-common > @graphql-tools/optimize@2.0.0"" has unmet peer dependency ""graphql@^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"".
warning ""@graphql-codegen/cli > @graphql-codegen/client-preset > @graphql-codegen/visitor-plugin-common > @graphql-tools/relay-operation-optimizer@7.0.1"" has unmet peer dependency ""graphql@^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"".
warning ""@graphql-codegen/cli > @graphql-tools/url-loader > @graphql-tools/delegate > @graphql-tools/executor@1.3.1"" has unmet peer dependency ""graphql@^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"".
warning ""@graphql-codegen/import-types-preset > @graphql-codegen/visitor-plugin-common > @graphql-tools/relay-operation-optimizer > @ardatan/relay-compiler@12.0.0"" has unmet peer dependency ""graphql@*"".
warning "" > @graphql-codegen/import-types-preset@3.0.0"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/import-types-preset > @graphql-codegen/add@3.2.3"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/import-types-preset > @graphql-codegen/plugin-helpers@3.1.2"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/import-types-preset > @graphql-codegen/visitor-plugin-common@2.13.1"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/import-types-preset > @graphql-codegen/plugin-helpers > @graphql-tools/utils@9.2.1"" has unmet peer dependency ""graphql@^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"".
warning ""@graphql-codegen/import-types-preset > @graphql-codegen/visitor-plugin-common > @graphql-tools/utils@8.13.1"" has unmet peer dependency ""graphql@^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"".
warning ""@graphql-codegen/import-types-preset > @graphql-codegen/visitor-plugin-common > @graphql-tools/optimize@1.4.0"" has unmet peer dependency ""graphql@^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"".
warning ""@graphql-codegen/import-types-preset > @graphql-codegen/visitor-plugin-common > @graphql-codegen/plugin-helpers@2.7.2"" has unmet peer dependency ""graphql@^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"".
warning ""@graphql-codegen/import-types-preset > @graphql-codegen/visitor-plugin-common > @graphql-tools/relay-operation-optimizer@6.5.18"" has unmet peer dependency ""graphql@^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0"".
```

### Steps To Reproduce

run `npm create refine-app@latest` and watch the output

### Expected behavior

Very few warnings

### Packages

create-refine-app

### Additional Context

_No response_",,
2527143296,6335,[BUG] Can't run using deno and manual installation,"### Describe the bug

Cli doesn't work

### Steps To Reproduce

deno run -A --node-modules-dir npm:@refinedev/cli dev

```
error: Uncaught Error: ./package.json not found
    at $ (file:///workspace/frontend/node_modules/.deno/@refinedev+cli@2.16.38_1/node_modules/@refinedev/cli/dist/cli.cjs:1:1192)
    at L (file:///workspace/frontend/node_modules/.deno/@refinedev+cli@2.16.38_1/node_modules/@refinedev/cli/dist/cli.cjs:1:1305)
    at h (file:///workspace/frontend/node_modules/.deno/@refinedev+cli@2.16.38_1/node_modules/@refinedev/cli/dist/cli.cjs:2:3020)
    at Uo (file:///workspace/frontend/node_modules/.deno/@refinedev+cli@2.16.38_1/node_modules/@refinedev/cli/dist/cli.cjs:2:7920)
    at Yn (file:///workspace/frontend/node_modules/.deno/@refinedev+cli@2.16.38_1/node_modules/@refinedev/cli/dist/cli.cjs:39:9132)
    at Object.<anonymous> (file:///workspace/frontend/node_modules/.deno/@refinedev+cli@2.16.38_1/node_modules/@refinedev/cli/dist/cli.cjs:39:9394)
    at Object.<anonymous> (file:///workspace/frontend/node_modules/.deno/@refinedev+cli@2.16.38_1/node_modules/@refinedev/cli/dist/cli.cjs:41:4)
    at Module._compile (node:module:736:34)
    at Object.Module._extensions..js (node:module:757:11)
    at Module.load (node:module:655:32)
```

### Expected behavior

Cli runs dev server

### Packages

- deno 1.46.3
- npm:@refinedev/cli@^2.16.38
- npm:@refinedev/core@^4.54.1
- npm:@types/react@^18.3.5
- npm:@types/react-dom@^18.3.0
- npm:react@^18.3.1
- npm:react-dom@^18.3.1
- npm:vite@^5.4.5

### Additional Context

_No response_",,
2524155596,6329,[FEAT] Create a `<Link />` component to navigate to a given resource.,"### Is your feature request related to a problem? Please describe.

I want to navigate to the list page of the `posts` resource, to do that I need to do something like this:

```tsx
import { useNavigation } from ""@refinedev/core"";
import { Link } from ""react-router-dom"";

export const MyComponent = () => {
  const { listUrl } = useNavigation();

  return <Link to={listUrl(""posts"")}>Go to posts list</Link>;
};
```

It would be easier to use if the `<Link />` component accepts `resource` as a prop and resolves the path automatically.


### Describe the thing to improve

The `<Link />` component can take a `go` prop and use `useGo` to create the path. This way, I can use all `useGo` features and easily handle resource links.

```tsx
import { Link } from ""@refinedev/core"";

export const MyComponent = () => {
  return (
    <Link
      go={{
        to: {
          resource: ""posts"",
          action: ""list"",
        },
        query: {
          filters: [
            {
              operator: ""eq"",
              value: ""published"",
              field: ""status"",
            },
          ],
        },
      }}
    >
      Go to the posts list
    </Link>
  );
};
```",,
2522177055,6326,[FEAT] Notification types,"### Is your feature request related to a problem? Please describe.

It's not possible to make a simple plain notification (in typescript) because useNotification requires `type: ""success"" | ""error"" | ""progress""`.

A plain notification would be needed when displaying a message or information. 

It seems like the type restriction actually only is in the type definition.

### Describe alternatives you've considered

Adding `// @ts-expect-error type` before the property makes it possible to override the value with any string. Omitting the `type` property or setting the `type` property to an empty string `""""` seems to make a simple plain notification. Setting the `type` to `""warning""` or `""info""` seems to work fine as well. 

```ts
const { open } = useNotification();

open?.({
  message: ""A plain notification"",
  // @ts-expect-error type
  type: """"
})
```

### Additional context

_No response_

### Describe the thing to improve

Allow *no* or *plain* type as well as *info* and *warning* for notification options.

This can probably be done by extending the type of the `type` property to accept additional types, including no type.
It would be preferable if the `type` property also could be omitted to default to a plain notification.

```diff
interface OpenNotificationParams {
  key?: string;
  message: string;
+ type?: """" | ""success"" | ""info"" | ""warning"" | ""error"" | ""progress"";
- type: ""success"" | ""error"" | ""progress"";
  description?: string;
  cancelMutation?: () => void;
  undoableTimeout?: number;
}
```",,
2518858801,6316,[BUG] SubmitOnEnter not working in antd useForms,"### Describe the bug

submit on enter doesn't work for antd.

### Steps To Reproduce

1. Go to UseForm dictionary,
2. Write refineCoreProps
3. undefined value type for refineCore Propes
4. Actual ui form don't respond enter key. 

Actaul code in documentaion Below;

submitOnEnter

```
When it's true, submitOnEnter will submit the form when the enter key is pressed. It can be used to prevent the user from accidentally leaving the page. It is false by default

useForm({
  refineCoreProps: {
    submitOnEnter: true,
  },
});
```

my code block is below
```

import { IResourceComponentsProps, useTranslation, useGetIdentity, useNotification  } from ""@refinedev/core"";
import { Create, TextField, useForm, useSelect } from ""@refinedev/antd"";
import { DatePicker, Form, Input, InputNumber, Select } from ""antd"";
import React from ""react"";

import { Permission, Role } from ""@refinedev/appwrite"";

import { appwriteClient, appwrite_function, account } from ""../../utility"";


import { linkDocumentId } from ""../../AppwriteConf"";

export const LinksCreate: React.FC<IResourceComponentsProps> = () => {
  
    const { formProps, saveButtonProps  } = useForm({
        refineCoreProps: {
            submitOnEnter: true,
        },
        meta: {
            writePermissions: [Permission.write(Role.user(identity!.$id))], // müsteri id'si basılmalı
            readPermissions: [Permission.read(Role.user(identity!.$id))], 
        },
        successNotification: (data, values, resource) => {
        return {
            message: `Link Oluşturma Başarılı`,
            type: ""success"",
        };
        },
        // it will be called when the form is submitted with errors
        // By setting it to `false`, you can disable the notification.
        errorNotification: (error, values, resource) => {
        return {
            message: `Link Oluşturma Başarısız`,
            description: `Lütfen yönetinizi bildirin.`,
            type: ""error"",
        };
        },
        onMutationSuccess : async (data, variables, context, isAutoSave) => {
            console.log(data.data.id); // link id'li nesneye permission yaz
            // customer.data?.data.at(0).id

            console.log(""data"")
            console.log(data)

            console.log(""variables"")
            console.log(variables)

            console.log(""customer id"");
            console.log(data.data.customers.$id)

            // documentId, collectionId, roleUserId

            let jsonBody = `{""documentId"":""${data.data.id}"", ""collectionId"":""${linkDocumentId}"", ""roleUserId"":""${data.data.customers.$id}""}`

            console.log(jsonBody);
            var result = await appwrite_function.createExecution(""66c726de00252fd5c7b6"", jsonBody);

            if (result.response != ""Doküman Update Başarılı."") {
                open?.({
                type: ""error"",
                message: ""Linkler Müşterinize tanımlanamadı, Lütfen müşterinize başvurun."",
                description: result.response.toString(),
                key: ""unique-id"",
                });

            } else {
                open?.({
                type: ""success"",
                message: ""Linkler müşterinize tanımlandı."" ,
                //description: ""I <3 Refine"",
                key: ""unique-id"",
                });
            }
        }
    });
...
```

### Expected behavior

submit on enter trigger sumbit event

### Packages

@refinedev/antd

### Additional Context

_No response_",,
2515980503,6315,[BUG] x.data.filter is not a function . Error in useImport hook onFinish.,"### Describe the bug

I am using useImport hook, In which I am getting error : x.data.filter is not a function .
![Screenshot from 2024-09-10 15-20-51](https://github.com/user-attachments/assets/974a05af-9466-404d-acfc-53e5d144369e)
And the format of the api response is : 
{
    ""errors"": [
        {
            ""user_attrs"": {
                ""email"": ""ali.@dskjsd.ae"",
                ""first_name"": ""Alireza"",
                ""last_name"": ""Aeivaz "",
                ""username"": ""Alirezai"",
                ""gender"": ""male"",
                ""dob"": ""12/09/1999"",
                ""custom_fields"": {},
                ""phone"": ""+9717774706250"",
                ""role"": ""customer"",
                ""join_state"": ""pending"",
                ""emirates_id"": ""784-1996-2323434-7"",
                ""national_id"": ""784-1996-2323434-7"",
            },
            ""error"": ""Validation failed: Emirates has already been taken, Username has already been taken""
        },
        {
            ""user_attrs"": {
                ""email"": ""daisy@sdsddsd.com"",
                ""first_name"": "" Jean"",
                ""last_name"": ""Cabreros"",
                ""username"": ""Daisy"",
                ""gender"": ""female"",
                ""dob"": ""02/05/1999"",
                ""custom_fields"": {},
                ""phone"": ""+97180343828282"",
                ""role"": ""customer"",
                ""join_state"": ""pending"",
                ""emirates_id"": ""784-1989-8171999-4"",
                ""national_id"": ""784-1989-8171999-4"",
            },
            ""error"": ""Validation failed: Emirates has already been taken, Username has already been taken""
        }
    ],
    ""users"": [
        {
            ""sign_in_count"": 0,
            ""current_sign_in_at"": null,
            ""last_sign_in_at"": null,
            ""role"": ""customer"",
            ""settings"": {},
            ""email_verified"": false,
            ""phone_verified"": true,
            ""join_type"": ""import"",
            ""join_state"": ""pending"",
            ""marital_status"": null,
            ""nationality"": null,
            ""first_sign_in_at"": null,
            ""national_id_status"": ""pending"",
            ""image_url"": null,
            ""user_subscriptions"": [],
            ""name"": ""Essam Moue""
        },
        {
            ""gender"": ""male"",
            ""dob"": ""1971-04-19"",
            ""custom_fields"": {},
            ""id"": ""8e32f2e8-c98f-4caf-add5-28c7034d83d3"",
            ""sign_in_count"": 0,
            ""current_sign_in_at"": null,
            ""last_sign_in_at"": null,
            ""role"": ""customer"",
            ""deleted_at"": null,
            ""settings"": {},
            ""email_verified"": false,
            ""phone_verified"": true,
            ""join_type"": ""import"",
            ""join_state"": ""pending"",
            ""marital_status"": null,
            ""nationality"": null,
            ""first_sign_in_at"": null,
            ""national_id_type"": ""emirates_id"",
            ""national_id_status"": ""pending"",
            ""image_url"": null,
            ""user_subscriptions"": [],
        }
    ]
}
Should I need to change the response format to get data in Onfinish ? Please provide the correct format of responsive for useImport hook usage. 

### Steps To Reproduce

Mentioned in the description

### Expected behavior

Mentioned in the description

### Packages

""@refinedev/antd""

### Additional Context

_No response_",,
2514638500,6313,[FEAT] Typing for i18next is too rigid,"### Describe the bug

We are using i18next for our translations, and the Refine i18n provider uses a generic interface for the translate function.

i18next allows for array keys but that is currently incompatible with the current i18nProvider translate function type.

### Steps To Reproduce

N/A

### Expected behavior

We should be able to handle translations via the refine hook with array key translations

### Packages

- @refinedev/core

### Additional Context

_No response_",,
2512477224,6308,[FEAT] `@refinedev/nextjs-router` and others should allow configuration,"### Is your feature request related to a problem? Please describe.

Trying to use refine without material ui or antd or anything of the sort for personal taste reasons (and a big reason why I adopted refine).
But I found it quite difficult to actually develop a proper customized solution on the most surface level.. For example it is impossible to sufficiently customize the `AuthPage` without swizzling, but doing the same for the `Link` of the `routerProvider` is plain impossible in conventional methods 🤷🏻‍♂️ 

### Describe alternatives you've considered

```ts
import routerProvider from ""@refinedev/nextjs-router"";
import {MyLink} from ""@components/my-link"";

routerProvider.Link = MyLink as any
```


### Additional context

_No response_

### Describe the thing to improve

```ts
makeProvider({...})
```",,
2510011808,6306,[BUG] @refinedev/react-hook-form useForm not detecting changes correctly,"### Describe the bug

I have been debugging the functionality for `warnWhenUnsavedChanges` and I found that `react-hook-form` only ever emits a type with subscription event objects on blur?

At https://github.com/refinedev/refine/blob/master/packages/react-hook-form/src/useForm/index.ts#L223-L230 your checking the type, which causes value changes to never trigger the `onValuesChange` callback and so the unsaved changed warn never works.

### Steps To Reproduce

1. Create a shadcn based form with `react-hook-form` and `warnWhenUnsavedChanges` enabled. This should be inside a dialog.
2. Add a breakpoint on that code.
3. Find that it never triggers b/c the state never includes a `type` when `value` is passed.

### Expected behavior

`warnWhenUnsavedChanges` should function correctly with state change detection enabling it.

### Packages

- @refinedev/core@4.54.0
- @refinedev/react-hook-form@4.9.0

### Additional Context

_No response_",,
2504985741,6296,[BUG] disable normalizeData axiosInstans,"### Describe the bug

I use strapi-v4 documentation plugin for creating swagger 3.0 docs, the generated documentation describes responses from strapi in the format: `id?: number;
  attributes?: attributes;`
![Screenshot 2024-09-04 134914](https://github.com/user-attachments/assets/93927e2b-0c4a-455d-9a68-357aaf26098f)

  but in normalizeData in DataProvider I get a different format without attributes
![Screenshot 2024-09-04 133957](https://github.com/user-attachments/assets/24781638-4568-4136-9162-3ab5b3d5e28d)


Because of this I can't use the generated documentation


### Steps To Reproduce

1. setup refine project with strapi v4
2. create strapi project and endpoint with data
3. in strapi project generate docs
4. generate types in refine project with swagger-typescript-api
5. try to use useList to fetch data from strapi
6. check types of data from useList

### Expected behavior

ability to disable normalizeData

### Packages

 ""@refinedev/cli"": ""^2.16.21"",
   ""@refinedev/core"": ""^4.47.1"",
    ""@refinedev/devtools"": ""^1.1.32"",
    ""@refinedev/kbar"": ""^1.3.6"",
    ""@refinedev/mui"": ""^5.14.4"",
    ""@refinedev/nextjs-router"": ""^6.0.0"",
    ""@refinedev/react-hook-form"": ""^4.8.14"",
    ""@refinedev/strapi-v4"": ""^6.0.1"",
 ""swagger-typescript-api"": ""^13.0.22"",
    ""typescript"": ""^5.5.4""
backend-strapi: 
 ""@strapi/plugin-documentation"": ""^4.25.9"",
    ""@strapi/strapi"": ""4.25.9"",



### Additional Context

_No response_",,
2502353911,6293,[BUG] UseGetIdentity is not work on App page.,"### Describe the bug

Hey, I like your project. I have developing this platform but i want to use role based authentication in refine.dev so i have used useGetIdentity hook but it gives following error.

![image](https://github.com/user-attachments/assets/8d8cf088-7e33-41bb-a292-475e0d1ad825)

![image](https://github.com/user-attachments/assets/a0207a3c-397a-46fc-a87b-6fcb11e8d159)

Gives Following Error.
Uncaught Error: No QueryClient set, use QueryClientProvider to set one
    useQueryClient http://localhost:3000/node_modules/.vite/deps/chunk-FPORH5AE.js?v=f8d9dc3e:6111
    useBaseQuery http://localhost:3000/node_modules/.vite/deps/chunk-FPORH5AE.js?v=f8d9dc3e:6220
    useQuery http://localhost:3000/node_modules/.vite/deps/chunk-FPORH5AE.js?v=f8d9dc3e:6268
    $r http://localhost:3000/node_modules/.vite/deps/chunk-FPORH5AE.js?v=f8d9dc3e:8683
    App http://localhost:3000/src/App.tsx?t=1725354551900:60
    renderWithHooks http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:11568
    mountIndeterminateComponent http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:14946
    beginWork http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:15934
    beginWork$1 http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:19781
    performUnitOfWork http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:19226
    workLoopSync http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:19165
    renderRootSync http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:19144
    recoverFromConcurrentError http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:18764
    performSyncWorkOnRoot http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:18907
    flushSyncCallbacks http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:9135
    flushSync http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:18987
    scheduleRefresh http://localhost:3000/node_modules/.vite/deps/chunk-PPVFY42G.js?v=f8d9dc3e:20032
    performReactRefresh http://localhost:3000/@react-refresh:267
    performReactRefresh http://localhost:3000/@react-refresh:256
[chunk-FPORH5AE.js:6111:11](http://localhost:3000/node_modules/.vite/deps/chunk-FPORH5AE.js?v=f8d9dc3e)


### Steps To Reproduce

1. I have wrote useGetIdentity hook to App.ts.
2. Gives above error. 

### Expected behavior

Getting User information from my appwrite. it works well on other components but it is not work App.tsx. I want to show which resources is used which user 
![image](https://github.com/user-attachments/assets/2dbdcce9-7a96-45f7-a6f0-bb11697bde56)


### Packages

@refinedev/core

### Additional Context

_No response_",,
2500318687,6290,[BUG],"### Describe the bug

Button disabled but it is working as it is 

### Steps To Reproduce

![image](https://github.com/user-attachments/assets/5db8235a-5254-4192-af50-5f441a21667e)


here the button is button but its working as its 



### Expected behavior


and this scenerios in case is i have a disabled button on edit but it is navigating and editing 

---> https://example.mui.admin.refine.dev/stores/2/edit 

EditButton in refine/mui --> gives this 

### Packages

{
  ""name"": ""ri-client"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""type"": ""module"",
  ""dependencies"": {
    ""@emotion/react"": ""^11.8.2"",
    ""@emotion/styled"": ""^11.8.1"",
    ""@mui/icons-material"": ""^5.8.3"",
    ""@mui/lab"": ""^5.0.0-alpha.85"",
    ""@mui/material"": ""^5.8.6"",
    ""@mui/x-data-grid"": ""^6.6.0"",
    ""@refinedev/cli"": ""^2.16.21"",
    ""@refinedev/core"": ""^4.47.1"",
    ""@refinedev/devtools"": ""^1.1.32"",
    ""@refinedev/kbar"": ""^1.3.6"",
    ""@refinedev/mui"": ""^5.14.4"",
    ""@refinedev/react-hook-form"": ""^4.8.14"",
    ""@refinedev/react-router-v6"": ""^4.5.5"",
    ""@refinedev/simple-rest"": ""^5.0.1"",
    ""axios"": ""^1.7.5"",
    ""dayjs"": ""^1.11.13"",
    ""react"": ""^18.0.0"",
    ""react-dom"": ""^18.0.0"",
    ""react-hook-form"": ""^7.30.0"",
    ""react-router-dom"": ""^6.8.1""
  },
  ""devDependencies"": {
    ""@types/node"": ""^18.16.2"",
    ""@types/react"": ""^18.0.0"",
    ""@types/react-dom"": ""^18.0.0"",
    ""@typescript-eslint/eslint-plugin"": ""^5.57.1"",
    ""@typescript-eslint/parser"": ""^5.57.1"",
    ""@vitejs/plugin-react"": ""^4.0.0"",
    ""eslint"": ""^8.38.0"",
    ""eslint-plugin-react-hooks"": ""^4.6.0"",
    ""eslint-plugin-react-refresh"": ""^0.3.4"",
    ""typescript"": ""^5.4.2"",
    ""vite"": ""^4.3.1""
  },
  ""scripts"": {
    ""dev"": ""refine dev"",
    ""build"": ""tsc && refine build"",
    ""start"": ""refine start"",
    ""refine"": ""refine""
  },
  ""browserslist"": {
    ""production"": [
      "">0.2%"",
      ""not dead"",
      ""not op_mini all""
    ],
    ""development"": [
      ""last 1 chrome version"",
      ""last 1 firefox version"",
      ""last 1 safari version""
    ]
  },

}


### Additional Context

_No response_",,
2498730919,6289,[BUG]Unable to populate data using useList with GraphQL in Refine - data remains undefined,"### Describe the bug

0

I'm working on a React application using the Refine framework along with GraphQL. I'm trying to insert mock data into a component using the useList hook. The mock data should be fetched from a GraphQL resource (dealStages) that I learned about in a recent YouTube tutorial.

However, I'm encountering an issue where the data variable remains undefined, and I'm unable to retrieve any data. Below is the relevant part of my code:

import { DASHBOARD_DEALS_CHART_QUERY } from '@/graphql/queries';
import { mapDealsData } from '@/utilities/helpers';
import { Area, AreaConfig } from '@ant-design/plots';
import { useList, HttpError } from ""@refinedev/core"";
import React from 'react';

const DealsChart = () => {
  // Use the useList from refine that enables fetching data from our API:
  const { data } = useList({
    resource: 'dealStages',
    meta: {
      gqlQuery: DASHBOARD_DEALS_CHART_QUERY,
    },
  });

  console.log(data);

  const config: AreaConfig = {
    data: [],
  };

  const dealData = React.useMemo(() => {
    return mapDealsData(data?.data);
  }, [data?.data]);

  // Rest of the component...
};

And here's the DASHBOARD_DEALS_CHART_QUERY:

export const DASHBOARD_DEALS_CHART_QUERY = gql`
  query DashboardDealsChart(
    $filter: DealStageFilter!
    $sorting: [DealStageSort!]
    $paging: OffsetPaging
  ) {
    dealStages(filter: $filter, sorting: $sorting, paging: $paging) {
      nodes {
        id
        title
        dealsAggregate {
          groupBy {
            closeDateMonth
            closeDateYear
          }
          sum {
            value
          }
        }
      }
      totalCount
    }
  }
`;

Issue:

The data variable remains undefined when I log it, which means that my component doesn't receive any data to work with. Questions:

Is there something I'm missing in the way I'm using useList with GraphQL in Refine? Could there be an issue with the GraphQL query, or should I be passing additional parameters to the useList hook? What could be the reason for the data not being fetched properly, and how can I resolve it? If there's any other information that might be helpful, please let me know. Thanks in advance for your assistance!



### Steps To Reproduce

run the app
wait  untill you go back to login page due to auth error. 
Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: [""auth"",""identity""]

### Expected behavior

show list of element from graphql mock data. 
( i hace checke the query inb the graphql playground and its working and fetching the data there.) 

### Packages

'@refinedev/core

### Additional Context

_No response_",,
2496609737,6288,[BUG] Module import error when using with @refinedev/chakra-ui and Next.js.,"### Describe the bug

Hello.

Following the documentation at the this [Link](https://refine.dev/docs/ui-integrations/chakra-ui/introduction/) in a new NextJS project, an issue occurs while setting up the theme for ‘ChakraProvider’.

It uses the same source code as the documentation, so there is no source code to attach.

> Unhandled Runtime Error
> Error: Could not find the module ""/{PROJECT_PATH}/node_modules/@refinedev/chakra-ui/dist/index.mjs#RefineThemes#Blue"" in the React Client Manifest. This is probably a bug in the React Server Components bundler.

### Steps To Reproduce

-

### Expected behavior

It should behave normally based on the colour of the Theme entered, such as `<ChakraProvider theme={RefineThemes.Blue}>`.

### Packages

```
  ""dependencies"": {
    ""@chakra-ui/react"": ""^2.8.2"",
    ""@refinedev/chakra-ui"": ""^2.32.0"",
    ""@refinedev/cli"": ""^2.16.37"",
    ""@refinedev/core"": ""^4.54.0"",
    ""@refinedev/devtools"": ""^1.2.7"",
    ""@refinedev/nextjs-router"": ""^6.1.0"",
    ""@refinedev/react-hook-form"": ""^4.9.0"",
    ""@refinedev/react-table"": ""^5.6.13"",
    ""@tabler/icons-react"": ""^3.14.0"",
    ""@tanstack/react-table"": ""^8.20.5"",
    ""next"": ""14.2.7"",
    ""react"": ""^18"",
    ""react-dom"": ""^18"",
    ""react-hook-form"": ""^7.53.0""
  },
  ""devDependencies"": {
    ""@types/node"": ""^20"",
    ""@types/react"": ""^18"",
    ""@types/react-dom"": ""^18"",
    ""cross-env"": ""^7.0.3"",
    ""eslint"": ""^8"",
    ""eslint-config-next"": ""14.2.7"",
    ""typescript"": ""^5""
  },
```

### Additional Context

_No response_",,
2471831585,6265,[BUG] `useTable` from `@refinedev/react-table` causes infinite rendering,"### Describe the bug

I was trying to create a list view following up the [example](https://refine.dev/docs/packages/tanstack-table/introduction/#usage) of `useTable`. However, when I got to the page, the page was rendering infinitely as the following:

![github-issue-reproduction](https://github.com/user-attachments/assets/e3440e1e-3f1f-4db7-95d1-6c0ace6934df)

It seems like the `tableQuery`'s status remains its fetchStatus as ""fetching"", but there is no calling to the data provider's `getList` client action, and the data remains `undefined`, so no data can be displayed.

![image](https://github.com/user-attachments/assets/0077a1ab-29f9-4c20-9538-5f84758ca9ea)

### Steps To Reproduce

My code is mostly the same with the usage [example](https://refine.dev/docs/packages/tanstack-table/introduction/#usage). The difference is it is built on top of Next.js's app routing.

Here is my Refine's layout:

```ts
<Refine
  routerProvider={routerProvider}
  dataProvider={DataProviderClient}
  authProvider={authProvider}
  notificationProvider={useNotificationProvider}
  resources={[
    {
       name: ""users"",
       list: ""users"",
       create: ""users/create"",
       edit: ""users/:id/edit"",
       show: ""users/:id"",
    },
  ]}
  options={{
    syncWithLocation: true,
    warnWhenUnsavedChanges: true,
    useNewQueryKeys: true,
  }}
>
  {children}
</Refine>
```

Here is my page at `/src/app/users/page.tsx`

```ts
""use client"";

import { HStack, Table, TableContainer, Tbody, Td, Th, Thead, Tr } from ""@chakra-ui/react"";
import { ColumnFilter } from ""@components/DataDisplay/ColumnFilter"";
import { Pagination } from ""@components/Pagination"";
import { capitalize } from ""@lib/helpers/string.helper"";
import { DateField, EditButton, List, ShowButton, TagField, TextField } from ""@refinedev/chakra-ui"";
import { useTable } from ""@refinedev/react-table"";
import { ColumnDef, flexRender } from ""@tanstack/react-table"";
import { useMemo } from ""react"";
import { UserProps } from ""./schema/user.schema"";

const LIST_PROPS_AS_TEXT = [""name"", ""email""];

export default function UsersPage() {
  const columns = useMemo<ColumnDef<UserProps>[]>(
    () => [
      {
        id: ""_id"",
        header: ""ID"",
        accessorKey: ""_id"",
        meta: {
          filterOperator: ""eq"",
        },
      },
      ...LIST_PROPS_AS_TEXT.map((field) => ({
        id: field,
        header: capitalize(field),
        accessorKey: field,
      })),
      {
        id: ""roles"",
        header: ""Roles"",
        accessorKey: ""roles"",
        cell: (props) => {
          return (
            <HStack>
              {(props.getValue() as string[]).map((role: string, index) => (
                <TagField key={index} value={role} />
              ))}
            </HStack>
          );
        },
      },
      {
        id: ""createdAt"",
        header: ""Created At"",
        accessorKey: ""createdAt"",
        cell: (props) => <DateField value={props.getValue() as string} format=""HH:mm DD/MM/YYYY"" />,
      },
      {
        id: ""actions"",
        header: ""Actions"",
        accessorKey: ""_id"",
        cell: (props) => {
          return (
            <HStack>
              <EditButton recordItemId={props.getValue() as string} />
              <ShowButton recordItemId={props.getValue() as string} />
            </HStack>
          );
        },
      },
    ],
    [],
  );

  const {
    getHeaderGroups,
    getRowModel,
    refineCore: { tableQuery, pageCount, current, setCurrent },
  } = useTable<UserProps>({ columns });

  console.log(""🚀 ~ UsersPage ~ Render"", tableQuery);
  const total = tableQuery?.data?.total ?? 0;

  return (
    <List>
      <p>Total: {total}</p>
      <TableContainer marginTop={12}>
        <Table variant=""simple"">
          <Thead>
            {getHeaderGroups().map((headerGroup) => {
              return (
                <Tr key={headerGroup.id}>
                  {headerGroup.headers.map((header) => {
                    return (
                      <Th key={header.id}>
                        {!header.isPlaceholder && (
                          <HStack spacing={2}>
                            <TextField
                              value={flexRender(
                                header.column.columnDef.header,
                                header.getContext(),
                              )}
                            />
                            <ColumnFilter<UserProps> column={header.column} />
                          </HStack>
                        )}
                      </Th>
                    );
                  })}
                </Tr>
              );
            })}
          </Thead>
          <Tbody>
            {getRowModel().rows.map((row) => {
              return (
                <Tr key={row.id}>
                  {row.getVisibleCells().map((cell) => {
                    return (
                      <Td key={cell.id}>
                        {flexRender(cell.column.columnDef.cell, cell.getContext())}
                      </Td>
                    );
                  })}
                </Tr>
              );
            })}
          </Tbody>
        </Table>
      </TableContainer>
      <Pagination current={current} pageCount={pageCount} setCurrent={setCurrent} />
    </List>
  );
}
```

### Expected behavior

- I expect to have the data rendered when visiting the page.

### Packages

├── next@14.2.5
├── react@18.3.1
├── react-dom@18.3.1
├── @refinedev/react-table@5.6.13
├── @tanstack/react-table@8.20.1
├── @refinedev/core@4.54.0
├── @refinedev/nextjs-router@6.1.0
├── @refinedev/chakra-ui@2.32.0
├── @chakra-ui/react@2.8.2


### Additional Context

Btw, I saw in the source code that it may pass an empty array `[]` to the TanStack's `reactTable` [here](https://github.com/refinedev/refine/blob/4baf62f6c56dacc6a4a749f3720b94a139fd9b18/packages/react-table/src/useTable/index.ts#L91).

Wondering if it has any effect on the infinite rendering of `useTable`. Because there was a TanStack's [issue](https://github.com/TanStack/table/issues/4240) that is quite similar to it.
",,
2470666738,6264,[BUG] Resource routes using path param other than id not being substituted in URL,"### Describe the bug

We would like to route based on a unique slug using react router and the refine resource definitions rather than the ids to have more readable URLs. When we try and use a resource path such as `show: ""/publishers/show/:handle""` it doesn't substitute the handle field but rather puts `:handle` directly in the URL.

Do Refine resources only accept the `:id` path param?

### Example App.tsx after bootstrap
```
import { Authenticated, GitHubBanner, Refine } from ""@refinedev/core"";
import { DevtoolsPanel, DevtoolsProvider } from ""@refinedev/devtools"";
import { RefineKbar, RefineKbarProvider } from ""@refinedev/kbar"";

import {
  AuthPage,
  ErrorComponent,
  ThemedLayoutV2,
  ThemedSiderV2,
  useNotificationProvider,
} from ""@refinedev/antd"";
import ""@refinedev/antd/dist/reset.css"";

import routerBindings, {
  CatchAllNavigate,
  DocumentTitleHandler,
  NavigateToResource,
  UnsavedChangesNotifier,
} from ""@refinedev/react-router-v6"";
import { dataProvider, liveProvider } from ""@refinedev/supabase"";
import { App as AntdApp } from ""antd"";
import { BrowserRouter, Outlet, Route, Routes } from ""react-router-dom"";
import authProvider from ""./authProvider"";
import { Header } from ""./components/header"";
import { ColorModeContextProvider } from ""./contexts/color-mode"";
import { supabaseClient } from ""./utility"";
import { PublisherCreate, PublishersEdit, PublisherList, PublisherShow } from ""./pages/publishers"";

function App() {
  return (
    (<BrowserRouter>
      <GitHubBanner />
      <RefineKbarProvider>
        <ColorModeContextProvider>
          <AntdApp>
            <DevtoolsProvider>
              <Refine
                dataProvider={dataProvider(supabaseClient)}
                liveProvider={liveProvider(supabaseClient)}
                authProvider={authProvider}
                routerProvider={routerBindings}
                notificationProvider={useNotificationProvider}
                resources={[{
                  name: ""publisher"",
                  list: ""/publishers"",
                  show: ""/publishers/show/:handle"",
                  meta: {
                    label: 'Publishers',
                  }
                }]}
                options={{
                  syncWithLocation: true,
                  warnWhenUnsavedChanges: true,
                  useNewQueryKeys: true,
                  projectId: ""******"",
                }}
              >
                <Routes>
                  <Route
                    element={
                      <Authenticated
                        key=""authenticated-inner""
                        fallback={<CatchAllNavigate to=""/login"" />}
                      >
                        <ThemedLayoutV2
                          Header={Header}
                          Sider={(props) => <ThemedSiderV2 {...props} fixed />}
                        >
                          <Outlet />
                        </ThemedLayoutV2>
                      </Authenticated>
                    }
                  >
                    <Route
                      index
                      element={<NavigateToResource resource=""publisher"" />}
                    />
                    <Route path=""/publishers"">
                      <Route index element={<PublisherList />} />
                      <Route path=""show/:handle"" element={<PublisherShow />} />
                    </Route>
                    <Route path=""*"" element={<ErrorComponent />} />
                  </Route>
                  <Route
                    element={
                      <Authenticated
                        key=""authenticated-outer""
                        fallback={<Outlet />}
                      >
                        <NavigateToResource />
                      </Authenticated>
                    }
                  >
                    <Route
                      path=""/login""
                      element={
                        <AuthPage
                          type=""login""
                          formProps={{
                            initialValues: {
                              email: ""info@refine.dev"",
                              password: ""refine-supabase"",
                            },
                          }}
                        />
                      }
                    />
                    <Route
                      path=""/register""
                      element={<AuthPage type=""register"" />}
                    />
                    <Route
                      path=""/forgot-password""
                      element={<AuthPage type=""forgotPassword"" />}
                    />
                  </Route>
                </Routes>

                <RefineKbar />
                <UnsavedChangesNotifier />
                <DocumentTitleHandler />
              </Refine>
              <DevtoolsPanel />
            </DevtoolsProvider>
          </AntdApp>
        </ColorModeContextProvider>
      </RefineKbarProvider>
    </BrowserRouter>)
  );
}

export default App;

```

### Example pages/publishers/list.tsx
```
import { useTable, List, EditButton, ShowButton } from ""@refinedev/antd"";
import { Table, Space } from ""antd"";
import { Publisher } from ""../../types/publisher"";

export const PublisherList = () => {
    const { tableProps } = useTable<Publisher>({ });

    return (
        <List>
            <Table {...tableProps} rowKey=""handle"">
                <Table.Column
                  dataIndex=""id""
                  title=""Id""
                />
                <Table.Column
                  dataIndex=""publisher_name""
                  title=""Publisher Name""
                />
                <Table.Column
                  dataIndex=""handle""
                  title=""Handle""
                />
                <Table.Column
                    title=""Actions""
                    dataIndex=""actions""
                    render={(_, record: Publisher) => (
                        <Space>
                            <EditButton
                                hideText
                                size=""small""
                                recordItemId={record.handle}
                            />
                            <ShowButton
                                hideText
                                size=""small""
                                recordItemId={record.handle}
                            />
                        </Space>
                    )}
                />
            </Table>
        </List>
    );
};
```

### Example pages/publishers/show.tsx
```
import { Show, TextField } from ""@refinedev/antd"";
import { useShow } from ""@refinedev/core"";
import { Typography } from ""antd"";
import { Publisher } from ""../../types/publisher"";

const { Title } = Typography;

export const PublisherShow = () => {
  const { queryResult } = useShow<Publisher>({ });
  const { data, isLoading } = queryResult;

  const record = data?.data;

  return (
    <Show isLoading={isLoading}>
      <Title level={5}>{""ID""}</Title>
      <TextField value={record?.id} />
      <Title level={5}>{""Publisher Name""}</Title>
      <TextField value={record?.publisher_name} />
      <Title level={5}>{""Handle""}</Title>
      <TextField value={record?.handle} />
    </Show>
  );
};
```

### Steps To Reproduce

1. Use Refine CLI to bootstrap project with Vite, React Router, Supabase, and AntDesign
2. Copy example App.tsx and publisher pages from bug description
3. Replace projectId with your projectId
4. Configure supabase client (an unlinked local project will work)
5. Add `publisher` table with columns: `id`, `publisher_name`, `handle` into supabase
6. Add row with `publisher_name: ""Test Publisher""` and `handle: ""test-publisher""`
7. Start refine app and open in browser
8. Find `Test Publisher` in table and click the view icon
9. Note the url includes the raw string `:handle`

### Expected behavior

Refine correctly substitutes the `:handle` param with the `handle` field from the entity in the URL.

### Packages

- @refinedev/antd
- @refinedev/core
- @refinedev/react-router-v6


### Additional Context

_No response_",,
2467635559,6259,[BUG] `queryOptions.enabled` causes `undefined` request to be sent in `useForm`,"### Describe the bug

When working with a form in `""edit'` mode if the `id` is obtained in async manner, we're disabling the query with  `queryOptions.enabled: !!id` to avoid console.warning about missing ID. This causes a broken request to be sent with `id: undefined` to the data provider when `id` is obtained.

**Flow**
- `useForm` doesn't send a request when `id` is not defined
- `id` is obtained and passed to the `useForm`
- `useForm` sends one request with `id: undefined` and immediately sends a new one with correct `id`.

### Steps To Reproduce

```tsx
import React from ""react"";
import { useForm } from ""@refinedev/core"";

const MyComponent = () => {
  const [id, setId] = React.useState(undefined);

  React.useEffect(() => {
    // Set `id` after 1 second of delay for demo purposes.
    setTimeout(() => {
      setId(""123"");
    }, 1000);
  }, []);

  const form = useForm({
    resource: ""posts"",
    id: id,
    queryOptions: {
      // Disable query if id is not defined
      enabled: typeof id !== ""undefined"",
    },
  });
  
  return ( ... );
}
```

After the page is rendered,

- No requests will be sent before `id` is set
- When `id` is set, a request will be sent with `id: undefined`
- Immediately after the first request, a request will be made with `id: ""123""`

### Expected behavior

Changes in the `id` prop is set in an effect, this causes one render delay before `id` is set properly, yet when we pass `queryOptions.enabled` by looking at the `id` prop, query will be enabled right when `id` is set. This causes a broken request to be made to the API. 

The correct behavior should be setting the `id` immediately without a delay, then no extra requests will be made.

### Packages

- `@refinedev/core`
- `@refinedev/react-hook-form`
- `@refinedev/antd`
- `@refinedev/mantine`

### Additional Context

This issue is related with the `useForm` of `@refinedev/core` and affects all extensions of the `useForm` in other Refine packages.",,
2443649540,6223,[BUG] Type error when functions are passed to `optionLabel` and `optionValue` in `useSelect`,"### Describe the bug

When including a function to `optionLabel` with function passed as prop rather than `string`, I get a typescript compilation error as the following

```
Type '(option:) => string' is not assignable to type 'keyof IAmenity | undefined'.ts(2322)
index.d.ts(16, 5): The expected type comes from property 'optionLabel' which is declared here on type 'UseSelectProps<BaseRecord, HttpError, IAmenity>'
```

Typescript returns error when a 

### Steps To Reproduce

1. Import `useSelect` from ""@refinedev/antd""
2. Pass a function to props `optionLabel` or `optionValue`

### Expected behavior

It should accept type (item: TData => string) and not return an error.

### Packages

    ""@refinedev/antd"": ""^5.37.4"",
    ""@refinedev/cli"": ""^2.16.21"",
    ""@refinedev/core"": ""^4.47.1"",
    ""@refinedev/devtools"": ""^1.1.32"",
    ""@refinedev/inferencer"": ""^4.6.4"",
    ""@refinedev/kbar"": ""^1.3.6"",
    ""@refinedev/react-router-v6"": ""^4.5.5"",
    ""@refinedev/simple-rest"": ""^5.0.1"",

### Additional Context

_No response_",,
2439559512,6216,[BUG] `<DateField value={undefined} />` is still displaying the date,"### Describe the bug

Under the hood, `<DateField />` components of Refine's UI implementations use `dayjs`. As an expected behavior of `dayjs`, when you construct a `Dayjs` object with an empty/undefined value it will use the current date time. This causes `<DateField value={undefined} />` to display current date instead of rendering nothing.

```tsx
import { useShow } from ""@refinedev/core"";
import { DateField } from ""@refinedev/antd"";
import { Typography } from ""antd"";

export const PostDetails = () => {
  const { query } = useShow();

  return (
    <Typography.Title level={5}>Title</Typography.Title>
    <Typography.Text>{data.data?.title}</Typography.Text>
    <Typography.Title level={5}>Created At</Typography.Title>
    {/* Assume `createdAt` is not present in the response */}
    <DateField value={data.data?.createdAt} />
  );
}
```

This will render the current date.

```ts
import dayjs from ""dayjs"";

console.log(dayjs().format(""DD-MM-YYYY"")); // 31-07-2024

console.log(dayjs(Date.now()).format(""DD-MM-YYYY"")); // 31-07-2024
```

### Steps To Reproduce

1. Import `DateField` from any UI implementation of Refine.
2. Pass `undefined` or a reference to a non-existing property in an object to the `value` prop.
3. Check to see `<DateField value={undefined} />` rendering the current date.

### Expected behavior

`<DateField value={undefined} />` should return `null` and display nothing. 

Implementations should be updated to check for `undefined` values and return `null` in that case.

### Packages

- @refinedev/antd
- @refinedev/mui
- @refinedev/chakra-ui
- @refinedev/mantine

### Additional Context

Tests for this fix can be implemented in `@refinedev/ui-tests` and it will run on all implementations.",,
2438139872,6213,[BUG] Typo in examples/app-crm-minimal code snippets graphql/queries.ts,"### Describe the bug

On line 19 of the above mentioned file there is a typo: `DASHBORAD_CALENDAR_UPCOMING_EVENTS_QUERY` should be `DASHBOARD_CALENDAR_UPCOMING_EVENTS_QUERY`

I'd be happy to fix it if I can

### Steps To Reproduce

Go to examples/app-crm-minimal -> README code snippets -> graphql/queries.ts

### Expected behavior

Just a typo

### Packages

This is part of the app-crm-minimal sample

### Additional Context

_No response_",,
2437653986,6209,[BUG] `invalidates` prop of `useUpdateMany` doesn't work,"### Describe the bug

I want to change the default invalidation values of `useUpdateMany`, but it doesn't work.

```tsx
const { mutate } = useUpdateMany();
mutate({ invalidates: [""all""], resource:""posts"", values: {}, ids: [1, 2, 3] });
```


### Steps To Reproduce

code [is here](https://github.com/refinedev/refine/blob/master/packages/core/src/hooks/data/useUpdateMany.ts#L467). Invalidation values given as hard coded.



### Expected behavior

Props should override it.

### Packages

- @refinedev/core@4.53.0

",,
2435711770,6205,[FEAT] Make it EASY to code for medusa,"### Is your feature request related to a problem? Please describe.

I AM ALWAYS FRUSTRATED WHEN:
```

import React, { useEffect, useState } from 'react';
import cn from ""clsx"";
import { Dropdown, DropdownMenuItem, DropdownTrigger, DropdownContent } from ""/home/345893490/MYCUSTOMCODE/store/src/components/ui/Dropdown"";
import s from ""/home/283492408/MYCUSTOMCODE/store/src/components/ui/Dropdown/Dropdown.module.css"";
import {
    useCart,
  } from ""medusa-react""
const ENDPOINT =
  process.env.NEXT_PUBLIC_MEDUSA_BACKEND_URL || ""https://SOMESITE.com""
import { useCartContext } from ""@lib/context"";

const Regions: React.FC = () => {

  const { cart } = useCartContext();

  const [regions, setRegions] = useState<any[]>([]);
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [selectedRegion, setSelectedRegion] = useState<string | null>(null);

  useEffect(() => {
    fetch(`${ENDPOINT}/store/regions`, {
      credentials: 'include',
    })
      .then((response) => response.json())
      .then(({ regions }) => {
        setRegions(regions);
        setIsLoading(false);
      })
      .catch((error) => {
        console.error('Error fetching regions:', error);
        setIsLoading(false);
      });
  }, []);


```
`const { updateCart } = useCart() ` THIS LINE WILL GIVE AN ERROR BECAUSE _useCart must be used within a CartProvider_

```

  const handleRegionSelect = (regionId: string) => {
    setSelectedRegion(regionId);
    
    let cartid = cart?.id
    updateCart.mutate({
        regionId,
      })
    fetch(`${ENDPOINT}/store/carts/${cartid}`, {
        method: ""POST"",
        credentials: ""include"",
        body: JSON.stringify({
          region_id: regionId,
        }),
      })
      .then((response) => response.json())
      .then(({ cart }) => {
        let REGION_LS = ""medusa_region""
        //@ts-ignore
        console.log(REGION_LS)
        let retrievedMem = JSON.parse(window.localStorage.getItem(REGION_LS))
        console.warn(retrievedMem)
        retrievedMem['regionId'] = regionId
        //@ts-ignore
        let setMem = window.localStorage.setItem(REGION_LS, JSON.stringify(retrievedMem))
        //window.localStorage.setItem(REGION_LS, regionId)
            console.log(""CART UPDATED"")
      })


```

THIS CODE IS MEANT TO UPDATE CART REGION I AM DOING IT 3 different ways IM GETTING ERRORS WHY CANT IT WORK??????????????????????????????????????????????????????????????????????????????????????????????
?
?
?
?
?
?
I HAVE ASKED??!!!!!!!!!!!!!!!!!!!!!!!!!!
WHY DOINT IT WORK??

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

WHY DONT IT WORK WHY MUST IT BE INSIDE CART PROVIDER **YOU _MUST_ MAKE IT _EASY_ TO WORK WITH**

(this is a direct order.)",,
2432233518,6194,[FEAT] TS-Rest Data Provider,"### Is your feature request related to a problem? Please describe.

Type-safety between API and refinedev application must be meticulously managed.

Complex and opinionated options do exist (e.g. GraphQL), and any solution will have some amount of overhead, but the overhead just seems like too much for small teams. I believe refinedev has and will continue to focus on the DX while quickly building functional and user-friendly applications. The DX when it comes to managing a contract for queries and mutations between the refinedev application and the API has been one of the most challenging parts of building my current application. I spend an estimated 20% of my time just in reconciling inconsistencies between what the API offers and what the refinedev application should offer to end users.

### Describe alternatives you've considered

GraphQL - While there are differing opinions amount how it compares with other options, there are tools to generate types for the quereies and mutations. The draw backs here lies in the complexity of developing a GraphQL API, which varies from developer to developer.  

tRPC - Closest to what I am hoping to get. It is another viable option

I know REST, and it provides what I need, and I don't intend on moving away from it until the DX for another option becomes simpler with the same capabilities.

### Additional context

_No response_

### Describe the thing to improve

Disclaimer: I have not used ts-rest yet. While ts-rest claims to be production ready, it has only been around for about 2 years from my research.

[ts-rest](https://www.npmjs.com/package/@ts-rest/core) offers type safety without the need for code generation. 

I am looking at developing my own data provider for ts-rest. 

Here is my biggest reason. The ""contract"" is defined where the data is coming from, i.e. the API.
The contract is written in typescript, which allows for the use of zod schemas to define the contract.

As long as a standard structure for a ts-rest API can be defined such that the endpoints can be accessed by resource and the specific query or mutation (e.g. list, one, create, etc.), the DX looks promising.

What are the thoughts from other refinedev community members on this subject? I am not aware if this has or has not been brought up yet.

### Key Benefits
- Form validation schema consistent between frontend and backend",,
2427253974,6183,[FEAT] Pro Components for Ant Design,"### Is your feature request related to a problem? Please describe.

Ant Design's pro components are really useful but require the use of UmiJs. In fact, UmiJs is one of the best CSR solutions on the market, but its popularity doesn't go beyond China. If you can develop a Refine (combine with NextJS etc.) version of Ant Design Pro and Pro components, I believe you can become a very popular solution.


### Describe alternatives you've considered

For example this is your editabletable solution ->

```
import {
  List,
  SaveButton,
  EditButton,
  TextField,
  useEditableTable,
} from ""@refinedev/antd"";
import { Table, Form, Space, Button, Input } from ""antd"";

interface IPost {
  id: number;
  title: string;
}

const PostList: React.FC = () => {
  const {
    tableProps,
    formProps,
    isEditing,
    setId: setEditId,
    saveButtonProps,
    cancelButtonProps,
    editButtonProps,
  } = useEditableTable<IPost>();

  return (
    <List>
      <Form {...formProps}>
        <Table
          {...tableProps}
          rowKey=""id""
          onRow={(record) => ({
            // eslint-disable-next-line
            onClick: (event: any) => {
              if (event.target.nodeName === ""TD"") {
                setEditId && setEditId(record.id);
              }
            },
          })}
        >
          <Table.Column dataIndex=""id"" title=""ID"" />
          <Table.Column<IPost>
            dataIndex=""title""
            title=""Title""
            render={(value, record) => {
              if (isEditing(record.id)) {
                return (
                  <Form.Item name=""title"" style={{ margin: 0 }}>
                    <Input />
                  </Form.Item>
                );
              }
              return <TextField value={value} />;
            }}
          />
          <Table.Column<IPost>
            title=""Actions""
            dataIndex=""actions""
            render={(_, record) => {
              if (isEditing(record.id)) {
                return (
                  <Space>
                    <SaveButton {...saveButtonProps} hideText size=""small"" />
                    <Button {...cancelButtonProps} size=""small"">
                      Cancel
                    </Button>
                  </Space>
                );
              }
              return (
                <EditButton
                  {...editButtonProps(record.id)}
                  hideText
                  size=""small""
                />
              );
            }}
          />
        </Table>
      </Form>
    </List>
  );
};
```

This is Ant Design Pro Components EditableTable Solution, Ant Design Pro components have a simpler and less complex solution.

```
      <EditableProTable<DataSourceType>
        rowKey=""id""
        headerTitle=""Editable Form""
        maxLength={5}
        scroll={{
          x: 960,
        }}
        recordCreatorProps={
          position !== 'hidden'
            ? {
                position: position as 'top',
                record: () => ({ id: (Math.random() * 1000000).toFixed(0) }),
              }
            : false
        }
        loading={false}
        toolBarRender={() => [
          <ProFormRadio.Group
            key=""render""
            fieldProps={{
              value: position,
              onChange: (e) => setPosition(e.target.value),
            }}
            options={[
              {
                label: 'Add to Top',
                value: 'top',
              },
              {
                label: 'Add to Bottom',
                value: 'bottom',
              },
              {
                label: 'Hidden',
                value: 'hidden',
              },
            ]}
          />,
        ]}
        columns={columns}
        request={async () => ({
          data: defaultData,
          total: 3,
          success: true,
        })}
        value={dataSource}
        onChange={setDataSource}
        editable={{
          type: 'multiple',
          editableKeys,
          onSave: async (rowKey, data, row) => {
            console.log(rowKey, data, row);
            await waitTime(2000);
          },
          onChange: setEditableRowKeys,
        }}
      />
```


### Additional context

https://procomponents.ant.design/en-US/components
https://pro.ant.design/

### Describe the thing to improve

Combine all the benefits of Pro components with popular frameworks (NextJS). In particular, ProLayout, ProTable, ProForm, ModalForm and DrawerForm components are lifesavers and very useful.",,
2425633266,6181,[BUG] `onFinish` from `useModalForm` doesn't have same behavior as `onFinish` from `formProps`,"### Describe the bug

I ran into something I believe is a doc issue (or possibly a bug) with `useModalForm` from `@refinedev/antd`.

I implemented a form where I need to do a file upload upon submitting the form, so I provided my own method to `onFinish` in the `Form` component. Based on the [doc](https://refine.dev/docs/ui-integrations/ant-design/hooks/use-modal-form/#close), I thought I could call `onFinish` and then `close`. But I ran into the following behaviors:

1. The user sees the dialog about unsaved changes (which seems like an issue on its own).
2. If they click Cancel, they get correctly returned to the dialog.
3. If they click OK (i.e., OK to discard changes), it ends up updating the resource anyway, which I can confirm from PUT/PATCH calls being made by the browser.

I realized after much trial and error that the right method to call is not `onFinish` from `useModalForm`, but `onFinish` from the `formProps`. Furthermore, I don't need to call close  since `onFinish`  seems to close the dialog already. So a couple questions:

1. Is the sample in the [doc](https://refine.dev/docs/ui-integrations/ant-design/hooks/use-modal-form/#close) correct?
```
import { useModalForm } from ""@refinedev/antd"";
import { Form, Input, Modal } from ""antd"";


const { close, modalProps, formProps, onFinish } = useModalForm();

const onFinishHandler = (values) => {
  // do some work
  onFinish(values);
  close();
};

// ---

return (
  <Modal {...modalProps}>
    <Form {...formProps} onFinish={onFinishHandler} layout=""vertical"">
      <Form.Item label=""Title"" name=""title"">
        <Input />
      </Form.Item>
    </Form>
  </Modal>
);
```

This repros the 3 behaviors I mentioned above. It seems like even if `onFinish` from `useModalForm` is the right method to call, the close call would be unnecessary.

2. Why is `onFinish` from `useModalForm` not the same as the one from `formProps`? Based on the [doc](https://refine.dev/docs/ui-integrations/ant-design/hooks/use-modal-form/#close), it says the only difference is passing a value is mandatory, but in my experience they handle submission and closing differently.

### Steps To Reproduce

Use the sample for `close()` from the [doc](https://refine.dev/docs/ui-integrations/ant-design/hooks/use-modal-form/#close).

### Expected behavior

Form closes without warning about unsaved changes, and the documentation correctly includes (or excludes) the use of `close()` with `onFinish()`.

### Packages

@refinedev/antd

### Additional Context

_No response_",,
2424635990,6177,"[BUG] Supabase throws 400 (Bad Request) error ""unexpected end of input expecting field name (* or [a..z0..9_$])""","### Describe the bug

When my page loads one of the initial queries is 

`https://.supabase.co/rest/v1/works?select=*&offset=0&limit=10&=ilike.%25`

I think the `&=ilike.%25` at the end is causing the error but I cannot figure out how to remove it

As far as I can see the page still loads correctly but it displays the error after a few seconds and I can see the request failing in the developer console.

### Steps To Reproduce

1. Login
2. Go to app index page
3. Wait for a few seconds

### Expected behavior

The page to load correctly without any errors

### Packages

├── @ant-design/compatible@5.1.2
├── @refinedev/inferencer@4.5.17
├── @refinedev/react-router-v6@4.5.5
├── @refinedev/supabase@5.9.2
├── @testing-library/jest-dom@5.17.0
├── @testing-library/react@11.2.7
├── @testing-library/user-event@12.8.3
├── @types/jest@26.0.24
├── @types/lodash@4.14.202
├── @types/node@12.20.55
├── @types/react-dom@18.2.18
├── @types/react@18.2.48
├── @uiw/react-md-editor@3.25.6
├── antd@5.13.2
├── eslint-plugin-react-hooks@4.6.0
├── lodash.debounce@4.0.8
├── moment@2.30.1
├── rc-picker@3.14.6
├── react-dom@18.2.0
├── react-router-dom@6.21.3
├── react-scripts@5.0.1
├── react@18.2.0
├── typescript@4.9.5
└── web-vitals@1.1.2

### Additional Context

_No response_",,
2423814431,6171,[BUG] antd onFinish throwing an error/rejecting promise should show notification,"### Describe the bug

When I follow the instructions on [how to change form data before submission](https://refine.dev/docs/ui-integrations/ant-design/hooks/use-form/#how-can-i-change-the-form-data-before-submitting-it-to-the-api) and an error is thrown inside my custom handleOnFinish. No information is propagated to the user and the console only shows `Uncaught (in promise)`...

Also no request is sent to the service backing the resource.

### Steps To Reproduce

I tested this with create, but it should be present anywhere. 
1. Copy new/create from here: https://refine.dev/docs/ui-integrations/ant-design/hooks/use-form/#how-can-i-change-the-form-data-before-submitting-it-to-the-api
2. Throw an Error inside handleOnFinsish. Example: 
```
  const handleOnFinish = (values) => {
    JSON.parse('text')
    onFinish({
      fullName: `${values.name} ${values.surname}`,
    });
  };
```
3. No information to the user is shown and no request is sent by the data-provider.


### Expected behavior

An error notification should be shown to the user.

### Packages

-@refinedev/antd

### Additional Context

_No response_",,
2417081591,6156,[BUG] Calling setValue in useForm from @refinedev/react-hook-form : Creates Race Condition for Proper Rendering,"### Describe the bug

Input fields may or may not render properly when editing.

The timing of the return of the queryResult and the subsequent setValue calls to set the values of the registered fields dictates whether the inputs render properly.

The setValue call occurs in this useEffect [here](https://github.com/refinedev/refine/blob/054b9a61ce25b1107c03497bf29b808751f1113b/packages/react-hook-form/src/useForm/index.ts#L199C2-L222C48).

### Steps To Reproduce

1. call useForm hook from @refinedev/react-hook-form on edit page for resource
2. register input fields using register from result of useForm

### Expected behavior

The associated input should be re-rendered.

Developers should be aware that after the setValue is called, the input needs to be re-rendered, unless a fix can be found.

### Packages

- @refinedev/react-hook-form

### Additional Context

_No response_",,
2410868024,6146,[BUG] Handle empty filters on nestjsx/crud data provider,"Description:

There is an issue in the handleFilter.ts file where filter handling may be improved. The current code does not properly check if the filters variable is a non-empty array, which may lead to unexpected behavior or errors.

Location:
https://github.com/refinedev/refine/blob/b07e95bbb24aaabed320810cd3c25a7132e172b4/packages/nestjsx-crud/src/utils/handleFilter.ts#L39

Proposed Fix:
Update the condition at line 39 in handleFilter.ts to the following:

```javascript
if (Array.isArray(filters) && filters.length > 0) {
```",,
2408194254,6142,[BUG] Running Cypress tests on examples fails,"### Describe the bug

Running Cypress tests on examples fails because of misconfiguration.

```
> auth-antd@1.0.0 cypress:run
> cypress run -C ./cypress.config.ts


DevTools listening on ws://127.0.0.1:46147/devtools/browser/560c86b5-1183-43ea-90b1-674e0196e977
(node:31044) ExperimentalWarning: `--experimental-loader` may be removed in the future; instead use `register()`:
--import 'data:text/javascript,import { register } from ""node:module""; import { pathToFileURL } from ""node:url""; register(""file%3A///home/martin/.cache/Cypress/13.13.0/Cypress/resources/app/node_modules/ts-node/esm/transpile-only.mjs"", pathToFileURL(""./""));'
(Use `node --trace-warnings ...` to show where the warning was created)
Your supportFile is missing or invalid: ../../cypress/support/e2e.ts

The supportFile must be a .js, .ts, .coffee file or be supported by your preprocessor plugin (if configured).

Fix your support file, or set supportFile to false if a support file is not necessary for your project.

If you have just renamed the extension of your supportFile, restart Cypress.

https://on.cypress.io/support-file-missing-or-invalid
```

I was able to fix it for my example by:
1) altering `cypress.config.ts`
```diff
  e2e: {
-    fixturesFolder: ""../../cypress/fixtures"",
-    supportFile: ""../../cypress/support/e2e.ts"",
+    fixturesFolder: ""./cypress/fixtures"",
+    supportFile: ""./cypress/support/e2e.ts"",
  },
```
2) adding fixture `cypress/fixtures/demo-auth-credentials.json`
3) adding `cypress/support/e2e.ts` (with hacked content from this repo):
```ts
/// <reference types=""cypress"" />
/// <reference types=""./index.d.ts"" />

const getAntdNotification = () => {
    return cy.get("".ant-notification-notice"");
};

const getAntdFormItemError = ({ id }: IGetAntdFormItemErrorParams) => {
    return cy.get(`#${id}_help > .ant-form-item-explain-error`);
};

Cypress.Keyboard.defaults({
    keystrokeDelay: 0,
});

Cypress.config(""defaultCommandTimeout"", 20000);
Cypress.config(""requestTimeout"", 20000);

Cypress.Commands.add(""getAntdNotification"", getAntdNotification);
Cypress.Commands.add(""getAntdFormItemError"", getAntdFormItemError);

/**
 * Disable telemetry calls
 */
beforeEach(() => {
    cy.intercept(""https://telemetry.refine.dev/**"", {
        body: ""Disabled telemetry to avoid unwanted entries in the database"",
        statusCode: 200,
    }).as(""telemetry"");
});


```

### Steps To Reproduce

1) Install an example eg. `npm create refine-app@latest -- --example auth-antd`.
2) Start app using `npm run dev`
3) Run `npm run cypress:run`

### Expected behavior

It is expected to run successfully Cypress tests against an example app.

### Packages

```json
{
  ""dependencies"": {
    ""@cerbos/http"": ""^0.6.0"",
    ""@refinedev/antd"": ""^5.42.0"",
    ""@refinedev/cli"": ""^2.16.36"",
    ""@refinedev/core"": ""^4.53.0"",
    ""@refinedev/react-router-v6"": ""^4.5.11"",
    ""@refinedev/simple-rest"": ""^5.0.8"",
    ""@uiw/react-md-editor"": ""^3.19.5"",
    ""antd"": ""^5.17.0"",
    ""react"": ""^18.0.0"",
    ""react-dom"": ""^18.0.0"",
    ""react-router-dom"": ""^6.8.1""
  },
  ""devDependencies"": {
    ""@types/node"": ""^18.16.2"",
    ""@types/react"": ""^18.0.0"",
    ""@types/react-dom"": ""^18.0.0"",
    ""@vitejs/plugin-react"": ""^4.2.1"",
    ""typescript"": ""^5.4.2"",
    ""vite"": ""^5.1.6""
  }
```

### Additional Context

_No response_",,
2407615848,6140,[BUG] Using Swizzle for AuthPage in Next.js generates code with i18n but the folder hooks is not created,"### Describe the bug

I created a Next.js Refine project and headless UI. Used swizzle to customize the AuthPage and it imports a hook called useTranslate hook:

```js
import React, { useState } from ""react"";
import {
  useActiveAuthProvider,
  useLink,
  useLogin,
  useRouterContext,
  useRouterType,
  LoginFormTypes,
  LoginPageProps,
} from ""@refinedev/core"";

import { useTranslate } from ""@hooks/i18n""; //Cannot find module '@hooks/i18n' or its corresponding type declarations.
```

Where and how should this be created to fix it?

### Steps To Reproduce

1. Create a Nextjs + Headless UI project from site.
2. Run `npm run refine swizzle`
3. Select AuthPage
4. Go to the generated file called login.tsx in components/pages/auth/components folder
5. You should see an error ""Cannot find module '@hooks/i18n' or its corresponding type declarations.""

### Expected behavior

It is supposed to add the hooks folder with the useTranslate hook.

### Packages

""@refinedev/cli"": ""^2.16.21"",
""@refinedev/core"": ""^4.47.1"",
""@refinedev/devtools"": ""^1.1.32"",
""@refinedev/kbar"": ""^1.3.6"",
""@refinedev/nextjs-router"": ""^6.0.0"",
""@refinedev/react-hook-form"": ""^4.8.14"",
""@refinedev/react-table"": ""^5.6.6"",
""@refinedev/simple-rest"": ""^5.0.1"",

### Additional Context

_No response_",,
2407597740,6139,[BUG] Cannot use react-hook-form Controller with Refine's useForm,"### Describe the bug

I'm following the example for Material UI on this page: https://refine.dev/docs/packages/react-hook-form/introduction/#usage

My imports are:

```
import { useForm } from ""@refinedev/react-hook-form"";
import { Controller } from ""react-hook-form"";
```

The problem is that it looks we have to use the Edit component from Material UI in order to use Controller, otherwise I get the error:

`React Router caught the following error during render TypeError: Cannot read properties of undefined (reading 'subscribe')`

When I wrap my form within the Edit component, this error goes away, but I don't want to use Edit from material UI for my form. Is there a way around this? I'm currently having to use register instead, but I need to use some Material components like Autocomplete.

### Steps To Reproduce

1. Follow the steps in this documentation for Material UI: https://refine.dev/docs/packages/react-hook-form/introduction/#usage
2. Remove the Edit component (don't wrap form with it)

### Expected behavior

Shouldn't require the Edit component in order to use Controller in my form.

### Packages

- react-hook-form: ""7.30.0""
- @refinedev/react-hook-form: ""^4.8.20""

### Additional Context

_No response_",,
2406731719,6137,[FEAT] Improving Type Parameter Specification in useForm Hook,"### Is your feature request related to a problem? Please describe.

I'm developing a user information editing page using Refine, and I'm facing difficulties in clearly distinguishing between the form structure and the data type submitted to the DataProvider.

If you know of some way, please let me know.

### Describe alternatives you've considered

If I don't specify types in the useForm function, this issue doesn't occur. However, that would negate the purpose of using TypeScript.

### Additional context

## Current Status and Investigation
I've extensively reviewed documentation and advanced tutorials on how to specify useForm's type parameters effectively, but haven't found a solution yet.

## Context
Here is the project setup and code where I encountered the issue.

### Framework Structure
Routing: Next.js (App Router)
Data Provider: SimpleRest
UI: Material UI

### The Flow of Data
![DataFlow](https://github.com/user-attachments/assets/1b743696-5f7a-43d7-b1b8-9f200ac4cdfe)

### Problematic Code
I think it's beneficial that the FormProps type specified as the third type parameter of useForm is used by the reset and handleSubmit functions. This is because they rely on the form structure.

However, the same type is also enforced for the argument of the onFinish function. This causes a type error when trying to convert the FormProps type to the User type inside the handleSubmitInner function during submission.

```ts
""use client"";

import { HttpError } from ""@refinedev/core"";
import { Edit } from ""@refinedev/mui"";
import { useForm } from ""@refinedev/react-hook-form"";
import { useEffect } from ""react"";

interface User {
  email: string;
  user_metadata: {
    display_name: string;
  };
}

interface FormProps {
  email: string;
  userName: string;
}

export default function UserEdit() {
  const {
    refineCore: { queryResult, onFinish },
    reset,
    handleSubmit,
  } = useForm<User, HttpError, FormProps>();

  const user = queryResult?.data?.data;

  // Called when the page is loaded
  useEffect(() => {
    // Map the user information received from the API to the form
    // Calling reset sets the values entered in the form all at once
    reset({
      email: user?.email,
      userName: user?.user_metadata?.display_name,
    });
  }, [reset, user]);

  // Called when submitting the form
  const handleSubmitInner = (formProps: FormProps) => {
    // Map the information entered in the form to the API
    onFinish({
      email: formProps.email,
      // A type error is output at this line.
      // This is because the argument type of the onFinish function becomes FormProps,
      // which is specified as the third type parameter of useForm.
      user_metadata: {
        display_name: formProps.userName,
      },
    });
  };

  return (
    <Edit
      saveButtonProps={{
        onClick: handleSubmit(handleSubmitInner),
      }}
    >
      {/* ... */}
    </Edit>
  );
}

```

### Describe the thing to improve

To resolve this issue, consider adding an additional type parameter like SubmissionData to useForm. This would clarify distinctions between form structure and submission data types, ensuring a smoother TypeScript-driven development process.

```ts
""use client"";

import { HttpError } from ""@refinedev/core"";
import { Edit } from ""@refinedev/mui"";
import { useForm } from ""@refinedev/react-hook-form"";
import { useEffect } from ""react"";

interface User {
  email: string;
  user_metadata: {
    display_name: string;
  };
}

interface FormProps {
  email: string;
  userName: string;
}

export default function UserEdit() {
  const {
    refineCore: { queryResult, onFinish },
    reset,
    handleSubmit,
    // The 4th type parameter is the type of the submission.
    // It will be a argument of onFinish, so it should be User.
  } = useForm<User, HttpError, FormProps, User>();

  const user = queryResult?.data?.data;

  // Called when the page is loaded
  useEffect(() => {
    // Map the user information received from the API to the form
    // Calling reset sets the values entered in the form all at once
    reset({
      email: user?.email,
      userName: user?.user_metadata?.display_name,
    });
  }, [reset, user]);

  // Called when submitting the form
  const handleSubmitInner = (formProps: FormProps) => {
    // Map the information entered in the form to the API
    onFinish({
      email: formProps.email,
      user_metadata: {
        display_name: formProps.userName,
      },
    });
  };

  return (
    <Edit
      saveButtonProps={{
        onClick: handleSubmit(handleSubmitInner),
      }}
    >
      {/* ... */}
    </Edit>
  );
}
```",,
2401717635,6127,[FEAT] Add Script for Remix SPA Mode,"### Is your feature request related to a problem? Please describe.

In Remix SPA Mode, the scripts differ from those in the regular Remix setup.

```json
""dev"": ""remix vite:dev"",
""build"": ""remix vite:build"",
""start"": ""vite preview"",
```

Currently, the refine CLI only supports Remix SSR Mode.

### Describe alternatives you've considered

Using [npm-run-all](https://www.npmjs.com/package/npm-run-all).

Example: `npm run dev`
```json
""devtools"": ""refine devtools"",
""dev:remix"": ""remix vite:dev"",
""dev"": ""npm-run-all --parallel devtools dev:remix"",
```

### Additional context

_No response_

### Describe the thing to improve

Whether SPA Mode is enabled can be determined from `vite.config.ts`. While it would be ideal if `getProjectType` could detect this, it seems more reasonable to make it selectable through the platform option, as shown below:

`refine dev -p remix-spa`",,
2397291966,6115,[FEAT]: `useUpdateMany()` should accept `MutateFunction` params,"### Is your feature request related to a problem? Please describe.

Here is the usage of the `useUpdateMany` hook:

```tsx
import { useUpdateMany } from ""@refinedev/core"";

const { mutate } = useUpdateMany();

mutate(
  {
    resource: ""products"",
    values: {
      name: ""New Product"",
      material: ""Wood"",
    },
    ids: [1, 2, 3],
    mutationMode: ""optimistic"",
    successNotification: false,
  },
  {
    onSuccess: () => {
      /* do something after mutation success */
    },
  },
);
```

In this use case, all parameters except the `values` are static. However, when I want to use the `mutate` function in different places, I have to rewrite these values, which can cause code duplication.

### Describe the thing to improve

To improve developer experience, the `useUpdateMany()` hook can directly pass all required values to the `mutate` function. This will reduce code duplication and improve readability.

New API:

```tsx
import { useUpdateMany } from ""@refinedev/core"";

const Demo = () => {
  const { mutate } = useUpdateMany({
    resource: ""products"",
    values: {
      name: ""New Product"",
      material: ""Wood"",
    },
    ids: [1, 2, 3],
    successNotification: false,
    mutationMode: ""optimistic"",
    mutationOptions: {
      onSuccess: () => {
        /* do something after mutation success */
      },
    },
  });

  const handleUpdate = (values) => {
    mutate();
  };

  return /* Your JSX code here */;
};
```
",,
2397288083,6114,[FEAT]: `useCreateMany()` should accept `MutateFunction` params,"### Is your feature request related to a problem? Please describe.

Here is the usage of the `useCreateMany` hook:

```tsx
import { useCreateMany } from ""@refinedev/core"";

const { mutate } = useCreateMany();

mutate(
  {
    resource: ""products"",
    mutationMode: ""optimistic"",
    successNotification: false,
    values: [
      {
        name: ""Product 1"",
        material: ""Wood"",
      },
      {
        name: ""Product 2"",
        material: ""Metal"",
      },
    ],
  },
  {
    onSuccess: () => {
      /* do something after mutation success */
    },
  },
);
```

In this use case, all parameters except the `values` are static. However, when I want to use the `mutate` function in different places, I have to rewrite these values, which can cause code duplication.

### Describe the thing to improve

To improve developer experience, the `useCreateMany()` hook can directly pass all required values to the `mutate` function. This will reduce code duplication and improve readability.

New API:

```tsx
import { useCreateMany } from ""@refinedev/core"";

const Demo = () => {
  const { mutate } = useCreateMany({
    resource: ""products"",
    mutationMode: ""optimistic"",
    successNotification: false,
    values: [
      {
        name: ""Product 1"",
        material: ""Wood"",
      },
      {
        name: ""Product 2"",
        material: ""Metal"",
      },
    ],
    mutationOptions: {
      onSuccess: () => {
        /* do something after mutation success */
      },
    },
  });

  const handleUpdate = (values) => {
    mutate(;
  };

  return /* Your JSX code here */;
};
```",,
2397282400,6113,[FEAT]: `useCreate()` should accept `MutateFunction` params,"### Is your feature request related to a problem? Please describe.

Here is the usage of the `useCreate` hook:

```tsx
import { useCreate } from ""@refinedev/core"";

const { mutate } = useCreate();

mutate(
  {
    resource: ""products"",
    mutationMode: ""optimistic"",
    successNotification: false,
    values: {
      name: ""New Product"",
      material: ""Wood"",
    },
  },
  {
    onSuccess: () => {
      /* do something after mutation success */
    },
  },
);
```

In this use case, all parameters except the `values` are static. However, when I want to use the `mutate` function in different places, I have to rewrite these values, which can cause code duplication.

### Describe the thing to improve

To improve developer experience, the `useCreate()` hook can directly pass all required values to the `mutate` function. This will reduce code duplication and improve readability.

New API:

```tsx
import { useCreate } from ""@refinedev/core"";

const Demo = () => {
  const { mutate } = useCreate({
    resource: ""products"",
    mutationMode: ""optimistic"",
    successNotification: false,
    mutationOptions: {
      onSuccess: () => {
        /* do something after mutation success */
      },
    },
  });

  const handleUpdate = (values) => {
    mutate({
      values,
    });
  };

  return /* Your JSX code here */;
};
```


",,
2395413979,6112,[BUG] using custom request with different URL changes URL of subsequent requests,"### Describe the bug

I believe there's an unexpected side effect when using a data provider and passing the URL param. It's possible to replicate the issue in the `app-crm` template. 

If you change the `auth.ts` file's URL's, then any subsequent call to the data provider will use the value passed into the `url` param:

```
const { data } = await dataProvider.custom({
        url:`{{change the url here}}`,
        method: 'post',
        headers: {},
        meta: {
          variables: { email },
          gqlMutation,
        },
});
```

### Steps To Reproduce

1. Checkout the `app-crm` template
2. Open the `auth.ts` file
3. Instead of using the API_URL from `data` folder, manually change it to any other URL
4. All subsequent use of data provider will have the new URL

### Expected behavior

I'd expect the URL to be overwritten only for a single specific call

### Packages

- @refinedev/nestjs-query
- graphql-request
- axios

### Additional Context

_No response_",2216758634,"Hello @igordonin,

The bug is [here](https://github.com/refinedev/refine/blob/master/packages/nestjs-query/src/dataProvider/index.ts#L423). we shouldn't change the client's default URL with `client.setEndpoint`.

Would you like to work on this issue?"
2395413979,6112,[BUG] using custom request with different URL changes URL of subsequent requests,"### Describe the bug

I believe there's an unexpected side effect when using a data provider and passing the URL param. It's possible to replicate the issue in the `app-crm` template. 

If you change the `auth.ts` file's URL's, then any subsequent call to the data provider will use the value passed into the `url` param:

```
const { data } = await dataProvider.custom({
        url:`{{change the url here}}`,
        method: 'post',
        headers: {},
        meta: {
          variables: { email },
          gqlMutation,
        },
});
```

### Steps To Reproduce

1. Checkout the `app-crm` template
2. Open the `auth.ts` file
3. Instead of using the API_URL from `data` folder, manually change it to any other URL
4. All subsequent use of data provider will have the new URL

### Expected behavior

I'd expect the URL to be overwritten only for a single specific call

### Packages

- @refinedev/nestjs-query
- graphql-request
- axios

### Additional Context

_No response_",2217479557,"I was investigating the issue and I'd need more context on what you're looking to do here. 

One of the things that came up is that, even though you allow for HTTP methods to be specified by the `custom` function, the method is not actually being used to make the request; it always uses `POST`. `graphql-request` itself also only allows for `GET` or `POST`, so all of the other methods allowed by the `CustomParams` interface are pointless and would need to be narrowed down into the allowed methods anyways.

So what is the purpose of the `custom` function? Should clients be allowed to make actual `GET` requests to their GraphQL clients? What about the other HTTP methods? If they are to be allowed, it won't be through `graphql-request`.

PS.: One more note. The `request` function from `graphql-request`, as in `import { request } from graphql-request`, does not allow the HTTP method to be specified, so we'd need a new instance of the GraphQLClient. If only `POST` is to be allowed, then it's possible to get by without a new instance and just using the `request` function."
2395413979,6112,[BUG] using custom request with different URL changes URL of subsequent requests,"### Describe the bug

I believe there's an unexpected side effect when using a data provider and passing the URL param. It's possible to replicate the issue in the `app-crm` template. 

If you change the `auth.ts` file's URL's, then any subsequent call to the data provider will use the value passed into the `url` param:

```
const { data } = await dataProvider.custom({
        url:`{{change the url here}}`,
        method: 'post',
        headers: {},
        meta: {
          variables: { email },
          gqlMutation,
        },
});
```

### Steps To Reproduce

1. Checkout the `app-crm` template
2. Open the `auth.ts` file
3. Instead of using the API_URL from `data` folder, manually change it to any other URL
4. All subsequent use of data provider will have the new URL

### Expected behavior

I'd expect the URL to be overwritten only for a single specific call

### Packages

- @refinedev/nestjs-query
- graphql-request
- axios

### Additional Context

_No response_",2217486786,"This would be the proposed solution to allow only `GET` and `POST`, if that be the case.

```
    custom: async ({ url, method, headers, meta }) => {
      const ALLOWED_METHODS = [""get"", ""post""];
      const requestUrl = url || (client as any).url;

      // This feels very weird as the function API allows any method but then the logic throws an error
      if (!ALLOWED_METHODS.some((it) => it === method)) {
        throw Error(`GraphQL does not allow ${method} method.`);
      }

      const validMethod = method as ""get"" | ""post"";

      const _client = new GraphQLClient(requestUrl, {
        method: validMethod,
        headers,
      });

      const gqlOperation = meta?.gqlMutation ?? meta?.gqlQuery;

      if (gqlOperation) {
        const response: any = await _client.request<BaseRecord>({
          document: gqlOperation,
          variables: meta?.variables,
        });

        return { data: response };
      }

      if (meta?.rawQuery) {
        const response = await _client.request<BaseRecord>({
          document: meta.rawQuery,
          variables: meta.variables,
        });

        return { data: response };
      }

      if (meta) {
        if (meta.operation) {
          let query;
          let variables;

          if (method === ""get"") {
            const gqlQuery = gql.query({
              operation: meta.operation,
              fields: meta.fields,
              variables: meta.variables,
            });

            query = gqlQuery.query;
            variables = gqlQuery.variables;
          } else {
            const gqlMutation = gql.mutation({
              operation: meta.operation,
              fields: meta.fields,
              variables: meta.variables,
            });

            query = gqlMutation.query;
            variables = gqlMutation.variables;
          }

          const response = await _client.request<BaseRecord>({
            document: query,
            variables,
          });

          return {
            data: response[meta.operation],
          };
        }
        throw Error(""GraphQL operation name required."");
      }
      throw Error(
        ""GraphQL needs operation, fields and variables values in meta object."",
      );
    },
```"
2395413979,6112,[BUG] using custom request with different URL changes URL of subsequent requests,"### Describe the bug

I believe there's an unexpected side effect when using a data provider and passing the URL param. It's possible to replicate the issue in the `app-crm` template. 

If you change the `auth.ts` file's URL's, then any subsequent call to the data provider will use the value passed into the `url` param:

```
const { data } = await dataProvider.custom({
        url:`{{change the url here}}`,
        method: 'post',
        headers: {},
        meta: {
          variables: { email },
          gqlMutation,
        },
});
```

### Steps To Reproduce

1. Checkout the `app-crm` template
2. Open the `auth.ts` file
3. Instead of using the API_URL from `data` folder, manually change it to any other URL
4. All subsequent use of data provider will have the new URL

### Expected behavior

I'd expect the URL to be overwritten only for a single specific call

### Packages

- @refinedev/nestjs-query
- graphql-request
- axios

### Additional Context

_No response_",2219808157,"Hey @igordonin idea was to allow users to make custom Graphql **or** custom REST requests to their API. So, custom method should allow **both of them**."
2393653675,6111,"[FEAT] register(""myFormDataField"") useForm<MyFormData>()","### Is your feature request related to a problem? Please describe.

Typescript type checks for refine useForm() similar to what React Hook Form has

### Describe alternatives you've considered

_No response_

### Additional context

React Hook Forms support typescript checking even for register(""fieldName"")
https://codesandbox.io/s/react-hook-form-typescript-qwk7b?file=/src/index.tsx

### Describe the thing to improve

Please inspire by React Hook Form Types",2216746515,"Hello @jozef-slezak, can you give specific examples, please? Which part of `useForm` is missing type support?

For example, if a field name is not specified, `register`, `getFieldState` and, `resetField` throw type errors.
<image src=""https://github.com/refinedev/refine/assets/23058882/f4fcb6cc-ec35-43a5-bd84-faadeab62609"" width=""100"" />

<image src=""https://github.com/refinedev/refine/assets/23058882/5c6eb351-e4c5-4aea-9a8f-b63134411ff3"" width=""100"" />

<image src=""https://github.com/refinedev/refine/assets/23058882/63418a4d-3533-42e0-8964-42539ea84d25"" width=""100"" />
 
example code is here:
```tsx
import { type HttpError } from ""@refinedev/core"";

export interface IPost {
  id: number;
  title: string;
  content: string;
  status: ""published"" | ""draft"" | ""rejected"";
  category: { id: number };
}

const form = useForm<IPost, HttpError, IPost>();

```

Also, we want to implement type support for `resource` field. The issue is [here](https://github.com/refinedev/refine/issues/6072).
"
2393653675,6111,"[FEAT] register(""myFormDataField"") useForm<MyFormData>()","### Is your feature request related to a problem? Please describe.

Typescript type checks for refine useForm() similar to what React Hook Form has

### Describe alternatives you've considered

_No response_

### Additional context

React Hook Forms support typescript checking even for register(""fieldName"")
https://codesandbox.io/s/react-hook-form-typescript-qwk7b?file=/src/index.tsx

### Describe the thing to improve

Please inspire by React Hook Form Types",2238780955,"Hey @jozef-slezak. As @alicanerdurmaz explained in the comment above we already have the type support for methods from `useForm`.

I think there's a misunderstanding here about the generics; while `react-hook-form`'s `useForm` uses the first generic for the form values, we use the third generic as the form values. `@refinedev/react-hook-form`'s `useForm` will fetch the data first and try to populate the fields. This is why we have the first two generics `TData` and `Terror`.

If you try to pass the third generic for your form values, type support for the fields will be provided.

Closing this for now. If the issue continues, please do not hesitate to reopen with more info about the issue and a minimal repro 🙏 "
2393167560,6110,[BUG] use refine with next and antd,"### Describe the bug

I try to use refine with next antd y turbobuild



### Steps To Reproduce

change `package.json`

`""dev"": ""next dev --turbo"",` or
`""dev"": ""cross-env NODE_OPTIONS=--max_old_space_size=4096 refine dev --turbo""`



### Expected behavior

I have this error:

![image](https://github.com/refinedev/refine/assets/52012960/48c0bfad-1b40-4310-918e-95fb9531e4ff)


### Packages

""@ant-design/icons"": ""^5.0.1"",
  ""@ant-design/nextjs-registry"": ""^1.0.0"",
  ""@refinedev/antd"": ""^5.37.4"",
  ""@refinedev/cli"": ""^2.16.21"",
  ""@refinedev/core"": ""^4.47.1"",
  ""@refinedev/devtools"": ""^1.1.32"",
  ""@refinedev/kbar"": ""^1.3.6"",
  ""@refinedev/nextjs-router"": ""^6.0.0"",
  ""@refinedev/supabase"": ""^5.7.4"",
  ""@supabase/ssr"": ""^0.3.0"",
  ""antd"": ""^5.0.5"",
  ""js-cookie"": ""^3.0.5"",
  ""next"": ""^14.1.0"",
  ""react"": ""^18.0.0"",
  ""react-dom"": ""^18.0.0""

### Additional Context

_No response_",2225801006,"Hey @ccdarvin, I think turbo should ignore installed package's tsconfig file. It could be an issue with turbopack configuration."
2391033365,6102,[FEAT]: `useUpdate()` should accept `MutateFunction` params,"### Is your feature request related to a problem? Please describe.

Here is the usage of the `useUpdate` hook:

```tsx
import { useUpdate } from ""@refinedev/core"";

const { mutate } = useUpdate();

mutate(
  {
    resource: ""products"",
    id: 1,
    mutationMode: ""optimistic"",
    successNotification: false,
    values: {
      name: ""New Product"",
      material: ""Wood"",
    },
  },
  {
    onSuccess: () => {
      /* do something after mutation success */
    },
  },
);
```

In this use case, all parameters except the `values` are static. However, when I want to use the `mutate` function in different places, I have to rewrite these values, which can cause code duplication.

### Describe the thing to improve

To improve developer experience, the `useUpdate()` hook can directly pass all required values to the `mutate` function. This will reduce code duplication and improve readability.

New API:

```tsx
import { useUpdate } from ""@refinedev/core"";

const Demo = () => {
  const { mutate } = useUpdate({
    resource: ""products"",
    id: 1,
    mutationMode: ""optimistic"",
    successNotification: false,
    mutationOptions: {
      onSuccess: () => {
        /* do something after mutation success */
      },
    },
  });

  const handleUpdate = (values) => {
    mutate({
      values,
    });
  };

  return /* Your JSX code here */;
};
```

",,
2388129980,6096,[BUG]: incorrect behavior on debonuce of `onSearch` in `useSelect`,"### Describe the bug

When use `onSearch` in `useSelect`, we see that fetch requests called repeatedly after delay on `debonuce` value. Video demo is below.

https://github.com/refinedev/refine/assets/14802170/11cce211-1339-437b-96e8-a2bcbc2f9586

### Steps To Reproduce

Sample code:

```tsx
const { onSearch, queryResult } = useSelect({
  resource: 'test',
  debounce: 1500,
  searchField: 'search'
});

return <input onChange={e=>onSearch(e.currentTarget.value)}/>
```

### Expected behavior

 It should delay then executed `onSearch` once or throttling `onSearch` function. After checking in package it seems to use `debounce` from loadash. I suggest using [use-debounce](https://github.com/xnimorz/use-debounce) or any libs that are similar.  

### Packages

- @refinedev/core

### Additional Context

This will lead to multiple requests to the server if not handle properly. ",2208336053,"Hey @Dominic-Preap, just checked your repro and the code you've provided. Confirming the issue about the debounced callback of `onSearch`. Thank you for the detailed explanation. I've tested out a fix in the `useSelect`, let me explain it below and maybe you can create a PR for it 🚀 

https://github.com/refinedev/refine/blob/49d65bf7a35c96a9d0f5ffafdd40c7d0526eaf2e/packages/core/src/hooks/useSelect/index.ts#L217

This prop also causes re-renders if it's inlined. We can store it in a ref like this:

```ts
  /**
   * To avoid any changes in the `onSearch` callback,
   * We're storing `onSearchFromProp` in a ref and accessing it in the `onSearch` callback.
   */
  const onSearchFromPropRef = useRef(onSearchFromProp);

  useEffect(() => {
    onSearchFromPropRef.current = onSearchFromProp;
  }, [onSearchFromProp]);
```

We should move `debounce` into the `onSearch` and memoize it:

Current:
https://github.com/refinedev/refine/blob/49d65bf7a35c96a9d0f5ffafdd40c7d0526eaf2e/packages/core/src/hooks/useSelect/index.ts#L338-L356

Wrapping it with `useMemo` and using `debounce` in the definition:

```ts
  const onSearch = useMemo(() => {
    return debounce((value: string) => {
      if (onSearchFromPropRef.current) {
        setSearch(onSearchFromPropRef.current(value));
        return;
      }

      if (!value) {
        setSearch([]);
        return;
      }

      setSearch([
        {
          field: searchField,
          operator: ""contains"",
          value,
        },
      ]);
    }, debounceValue);
  }, [searchField, debounceValue]);
  ```
  
  Then we can just update the return statement:
  
  ```diff
return {
    queryResult,
    defaultValueQueryResult,
    options: combinedOptions,
-   onSearch: debounce(onSearch, debounceValue),
+   onSearch,
    overtime: { elapsedTime },
  };
  ```
  
Let me know if you can work on this and open up a PR 🙏 "
2384041056,6091,[FEAT] To simplify adding a page after adding resources using CLI with Next.js.,"### Is your feature request related to a problem? Please describe.

I usually use Refine with Next.js (App Router). The CLI command for adding resources is very convenient.

However, the files generated by the CLI are all components. Each time, I go through the following cumbersome process to convert them into pages:

1. Execute the npx refine add resource command.
    - This generates CRUD operation components under `/src/components/{resource name}`.
    - ![image](https://github.com/refinedev/refine/assets/41093158/1da5a526-3f95-49d2-bfd9-d318285c4014)
2. Move each .tsx file from `/src/components/{resource name}` to `/src/app/{resource name}`.
3. Modify the directory structure in `/src/app/{resource name}` according to the specifications in _refine_context.tsx. Rename each .tsx file moved in the previous step to page.tsx.
    - ![image](https://github.com/refinedev/refine/assets/41093158/8790da2b-33f2-4dd7-8c30-75b38df3e379)
4. Replace each `export const` in the CRUD pages with `export default function`;
    - before: `export const UsersShow = () => {`
    - after: `export default function UsersShow() {`
    - If I use `export const`, the following error will be displayed in the browser when I open the page.
      - `Error: The default export is not a React Component in page: ""/users/show/[id]""`


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Below is my request
1. When using Refine with Next.js, adding resources via CLI should generate appropriate page.tsx files under /src/app/.
2. Each generated page.tsx file should export the page component with `export default function`.",2200357742,"If you assign me this issue, I'm ready to take on the challenge of fixing it."
2384041056,6091,[FEAT] To simplify adding a page after adding resources using CLI with Next.js.,"### Is your feature request related to a problem? Please describe.

I usually use Refine with Next.js (App Router). The CLI command for adding resources is very convenient.

However, the files generated by the CLI are all components. Each time, I go through the following cumbersome process to convert them into pages:

1. Execute the npx refine add resource command.
    - This generates CRUD operation components under `/src/components/{resource name}`.
    - ![image](https://github.com/refinedev/refine/assets/41093158/1da5a526-3f95-49d2-bfd9-d318285c4014)
2. Move each .tsx file from `/src/components/{resource name}` to `/src/app/{resource name}`.
3. Modify the directory structure in `/src/app/{resource name}` according to the specifications in _refine_context.tsx. Rename each .tsx file moved in the previous step to page.tsx.
    - ![image](https://github.com/refinedev/refine/assets/41093158/8790da2b-33f2-4dd7-8c30-75b38df3e379)
4. Replace each `export const` in the CRUD pages with `export default function`;
    - before: `export const UsersShow = () => {`
    - after: `export default function UsersShow() {`
    - If I use `export const`, the following error will be displayed in the browser when I open the page.
      - `Error: The default export is not a React Component in page: ""/users/show/[id]""`


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Below is my request
1. When using Refine with Next.js, adding resources via CLI should generate appropriate page.tsx files under /src/app/.
2. Each generated page.tsx file should export the page component with `export default function`.",2205319182,"Hello @noritsune, thank you for the issue. I agree that we can improve the developer experience.

After discussing with the core team, we thought it would be good to keep the current system as it is and add new features for Next.js (App Router).

Here are the steps:

1. Run `npx refine add resource`
2. Create `/src/components/{resource name}` and, if using Next.js (App Router), add the `“use client”` directive to this file.
3. If using Next.js (App Router), create the routes for this resource component and return the created resource component.

We believe this approach is simpler to implement and improves the developer experience. What are your thoughts?

And of course, I can assign this issue to you. We would be very happy 🙌
"
2384041056,6091,[FEAT] To simplify adding a page after adding resources using CLI with Next.js.,"### Is your feature request related to a problem? Please describe.

I usually use Refine with Next.js (App Router). The CLI command for adding resources is very convenient.

However, the files generated by the CLI are all components. Each time, I go through the following cumbersome process to convert them into pages:

1. Execute the npx refine add resource command.
    - This generates CRUD operation components under `/src/components/{resource name}`.
    - ![image](https://github.com/refinedev/refine/assets/41093158/1da5a526-3f95-49d2-bfd9-d318285c4014)
2. Move each .tsx file from `/src/components/{resource name}` to `/src/app/{resource name}`.
3. Modify the directory structure in `/src/app/{resource name}` according to the specifications in _refine_context.tsx. Rename each .tsx file moved in the previous step to page.tsx.
    - ![image](https://github.com/refinedev/refine/assets/41093158/8790da2b-33f2-4dd7-8c30-75b38df3e379)
4. Replace each `export const` in the CRUD pages with `export default function`;
    - before: `export const UsersShow = () => {`
    - after: `export default function UsersShow() {`
    - If I use `export const`, the following error will be displayed in the browser when I open the page.
      - `Error: The default export is not a React Component in page: ""/users/show/[id]""`


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Below is my request
1. When using Refine with Next.js, adding resources via CLI should generate appropriate page.tsx files under /src/app/.
2. Each generated page.tsx file should export the page component with `export default function`.",2205683670,"Hello, @alicanerdurmaz!

Thank you for your response and for assigning me to this issue.

Am I correct in understanding that according to the proposed modification, both the component and page files will be created under `/src/components/{resource name}` and `/src/app/{resource name}` respectively?

I don't quite understand why we need the component file in addition to the page file. Could you please explain why a component file is necessary for CRUD operations on the resource? I've gone through the CLI documentation but couldn't find any information regarding this, hence the confusion.
"
2384041056,6091,[FEAT] To simplify adding a page after adding resources using CLI with Next.js.,"### Is your feature request related to a problem? Please describe.

I usually use Refine with Next.js (App Router). The CLI command for adding resources is very convenient.

However, the files generated by the CLI are all components. Each time, I go through the following cumbersome process to convert them into pages:

1. Execute the npx refine add resource command.
    - This generates CRUD operation components under `/src/components/{resource name}`.
    - ![image](https://github.com/refinedev/refine/assets/41093158/1da5a526-3f95-49d2-bfd9-d318285c4014)
2. Move each .tsx file from `/src/components/{resource name}` to `/src/app/{resource name}`.
3. Modify the directory structure in `/src/app/{resource name}` according to the specifications in _refine_context.tsx. Rename each .tsx file moved in the previous step to page.tsx.
    - ![image](https://github.com/refinedev/refine/assets/41093158/8790da2b-33f2-4dd7-8c30-75b38df3e379)
4. Replace each `export const` in the CRUD pages with `export default function`;
    - before: `export const UsersShow = () => {`
    - after: `export default function UsersShow() {`
    - If I use `export const`, the following error will be displayed in the browser when I open the page.
      - `Error: The default export is not a React Component in page: ""/users/show/[id]""`


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Below is my request
1. When using Refine with Next.js, adding resources via CLI should generate appropriate page.tsx files under /src/app/.
2. Each generated page.tsx file should export the page component with `export default function`.",2205911005,"Refine is independent of the route package and can be used with Remix, React Router, Next.js App Router, or Next.js Pages Router. While there may not be an issue currently, we believe that separating the JSX code of resources into components is the correct approach.

For example, when using React Router, we write:
```tsx
<Route path=""/"" element={<PostListPage />} />
```
However, with Next.js, we use a file-based system to achieve the same result. Fundamentally, we believe that the rendered output in this route should be a separate component.

Additionally, the Next.js App Router defaults to server components, but components generated by the Refine CLI cannot run on the server. Therefore, we need to add the ""use-client"" directive at the top of the file we create. If we create the resource component in `/src/app/{resource name}`,  unfortunately, we take away the user's ability to use this route on the server."
2384041056,6091,[FEAT] To simplify adding a page after adding resources using CLI with Next.js.,"### Is your feature request related to a problem? Please describe.

I usually use Refine with Next.js (App Router). The CLI command for adding resources is very convenient.

However, the files generated by the CLI are all components. Each time, I go through the following cumbersome process to convert them into pages:

1. Execute the npx refine add resource command.
    - This generates CRUD operation components under `/src/components/{resource name}`.
    - ![image](https://github.com/refinedev/refine/assets/41093158/1da5a526-3f95-49d2-bfd9-d318285c4014)
2. Move each .tsx file from `/src/components/{resource name}` to `/src/app/{resource name}`.
3. Modify the directory structure in `/src/app/{resource name}` according to the specifications in _refine_context.tsx. Rename each .tsx file moved in the previous step to page.tsx.
    - ![image](https://github.com/refinedev/refine/assets/41093158/8790da2b-33f2-4dd7-8c30-75b38df3e379)
4. Replace each `export const` in the CRUD pages with `export default function`;
    - before: `export const UsersShow = () => {`
    - after: `export default function UsersShow() {`
    - If I use `export const`, the following error will be displayed in the browser when I open the page.
      - `Error: The default export is not a React Component in page: ""/users/show/[id]""`


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Below is my request
1. When using Refine with Next.js, adding resources via CLI should generate appropriate page.tsx files under /src/app/.
2. Each generated page.tsx file should export the page component with `export default function`.",2206056717,"
Thank you for the detailed explanation.

I now understand why the `npx refine add resource` command creates a component file instead of a page, and I agree that maintaining this feature makes sense.

Now, regarding your idea of adding an option to the npx refine add resource command—specifically `--for-next-app`:

With this option, when executing npx refine add resource, instead of creating a component file, a page.tsx file would be generated under `/src/app/{resource name}` following the routing structure. The contents of the file would be almost identical to the current setup, but would use `export default function` instead of `export const`.

Additionally, it might be beneficial to add a `--for-next-page` option for those using the Next.js page router.

Having these options would allow developers using Next.js with Refine to effortlessly generate CRUD pages for their resources without any further modifications, simply by running a command."
2384041056,6091,[FEAT] To simplify adding a page after adding resources using CLI with Next.js.,"### Is your feature request related to a problem? Please describe.

I usually use Refine with Next.js (App Router). The CLI command for adding resources is very convenient.

However, the files generated by the CLI are all components. Each time, I go through the following cumbersome process to convert them into pages:

1. Execute the npx refine add resource command.
    - This generates CRUD operation components under `/src/components/{resource name}`.
    - ![image](https://github.com/refinedev/refine/assets/41093158/1da5a526-3f95-49d2-bfd9-d318285c4014)
2. Move each .tsx file from `/src/components/{resource name}` to `/src/app/{resource name}`.
3. Modify the directory structure in `/src/app/{resource name}` according to the specifications in _refine_context.tsx. Rename each .tsx file moved in the previous step to page.tsx.
    - ![image](https://github.com/refinedev/refine/assets/41093158/8790da2b-33f2-4dd7-8c30-75b38df3e379)
4. Replace each `export const` in the CRUD pages with `export default function`;
    - before: `export const UsersShow = () => {`
    - after: `export default function UsersShow() {`
    - If I use `export const`, the following error will be displayed in the browser when I open the page.
      - `Error: The default export is not a React Component in page: ""/users/show/[id]""`


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Below is my request
1. When using Refine with Next.js, adding resources via CLI should generate appropriate page.tsx files under /src/app/.
2. Each generated page.tsx file should export the page component with `export default function`.",2206198535,"The current components need the ""use client"" directive to be compatible with RSC, but adding this to all files would restrict users. We agree to update the command to include `page.tsx` files that correctly import and return these components, but filling `page.tsx` with them could limit users.

For example, if we keep resource components in the components folder, we can:

- Use Next.js to fetch data from a database and pass it as a prop to the resource component.
- Perform operations with `loader()` using tanstack-router, Remix, or react-router-dom.

Generating the resource component directly in `page.tsx` with the ""use client"" directive would be like doing this:

```jsx
<Route
  path=""posts/list""
  Component={() => {
    return <div>{/** Generated resource component code */}</div>;
  }}
/>
```

Also, we don't need to add an option to Refine CLI. We can detect the type of application (Next.js, Vite, Remix, etc.) and make the necessary adjustments. The Refine CLI can already do this, but we need extra control for Next.js appdir and pages."
2384041056,6091,[FEAT] To simplify adding a page after adding resources using CLI with Next.js.,"### Is your feature request related to a problem? Please describe.

I usually use Refine with Next.js (App Router). The CLI command for adding resources is very convenient.

However, the files generated by the CLI are all components. Each time, I go through the following cumbersome process to convert them into pages:

1. Execute the npx refine add resource command.
    - This generates CRUD operation components under `/src/components/{resource name}`.
    - ![image](https://github.com/refinedev/refine/assets/41093158/1da5a526-3f95-49d2-bfd9-d318285c4014)
2. Move each .tsx file from `/src/components/{resource name}` to `/src/app/{resource name}`.
3. Modify the directory structure in `/src/app/{resource name}` according to the specifications in _refine_context.tsx. Rename each .tsx file moved in the previous step to page.tsx.
    - ![image](https://github.com/refinedev/refine/assets/41093158/8790da2b-33f2-4dd7-8c30-75b38df3e379)
4. Replace each `export const` in the CRUD pages with `export default function`;
    - before: `export const UsersShow = () => {`
    - after: `export default function UsersShow() {`
    - If I use `export const`, the following error will be displayed in the browser when I open the page.
      - `Error: The default export is not a React Component in page: ""/users/show/[id]""`


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Below is my request
1. When using Refine with Next.js, adding resources via CLI should generate appropriate page.tsx files under /src/app/.
2. Each generated page.tsx file should export the page component with `export default function`.",2207587939,"Refine CLI can automatically switch its behavior based on the framework you are using—that's correct, and I didn't know that. Thank you for informing me.

I agree that keeping Refine CLI simple without adding options would be beneficial.

From your explanations so far, I now fully understand what you're trying to convey. So, regarding the new feature you proposed for Next.js (App Router), is it intended to work like this?

1. Execute `npx refine add resource`.
2. Create CRUD component files under `/src/components/{resource name}`:
    - These files have the `use client` directive added at the top.
3. Create corresponding CRUD `page.tsx` files under `/src/app/{resource name}` in the appropriate directory structure:
    - Each `page.tsx` file returns the corresponding CRUD component generated in step 2.
    - `page.tsx` files should not include the `use client` directive as they should run on the server.
    
Here is an example of the files that would be generated.

↓`/src/components/users/list.tsx`
```tsx
""use client"";

import { MuiInferencer } from ""@refinedev/inferencer/mui"";

export const UserList = () => {
    return <MuiInferencer />;
};
```

↓`/src/app/page.tsx`
```tsx
import { UserList } from ""@components/users"";

export default function UserListPage() {
    return (<UserList/>)
}
```"
2384041056,6091,[FEAT] To simplify adding a page after adding resources using CLI with Next.js.,"### Is your feature request related to a problem? Please describe.

I usually use Refine with Next.js (App Router). The CLI command for adding resources is very convenient.

However, the files generated by the CLI are all components. Each time, I go through the following cumbersome process to convert them into pages:

1. Execute the npx refine add resource command.
    - This generates CRUD operation components under `/src/components/{resource name}`.
    - ![image](https://github.com/refinedev/refine/assets/41093158/1da5a526-3f95-49d2-bfd9-d318285c4014)
2. Move each .tsx file from `/src/components/{resource name}` to `/src/app/{resource name}`.
3. Modify the directory structure in `/src/app/{resource name}` according to the specifications in _refine_context.tsx. Rename each .tsx file moved in the previous step to page.tsx.
    - ![image](https://github.com/refinedev/refine/assets/41093158/8790da2b-33f2-4dd7-8c30-75b38df3e379)
4. Replace each `export const` in the CRUD pages with `export default function`;
    - before: `export const UsersShow = () => {`
    - after: `export default function UsersShow() {`
    - If I use `export const`, the following error will be displayed in the browser when I open the page.
      - `Error: The default export is not a React Component in page: ""/users/show/[id]""`


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Below is my request
1. When using Refine with Next.js, adding resources via CLI should generate appropriate page.tsx files under /src/app/.
2. Each generated page.tsx file should export the page component with `export default function`.",2208206590,"> Refine CLI can automatically switch its behavior based on the framework you are using—that's correct, and I didn't know that. Thank you for informing me.
> 
> I agree that keeping Refine CLI simple without adding options would be beneficial.
> 
> From your explanations so far, I now fully understand what you're trying to convey. So, regarding the new feature you proposed for Next.js (App Router), is it intended to work like this?
> 
> 1. Execute `npx refine add resource`.
> 2. Create CRUD component files under `/src/components/{resource name}`:
>    
>    * These files have the `use client` directive added at the top.
> 3. Create corresponding CRUD `page.tsx` files under `/src/app/{resource name}` in the appropriate directory structure:
>    
>    * Each `page.tsx` file returns the corresponding CRUD component generated in step 2.
>    * `page.tsx` files should not include the `use client` directive as they should run on the server.
> 
> Here is an example of the files that would be generated.
> 
> ↓`/src/components/users/list.tsx`
> 
> ```tsx
> ""use client"";
> 
> import { MuiInferencer } from ""@refinedev/inferencer/mui"";
> 
> export const UserList = () => {
>     return <MuiInferencer />;
> };
> ```
> 
> ↓`/src/app/page.tsx`
> 
> ```tsx
> import { UserList } from ""@components/users"";
> 
> export default function UserListPage() {
>     return (<UserList/>)
> }
> ```

Yes, I think this is good."
2384041056,6091,[FEAT] To simplify adding a page after adding resources using CLI with Next.js.,"### Is your feature request related to a problem? Please describe.

I usually use Refine with Next.js (App Router). The CLI command for adding resources is very convenient.

However, the files generated by the CLI are all components. Each time, I go through the following cumbersome process to convert them into pages:

1. Execute the npx refine add resource command.
    - This generates CRUD operation components under `/src/components/{resource name}`.
    - ![image](https://github.com/refinedev/refine/assets/41093158/1da5a526-3f95-49d2-bfd9-d318285c4014)
2. Move each .tsx file from `/src/components/{resource name}` to `/src/app/{resource name}`.
3. Modify the directory structure in `/src/app/{resource name}` according to the specifications in _refine_context.tsx. Rename each .tsx file moved in the previous step to page.tsx.
    - ![image](https://github.com/refinedev/refine/assets/41093158/8790da2b-33f2-4dd7-8c30-75b38df3e379)
4. Replace each `export const` in the CRUD pages with `export default function`;
    - before: `export const UsersShow = () => {`
    - after: `export default function UsersShow() {`
    - If I use `export const`, the following error will be displayed in the browser when I open the page.
      - `Error: The default export is not a React Component in page: ""/users/show/[id]""`


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Below is my request
1. When using Refine with Next.js, adding resources via CLI should generate appropriate page.tsx files under /src/app/.
2. Each generated page.tsx file should export the page component with `export default function`.",2209579519,Thank you. I will now start working on this task.
2384041056,6091,[FEAT] To simplify adding a page after adding resources using CLI with Next.js.,"### Is your feature request related to a problem? Please describe.

I usually use Refine with Next.js (App Router). The CLI command for adding resources is very convenient.

However, the files generated by the CLI are all components. Each time, I go through the following cumbersome process to convert them into pages:

1. Execute the npx refine add resource command.
    - This generates CRUD operation components under `/src/components/{resource name}`.
    - ![image](https://github.com/refinedev/refine/assets/41093158/1da5a526-3f95-49d2-bfd9-d318285c4014)
2. Move each .tsx file from `/src/components/{resource name}` to `/src/app/{resource name}`.
3. Modify the directory structure in `/src/app/{resource name}` according to the specifications in _refine_context.tsx. Rename each .tsx file moved in the previous step to page.tsx.
    - ![image](https://github.com/refinedev/refine/assets/41093158/8790da2b-33f2-4dd7-8c30-75b38df3e379)
4. Replace each `export const` in the CRUD pages with `export default function`;
    - before: `export const UsersShow = () => {`
    - after: `export default function UsersShow() {`
    - If I use `export const`, the following error will be displayed in the browser when I open the page.
      - `Error: The default export is not a React Component in page: ""/users/show/[id]""`


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Below is my request
1. When using Refine with Next.js, adding resources via CLI should generate appropriate page.tsx files under /src/app/.
2. Each generated page.tsx file should export the page component with `export default function`.",2271201224,"With thanks to the @noritsune's contribution, we've published this feature with our latest release of `@refinedev/cli` 🙏 "
2381528707,6090,[FEAT] Update @refinedev/appwrite's Appwrite SDK version,"### Is your feature request related to a problem? Please describe.

A `TypeError: e._formData.get is not a function` error pops up while running nextjs server action in client component which can hugely affect the DX.

#### Related Issues
https://github.com/vercel/next.js/issues/60687

#### Related Pull Requests
https://github.com/appwrite/sdk-generator/pull/834

The Appwrite Team fixed the issue and released the patch.


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Please update the Appwrite SDK regularly or at least update the SDK to the latest version.

Current @refinedev/appwrite's Appwrite SDK version: 10.0.1
Latest Appwrite SDK version: 15.0.0",2225787323,Hey @soranoo thanks for the detailed report! Would you like to work on this?
2381528707,6090,[FEAT] Update @refinedev/appwrite's Appwrite SDK version,"### Is your feature request related to a problem? Please describe.

A `TypeError: e._formData.get is not a function` error pops up while running nextjs server action in client component which can hugely affect the DX.

#### Related Issues
https://github.com/vercel/next.js/issues/60687

#### Related Pull Requests
https://github.com/appwrite/sdk-generator/pull/834

The Appwrite Team fixed the issue and released the patch.


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Please update the Appwrite SDK regularly or at least update the SDK to the latest version.

Current @refinedev/appwrite's Appwrite SDK version: 10.0.1
Latest Appwrite SDK version: 15.0.0",2226300479,"Sure, Im happy to do so~"
2381528707,6090,[FEAT] Update @refinedev/appwrite's Appwrite SDK version,"### Is your feature request related to a problem? Please describe.

A `TypeError: e._formData.get is not a function` error pops up while running nextjs server action in client component which can hugely affect the DX.

#### Related Issues
https://github.com/vercel/next.js/issues/60687

#### Related Pull Requests
https://github.com/appwrite/sdk-generator/pull/834

The Appwrite Team fixed the issue and released the patch.


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Please update the Appwrite SDK regularly or at least update the SDK to the latest version.

Current @refinedev/appwrite's Appwrite SDK version: 10.0.1
Latest Appwrite SDK version: 15.0.0",2227038565,"I tried to update to `15.0.0` but failed.
I got
![image](https://github.com/user-attachments/assets/d7df3678-52a3-4482-90a6-6c1c501c7372)

and I have no idea how to deal with it..."
2381528707,6090,[FEAT] Update @refinedev/appwrite's Appwrite SDK version,"### Is your feature request related to a problem? Please describe.

A `TypeError: e._formData.get is not a function` error pops up while running nextjs server action in client component which can hugely affect the DX.

#### Related Issues
https://github.com/vercel/next.js/issues/60687

#### Related Pull Requests
https://github.com/appwrite/sdk-generator/pull/834

The Appwrite Team fixed the issue and released the patch.


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Please update the Appwrite SDK regularly or at least update the SDK to the latest version.

Current @refinedev/appwrite's Appwrite SDK version: 10.0.1
Latest Appwrite SDK version: 15.0.0",2271199677,SDK is updated to the latest thanks to the efforts from @soranoo 🙏 Now available with `@refinedev/appwrite@7.0.0`
2380373175,6087,[FEAT] `useTable`'s state names `current` and `setCurrent` are confusing.,"### Is your feature request related to a problem? Please describe.

The return values of useTable related to pagination are as follows:

```ts
import {
 useTable
} from ""@refinedev/core"";

const { current, setCurrent, pageSize, setPageSize, pageCount } = useTable();
```

The purpose of `current` and `setCurrent` is to change the page, but it is unclear what `current` refers to.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

1. `current` and `setCurrent` should be deprecated.
2. `useTable` should return `page` and `setPage`, serving the same purpose.
3. `pagination.page` should be added to `useTable` props, and if `pagination.page` is provided, it should override `pagination.current`.
4. Both `current` and `page` should be sent to `dataProvider` to prevent breaking changes.
5. `syncWithLocation` should work with both fields without breaking changes.
6. `useParsed` should work with both fields without breaking changes.

```ts
const { current, setCurrent, pageSize, setPageSize, pageCount } = useTable({
  pagination: {
    page: 5,
    current: 5,
  },
});

```",2199425274,"After discussing this with the core team, we decided to implement it with Refine@5 because the `syncWithLocation` feature will cause a breaking change."
2378795133,6086,[BUG] - Serialized Error: { code: 'ERR_UNSUPPORTED_DIR_IMPORT' },"### Describe the bug

```
Directory import `node_modules/@mui/material/Box` is not supported resolving ES modules imported from `node_modules/@refinedev/mui/dist/index.mjs`.
```

After extensive research, I found out that Node.JS doesn't support Directory imports. At least not yet. This is an issue with the latest release of the `@refinedev/mui` library. It imports Material UI components via directories.

This error was noticed when running tests using vitest in my application.

### Steps To Reproduce

1. Setup a basic React application with Vite and install latest release of necessary dependencies for refine:
```
""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
```
2. Setup standard configurations for vitest after installing `vitest` , `@testing-library/dom`, `@testing-library/jest-dom`, `@testing-library/react`, and `@vitejs/plugin-react`.
3. Create a basic test file. `App.test.tsx`
4. Run vitest and see the error in the terminal.


### Expected behavior

I expected the tests to run properly. If there were no Directory imports in the `node_modules/@refinedev/mui/dist/index.mjs` file, there wouldn't have been an issue. A minor fix to move from directory imports to file imports will be good and following the standards set by Node.JS

### Packages

""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
""@refinedev/react-hook-form"": ""^4.8.20"",
""@refinedev/react-router-v6"": ""^4.5.11"",

### Additional Context

_No response_",2211010826,Same issue here
2378795133,6086,[BUG] - Serialized Error: { code: 'ERR_UNSUPPORTED_DIR_IMPORT' },"### Describe the bug

```
Directory import `node_modules/@mui/material/Box` is not supported resolving ES modules imported from `node_modules/@refinedev/mui/dist/index.mjs`.
```

After extensive research, I found out that Node.JS doesn't support Directory imports. At least not yet. This is an issue with the latest release of the `@refinedev/mui` library. It imports Material UI components via directories.

This error was noticed when running tests using vitest in my application.

### Steps To Reproduce

1. Setup a basic React application with Vite and install latest release of necessary dependencies for refine:
```
""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
```
2. Setup standard configurations for vitest after installing `vitest` , `@testing-library/dom`, `@testing-library/jest-dom`, `@testing-library/react`, and `@vitejs/plugin-react`.
3. Create a basic test file. `App.test.tsx`
4. Run vitest and see the error in the terminal.


### Expected behavior

I expected the tests to run properly. If there were no Directory imports in the `node_modules/@refinedev/mui/dist/index.mjs` file, there wouldn't have been an issue. A minor fix to move from directory imports to file imports will be good and following the standards set by Node.JS

### Packages

""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
""@refinedev/react-hook-form"": ""^4.8.20"",
""@refinedev/react-router-v6"": ""^4.5.11"",

### Additional Context

_No response_",2220512583,Same issue here
2378795133,6086,[BUG] - Serialized Error: { code: 'ERR_UNSUPPORTED_DIR_IMPORT' },"### Describe the bug

```
Directory import `node_modules/@mui/material/Box` is not supported resolving ES modules imported from `node_modules/@refinedev/mui/dist/index.mjs`.
```

After extensive research, I found out that Node.JS doesn't support Directory imports. At least not yet. This is an issue with the latest release of the `@refinedev/mui` library. It imports Material UI components via directories.

This error was noticed when running tests using vitest in my application.

### Steps To Reproduce

1. Setup a basic React application with Vite and install latest release of necessary dependencies for refine:
```
""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
```
2. Setup standard configurations for vitest after installing `vitest` , `@testing-library/dom`, `@testing-library/jest-dom`, `@testing-library/react`, and `@vitejs/plugin-react`.
3. Create a basic test file. `App.test.tsx`
4. Run vitest and see the error in the terminal.


### Expected behavior

I expected the tests to run properly. If there were no Directory imports in the `node_modules/@refinedev/mui/dist/index.mjs` file, there wouldn't have been an issue. A minor fix to move from directory imports to file imports will be good and following the standards set by Node.JS

### Packages

""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
""@refinedev/react-hook-form"": ""^4.8.20"",
""@refinedev/react-router-v6"": ""^4.5.11"",

### Additional Context

_No response_",2257980752,"Sorry for the issue everyone! This is related with the Material UI's ESM builds and their publishing methods. Check out the issue from Material UI https://github.com/mui/material-ui/issues/30671

We can update all our usage in `@refinedev/mui` from subpath imports to index imports for `@mui/material`, `@mui/icons-material` and `@mui/lab` which will fix the issue for vitest but previously we had issues with these imports for the bundle size especially in Next.js. We'll investigate if the current state of the bundlers work well to modularize those imports in our package.

Currently, due to issues in Material UI some bundler fail to interpret Material UI imports as ESM. This is not actionable on our side until there are any progress on Material UI side. 🙏 

As a workaround for vitest, inlining the `@refinedev/mui` dep. resolves the errors. Check out below code:

```diff
// vite.config.ts
/// <reference types=""vitest"" />
import { defineConfig } from ""vite"";
import react from ""@vitejs/plugin-react"";

export default defineConfig({
  plugins: [react()],
  test: {
    environment: ""jsdom"",
    setupFiles: [""./vitest-setup.js""],
+   server: {
+     deps: {
+       inline: [""@refinedev/mui""]
+     }
+   }
  }
});
```

We'll update this issue when we have any progress 🙏 "
2378795133,6086,[BUG] - Serialized Error: { code: 'ERR_UNSUPPORTED_DIR_IMPORT' },"### Describe the bug

```
Directory import `node_modules/@mui/material/Box` is not supported resolving ES modules imported from `node_modules/@refinedev/mui/dist/index.mjs`.
```

After extensive research, I found out that Node.JS doesn't support Directory imports. At least not yet. This is an issue with the latest release of the `@refinedev/mui` library. It imports Material UI components via directories.

This error was noticed when running tests using vitest in my application.

### Steps To Reproduce

1. Setup a basic React application with Vite and install latest release of necessary dependencies for refine:
```
""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
```
2. Setup standard configurations for vitest after installing `vitest` , `@testing-library/dom`, `@testing-library/jest-dom`, `@testing-library/react`, and `@vitejs/plugin-react`.
3. Create a basic test file. `App.test.tsx`
4. Run vitest and see the error in the terminal.


### Expected behavior

I expected the tests to run properly. If there were no Directory imports in the `node_modules/@refinedev/mui/dist/index.mjs` file, there wouldn't have been an issue. A minor fix to move from directory imports to file imports will be good and following the standards set by Node.JS

### Packages

""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
""@refinedev/react-hook-form"": ""^4.8.20"",
""@refinedev/react-router-v6"": ""^4.5.11"",

### Additional Context

_No response_",2258405916,Thanks @aliemir for the workaround !
2378795133,6086,[BUG] - Serialized Error: { code: 'ERR_UNSUPPORTED_DIR_IMPORT' },"### Describe the bug

```
Directory import `node_modules/@mui/material/Box` is not supported resolving ES modules imported from `node_modules/@refinedev/mui/dist/index.mjs`.
```

After extensive research, I found out that Node.JS doesn't support Directory imports. At least not yet. This is an issue with the latest release of the `@refinedev/mui` library. It imports Material UI components via directories.

This error was noticed when running tests using vitest in my application.

### Steps To Reproduce

1. Setup a basic React application with Vite and install latest release of necessary dependencies for refine:
```
""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
```
2. Setup standard configurations for vitest after installing `vitest` , `@testing-library/dom`, `@testing-library/jest-dom`, `@testing-library/react`, and `@vitejs/plugin-react`.
3. Create a basic test file. `App.test.tsx`
4. Run vitest and see the error in the terminal.


### Expected behavior

I expected the tests to run properly. If there were no Directory imports in the `node_modules/@refinedev/mui/dist/index.mjs` file, there wouldn't have been an issue. A minor fix to move from directory imports to file imports will be good and following the standards set by Node.JS

### Packages

""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
""@refinedev/react-hook-form"": ""^4.8.20"",
""@refinedev/react-router-v6"": ""^4.5.11"",

### Additional Context

_No response_",2262657769,"Thanks, @aliemir !!
I just implemented the workaround, and it works fine. 
Yes, unfortunately, the changes are dependent on Material UI, but hopefully, they fix up soon and a more comprehensive fix can be implemented by the refinedev team. 

Great work💯🫡"
2378795133,6086,[BUG] - Serialized Error: { code: 'ERR_UNSUPPORTED_DIR_IMPORT' },"### Describe the bug

```
Directory import `node_modules/@mui/material/Box` is not supported resolving ES modules imported from `node_modules/@refinedev/mui/dist/index.mjs`.
```

After extensive research, I found out that Node.JS doesn't support Directory imports. At least not yet. This is an issue with the latest release of the `@refinedev/mui` library. It imports Material UI components via directories.

This error was noticed when running tests using vitest in my application.

### Steps To Reproduce

1. Setup a basic React application with Vite and install latest release of necessary dependencies for refine:
```
""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
```
2. Setup standard configurations for vitest after installing `vitest` , `@testing-library/dom`, `@testing-library/jest-dom`, `@testing-library/react`, and `@vitejs/plugin-react`.
3. Create a basic test file. `App.test.tsx`
4. Run vitest and see the error in the terminal.


### Expected behavior

I expected the tests to run properly. If there were no Directory imports in the `node_modules/@refinedev/mui/dist/index.mjs` file, there wouldn't have been an issue. A minor fix to move from directory imports to file imports will be good and following the standards set by Node.JS

### Packages

""@refinedev/core"": ""^4.51.0"",
""@refinedev/mui"": ""^5.17.0"",
""@refinedev/react-hook-form"": ""^4.8.20"",
""@refinedev/react-router-v6"": ""^4.5.11"",

### Additional Context

_No response_",2383843430,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
2378079455,6085,[BUG] graphql-default naming convention in Hasura does not seem to be supported in Refine,"### Describe the bug

I am having difficulties correctly fetching data from my database using Hasura as the data provider. I am trying to utilize the useList hook to retrieve data, using the following code snippet:

```
export const DashboardTasksChart: React.FC = () => {
   const { list } = useNavigation();
   const { data, isError, error } = useList<
      GetFieldsFromList<DashboardTasksChartQuery>
    >({
      resource: ""task_stages"",
      pagination: {
        pageSize: 4,
      },
      sorters: [
        {
          field: ""title"",
          order: ""asc"",
        },
      ],
      filters: [
        {
          field: ""id"",
          operator: ""eq"",
          value: 1,
        },
      ],
      meta: { 
        gqlQuery: DASHBOARD_TASKS_CHART_QUERY
      },
    });

    if (isError) {
      console.error(""Error fetching task chart data"", error);
      return null;
      }

...
```

While using sorters, I get the following error in the console:

`Error: expected one of the values ['ASC', 'ASC_NULLS_FIRST', 'ASC_NULLS_LAST', 'DESC', 'DESC_NULLS_FIRST', 'DESC_NULLS_LAST'] for type 'OrderBy', but found 'asc':`

If I make 'asc' uppercase, I get the following warning in my IDE:
```
Type '""DESC""' is not assignable to type '""asc"" | ""desc""'. Did you mean '""desc""'?
```
It seems crudSort is hard-coded to only accept lowercase sorters, which Hasura does not accept (using the graphql-default naming convention, released 2022).

If I remove the sorters, and only use the filtering, I get the following error in the console:
```
Error: variable 'where' is declared as 'taskStages_bool_exp', but used where 'TaskStagesBoolExp' is expected: {""response"":{""errors"":[{""message"":""variable 'where' is declared as 'taskStages_bool_exp', but used where 'TaskStagesBoolExp' is expected"",""extensions"":{""path"":""$.selectionSet.taskStages.args.where"",""code"":""validation-failed""}}],""status"":200,""headers"":{""map"":{""content-type"":""application/json; charset=utf-8""}}},""request"":{""query"":""query ($limit: Int, $offset: Int, $where: taskStages_bool_exp) { taskStages (limit: $limit, offset: $offset, where: $where)  taskStages_aggregate (where: $where) { aggregate { count } } }"",""variables"":{""limit"":4,""offset"":0,""where"":{""_and"":[{""id"":{""_eq"":1}}]}}}}
```

Hasura default uses taskStages_bool_exp, but with the graphql-default naming convention, it expects types as PascalCase, such as: `TaskStagesBoolExp`, which is defined in my query:

```
export const DASHBOARD_TASKS_CHART_QUERY = gql`
    query DashboardTasksChart(
        $where: TaskStagesBoolExp
        $order_by: [TaskStagesOrderBy!]
        $limit: Int!
        $offset: Int!
    ) {
        taskStages(where: $where, orderBy: $order_by, limit: $limit, offset: $offset) {
            title
            tasksAggregate {
                aggregate {
                    totalCount: count
                }
            }
        }
    }
`;
``` 

Is there any quick-fix to making the naming-convention I have started with, correctly working?
Thanks in advance.

### Steps To Reproduce

1. See code snippets in bug description (using the app-crm template with change of dataprovider and my own queries)
2. Run `npm run refine dev`
3. See console outputs
4. Also IDE warnings regarding CrudSort

### Expected behavior

Correctly fetching data from Hasura data provider.

### Packages

- import { useList, useNavigation } from ""@refinedev/core""; Version: ""^4.51.0""
- import { GetFieldsFromList } from ""@refinedev/hasura""; Version: ""^6.6.4""

### Additional Context

_No response_

Edit: updated versions of packages",2194692107,"I did not dive too much into the code before writing, but it seems to be a setting for naming convention when defining dataProvider, as follows:
```
export const dataProvider = DataProvider(client, { namingConvention: ""graphql-default"" });
```

I looked through all the documentation, and did not find anything about it there. Should be added to Hasura Data Provider page."
2377654050,6082,[BUG] `useDrawerForm`'s `submit` and `form` props are not working.,"### Describe the bug

The `useDrawerForm` [prop types extend](https://github.com/refinedev/refine/blob/master/packages/antd/src/hooks/form/useDrawerForm/useDrawerForm.ts#L23) the `UseFormConfig` type from ""sunflower-antd,"" which includes the `submit` and `form` fields, but `useDrawerForm` does not use these fields.




### Steps To Reproduce

`useDrawerForm` prop types file path: https://github.com/refinedev/refine/blob/master/packages/antd/src/hooks/form/useDrawerForm/useDrawerForm.ts#L23 

### Expected behavior

`useDrawerForm` shouldn't have these fields.

### Packages

- @refinedev/antd

### Additional Context

_No response_",,
2367989290,6072,[FEAT]: Typed resources,"### Is your feature request related to a problem? Please describe.

1) I'm not getting type feedback on whether my type input of a resource is correct.
2) I'm not getting a return type based on the used resource when using for example ""useOne"" and have to manually do it. 

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Would be nice to know that a resource I'm calling exists via types. So I'm getting a type error if I'm calling ""product"" instead of ""products"" for example. 

This would be the first implementation I'd really enjoy. 

A bonus implementation, if even possible would be to automagically type the return type of the resources used, right now I'm manually marking them, this solution does work just fine, but it definitely would be more sleek if I didn't have to. ",2186028586,"Hi @JuicyBenjamin, This is a great idea to improve the developer experience 🚀"
2367989290,6072,[FEAT]: Typed resources,"### Is your feature request related to a problem? Please describe.

1) I'm not getting type feedback on whether my type input of a resource is correct.
2) I'm not getting a return type based on the used resource when using for example ""useOne"" and have to manually do it. 

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Would be nice to know that a resource I'm calling exists via types. So I'm getting a type error if I'm calling ""product"" instead of ""products"" for example. 

This would be the first implementation I'd really enjoy. 

A bonus implementation, if even possible would be to automagically type the return type of the resources used, right now I'm manually marking them, this solution does work just fine, but it definitely would be more sleek if I didn't have to. ",2307211482,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
2364357939,6061,[FEAT]: Have ability to sort `selectedOptions` first in `useSelect`,"### Is your feature request related to a problem? Please describe.

Currently we use `useSelect` with `defaultValue` to add extra options in our select list. But when `options` have more records like 30-50 records so the `selectedOptions` is at the bottom. 

We want `selectedOptions` at first position of the list.

```ts
useSelect({
  defaultValue: 1, // or [1, 2]
});
```

### Describe alternatives you've considered

First option, we can switch the order of  `selectedOptions` first then `options`.
![image](https://github.com/refinedev/refine/assets/14802170/0286060f-7feb-490d-92af-26f32da8ec8f)

Second option, have a property to sort by `selectedOptions` or `options` first.

```ts
useSelect({
  defaultValue: 1, 
 selectedOptionsSort: 'asc' | 'desc'  // <--- something like that, we can have better name than this.
});
```


### Additional context

At the bove.

### Describe the thing to improve

N/A",2182320936,"Hey @Dominic-Preap thank you for the issue! I think this makes sense and can benefit many use-cases. 🚀 We've discussed on how we can implement those changes and decided like below:

```ts
type SelectedOptionsOrder = ""in-place"" | ""selected-first"";

type UseSelectProps<...> = {
  /* ... */
  selectedOptionsOrder?: SelectedOptionsOrder; // This will be default to ""in-place"" which is. the current behavior.
}
```

Then use the `selectedOptionsOrder` to determine the order in the line 365:

https://github.com/refinedev/refine/blob/90930b381d8d369c63bc59beedf69c391875166d/packages/core/src/hooks/useSelect/index.ts#L365

Default value should be `""in-place""` in order to keep the current behavior as default. 

There are also extensions of the `useSelect` hook such as `useSelect` from `@refinedev/antd` which may require small changes but I guess those won't take much time or might not require any change at all.

Do you want to work on this issue? We'd love to see your contribution 🙏 Check out our [Contributing Guide](https://refine.dev/docs/guides-concepts/contributing) to learn how to get started 🚀 🚀 

Let us know if you can work on this and please let us know if you have any issues while working on it 💯 "
2361215464,6056,[BUG] errorNotification has invalid argument type,"### Describe the bug

`errorNotification` 's 1st argument is `error`.
But, The real type is `Response`,
Please fix it.

![image](https://github.com/refinedev/refine/assets/25629617/6c1aa6ab-91c4-4bd2-b398-a6a0546b6551)

And, please support async / await.
I want write code, like this.




### Steps To Reproduce

```
 refineCoreProps: {
      errorNotification: (error) => {
        console.log(""on error notification"")

        // const response = error as unknown as Response
        console.log(error)

        const obj = await response.json() as MyErrorType
        return {
          type: ""error"",
          message: obj.message,
          description: obj.description,
        } as OpenNotificationParams
      },
    },
```

### Expected behavior

- Please fix, the 1st argument type
- Please support async / await 

### Packages

Next.js

### Additional Context

_No response_",2179502186,"Change the Argument Type: Update the argument type of the errorNotification function to match the actual type (Response).
Support Async/Await: Modify the function to support async/await syntax.
For example, if the function is defined in a TypeScript file, it might look like this:

import { OpenNotificationParams } from 'path/to/type/definition';

async function errorNotification(response: Response): Promise<OpenNotificationParams> {
    console.log(""on error notification"");
    console.log(response);

    const obj = await response.json() as MyErrorType;
    return {
        type: ""error"",
        message: obj.message,
        description: obj.description,
    };
}
"
2361215464,6056,[BUG] errorNotification has invalid argument type,"### Describe the bug

`errorNotification` 's 1st argument is `error`.
But, The real type is `Response`,
Please fix it.

![image](https://github.com/refinedev/refine/assets/25629617/6c1aa6ab-91c4-4bd2-b398-a6a0546b6551)

And, please support async / await.
I want write code, like this.




### Steps To Reproduce

```
 refineCoreProps: {
      errorNotification: (error) => {
        console.log(""on error notification"")

        // const response = error as unknown as Response
        console.log(error)

        const obj = await response.json() as MyErrorType
        return {
          type: ""error"",
          message: obj.message,
          description: obj.description,
        } as OpenNotificationParams
      },
    },
```

### Expected behavior

- Please fix, the 1st argument type
- Please support async / await 

### Packages

Next.js

### Additional Context

_No response_",2179632380,"Excuse me, I just wanted to make suggestions. I'll be more thorough if I can get to this later, thanks."
2361215464,6056,[BUG] errorNotification has invalid argument type,"### Describe the bug

`errorNotification` 's 1st argument is `error`.
But, The real type is `Response`,
Please fix it.

![image](https://github.com/refinedev/refine/assets/25629617/6c1aa6ab-91c4-4bd2-b398-a6a0546b6551)

And, please support async / await.
I want write code, like this.




### Steps To Reproduce

```
 refineCoreProps: {
      errorNotification: (error) => {
        console.log(""on error notification"")

        // const response = error as unknown as Response
        console.log(error)

        const obj = await response.json() as MyErrorType
        return {
          type: ""error"",
          message: obj.message,
          description: obj.description,
        } as OpenNotificationParams
      },
    },
```

### Expected behavior

- Please fix, the 1st argument type
- Please support async / await 

### Packages

Next.js

### Additional Context

_No response_",2179997265,"Could you be more clear with what do you mean? This might return response or anything else, it depends on the situtation. But what Refine needs is this error structure. These fields will be used to render error notification. It may have more fields than that, but they are redundant."
2349114466,6044,[BUG] Named export 'mapValues' not found. The requested module 'lodash' is a CommonJS module,"### Describe the bug

I'm using the nextJS frontend environment and trying to connect my Hasura backend with @refinedev/hasura. However, I've been encountering this issue from the start.

Server Error
SyntaxError: Named export 'mapValues' not found. The requested module 'lodash' is a CommonJS module, which may not support all module.exports as named exports.
CommonJS modules can always be imported via the default export, for example using:

import pkg from 'lodash';
const {id:l},operation:u};let{query:q,variables:o}=E.subscription({operation:u,variables:{id:{value:l,type:""uuid"",required:!0},...s.variables},fields:s.fields});return{query:q,variables:o,operation:u}};import Z from""lodash-es/mapKeys.js"";import m from""camelcase"";var j=n=>{if(n)return Z(n,(s,l)=>m(l))};import{mapValues: ee}from""lodash"";var I=n=>{if(n)return ee(n,s=>s.toUpperCase())};import S from""camelcase"";import O from""graphql-tag"";var se=(n,s)=>{let{idType:l,namingConvention:u=""hasura-default""}=s??{},i=u===""hasura-default"",q=o=>typeof l==""function""?l(o):l??""uuid"";return{getOne:async({resource:o,id:p,meta:e})=>{let r=i?`${(e==null?void 0:e.operation)??o}_by_pk`:g(`${(e==null?void 0:e.operation)??o}_by_pk`),t=S(r,{pascalCase:!0}),a=(e==null?void 0:e.gqlQuery)??(e==null?void 0:e.gqlMutation);if(a){let f=a,_={id:p} = pkg;

This error happened while generating the page. Any console logs will be displayed in the terminal window.
Call Stack
<unknown>
file:///Users/riyaz/Projects/Binit/portal/node_modules/@refinedev/hasura/dist/index.mjs (21)

### Steps To Reproduce

Just create a client with @refinedev/hasura

### Expected behavior

--

### Packages

- @refinedev/hasura

### Additional Context

_No response_",2164809314,"Hey @riyaz-binit-ai can you provide a minimal reproducible example? It's not helping if you don't provide as much as details possible, such as versions of the packages."
2349114466,6044,[BUG] Named export 'mapValues' not found. The requested module 'lodash' is a CommonJS module,"### Describe the bug

I'm using the nextJS frontend environment and trying to connect my Hasura backend with @refinedev/hasura. However, I've been encountering this issue from the start.

Server Error
SyntaxError: Named export 'mapValues' not found. The requested module 'lodash' is a CommonJS module, which may not support all module.exports as named exports.
CommonJS modules can always be imported via the default export, for example using:

import pkg from 'lodash';
const {id:l},operation:u};let{query:q,variables:o}=E.subscription({operation:u,variables:{id:{value:l,type:""uuid"",required:!0},...s.variables},fields:s.fields});return{query:q,variables:o,operation:u}};import Z from""lodash-es/mapKeys.js"";import m from""camelcase"";var j=n=>{if(n)return Z(n,(s,l)=>m(l))};import{mapValues: ee}from""lodash"";var I=n=>{if(n)return ee(n,s=>s.toUpperCase())};import S from""camelcase"";import O from""graphql-tag"";var se=(n,s)=>{let{idType:l,namingConvention:u=""hasura-default""}=s??{},i=u===""hasura-default"",q=o=>typeof l==""function""?l(o):l??""uuid"";return{getOne:async({resource:o,id:p,meta:e})=>{let r=i?`${(e==null?void 0:e.operation)??o}_by_pk`:g(`${(e==null?void 0:e.operation)??o}_by_pk`),t=S(r,{pascalCase:!0}),a=(e==null?void 0:e.gqlQuery)??(e==null?void 0:e.gqlMutation);if(a){let f=a,_={id:p} = pkg;

This error happened while generating the page. Any console logs will be displayed in the terminal window.
Call Stack
<unknown>
file:///Users/riyaz/Projects/Binit/portal/node_modules/@refinedev/hasura/dist/index.mjs (21)

### Steps To Reproduce

Just create a client with @refinedev/hasura

### Expected behavior

--

### Packages

- @refinedev/hasura

### Additional Context

_No response_",2165485378,"Hey @BatuhanW, Thanks for your quick response. I have installed the latest version of @refinedev/hasura (v6.6.4) and created a data provider from it. When I used the data provider in my application, it caused the above issue. However, after downgrading the package to @refinedev/hasura@6.5.1, everything is now working fine without any issues. It seems that the issue is only occurring in the latest version."
2349114466,6044,[BUG] Named export 'mapValues' not found. The requested module 'lodash' is a CommonJS module,"### Describe the bug

I'm using the nextJS frontend environment and trying to connect my Hasura backend with @refinedev/hasura. However, I've been encountering this issue from the start.

Server Error
SyntaxError: Named export 'mapValues' not found. The requested module 'lodash' is a CommonJS module, which may not support all module.exports as named exports.
CommonJS modules can always be imported via the default export, for example using:

import pkg from 'lodash';
const {id:l},operation:u};let{query:q,variables:o}=E.subscription({operation:u,variables:{id:{value:l,type:""uuid"",required:!0},...s.variables},fields:s.fields});return{query:q,variables:o,operation:u}};import Z from""lodash-es/mapKeys.js"";import m from""camelcase"";var j=n=>{if(n)return Z(n,(s,l)=>m(l))};import{mapValues: ee}from""lodash"";var I=n=>{if(n)return ee(n,s=>s.toUpperCase())};import S from""camelcase"";import O from""graphql-tag"";var se=(n,s)=>{let{idType:l,namingConvention:u=""hasura-default""}=s??{},i=u===""hasura-default"",q=o=>typeof l==""function""?l(o):l??""uuid"";return{getOne:async({resource:o,id:p,meta:e})=>{let r=i?`${(e==null?void 0:e.operation)??o}_by_pk`:g(`${(e==null?void 0:e.operation)??o}_by_pk`),t=S(r,{pascalCase:!0}),a=(e==null?void 0:e.gqlQuery)??(e==null?void 0:e.gqlMutation);if(a){let f=a,_={id:p} = pkg;

This error happened while generating the page. Any console logs will be displayed in the terminal window.
Call Stack
<unknown>
file:///Users/riyaz/Projects/Binit/portal/node_modules/@refinedev/hasura/dist/index.mjs (21)

### Steps To Reproduce

Just create a client with @refinedev/hasura

### Expected behavior

--

### Packages

- @refinedev/hasura

### Additional Context

_No response_",2180000807,Hey @riyaz-binit-ai thanks for the report and details! @aliemir already raised a PR for this one. It will be release in the next release cycle.
2349114466,6044,[BUG] Named export 'mapValues' not found. The requested module 'lodash' is a CommonJS module,"### Describe the bug

I'm using the nextJS frontend environment and trying to connect my Hasura backend with @refinedev/hasura. However, I've been encountering this issue from the start.

Server Error
SyntaxError: Named export 'mapValues' not found. The requested module 'lodash' is a CommonJS module, which may not support all module.exports as named exports.
CommonJS modules can always be imported via the default export, for example using:

import pkg from 'lodash';
const {id:l},operation:u};let{query:q,variables:o}=E.subscription({operation:u,variables:{id:{value:l,type:""uuid"",required:!0},...s.variables},fields:s.fields});return{query:q,variables:o,operation:u}};import Z from""lodash-es/mapKeys.js"";import m from""camelcase"";var j=n=>{if(n)return Z(n,(s,l)=>m(l))};import{mapValues: ee}from""lodash"";var I=n=>{if(n)return ee(n,s=>s.toUpperCase())};import S from""camelcase"";import O from""graphql-tag"";var se=(n,s)=>{let{idType:l,namingConvention:u=""hasura-default""}=s??{},i=u===""hasura-default"",q=o=>typeof l==""function""?l(o):l??""uuid"";return{getOne:async({resource:o,id:p,meta:e})=>{let r=i?`${(e==null?void 0:e.operation)??o}_by_pk`:g(`${(e==null?void 0:e.operation)??o}_by_pk`),t=S(r,{pascalCase:!0}),a=(e==null?void 0:e.gqlQuery)??(e==null?void 0:e.gqlMutation);if(a){let f=a,_={id:p} = pkg;

This error happened while generating the page. Any console logs will be displayed in the terminal window.
Call Stack
<unknown>
file:///Users/riyaz/Projects/Binit/portal/node_modules/@refinedev/hasura/dist/index.mjs (21)

### Steps To Reproduce

Just create a client with @refinedev/hasura

### Expected behavior

--

### Packages

- @refinedev/hasura

### Additional Context

_No response_",2180164943,Great 🙌 @BatuhanW @aliemir 
2348394201,6041,[BUG] types are not exported,"### Describe the bug

It's not possible to `import { ValidationErrors } from '@refinedev/core';` 

There are many unexported types, i'm using ValidationErrors as an example.

### Steps To Reproduce

`import { ValidationErrors } from '@refinedev/core'`

### Expected behavior

All types defined by `@refinedev/core` are exported in the library's index.

### Packages

@refinedev/core@4.49.1

### Additional Context
A temporary workaround
`import type { ValidationErrors } from '@refinedev/core/dist/contexts/data/types';`
",2162667397,"Hey @borisyordanov, sorry for the issue! It seems that we forgot to export this type. If you wish, you can send a PR for this. We would be happy to see your contribution. Check out our [Contributing Guide](https://refine.dev/docs/guides-concepts/contributing) to get started! 🚀 

As a workaround, I think you can use `HttpError` type and access the `errors` property with something like below:

```ts
import type { HttpError } from ""@refinedev/core"";

type ValidationErrors = NonNullable<HttpError[""errors""]>;
```
"
2348394201,6041,[BUG] types are not exported,"### Describe the bug

It's not possible to `import { ValidationErrors } from '@refinedev/core';` 

There are many unexported types, i'm using ValidationErrors as an example.

### Steps To Reproduce

`import { ValidationErrors } from '@refinedev/core'`

### Expected behavior

All types defined by `@refinedev/core` are exported in the library's index.

### Packages

@refinedev/core@4.49.1

### Additional Context
A temporary workaround
`import type { ValidationErrors } from '@refinedev/core/dist/contexts/data/types';`
",2162669511,"To make the issue clear for everyone willing to contribute, can you give us a list of types that are missing from the exports? 🙏 "
2348394201,6041,[BUG] types are not exported,"### Describe the bug

It's not possible to `import { ValidationErrors } from '@refinedev/core';` 

There are many unexported types, i'm using ValidationErrors as an example.

### Steps To Reproduce

`import { ValidationErrors } from '@refinedev/core'`

### Expected behavior

All types defined by `@refinedev/core` are exported in the library's index.

### Packages

@refinedev/core@4.49.1

### Additional Context
A temporary workaround
`import type { ValidationErrors } from '@refinedev/core/dist/contexts/data/types';`
",2162771441,"@aliemir I can make a list, but don't think it'd be practical in the long term to keep the list up-to-date. My advice is to export everything by default. This is what [other popular libraries](https://github.com/mui/material-ui/blob/next/packages/mui-base/src/index.js) are doing.

If this is OK with you I'll submit [my PR ](https://github.com/refinedev/refine/pull/6042/files) for review"
2348394201,6041,[BUG] types are not exported,"### Describe the bug

It's not possible to `import { ValidationErrors } from '@refinedev/core';` 

There are many unexported types, i'm using ValidationErrors as an example.

### Steps To Reproduce

`import { ValidationErrors } from '@refinedev/core'`

### Expected behavior

All types defined by `@refinedev/core` are exported in the library's index.

### Packages

@refinedev/core@4.49.1

### Additional Context
A temporary workaround
`import type { ValidationErrors } from '@refinedev/core/dist/contexts/data/types';`
",2162833051,"@borisyordanov, especially in `@refinedev/core` we have many internal stuff which we don't want to expose to users to avoid confusion. We're planning using subpath exports and tidy-up our exports, then we can use asterisk re-exports at `index.ts` safely. For now, we're not planning to use `*` re-exports 🙏"
2348394201,6041,[BUG] types are not exported,"### Describe the bug

It's not possible to `import { ValidationErrors } from '@refinedev/core';` 

There are many unexported types, i'm using ValidationErrors as an example.

### Steps To Reproduce

`import { ValidationErrors } from '@refinedev/core'`

### Expected behavior

All types defined by `@refinedev/core` are exported in the library's index.

### Packages

@refinedev/core@4.49.1

### Additional Context
A temporary workaround
`import type { ValidationErrors } from '@refinedev/core/dist/contexts/data/types';`
",2165654455,"Hi @aliemir, I'd like to fix this and add any other types that are missing from the exports too."
2348394201,6041,[BUG] types are not exported,"### Describe the bug

It's not possible to `import { ValidationErrors } from '@refinedev/core';` 

There are many unexported types, i'm using ValidationErrors as an example.

### Steps To Reproduce

`import { ValidationErrors } from '@refinedev/core'`

### Expected behavior

All types defined by `@refinedev/core` are exported in the library's index.

### Packages

@refinedev/core@4.49.1

### Additional Context
A temporary workaround
`import type { ValidationErrors } from '@refinedev/core/dist/contexts/data/types';`
",2182255945,Hey @FatimaSaleem21 assigning issue to you. 
2348262077,6040,[BUG] Property 'refineCoreProps' does not exist on type 'UseFormProps,"### Describe the bug

When attempting to extend useForm, an unexpected type error apears. TS thinks `refineCoreProps` is missing even though it exists in the actual variable.

### Steps To Reproduce

1. Open this devbox - https://codesandbox.io/p/devbox/l5725k?file=%2Fedit-page.tsx%3A10%2C26
2. Inspect the type error
![image](https://github.com/refinedev/refine/assets/12392666/ea35e982-cb51-42aa-a4cf-0e273e067f3a)


### Expected behavior

Entities exported by refine have unique names.

### Packages

![image](https://github.com/refinedev/refine/assets/12392666/b6da6ca8-da3b-4a16-8d83-2879d5852c88)


### Additional Context

It seems that @refinedev/react-hook-form AND @refinedev/core export a type with the same name `UseFormProps`. Importing it from the former works, but not the latter.",2162771790,"Hey @borisyordanov, We have UseFormProps in both @refinedev/core and @refinedev/react-hook-form. Additionally, we have useForm in both as well. The latter is an extended version of the former. If you're going to extend the one from `@refinedev/react-hook-form` you'll need to use the `UseFormProps` from that package as well. 

I think I understand the confusion here, we might need to rename them to be explicit 🤔 Do you have any suggestion how we can avoid confusion here? 🙏 

"
2348262077,6040,[BUG] Property 'refineCoreProps' does not exist on type 'UseFormProps,"### Describe the bug

When attempting to extend useForm, an unexpected type error apears. TS thinks `refineCoreProps` is missing even though it exists in the actual variable.

### Steps To Reproduce

1. Open this devbox - https://codesandbox.io/p/devbox/l5725k?file=%2Fedit-page.tsx%3A10%2C26
2. Inspect the type error
![image](https://github.com/refinedev/refine/assets/12392666/ea35e982-cb51-42aa-a4cf-0e273e067f3a)


### Expected behavior

Entities exported by refine have unique names.

### Packages

![image](https://github.com/refinedev/refine/assets/12392666/b6da6ca8-da3b-4a16-8d83-2879d5852c88)


### Additional Context

It seems that @refinedev/react-hook-form AND @refinedev/core export a type with the same name `UseFormProps`. Importing it from the former works, but not the latter.",2162800225,"@aliemir Ideally there'd be a lint rule to protect you against duplicate names, but there don't seem to be [any good options](https://github.com/eslint/eslint/issues/6573).

My advice is to adopt a naming convention for each of your packages. Add a prefix or suffix to distinguish between two similar, but separate entities. Example [ButtonBase](https://github.com/mui/material-ui/blob/22c5206a9e8191b2f81131d6978a0958e55b7032/packages/mui-material/src/ButtonBase/ButtonBase.js) and [Button](https://github.com/mui/material-ui/blob/next/packages/mui-material/src/Button/Button.js).

When you have decided on a convention it can be enforced with https://typescript-eslint.io/rules/naming-convention/#prefix--suffix where each one of your packages will have the rule configured differently.

The end result would be that you can safely import:
```ts
// before
import { UseFormProps } from ""@refinedev/core"";
import { UseFormProps } from ""@refinedev/react-hook-form"";

// after
import { UseFormPropsCore } from ""refinedev/core"";
import { UseFormPropsHookForm } from ""@refinedev/react-hook-form"";
```

I hope you'll be able to come up with a more elegant solution, but this is the best option I can think of atm."
2348262077,6040,[BUG] Property 'refineCoreProps' does not exist on type 'UseFormProps,"### Describe the bug

When attempting to extend useForm, an unexpected type error apears. TS thinks `refineCoreProps` is missing even though it exists in the actual variable.

### Steps To Reproduce

1. Open this devbox - https://codesandbox.io/p/devbox/l5725k?file=%2Fedit-page.tsx%3A10%2C26
2. Inspect the type error
![image](https://github.com/refinedev/refine/assets/12392666/ea35e982-cb51-42aa-a4cf-0e273e067f3a)


### Expected behavior

Entities exported by refine have unique names.

### Packages

![image](https://github.com/refinedev/refine/assets/12392666/b6da6ca8-da3b-4a16-8d83-2879d5852c88)


### Additional Context

It seems that @refinedev/react-hook-form AND @refinedev/core export a type with the same name `UseFormProps`. Importing it from the former works, but not the latter.",2182307979,"Hey @borisyordanov, thank you for the suggestion. We've discussed with the team and decided not to take any actions for now about the naming conventions. In the future, there may be changes related to how we export things and changes in the naming may cause issues with those. 

Thank you for reporting, closing this issue for now. I'll update here and mention this issue when we have related changes planned/implemented. 🙏 "
2347169663,6036,[BUG] NextJs 14 and latest versions of package.json: dataProvider is not a function,"### Describe the bug

Hi guys, seems very strange...
Basically I'm usine nextjs headless version with refine and updated all packages.json to latest versions (photo 1)
When run dev it shows me error:
![Screenshot 2024-06-11 alle 21 46 19](https://github.com/refinedev/refine/assets/172402530/7950f550-9bf8-471a-9349-7d940f7cf9b2)

![Screenshot 2024-06-11 alle 21 48 49](https://github.com/refinedev/refine/assets/172402530/cf9a145e-0987-42a4-ac42-08b94de5520f)


### Steps To Reproduce

1. run `ncu -u` to update all packages
2. `npm i` to install
3. `npm run dev`

### Expected behavior

All must working correctly

### Packages

refine/core
refine/simple-rest

### Additional Context

_No response_",2162693896,"Hey @vitali-bc, just created a new Refine + Next.js project using `npm create refine-app@latest`:

We have `src/providers/data-provider/index.ts` file which exports the `dataProvider`, it seems like your import is also coming from the same location. Exported `dataProvider` is not a function but an object (a data provider instance).

We also export a `dataProvider` from `@refinedev/simple-rest` (also in other data provider packages) which is a function and can be used like the way you do:

```tsx
import { Refine } from ""@refinedev/core"";
import dataProvider from ""@refinedev/simple-rest"";

export function RootLayout() {
  return (
    <Refine
      dataProvider={dataProvider(""https://api.fake-rest.refine.dev"")}
    >
       ...
    </Refine>
  }
}
```

In your case, updating the import or updating the usage will resolve the issue.

If this happened after freshly created Refine project, can you share your choices so we can track down the issue 🙏 "
2347169663,6036,[BUG] NextJs 14 and latest versions of package.json: dataProvider is not a function,"### Describe the bug

Hi guys, seems very strange...
Basically I'm usine nextjs headless version with refine and updated all packages.json to latest versions (photo 1)
When run dev it shows me error:
![Screenshot 2024-06-11 alle 21 46 19](https://github.com/refinedev/refine/assets/172402530/7950f550-9bf8-471a-9349-7d940f7cf9b2)

![Screenshot 2024-06-11 alle 21 48 49](https://github.com/refinedev/refine/assets/172402530/cf9a145e-0987-42a4-ac42-08b94de5520f)


### Steps To Reproduce

1. run `ncu -u` to update all packages
2. `npm i` to install
3. `npm run dev`

### Expected behavior

All must working correctly

### Packages

refine/core
refine/simple-rest

### Additional Context

_No response_",2162735320,"Yes it works, but problem persists when you are updating all packages to
latest versions.
Try to, thanks

Il giorno mer 12 giu 2024 alle 12:47 Ali Emir Şen ***@***.***>
ha scritto:

> Hey @vitali-bc <https://github.com/vitali-bc>, just created a new Refine
> + Next.js project using npm create ***@***.***:
>
> We have src/providers/data-provider/index.ts file which exports the
> dataProvider, it seems like your import is also coming from the same
> location. Exported dataProvider is not a function but an object (a data
> provider instance).
>
> We also export a dataProvider from @refinedev/simple-rest (also in other
> data provider packages) which is a function and can be used like the way
> you do:
>
> import { Refine } from ***@***.***/core"";import dataProvider from ***@***.***/simple-rest"";
> export function RootLayout() {
>   return (
>     <Refine
>       dataProvider={dataProvider(""https://api.fake-rest.refine.dev"")}
>     >
>        ...
>     </Refine>
>   }}
>
> In your case, updating the import or updating the usage will resolve the
> issue.
>
> If this happened after freshly created Refine project, can you share your
> choices so we can track down the issue 🙏
>
> —
> Reply to this email directly, view it on GitHub
> <https://github.com/refinedev/refine/issues/6036#issuecomment-2162693896>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/BJDKOYTGI2GDOPG2R2KXP4DZHARLPAVCNFSM6AAAAABJE7TITSVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCNRSGY4TGOBZGY>
> .
> You are receiving this because you were mentioned.Message ID:
> ***@***.***>
>
"
2347119476,6035,[BUG] corrupted data-rpvider code when npm run refine swizzle,"### Describe the bug

![Screenshot 2024-06-11 alle 21 15 18](https://github.com/refinedev/refine/assets/172402530/44d44b46-d380-4ef5-b299-c2e3d30d6e67)


### Steps To Reproduce

npm run refine swizzle
yes
you will see code is corrupted

### Expected behavior

code must be correct

### Packages

simple-rest

### Additional Context

_No response_",2162406291,"Hey @vitali-bc, sorry for the issue! Looks like our `swizzle` command had some issues with the `import type` statements which are introduced with the latest release to our codebase. I've just opened up a PR to fix this issue. 🙏 

Until the next release is done, you can check out the source code for `@refinedev/simple-rest` [here](https://github.com/refinedev/refine/tree/master/packages/simple-rest) to create your data provider 🚀 "
2347119476,6035,[BUG] corrupted data-rpvider code when npm run refine swizzle,"### Describe the bug

![Screenshot 2024-06-11 alle 21 15 18](https://github.com/refinedev/refine/assets/172402530/44d44b46-d380-4ef5-b299-c2e3d30d6e67)


### Steps To Reproduce

npm run refine swizzle
yes
you will see code is corrupted

### Expected behavior

code must be correct

### Packages

simple-rest

### Additional Context

_No response_",2162593710,"> Hey @vitali-bc, sorry for the issue! Looks like our `swizzle` command had some issues with the `import type` statements which are introduced with the latest release to our codebase. I've just opened up a PR to fix this issue. 🙏
> 
> Until the next release is done, you can check out the source code for `@refinedev/simple-rest` [here](https://github.com/refinedev/refine/tree/master/packages/simple-rest) to create your data provider 🚀

Hi! Could you please look also inside the next BUG I opened? I think they are correlated...  
PS. i'm the same guy :D"
2344335752,6030,[BUG] fix(devtools-internal): fix NODE_ENV conditional didn't work,"### Describe the bug

Hello,
@aliemir published the PR https://github.com/refinedev/refine/pull/5992 and it works. However, esbuild doesn't compile as expected. The compiler doesn't generate correctly as you write here https://github.com/refinedev/refine/blob/4654353b90b6a09cbf65e41d4c1fa82553a2a3fa/packages/devtools-internal/src/use-query-subscription.tsx#L13
So, instead of
```js
() => {
        return {};
      }
```
it generates
```
() => ({})
```

### Steps To Reproduce

1. Install @refinedev/devtools-internal or visit the link [@refinedev/devtools-internal npm package code tab](https://www.npmjs.com/package/@refinedev/devtools-internal/v/1.1.11?activeTab=code)
2. Check the below expression in index.cjs and index.mjs.
```
process.env.NODE_ENV!==""development"" ? ()=>({})  : ...
```

### Expected behavior

The below expression
```js
process.env.NODE_ENV!==""development"" ? ()=>({}): ...
```

must be something similar to
```js
process.env.NODE_ENV!==""development"" ? ()=> {
   return {};
}: ...
```
Probably adding a noop function helps.
```js
const noop = () => {
   return {};
}

process.env.NODE_ENV!==""development"" ? noop: ...
```



### Packages

- @refinedev/devtools-internal:1.1.11

### Additional Context

_No response_",2158804671,"Hey @sanchezcarlosjr, thank you for explaining the issue here! 🙏 Did you encounter this issue while working with React Native or is there any other platform that has issues with parsing those lines? 🤔 "
2344335752,6030,[BUG] fix(devtools-internal): fix NODE_ENV conditional didn't work,"### Describe the bug

Hello,
@aliemir published the PR https://github.com/refinedev/refine/pull/5992 and it works. However, esbuild doesn't compile as expected. The compiler doesn't generate correctly as you write here https://github.com/refinedev/refine/blob/4654353b90b6a09cbf65e41d4c1fa82553a2a3fa/packages/devtools-internal/src/use-query-subscription.tsx#L13
So, instead of
```js
() => {
        return {};
      }
```
it generates
```
() => ({})
```

### Steps To Reproduce

1. Install @refinedev/devtools-internal or visit the link [@refinedev/devtools-internal npm package code tab](https://www.npmjs.com/package/@refinedev/devtools-internal/v/1.1.11?activeTab=code)
2. Check the below expression in index.cjs and index.mjs.
```
process.env.NODE_ENV!==""development"" ? ()=>({})  : ...
```

### Expected behavior

The below expression
```js
process.env.NODE_ENV!==""development"" ? ()=>({}): ...
```

must be something similar to
```js
process.env.NODE_ENV!==""development"" ? ()=> {
   return {};
}: ...
```
Probably adding a noop function helps.
```js
const noop = () => {
   return {};
}

process.env.NODE_ENV!==""development"" ? noop: ...
```



### Packages

- @refinedev/devtools-internal:1.1.11

### Additional Context

_No response_",2158831158,"Thank you for your answer, @aliemir. I'm working with traditional React web apps, and Refine works as expected. The issue only occurs in React Native as far as I know."
2341195231,6024,[FEAT] Supabase Data Provider needs an array_overlap operator,"### Is your feature request related to a problem? Please describe.

I would like to filter an array column with an array in Supabase, where any row is shown where a value in the column matches at least one selected. 

Example: I have 4 rows of data under ""Fruits"".

- ['Apple']
- ['Banana']
- ['Apple', 'Banana']
- ['Kiwi']

I would like to filter with the following:
- ['Apple', 'Kiwi']

The returned result should be:
- ['Apple']
- ['Apple', 'Banana']
- ['Kiwi']


### Describe alternatives you've considered

Issue #5922 is similar in that it added the ability to check if an array matches an array with the `ina` and `nina` operators but differs based on the ability to match if ANY value in the filtering array matches the column array.

### Additional context

Here's a couple of examples of using the Supabse JS client to do the call:

```javascript
let { data: orders } = await supabaseClient
	.from('orders')
	.select('*')
	.or('fruits.ov.{Apple,Kiwi}');

let { data: orders2 } = await supabaseClient
	.from('orders')
	.select('*')
	.overlaps('fruits', ['Apple', 'Kiwi']);
```

### Describe the thing to improve

I believe we could follow a similar route and add ina_overlap and nina_overlap [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [query.overlaps](https://supabase.com/docs/reference/javascript/overlaps) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4).",2155778099,"If I could get assigned to this, I'll give it a shot at getting it included. Thanks in advance!"
2341195231,6024,[FEAT] Supabase Data Provider needs an array_overlap operator,"### Is your feature request related to a problem? Please describe.

I would like to filter an array column with an array in Supabase, where any row is shown where a value in the column matches at least one selected. 

Example: I have 4 rows of data under ""Fruits"".

- ['Apple']
- ['Banana']
- ['Apple', 'Banana']
- ['Kiwi']

I would like to filter with the following:
- ['Apple', 'Kiwi']

The returned result should be:
- ['Apple']
- ['Apple', 'Banana']
- ['Kiwi']


### Describe alternatives you've considered

Issue #5922 is similar in that it added the ability to check if an array matches an array with the `ina` and `nina` operators but differs based on the ability to match if ANY value in the filtering array matches the column array.

### Additional context

Here's a couple of examples of using the Supabse JS client to do the call:

```javascript
let { data: orders } = await supabaseClient
	.from('orders')
	.select('*')
	.or('fruits.ov.{Apple,Kiwi}');

let { data: orders2 } = await supabaseClient
	.from('orders')
	.select('*')
	.overlaps('fruits', ['Apple', 'Kiwi']);
```

### Describe the thing to improve

I believe we could follow a similar route and add ina_overlap and nina_overlap [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [query.overlaps](https://supabase.com/docs/reference/javascript/overlaps) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4).",2157618767,"Hello @jim-knight,

I believe It's okay to add `ina_overlap` operator but I'm sorry I couldn't quite understand why `ina` doesn't work for you. It seems exactly what you looking for.

for example:
test: https://github.com/refinedev/refine/pull/5922/files#diff-50bbe4ac8d69008dd5bca7c6b83650fcd59684616f14a9e50dbe9299fd79529eR316
mock: https://github.com/issa012/refine/blob/84bf034c7f6df12cfd0837160125cac9f340a19d/packages/supabase/test/getList/index.mock.ts#L1677

we sent this `value: [""health"", ""travel""]` with `ina`:

and we can get the following data 
- [""health"", ""travel"", ""food""]

but we can't get this because ""health"" is not available in the array.
- [""travel"", ""food""]

do you also want to get [""travel"", ""food""]?"
2341195231,6024,[FEAT] Supabase Data Provider needs an array_overlap operator,"### Is your feature request related to a problem? Please describe.

I would like to filter an array column with an array in Supabase, where any row is shown where a value in the column matches at least one selected. 

Example: I have 4 rows of data under ""Fruits"".

- ['Apple']
- ['Banana']
- ['Apple', 'Banana']
- ['Kiwi']

I would like to filter with the following:
- ['Apple', 'Kiwi']

The returned result should be:
- ['Apple']
- ['Apple', 'Banana']
- ['Kiwi']


### Describe alternatives you've considered

Issue #5922 is similar in that it added the ability to check if an array matches an array with the `ina` and `nina` operators but differs based on the ability to match if ANY value in the filtering array matches the column array.

### Additional context

Here's a couple of examples of using the Supabse JS client to do the call:

```javascript
let { data: orders } = await supabaseClient
	.from('orders')
	.select('*')
	.or('fruits.ov.{Apple,Kiwi}');

let { data: orders2 } = await supabaseClient
	.from('orders')
	.select('*')
	.overlaps('fruits', ['Apple', 'Kiwi']);
```

### Describe the thing to improve

I believe we could follow a similar route and add ina_overlap and nina_overlap [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [query.overlaps](https://supabase.com/docs/reference/javascript/overlaps) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4).",2158863208,"@alicanerdurmaz Thanks Alican, that's correct. Ideally in my use case the query would include any post that has a tag that matches ANY in the filter vs requiring ALL to match.

Using your example, if we used `value: [""health"", ""travel""]` with `ina_overlap`, it should return the following examples:
- [""health"", ""travel""]
- [""health"", ""travel"", ""food""]
- [""health""]
- [""travel""]

Specifically in my use case, we have a table of businesses with categories tied to the industries that they're in. The categories column is an array of strings. Here's a short listing of some of the values: Aerospace, Automotive, Business Services, Consumer Products & Services, Distribution & Logistics, Education, Energy, Food and Beverage, Healthcare.

Let's say business A is in Education and Healthcare, while business B is in Automotive and Education, while business C is in Aerospace.

When filtering for `['Education', 'Healthcare']`, businesses A and B should be included because they match at least one of the values in the filter. The user might be looking for businesses in specific industries but they don't necessarily need to be a perfect match.

I hope that helps with what I'm looking for."
2341195231,6024,[FEAT] Supabase Data Provider needs an array_overlap operator,"### Is your feature request related to a problem? Please describe.

I would like to filter an array column with an array in Supabase, where any row is shown where a value in the column matches at least one selected. 

Example: I have 4 rows of data under ""Fruits"".

- ['Apple']
- ['Banana']
- ['Apple', 'Banana']
- ['Kiwi']

I would like to filter with the following:
- ['Apple', 'Kiwi']

The returned result should be:
- ['Apple']
- ['Apple', 'Banana']
- ['Kiwi']


### Describe alternatives you've considered

Issue #5922 is similar in that it added the ability to check if an array matches an array with the `ina` and `nina` operators but differs based on the ability to match if ANY value in the filtering array matches the column array.

### Additional context

Here's a couple of examples of using the Supabse JS client to do the call:

```javascript
let { data: orders } = await supabaseClient
	.from('orders')
	.select('*')
	.or('fruits.ov.{Apple,Kiwi}');

let { data: orders2 } = await supabaseClient
	.from('orders')
	.select('*')
	.overlaps('fruits', ['Apple', 'Kiwi']);
```

### Describe the thing to improve

I believe we could follow a similar route and add ina_overlap and nina_overlap [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [query.overlaps](https://supabase.com/docs/reference/javascript/overlaps) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4).",2159152983,@jim-knight Thanks for excellent explanation. I assigned issue to you. 🙏
2341195231,6024,[FEAT] Supabase Data Provider needs an array_overlap operator,"### Is your feature request related to a problem? Please describe.

I would like to filter an array column with an array in Supabase, where any row is shown where a value in the column matches at least one selected. 

Example: I have 4 rows of data under ""Fruits"".

- ['Apple']
- ['Banana']
- ['Apple', 'Banana']
- ['Kiwi']

I would like to filter with the following:
- ['Apple', 'Kiwi']

The returned result should be:
- ['Apple']
- ['Apple', 'Banana']
- ['Kiwi']


### Describe alternatives you've considered

Issue #5922 is similar in that it added the ability to check if an array matches an array with the `ina` and `nina` operators but differs based on the ability to match if ANY value in the filtering array matches the column array.

### Additional context

Here's a couple of examples of using the Supabse JS client to do the call:

```javascript
let { data: orders } = await supabaseClient
	.from('orders')
	.select('*')
	.or('fruits.ov.{Apple,Kiwi}');

let { data: orders2 } = await supabaseClient
	.from('orders')
	.select('*')
	.overlaps('fruits', ['Apple', 'Kiwi']);
```

### Describe the thing to improve

I believe we could follow a similar route and add ina_overlap and nina_overlap [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [query.overlaps](https://supabase.com/docs/reference/javascript/overlaps) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4).",2159217760,"@alicanerdurmaz Perfect. Thanks, Alican! I'll get to work on it sometime this week."
2341195231,6024,[FEAT] Supabase Data Provider needs an array_overlap operator,"### Is your feature request related to a problem? Please describe.

I would like to filter an array column with an array in Supabase, where any row is shown where a value in the column matches at least one selected. 

Example: I have 4 rows of data under ""Fruits"".

- ['Apple']
- ['Banana']
- ['Apple', 'Banana']
- ['Kiwi']

I would like to filter with the following:
- ['Apple', 'Kiwi']

The returned result should be:
- ['Apple']
- ['Apple', 'Banana']
- ['Kiwi']


### Describe alternatives you've considered

Issue #5922 is similar in that it added the ability to check if an array matches an array with the `ina` and `nina` operators but differs based on the ability to match if ANY value in the filtering array matches the column array.

### Additional context

Here's a couple of examples of using the Supabse JS client to do the call:

```javascript
let { data: orders } = await supabaseClient
	.from('orders')
	.select('*')
	.or('fruits.ov.{Apple,Kiwi}');

let { data: orders2 } = await supabaseClient
	.from('orders')
	.select('*')
	.overlaps('fruits', ['Apple', 'Kiwi']);
```

### Describe the thing to improve

I believe we could follow a similar route and add ina_overlap and nina_overlap [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [query.overlaps](https://supabase.com/docs/reference/javascript/overlaps) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4).",2176906727,"@alicanerdurmaz Unfortunately I don't think I'll be able to continue working on this issue. I've been struggling to get the environment set up on my Windows based machine and seem to run into a number of install errors via git bash, or powershell. I've got the main 6 files updated but can't commit due to failing on the install and not being able to run lint-staged. "
2341195231,6024,[FEAT] Supabase Data Provider needs an array_overlap operator,"### Is your feature request related to a problem? Please describe.

I would like to filter an array column with an array in Supabase, where any row is shown where a value in the column matches at least one selected. 

Example: I have 4 rows of data under ""Fruits"".

- ['Apple']
- ['Banana']
- ['Apple', 'Banana']
- ['Kiwi']

I would like to filter with the following:
- ['Apple', 'Kiwi']

The returned result should be:
- ['Apple']
- ['Apple', 'Banana']
- ['Kiwi']


### Describe alternatives you've considered

Issue #5922 is similar in that it added the ability to check if an array matches an array with the `ina` and `nina` operators but differs based on the ability to match if ANY value in the filtering array matches the column array.

### Additional context

Here's a couple of examples of using the Supabse JS client to do the call:

```javascript
let { data: orders } = await supabaseClient
	.from('orders')
	.select('*')
	.or('fruits.ov.{Apple,Kiwi}');

let { data: orders2 } = await supabaseClient
	.from('orders')
	.select('*')
	.overlaps('fruits', ['Apple', 'Kiwi']);
```

### Describe the thing to improve

I believe we could follow a similar route and add ina_overlap and nina_overlap [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [query.overlaps](https://supabase.com/docs/reference/javascript/overlaps) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4).",2182273643,@jim-knight sorry to hear about your issue. Could you provide more information on your errors? Would be nice to provide any error you encountered.
2341195231,6024,[FEAT] Supabase Data Provider needs an array_overlap operator,"### Is your feature request related to a problem? Please describe.

I would like to filter an array column with an array in Supabase, where any row is shown where a value in the column matches at least one selected. 

Example: I have 4 rows of data under ""Fruits"".

- ['Apple']
- ['Banana']
- ['Apple', 'Banana']
- ['Kiwi']

I would like to filter with the following:
- ['Apple', 'Kiwi']

The returned result should be:
- ['Apple']
- ['Apple', 'Banana']
- ['Kiwi']


### Describe alternatives you've considered

Issue #5922 is similar in that it added the ability to check if an array matches an array with the `ina` and `nina` operators but differs based on the ability to match if ANY value in the filtering array matches the column array.

### Additional context

Here's a couple of examples of using the Supabse JS client to do the call:

```javascript
let { data: orders } = await supabaseClient
	.from('orders')
	.select('*')
	.or('fruits.ov.{Apple,Kiwi}');

let { data: orders2 } = await supabaseClient
	.from('orders')
	.select('*')
	.overlaps('fruits', ['Apple', 'Kiwi']);
```

### Describe the thing to improve

I believe we could follow a similar route and add ina_overlap and nina_overlap [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [query.overlaps](https://supabase.com/docs/reference/javascript/overlaps) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4).",2183098120,"@BatuhanW 

Sure thing, so running with Powershell didn't work just because it didn't like the syntax of the devPreinstall command from package.json, which was expected. 

Next up, I tried Git Bash and running just the direct install command but got the following message:

```
$ pnpm install
Scope: all 240 workspace projects
. pnpm:devPreinstall$ powershell -Command ""New-Item -ItemType Directory -Force -Path 'packages/cli/dist','packages/devto…
│     Directory: F:\Dev projects\Supabase testing\Refine-6024\packages\cli
│ Mode                 LastWriteTime         Length Name                                                                …
│ ----                 -------------         ------ ----                                                                …
│ d-----         6/15/2024  11:54 AM                dist                                                                …  
│     Directory: F:\Dev projects\Supabase testing\Refine-6024\packages\devtools-server
│ Mode                 LastWriteTime         Length Name                                                                …  
│ ----                 -------------         ------ ----                                                                …  
│ d-----         6/15/2024  11:54 AM                dist                                                                …  
└─ Done in 345ms

   ╭─────────────────────────────────────────────────────────────────╮
   │                                                                 │
   │                Update available! 9.3.0 → 9.4.0.                 │
   │   Changelog: https://github.com/pnpm/pnpm/releases/tag/v9.4.0   │
   │         Run a script from: https://pnpm.io/installation         │
   │                                                                 │
   │        Follow @pnpmjs for updates: https://x.com/pnpmjs         │
   │                                                                 │
   ╰─────────────────────────────────────────────────────────────────╯

Lockfile is up to date, resolution step is skipped
Packages: -145
-------------------------------------------------------------------------------------------------------------------------
 WARN  Failed to create bin at F:\Dev projects\Supabase testing\Refine-6024\packages\devtools\node_modules\.bin\refine-devtools. ENOENT: no such file or directory, stat 'F:\Dev projects\Supabase testing\Refine-6024\packages\devtools\node_modules\@refinedev\devtools-server\dist\cli.cjs.EXE'
 WARN  Failed to create bin at F:\Dev projects\Supabase testing\Refine-6024\packages\cli\node_modules\.bin\refine-devtools. ENOENT: no such file or directory, stat 'F:\Dev projects\Supabase testing\Refine-6024\packages\cli\node_modules\@refinedev\devtools-server\dist\cli.cjs.EXE'
Progress: resolved 0, reused 124, downloaded 0, added 0, done
 WARN  Failed to create bin at F:\Dev projects\Supabase testing\Refine-6024\packages\devtools\node_modules\.bin\refine-devtools. ENOENT: no such file or directory, stat 'F:\Dev projects\Supabase testing\Refine-6024\packages\devtools\node_modules\@refinedev\devtools-server\dist\cli.cjs.EXE'
 WARN  Failed to create bin at F:\Dev projects\Supabase testing\Refine-6024\packages\cli\node_modules\.bin\refine-devtools. ENOENT: no such file or directory, stat 'F:\Dev projects\Supabase testing\Refine-6024\packages\cli\node_modules\@refinedev\devtools-server\dist\cli.cjs.EXE'
packages/create-refine-app prepare$ pnpm -w build --scope create-refine-app
[86 lines collapsed]                                                                                                       
│ @refinedev/core: CJS dist\index.cjs.map 746.61 KB
│ @refinedev/core: CJS ⚡️ Build success in 2245ms
│ @refinedev/core: ESM dist\index.mjs     141.37 KB
│ @refinedev/core: ESM dist\index.mjs.map 738.88 KB
│ @refinedev/core: ESM ⚡️ Build success in 2248ms
│ @refinedev/core: Generating declarations...
│ @refinedev/core: Generating d.mts and d.cts files...
│ @refinedev/core: ✓ Declarations are generated.
│  Lerna (powered by Nx)   Successfully ran target build for 2 projects and 2 tasks they depend on
│ Nx read the output from the cache instead of running the command for 1 out of 4 tasks.
└─ Done in 2m 2.1s
packages/devtools-shared prepare$ pnpm -w build --scope @refinedev/devtools-shared
[65 lines collapsed]                                                                                                       
│ CJS dist\index.cjs.map 746.61 KB
│ CJS ⚡️ Build success in 2245ms
│ ESM dist\index.mjs     141.37 KB
│ ESM dist\index.mjs.map 738.88 KB
│ ESM ⚡️ Build success in 2248ms
│ Generating declarations...
│ Generating d.mts and d.cts files...
│ ✓ Declarations are generated.
│  Lerna (powered by Nx)   Successfully ran target build for 2 projects and 1 task they depend on
│ Nx read the output from the cache instead of running the command for 3 out of 3 tasks.
└─ Done in 1m 19.6s
. prepare$ husky install
│ husky - Git hooks installed
└─ Done in 282ms
packages/devtools-internal prepare$ pnpm -w build --scope @refinedev/devtools-internal
[65 lines collapsed]                                                                                                       
│ CJS dist\index.cjs.map 746.61 KB
│ CJS ⚡️ Build success in 2245ms
│ ESM dist\index.mjs     141.37 KB
│ ESM dist\index.mjs.map 738.88 KB
│ ESM ⚡️ Build success in 2248ms
│ Generating declarations...
│ Generating d.mts and d.cts files...
│ ✓ Declarations are generated.
│  Lerna (powered by Nx)   Successfully ran target build for 2 projects and 1 task they depend on
│ Nx read the output from the cache instead of running the command for 3 out of 3 tasks.
└─ Done in 10.1s
packages/devtools-ui prepare$ pnpm -w build --scope @refinedev/devtools-ui
[89 lines collapsed]                                                                                                       
│ @refinedev/devtools-ui: CJS dist\index.cjs     130.36 KB
│ @refinedev/devtools-ui: CJS dist\style.css     46.49 KB
│ @refinedev/devtools-ui: CJS dist\index.cjs.map 328.98 KB
│ @refinedev/devtools-ui: CJS dist\style.css.map 74.58 KB
│ @refinedev/devtools-ui: CJS ⚡️ Build success in 8107ms
│ @refinedev/devtools-ui: Generating declarations...
│ @refinedev/devtools-ui: Generating d.mts and d.cts files...
│ @refinedev/devtools-ui: ✓ Declarations are generated.
│  Lerna (powered by Nx)   Successfully ran target build for 2 projects and 2 tasks they depend on
│ Nx read the output from the cache instead of running the command for 3 out of 4 tasks.
└─ Done in 42.5s
packages/devtools-server prepare$ pnpm -w build --scope @refinedev/devtools-server
│ > refinedev@0.0.0 build F:\Dev projects\Supabase testing\Refine-6024                                                     
│ > lerna run build --scope @refinedev/core ""--scope"" ""@refinedev/devtools-server""
│ (node:22496) [DEP0040] DeprecationWarning: The punycode module is deprecated. Please use a userland alternative inst…
│ (Use node --trace-deprecation ... to show where the warning was created)
│ lerna notice cli v8.1.2
│ lerna notice filter including [""@refinedev/core"",""@refinedev/devtools-server""]
│ lerna notice filter excluding ""{monorepo-*,with-nx,blog-react-aria,blog-sveltekit-crud}""
│ lerna info filter [
│ lerna info filter   '@refinedev/core',
│ lerna info filter   '@refinedev/devtools-server',
│ lerna info filter   '!{monorepo-*,with-nx,blog-react-aria,blog-sveltekit-crud}'
│ lerna info filter ]
│ lerna info run Using the ""ignore"" option when Nx targets are configured will exclude only tasks that are not determine…
│  Lerna (powered by Nx)   Running target build for 2 projects and 3 tasks they depend on:
│ - @refinedev/core
│ - @refinedev/devtools-server
│ > @refinedev/devtools-shared:build  [existing outputs match the cache, left as is]
│ > @refinedev/devtools-shared@1.1.9 build F:\Dev projects\Supabase testing\Refine-6024\packages\devtools-shared
│ > tsup && node ../shared/generate-declarations.js
│ CLI Building entry: src/index.ts
│ CLI Using tsconfig: tsconfig.json
│ CLI tsup v6.7.0
│ CLI Using tsup config: F:\Dev projects\Supabase testing\Refine-6024\packages\devtools-shared\tsup.config.ts
│ CLI Target: node14
│ CJS Build start
│ ESM Build start
│ ESM dist\index.mjs     2.60 KB
│ ESM dist\index.mjs.map 11.21 KB
│ ESM ⚡️ Build success in 252ms
│ CJS dist\index.cjs     3.23 KB
│ CJS dist\index.cjs.map 12.06 KB
│ CJS ⚡️ Build success in 254ms
│ Generating declarations...
│ Generating d.mts and d.cts files...
│ ✓ Declarations are generated.
│ > @refinedev/devtools-internal:build  [existing outputs match the cache, left as is]
│ > @refinedev/devtools-internal@1.1.11 build F:\Dev projects\Supabase testing\Refine-6024\packages\devtools-internal      
│ > tsup && node ../shared/generate-declarations.js
│ CLI Building entry: src/index.ts
│ CLI Using tsconfig: tsconfig.json
│ CLI tsup v6.7.0
│ CLI Using tsup config: F:\Dev projects\Supabase testing\Refine-6024\packages\devtools-internal\tsup.config.ts
│ CLI Target: node14
│ CJS Build start
│ ESM Build start
│ CJS dist\index.cjs     3.95 KB
│ CJS dist\index.cjs.map 14.58 KB
│ CJS ⚡️ Build success in 76ms
│ ESM dist\index.mjs     3.30 KB
│ ESM dist\index.mjs.map 14.37 KB
│ ESM ⚡️ Build success in 77ms
│ Generating declarations...
│ Generating d.mts and d.cts files...
│ ✓ Declarations are generated.
│ > @refinedev/devtools-ui:build  [existing outputs match the cache, left as is]
│ > @refinedev/devtools-ui@1.1.24 build F:\Dev projects\Supabase testing\Refine-6024\packages\devtools-ui
│ > tsup && node ../shared/generate-declarations.js
│ CLI Building entry: src/index.ts, src/style.css
│ CLI Using tsconfig: tsconfig.json
│ CLI tsup v6.7.0
│ CLI Using tsup config: F:\Dev projects\Supabase testing\Refine-6024\packages\devtools-ui\tsup.config.ts
│ CLI Target: node14
│ CJS Build start
│ ESM Build start
│ ESM dist\style.css     46.49 KB
│ ESM dist\index.mjs     119.92 KB
│ ESM dist\style.css.map 74.58 KB
│ ESM dist\index.mjs.map 324.36 KB
│ ESM ⚡️ Build success in 8105ms
│ CJS dist\index.cjs     130.36 KB
│ CJS dist\style.css     46.49 KB
│ CJS dist\index.cjs.map 328.98 KB
│ CJS dist\style.css.map 74.58 KB
│ CJS ⚡️ Build success in 8107ms
│ Generating declarations...
│ Generating d.mts and d.cts files...
│ ✓ Declarations are generated.
│ > @refinedev/devtools-server:build
│ (node:22496) [DEP0060] DeprecationWarning: The util._extend API is deprecated. Please use Object.assign() instead.     
│ > @refinedev/core:build  [existing outputs match the cache, left as is]
│ > @refinedev/core@4.51.0 build F:\Dev projects\Supabase testing\Refine-6024\packages\core
│ > tsup && node ../shared/generate-declarations.js
│ CLI Building entry: src/index.tsx
│ CLI Using tsconfig: tsconfig.json
│ CLI tsup v6.7.0
│ CLI Using tsup config: F:\Dev projects\Supabase testing\Refine-6024\packages\core\tsup.config.ts
│ CLI Target: node14
│ CJS Build start
│ ESM Build start
│ CJS dist\index.cjs     146.36 KB
│ CJS dist\index.cjs.map 746.61 KB
│ CJS ⚡️ Build success in 2245ms
│ ESM dist\index.mjs     141.37 KB
│ ESM dist\index.mjs.map 738.88 KB
│ ESM ⚡️ Build success in 2248ms
│ Generating declarations...
│ Generating d.mts and d.cts files...
│ ✓ Declarations are generated.
│ @refinedev/devtools-server: > @refinedev/devtools-server@1.1.31 build F:\Dev projects\Supabase testing\Refine-6024\pac…  
│ @refinedev/devtools-server: > pnpm build:client && tsup && node ../shared/generate-declarations.js
│ @refinedev/devtools-server: > @refinedev/devtools-server@1.1.31 build:client F:\Dev projects\Supabase testing\Refine-6…  
│ @refinedev/devtools-server: > NODE_ENV=production tsc && vite build --config src/client/vite.config.ts
│ @refinedev/devtools-server: 'NODE_ENV' is not recognized as an internal or external command,
│ @refinedev/devtools-server: operable program or batch file.
│ @refinedev/devtools-server:  ELIFECYCLE  Command failed with exit code 1.
│ @refinedev/devtools-server:  ELIFECYCLE  Command failed with exit code 1.
│  Lerna (powered by Nx)   Running target build for 2 projects and 3 tasks they depend on failed
│ Failed tasks:
│ - @refinedev/devtools-server:build
│  ELIFECYCLE  Command failed with exit code 1.
└─ Failed in 10.6s at F:\Dev projects\Supabase testing\Refine-6024\packages\devtools-server
 ELIFECYCLE  Command failed with exit code 1.
packages/core prepare$ pnpm -w build --scope @refinedev/core
└─ Running...
```

I then tried running it while ignoring scripts, and got the following message: 
```
$ pnpm install --ignore-scripts
Scope: all 240 workspace projects
Lockfile is up to date, resolution step is skipped
Packages: -145
-------------------------------------------------------------------------------------------------------------------------
 WARN  Failed to create bin at F:\Dev projects\Supabase testing\Refine-6024\packages\devtools\node_modules\.bin\refine-devtools. ENOENT: no such file or directory, stat 'F:\Dev projects\Supabase testing\Refine-6024\packages\devtools\node_modules\@refinedev\devtools-server\dist\cli.cjs.EXE'
 WARN  Failed to create bin at F:\Dev projects\Supabase testing\Refine-6024\packages\cli\node_modules\.bin\refine-devtools. ENOENT: no such file or directory, stat 'F:\Dev projects\Supabase testing\Refine-6024\packages\cli\node_modules\@refinedev\devtools-server\dist\cli.cjs.EXE'
Progress: resolved 0, reused 124, downloaded 0, added 0, done
 WARN  Failed to create bin at F:\Dev projects\Supabase testing\Refine-6024\packages\devtools\node_modules\.bin\refine-devtools. ENOENT: no such file or directory, stat 'F:\Dev projects\Supabase testing\Refine-6024\packages\devtools\node_modules\@refinedev\devtools-server\dist\cli.cjs.EXE'
 WARN  Failed to create bin at F:\Dev projects\Supabase testing\Refine-6024\packages\cli\node_modules\.bin\refine-devtools. ENOENT: no such file or directory, stat 'F:\Dev projects\Supabase testing\Refine-6024\packages\cli\node_modules\@refinedev\devtools-server\dist\cli.cjs.EXE'
Done in 1m 16s
```

I thought that running the command through Git Bash would help to resolve any issue relating to `NODE_ENV` not being recognized in Windows. I then switched to using WSL with Ubuntu to install and again ran up against issues: 

```
jknight@DESKTOP-PCBKQJF:~$ npm install -g pnpm
npm notice
npm notice New minor version of npm available! 10.7.0 -> 10.8.1
npm notice Changelog: https://github.com/npm/cli/releases/tag/v10.8.1
npm notice To update run: npm install -g npm@10.8.1
npm notice
npm error code EACCES
npm error syscall mkdir
npm error path /usr/lib/node_modules/pnpm
npm error errno -13
npm error [Error: EACCES: permission denied, mkdir '/usr/lib/node_modules/pnpm'] {
npm error   errno: -13,
npm error   code: 'EACCES',
npm error   syscall: 'mkdir',
npm error   path: '/usr/lib/node_modules/pnpm'
npm error }
npm error
npm error The operation was rejected by your operating system.
npm error It is likely you do not have the permissions to access this file as the current user
npm error
npm error If you believe this might be a permissions issue, please double-check the
npm error permissions of the file and its containing directories, or try running
npm error the command again as root/Administrator.

npm error A complete log of this run can be found in: /home/jknight/.npm/_logs/2024-06-17T20_57_50_919Z-debug-0.log
```

At that point I called it quits as I just ran out of time and thought it might be better for someone else to step in.
"
2341195231,6024,[FEAT] Supabase Data Provider needs an array_overlap operator,"### Is your feature request related to a problem? Please describe.

I would like to filter an array column with an array in Supabase, where any row is shown where a value in the column matches at least one selected. 

Example: I have 4 rows of data under ""Fruits"".

- ['Apple']
- ['Banana']
- ['Apple', 'Banana']
- ['Kiwi']

I would like to filter with the following:
- ['Apple', 'Kiwi']

The returned result should be:
- ['Apple']
- ['Apple', 'Banana']
- ['Kiwi']


### Describe alternatives you've considered

Issue #5922 is similar in that it added the ability to check if an array matches an array with the `ina` and `nina` operators but differs based on the ability to match if ANY value in the filtering array matches the column array.

### Additional context

Here's a couple of examples of using the Supabse JS client to do the call:

```javascript
let { data: orders } = await supabaseClient
	.from('orders')
	.select('*')
	.or('fruits.ov.{Apple,Kiwi}');

let { data: orders2 } = await supabaseClient
	.from('orders')
	.select('*')
	.overlaps('fruits', ['Apple', 'Kiwi']);
```

### Describe the thing to improve

I believe we could follow a similar route and add ina_overlap and nina_overlap [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [query.overlaps](https://supabase.com/docs/reference/javascript/overlaps) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4).",2238786059,"Hey @jim-knight, we've implemented the fix about the Windows environment. Can you check if you can continue working on this one? Please let us know if you encounter any other issues 🙏 "
2341195231,6024,[FEAT] Supabase Data Provider needs an array_overlap operator,"### Is your feature request related to a problem? Please describe.

I would like to filter an array column with an array in Supabase, where any row is shown where a value in the column matches at least one selected. 

Example: I have 4 rows of data under ""Fruits"".

- ['Apple']
- ['Banana']
- ['Apple', 'Banana']
- ['Kiwi']

I would like to filter with the following:
- ['Apple', 'Kiwi']

The returned result should be:
- ['Apple']
- ['Apple', 'Banana']
- ['Kiwi']


### Describe alternatives you've considered

Issue #5922 is similar in that it added the ability to check if an array matches an array with the `ina` and `nina` operators but differs based on the ability to match if ANY value in the filtering array matches the column array.

### Additional context

Here's a couple of examples of using the Supabse JS client to do the call:

```javascript
let { data: orders } = await supabaseClient
	.from('orders')
	.select('*')
	.or('fruits.ov.{Apple,Kiwi}');

let { data: orders2 } = await supabaseClient
	.from('orders')
	.select('*')
	.overlaps('fruits', ['Apple', 'Kiwi']);
```

### Describe the thing to improve

I believe we could follow a similar route and add ina_overlap and nina_overlap [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [query.overlaps](https://supabase.com/docs/reference/javascript/overlaps) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4).",2240359853,"> Hey @jim-knight, we've implemented the fix about the Windows environment. Can you check if you can continue working on this one? Please let us know if you encounter any other issues 🙏

Thanks for the update @aliemir. I'll give it a shot as soon as I have some free time and will report back."
2341195231,6024,[FEAT] Supabase Data Provider needs an array_overlap operator,"### Is your feature request related to a problem? Please describe.

I would like to filter an array column with an array in Supabase, where any row is shown where a value in the column matches at least one selected. 

Example: I have 4 rows of data under ""Fruits"".

- ['Apple']
- ['Banana']
- ['Apple', 'Banana']
- ['Kiwi']

I would like to filter with the following:
- ['Apple', 'Kiwi']

The returned result should be:
- ['Apple']
- ['Apple', 'Banana']
- ['Kiwi']


### Describe alternatives you've considered

Issue #5922 is similar in that it added the ability to check if an array matches an array with the `ina` and `nina` operators but differs based on the ability to match if ANY value in the filtering array matches the column array.

### Additional context

Here's a couple of examples of using the Supabse JS client to do the call:

```javascript
let { data: orders } = await supabaseClient
	.from('orders')
	.select('*')
	.or('fruits.ov.{Apple,Kiwi}');

let { data: orders2 } = await supabaseClient
	.from('orders')
	.select('*')
	.overlaps('fruits', ['Apple', 'Kiwi']);
```

### Describe the thing to improve

I believe we could follow a similar route and add ina_overlap and nina_overlap [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [query.overlaps](https://supabase.com/docs/reference/javascript/overlaps) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4).",2395089593,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
2340301696,6022,[BUG] Cannot specify `0` as filter value in the Nestjs-Query Data Provider,"### Describe the bug

Cannot specify `0` as filter value.
Also, `""""` cannot be specified.

Because it is excluded by the conditions in the following sections.

https://github.com/refinedev/refine/blob/a8404fc92c856f89b06684de6ad481aa840267be/packages/nestjs-query/src/utils/index.ts#L165

### Steps To Reproduce

1. create Nestjs-Query example project.

```
pnpm create refine-app@latest --example data-provider-nestjs-query
```

2. implement initial filter with a value of `0` on `src/pages/categories/list.tsx`.

```ts
  const { tableProps, sorters } = useTable<ICategory>({
    initialSorter: [
      {
        field: ""id"",
        order: ""asc"",
      },
    ],
    filters: {
      initial: [
        {
          field: 'id',
          operator: 'eq',
          value: 0 
        }
      ],
    },
```

3. run refine app.

```
pnpm dev
```

4. navigate `Categories` menu.

5. GraphQL query is executed with no filter specified. (Inspect in the DevTools network panel.)

```ts
filter: {},
```

### Expected behavior

GraphQL query is executed with the following filter.

```ts
filter: {id: {eq: 0}},
```

### Packages

- @refinedev/nestjs-query


### Additional Context

I have already fixed this issue and will create a PR.",2154719688,"Hello @yamadayutaka, thanks for the detailed explanation.

Do you want to work on this?"
2340301696,6022,[BUG] Cannot specify `0` as filter value in the Nestjs-Query Data Provider,"### Describe the bug

Cannot specify `0` as filter value.
Also, `""""` cannot be specified.

Because it is excluded by the conditions in the following sections.

https://github.com/refinedev/refine/blob/a8404fc92c856f89b06684de6ad481aa840267be/packages/nestjs-query/src/utils/index.ts#L165

### Steps To Reproduce

1. create Nestjs-Query example project.

```
pnpm create refine-app@latest --example data-provider-nestjs-query
```

2. implement initial filter with a value of `0` on `src/pages/categories/list.tsx`.

```ts
  const { tableProps, sorters } = useTable<ICategory>({
    initialSorter: [
      {
        field: ""id"",
        order: ""asc"",
      },
    ],
    filters: {
      initial: [
        {
          field: 'id',
          operator: 'eq',
          value: 0 
        }
      ],
    },
```

3. run refine app.

```
pnpm dev
```

4. navigate `Categories` menu.

5. GraphQL query is executed with no filter specified. (Inspect in the DevTools network panel.)

```ts
filter: {},
```

### Expected behavior

GraphQL query is executed with the following filter.

```ts
filter: {id: {eq: 0}},
```

### Packages

- @refinedev/nestjs-query


### Additional Context

I have already fixed this issue and will create a PR.",2154731415,"Hi @alicanerdurmaz , I have created a PR, please check it out."
2340301696,6022,[BUG] Cannot specify `0` as filter value in the Nestjs-Query Data Provider,"### Describe the bug

Cannot specify `0` as filter value.
Also, `""""` cannot be specified.

Because it is excluded by the conditions in the following sections.

https://github.com/refinedev/refine/blob/a8404fc92c856f89b06684de6ad481aa840267be/packages/nestjs-query/src/utils/index.ts#L165

### Steps To Reproduce

1. create Nestjs-Query example project.

```
pnpm create refine-app@latest --example data-provider-nestjs-query
```

2. implement initial filter with a value of `0` on `src/pages/categories/list.tsx`.

```ts
  const { tableProps, sorters } = useTable<ICategory>({
    initialSorter: [
      {
        field: ""id"",
        order: ""asc"",
      },
    ],
    filters: {
      initial: [
        {
          field: 'id',
          operator: 'eq',
          value: 0 
        }
      ],
    },
```

3. run refine app.

```
pnpm dev
```

4. navigate `Categories` menu.

5. GraphQL query is executed with no filter specified. (Inspect in the DevTools network panel.)

```ts
filter: {},
```

### Expected behavior

GraphQL query is executed with the following filter.

```ts
filter: {id: {eq: 0}},
```

### Packages

- @refinedev/nestjs-query


### Additional Context

I have already fixed this issue and will create a PR.",2154831455,"Hey @yamadayutaka thanks for the neat PR! It's all approved, we'll release it in our next release cycle."
2337854047,6020,[DOC] how to test with vitest/jest,"### Documentation issue

[The testing page](https://refine.dev/docs/further-readings/testing/) does not have any instructions on tesing with partially-implemented browser environment, like jsdom

### Describe the thing to improve

Apps built with refine can contain custom logic that needs to be tested. browser tests (e.g cypress/playwright) are a great way to make certain assertions but for other cases unit and integration tests headless testing (e.g vitest/jest) are much more apt.

When I include the `Refine` provider in a vitest environment tests start crashing with this error
![image](https://github.com/refinedev/refine/assets/12392666/613ae7ca-be76-4944-bd18-591c9886400b)

The lack of testing documentation means it's very difficult to make the tests run.

```ts
import routerProvider from '@refinedev/react-router-v6';
import refineDataProvider from '@refinedev/simple-rest';
import { render, RenderOptions } from '@testing-library/react';
import { Refine, ResourceProps } from '@refinedev/core';
import {  ThemeProvider } from '@mui/material/styles';

export const renderApp = (
  ui: ReactElement,
  options: RenderOptions & {
    resources: ResourceProps[];
  }
) => {
  return render(ui, {
    wrapper: ({ children }: { children: ReactNode }) => (
      <BrowserRouter>
        <ThemeProvider>
          <Refine
            dataProvider={{
              default: refineDataProvider('api'),
            }}
            routerProvider={routerProvider}
            resources={options.resources}
          >
            {children}
          </Refine>
        </ThemeProvider>
      </BrowserRouter>
    ),
    ...options,
  });
};
```

### Describe the solution (optional)

https://github.com/refinedev/refine/tree/master/examples contains examples of a unit testing setup with vitest and jest and react testing library


### Context

I'm working in a monorepo, built with https://nx.dev/ and pnpm workspaces

```
  System:
    OS: Linux 5.15 Ubuntu 22.04.4 LTS 22.04.4 LTS (Jammy Jellyfish)
    CPU: (24) x64 13th Gen Intel(R) Core(TM) i7-13700F
    Memory: 6.16 GB / 15.54 GB
    Container: Yes
    Shell: 5.1.16 - /bin/bash
  Binaries:
    Node: 20.12.1 - ~/.nvm/versions/node/v20.12.1/bin/node
    pnpm: 8.15.8 - ~/.local/share/pnpm/pnpm
  npmPackages:
    @vitejs/plugin-react: ^4.2.1 => 4.2.1 
    vite: ^5.2.0 => 5.2.11 
    vitest: ^1.6.0 => 1.6.0 
    @refinedev/core: ^4.49.1 => 4.49.1 
    @refinedev/mui: ^5.15.1 => 5.15.1 
    @refinedev/react-hook-form: ^4.8.18 => 4.8.18 
    @refinedev/react-router-v6: ^4.5.8 => 4.5.8 
    @refinedev/simple-rest: ^5.0.5 => 5.0.5 
    @emotion/react: ^11.11.4 => 11.11.4 
    @emotion/styled: ^11.11.5 => 11.11.5 
    @mui/icons-material: ^5.15.15 => 5.15.16 
    @mui/material: ^5.15.16 => 5.15.16 
    @mui/x-data-grid: ^6.6.0 => 6.19.11 
    @mui/x-date-pickers: ^7.5.0 => 7.5.0 

```
```ts
/// <reference types='vitest' />
import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';
import react from '@vitejs/plugin-react';
import path from 'path';
import { defineConfig } from 'vitest/config';

// eslint-disable-next-line no-restricted-syntax
export default defineConfig({
  build: {
    reportCompressedSize: true,
    rollupOptions: {
      /**
       * Ignore ""use client"" waning since we are not using SSR
       * @see {@link https://github.com/TanStack/query/pull/5161#issuecomment-1477389761 Preserve ""use client"" directives TanStack/query#5161}
       */
      onwarn(warning, warn) {
        if (warning.code === 'MODULE_LEVEL_DIRECTIVE' && warning.message.includes(`""use client""`)) {
          return;
        }
        warn(warning);
      },
    },
  },
  cacheDir: '../../node_modules/.vite/marketplace-frontend',

  plugins: [react(), nxViteTsPaths()],

  preview: {
    host: 'localhost',
    port: 4300,
  },

  resolve: {
    alias: {
      test: path.resolve(__dirname, './test'),
      '~': path.resolve(__dirname, './src'),
    },
  },

  root: __dirname,

  server: {
    host: 'localhost',
    port: 4200,
  },

  test: {
    cache: {
      dir: '../../node_modules/.vitest',
    },
    coverage: {
      provider: 'v8',
      reportsDirectory: '../../coverage/marketplace-frontend',
    },
    environment: 'jsdom',
    globalSetup: './test/global-setup.ts',
    globals: true,
    include: ['src/**/test.{ts,tsx}'],

    reporters: ['default'],
    setupFiles: './test/setup.ts',
  },
});
```

[tsconfig.app.json](https://github.com/user-attachments/files/15614251/tsconfig.app.json)
[tsconfig.json](https://github.com/user-attachments/files/15614252/tsconfig.json)
[tsconfig.spec.json](https://github.com/user-attachments/files/15614253/tsconfig.spec.json)
",2152107607,"If I modify the `@refinedev/mui/dist/index.mjs` in my `node_modules` to import `import Box from ""@mui/material/Box/index.js"";` instead of `import Box from ""@mui/material/Box` the import is resolved.

Before
![image](https://github.com/refinedev/refine/assets/12392666/2a766bf7-a80e-4103-89fd-f3e3939780f7)

After
![image](https://github.com/refinedev/refine/assets/12392666/60461380-06aa-46ac-8781-7a97f25b6f1d)
"
2337854047,6020,[DOC] how to test with vitest/jest,"### Documentation issue

[The testing page](https://refine.dev/docs/further-readings/testing/) does not have any instructions on tesing with partially-implemented browser environment, like jsdom

### Describe the thing to improve

Apps built with refine can contain custom logic that needs to be tested. browser tests (e.g cypress/playwright) are a great way to make certain assertions but for other cases unit and integration tests headless testing (e.g vitest/jest) are much more apt.

When I include the `Refine` provider in a vitest environment tests start crashing with this error
![image](https://github.com/refinedev/refine/assets/12392666/613ae7ca-be76-4944-bd18-591c9886400b)

The lack of testing documentation means it's very difficult to make the tests run.

```ts
import routerProvider from '@refinedev/react-router-v6';
import refineDataProvider from '@refinedev/simple-rest';
import { render, RenderOptions } from '@testing-library/react';
import { Refine, ResourceProps } from '@refinedev/core';
import {  ThemeProvider } from '@mui/material/styles';

export const renderApp = (
  ui: ReactElement,
  options: RenderOptions & {
    resources: ResourceProps[];
  }
) => {
  return render(ui, {
    wrapper: ({ children }: { children: ReactNode }) => (
      <BrowserRouter>
        <ThemeProvider>
          <Refine
            dataProvider={{
              default: refineDataProvider('api'),
            }}
            routerProvider={routerProvider}
            resources={options.resources}
          >
            {children}
          </Refine>
        </ThemeProvider>
      </BrowserRouter>
    ),
    ...options,
  });
};
```

### Describe the solution (optional)

https://github.com/refinedev/refine/tree/master/examples contains examples of a unit testing setup with vitest and jest and react testing library


### Context

I'm working in a monorepo, built with https://nx.dev/ and pnpm workspaces

```
  System:
    OS: Linux 5.15 Ubuntu 22.04.4 LTS 22.04.4 LTS (Jammy Jellyfish)
    CPU: (24) x64 13th Gen Intel(R) Core(TM) i7-13700F
    Memory: 6.16 GB / 15.54 GB
    Container: Yes
    Shell: 5.1.16 - /bin/bash
  Binaries:
    Node: 20.12.1 - ~/.nvm/versions/node/v20.12.1/bin/node
    pnpm: 8.15.8 - ~/.local/share/pnpm/pnpm
  npmPackages:
    @vitejs/plugin-react: ^4.2.1 => 4.2.1 
    vite: ^5.2.0 => 5.2.11 
    vitest: ^1.6.0 => 1.6.0 
    @refinedev/core: ^4.49.1 => 4.49.1 
    @refinedev/mui: ^5.15.1 => 5.15.1 
    @refinedev/react-hook-form: ^4.8.18 => 4.8.18 
    @refinedev/react-router-v6: ^4.5.8 => 4.5.8 
    @refinedev/simple-rest: ^5.0.5 => 5.0.5 
    @emotion/react: ^11.11.4 => 11.11.4 
    @emotion/styled: ^11.11.5 => 11.11.5 
    @mui/icons-material: ^5.15.15 => 5.15.16 
    @mui/material: ^5.15.16 => 5.15.16 
    @mui/x-data-grid: ^6.6.0 => 6.19.11 
    @mui/x-date-pickers: ^7.5.0 => 7.5.0 

```
```ts
/// <reference types='vitest' />
import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';
import react from '@vitejs/plugin-react';
import path from 'path';
import { defineConfig } from 'vitest/config';

// eslint-disable-next-line no-restricted-syntax
export default defineConfig({
  build: {
    reportCompressedSize: true,
    rollupOptions: {
      /**
       * Ignore ""use client"" waning since we are not using SSR
       * @see {@link https://github.com/TanStack/query/pull/5161#issuecomment-1477389761 Preserve ""use client"" directives TanStack/query#5161}
       */
      onwarn(warning, warn) {
        if (warning.code === 'MODULE_LEVEL_DIRECTIVE' && warning.message.includes(`""use client""`)) {
          return;
        }
        warn(warning);
      },
    },
  },
  cacheDir: '../../node_modules/.vite/marketplace-frontend',

  plugins: [react(), nxViteTsPaths()],

  preview: {
    host: 'localhost',
    port: 4300,
  },

  resolve: {
    alias: {
      test: path.resolve(__dirname, './test'),
      '~': path.resolve(__dirname, './src'),
    },
  },

  root: __dirname,

  server: {
    host: 'localhost',
    port: 4200,
  },

  test: {
    cache: {
      dir: '../../node_modules/.vitest',
    },
    coverage: {
      provider: 'v8',
      reportsDirectory: '../../coverage/marketplace-frontend',
    },
    environment: 'jsdom',
    globalSetup: './test/global-setup.ts',
    globals: true,
    include: ['src/**/test.{ts,tsx}'],

    reporters: ['default'],
    setupFiles: './test/setup.ts',
  },
});
```

[tsconfig.app.json](https://github.com/user-attachments/files/15614251/tsconfig.app.json)
[tsconfig.json](https://github.com/user-attachments/files/15614252/tsconfig.json)
[tsconfig.spec.json](https://github.com/user-attachments/files/15614253/tsconfig.spec.json)
",2152169877,@aliemir I managed to get the tests running https://vitest.dev/config/#server-deps-inline
2337854047,6020,[DOC] how to test with vitest/jest,"### Documentation issue

[The testing page](https://refine.dev/docs/further-readings/testing/) does not have any instructions on tesing with partially-implemented browser environment, like jsdom

### Describe the thing to improve

Apps built with refine can contain custom logic that needs to be tested. browser tests (e.g cypress/playwright) are a great way to make certain assertions but for other cases unit and integration tests headless testing (e.g vitest/jest) are much more apt.

When I include the `Refine` provider in a vitest environment tests start crashing with this error
![image](https://github.com/refinedev/refine/assets/12392666/613ae7ca-be76-4944-bd18-591c9886400b)

The lack of testing documentation means it's very difficult to make the tests run.

```ts
import routerProvider from '@refinedev/react-router-v6';
import refineDataProvider from '@refinedev/simple-rest';
import { render, RenderOptions } from '@testing-library/react';
import { Refine, ResourceProps } from '@refinedev/core';
import {  ThemeProvider } from '@mui/material/styles';

export const renderApp = (
  ui: ReactElement,
  options: RenderOptions & {
    resources: ResourceProps[];
  }
) => {
  return render(ui, {
    wrapper: ({ children }: { children: ReactNode }) => (
      <BrowserRouter>
        <ThemeProvider>
          <Refine
            dataProvider={{
              default: refineDataProvider('api'),
            }}
            routerProvider={routerProvider}
            resources={options.resources}
          >
            {children}
          </Refine>
        </ThemeProvider>
      </BrowserRouter>
    ),
    ...options,
  });
};
```

### Describe the solution (optional)

https://github.com/refinedev/refine/tree/master/examples contains examples of a unit testing setup with vitest and jest and react testing library


### Context

I'm working in a monorepo, built with https://nx.dev/ and pnpm workspaces

```
  System:
    OS: Linux 5.15 Ubuntu 22.04.4 LTS 22.04.4 LTS (Jammy Jellyfish)
    CPU: (24) x64 13th Gen Intel(R) Core(TM) i7-13700F
    Memory: 6.16 GB / 15.54 GB
    Container: Yes
    Shell: 5.1.16 - /bin/bash
  Binaries:
    Node: 20.12.1 - ~/.nvm/versions/node/v20.12.1/bin/node
    pnpm: 8.15.8 - ~/.local/share/pnpm/pnpm
  npmPackages:
    @vitejs/plugin-react: ^4.2.1 => 4.2.1 
    vite: ^5.2.0 => 5.2.11 
    vitest: ^1.6.0 => 1.6.0 
    @refinedev/core: ^4.49.1 => 4.49.1 
    @refinedev/mui: ^5.15.1 => 5.15.1 
    @refinedev/react-hook-form: ^4.8.18 => 4.8.18 
    @refinedev/react-router-v6: ^4.5.8 => 4.5.8 
    @refinedev/simple-rest: ^5.0.5 => 5.0.5 
    @emotion/react: ^11.11.4 => 11.11.4 
    @emotion/styled: ^11.11.5 => 11.11.5 
    @mui/icons-material: ^5.15.15 => 5.15.16 
    @mui/material: ^5.15.16 => 5.15.16 
    @mui/x-data-grid: ^6.6.0 => 6.19.11 
    @mui/x-date-pickers: ^7.5.0 => 7.5.0 

```
```ts
/// <reference types='vitest' />
import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';
import react from '@vitejs/plugin-react';
import path from 'path';
import { defineConfig } from 'vitest/config';

// eslint-disable-next-line no-restricted-syntax
export default defineConfig({
  build: {
    reportCompressedSize: true,
    rollupOptions: {
      /**
       * Ignore ""use client"" waning since we are not using SSR
       * @see {@link https://github.com/TanStack/query/pull/5161#issuecomment-1477389761 Preserve ""use client"" directives TanStack/query#5161}
       */
      onwarn(warning, warn) {
        if (warning.code === 'MODULE_LEVEL_DIRECTIVE' && warning.message.includes(`""use client""`)) {
          return;
        }
        warn(warning);
      },
    },
  },
  cacheDir: '../../node_modules/.vite/marketplace-frontend',

  plugins: [react(), nxViteTsPaths()],

  preview: {
    host: 'localhost',
    port: 4300,
  },

  resolve: {
    alias: {
      test: path.resolve(__dirname, './test'),
      '~': path.resolve(__dirname, './src'),
    },
  },

  root: __dirname,

  server: {
    host: 'localhost',
    port: 4200,
  },

  test: {
    cache: {
      dir: '../../node_modules/.vitest',
    },
    coverage: {
      provider: 'v8',
      reportsDirectory: '../../coverage/marketplace-frontend',
    },
    environment: 'jsdom',
    globalSetup: './test/global-setup.ts',
    globals: true,
    include: ['src/**/test.{ts,tsx}'],

    reporters: ['default'],
    setupFiles: './test/setup.ts',
  },
});
```

[tsconfig.app.json](https://github.com/user-attachments/files/15614251/tsconfig.app.json)
[tsconfig.json](https://github.com/user-attachments/files/15614252/tsconfig.json)
[tsconfig.spec.json](https://github.com/user-attachments/files/15614253/tsconfig.spec.json)
",2154834873,"Hey @borisyordanov thanks! It seems that could fix the problem, but we need to check possible side-effects for this one. We'll get back to you next week."
2337854047,6020,[DOC] how to test with vitest/jest,"### Documentation issue

[The testing page](https://refine.dev/docs/further-readings/testing/) does not have any instructions on tesing with partially-implemented browser environment, like jsdom

### Describe the thing to improve

Apps built with refine can contain custom logic that needs to be tested. browser tests (e.g cypress/playwright) are a great way to make certain assertions but for other cases unit and integration tests headless testing (e.g vitest/jest) are much more apt.

When I include the `Refine` provider in a vitest environment tests start crashing with this error
![image](https://github.com/refinedev/refine/assets/12392666/613ae7ca-be76-4944-bd18-591c9886400b)

The lack of testing documentation means it's very difficult to make the tests run.

```ts
import routerProvider from '@refinedev/react-router-v6';
import refineDataProvider from '@refinedev/simple-rest';
import { render, RenderOptions } from '@testing-library/react';
import { Refine, ResourceProps } from '@refinedev/core';
import {  ThemeProvider } from '@mui/material/styles';

export const renderApp = (
  ui: ReactElement,
  options: RenderOptions & {
    resources: ResourceProps[];
  }
) => {
  return render(ui, {
    wrapper: ({ children }: { children: ReactNode }) => (
      <BrowserRouter>
        <ThemeProvider>
          <Refine
            dataProvider={{
              default: refineDataProvider('api'),
            }}
            routerProvider={routerProvider}
            resources={options.resources}
          >
            {children}
          </Refine>
        </ThemeProvider>
      </BrowserRouter>
    ),
    ...options,
  });
};
```

### Describe the solution (optional)

https://github.com/refinedev/refine/tree/master/examples contains examples of a unit testing setup with vitest and jest and react testing library


### Context

I'm working in a monorepo, built with https://nx.dev/ and pnpm workspaces

```
  System:
    OS: Linux 5.15 Ubuntu 22.04.4 LTS 22.04.4 LTS (Jammy Jellyfish)
    CPU: (24) x64 13th Gen Intel(R) Core(TM) i7-13700F
    Memory: 6.16 GB / 15.54 GB
    Container: Yes
    Shell: 5.1.16 - /bin/bash
  Binaries:
    Node: 20.12.1 - ~/.nvm/versions/node/v20.12.1/bin/node
    pnpm: 8.15.8 - ~/.local/share/pnpm/pnpm
  npmPackages:
    @vitejs/plugin-react: ^4.2.1 => 4.2.1 
    vite: ^5.2.0 => 5.2.11 
    vitest: ^1.6.0 => 1.6.0 
    @refinedev/core: ^4.49.1 => 4.49.1 
    @refinedev/mui: ^5.15.1 => 5.15.1 
    @refinedev/react-hook-form: ^4.8.18 => 4.8.18 
    @refinedev/react-router-v6: ^4.5.8 => 4.5.8 
    @refinedev/simple-rest: ^5.0.5 => 5.0.5 
    @emotion/react: ^11.11.4 => 11.11.4 
    @emotion/styled: ^11.11.5 => 11.11.5 
    @mui/icons-material: ^5.15.15 => 5.15.16 
    @mui/material: ^5.15.16 => 5.15.16 
    @mui/x-data-grid: ^6.6.0 => 6.19.11 
    @mui/x-date-pickers: ^7.5.0 => 7.5.0 

```
```ts
/// <reference types='vitest' />
import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';
import react from '@vitejs/plugin-react';
import path from 'path';
import { defineConfig } from 'vitest/config';

// eslint-disable-next-line no-restricted-syntax
export default defineConfig({
  build: {
    reportCompressedSize: true,
    rollupOptions: {
      /**
       * Ignore ""use client"" waning since we are not using SSR
       * @see {@link https://github.com/TanStack/query/pull/5161#issuecomment-1477389761 Preserve ""use client"" directives TanStack/query#5161}
       */
      onwarn(warning, warn) {
        if (warning.code === 'MODULE_LEVEL_DIRECTIVE' && warning.message.includes(`""use client""`)) {
          return;
        }
        warn(warning);
      },
    },
  },
  cacheDir: '../../node_modules/.vite/marketplace-frontend',

  plugins: [react(), nxViteTsPaths()],

  preview: {
    host: 'localhost',
    port: 4300,
  },

  resolve: {
    alias: {
      test: path.resolve(__dirname, './test'),
      '~': path.resolve(__dirname, './src'),
    },
  },

  root: __dirname,

  server: {
    host: 'localhost',
    port: 4200,
  },

  test: {
    cache: {
      dir: '../../node_modules/.vitest',
    },
    coverage: {
      provider: 'v8',
      reportsDirectory: '../../coverage/marketplace-frontend',
    },
    environment: 'jsdom',
    globalSetup: './test/global-setup.ts',
    globals: true,
    include: ['src/**/test.{ts,tsx}'],

    reporters: ['default'],
    setupFiles: './test/setup.ts',
  },
});
```

[tsconfig.app.json](https://github.com/user-attachments/files/15614251/tsconfig.app.json)
[tsconfig.json](https://github.com/user-attachments/files/15614252/tsconfig.json)
[tsconfig.spec.json](https://github.com/user-attachments/files/15614253/tsconfig.spec.json)
",2161025550,"Hey @borisyordanov, thank you for opening the issue and writing an explanation for your case 🙏 Adding a documentation section for vitest/jest testing and adding an example will be great for many users imho 🤔 

Thank you for sharing your solution for the `@refinedev/mui` + `vitest` error 🙏 This is related with how we do imports from `@mui/*` packages, I'm not sure if there's any way that works for every platform in both ESM and CJS but maybe we can transform these imports for ESM and CJS bundles to make sure the imports are pointing to correct files with correct shape 🚀 

Same issue also occurs when using Material UI with Remix in SPA mode (https://github.com/refinedev/refine/issues/6007). Unfortunately, Material UI has some issues with ESM exports (https://github.com/mui/material-ui/issues/30671), until they resolve those issues we will try to have workaround to get past them in our `@refinedev/mui` package. "
2337854047,6020,[DOC] how to test with vitest/jest,"### Documentation issue

[The testing page](https://refine.dev/docs/further-readings/testing/) does not have any instructions on tesing with partially-implemented browser environment, like jsdom

### Describe the thing to improve

Apps built with refine can contain custom logic that needs to be tested. browser tests (e.g cypress/playwright) are a great way to make certain assertions but for other cases unit and integration tests headless testing (e.g vitest/jest) are much more apt.

When I include the `Refine` provider in a vitest environment tests start crashing with this error
![image](https://github.com/refinedev/refine/assets/12392666/613ae7ca-be76-4944-bd18-591c9886400b)

The lack of testing documentation means it's very difficult to make the tests run.

```ts
import routerProvider from '@refinedev/react-router-v6';
import refineDataProvider from '@refinedev/simple-rest';
import { render, RenderOptions } from '@testing-library/react';
import { Refine, ResourceProps } from '@refinedev/core';
import {  ThemeProvider } from '@mui/material/styles';

export const renderApp = (
  ui: ReactElement,
  options: RenderOptions & {
    resources: ResourceProps[];
  }
) => {
  return render(ui, {
    wrapper: ({ children }: { children: ReactNode }) => (
      <BrowserRouter>
        <ThemeProvider>
          <Refine
            dataProvider={{
              default: refineDataProvider('api'),
            }}
            routerProvider={routerProvider}
            resources={options.resources}
          >
            {children}
          </Refine>
        </ThemeProvider>
      </BrowserRouter>
    ),
    ...options,
  });
};
```

### Describe the solution (optional)

https://github.com/refinedev/refine/tree/master/examples contains examples of a unit testing setup with vitest and jest and react testing library


### Context

I'm working in a monorepo, built with https://nx.dev/ and pnpm workspaces

```
  System:
    OS: Linux 5.15 Ubuntu 22.04.4 LTS 22.04.4 LTS (Jammy Jellyfish)
    CPU: (24) x64 13th Gen Intel(R) Core(TM) i7-13700F
    Memory: 6.16 GB / 15.54 GB
    Container: Yes
    Shell: 5.1.16 - /bin/bash
  Binaries:
    Node: 20.12.1 - ~/.nvm/versions/node/v20.12.1/bin/node
    pnpm: 8.15.8 - ~/.local/share/pnpm/pnpm
  npmPackages:
    @vitejs/plugin-react: ^4.2.1 => 4.2.1 
    vite: ^5.2.0 => 5.2.11 
    vitest: ^1.6.0 => 1.6.0 
    @refinedev/core: ^4.49.1 => 4.49.1 
    @refinedev/mui: ^5.15.1 => 5.15.1 
    @refinedev/react-hook-form: ^4.8.18 => 4.8.18 
    @refinedev/react-router-v6: ^4.5.8 => 4.5.8 
    @refinedev/simple-rest: ^5.0.5 => 5.0.5 
    @emotion/react: ^11.11.4 => 11.11.4 
    @emotion/styled: ^11.11.5 => 11.11.5 
    @mui/icons-material: ^5.15.15 => 5.15.16 
    @mui/material: ^5.15.16 => 5.15.16 
    @mui/x-data-grid: ^6.6.0 => 6.19.11 
    @mui/x-date-pickers: ^7.5.0 => 7.5.0 

```
```ts
/// <reference types='vitest' />
import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';
import react from '@vitejs/plugin-react';
import path from 'path';
import { defineConfig } from 'vitest/config';

// eslint-disable-next-line no-restricted-syntax
export default defineConfig({
  build: {
    reportCompressedSize: true,
    rollupOptions: {
      /**
       * Ignore ""use client"" waning since we are not using SSR
       * @see {@link https://github.com/TanStack/query/pull/5161#issuecomment-1477389761 Preserve ""use client"" directives TanStack/query#5161}
       */
      onwarn(warning, warn) {
        if (warning.code === 'MODULE_LEVEL_DIRECTIVE' && warning.message.includes(`""use client""`)) {
          return;
        }
        warn(warning);
      },
    },
  },
  cacheDir: '../../node_modules/.vite/marketplace-frontend',

  plugins: [react(), nxViteTsPaths()],

  preview: {
    host: 'localhost',
    port: 4300,
  },

  resolve: {
    alias: {
      test: path.resolve(__dirname, './test'),
      '~': path.resolve(__dirname, './src'),
    },
  },

  root: __dirname,

  server: {
    host: 'localhost',
    port: 4200,
  },

  test: {
    cache: {
      dir: '../../node_modules/.vitest',
    },
    coverage: {
      provider: 'v8',
      reportsDirectory: '../../coverage/marketplace-frontend',
    },
    environment: 'jsdom',
    globalSetup: './test/global-setup.ts',
    globals: true,
    include: ['src/**/test.{ts,tsx}'],

    reporters: ['default'],
    setupFiles: './test/setup.ts',
  },
});
```

[tsconfig.app.json](https://github.com/user-attachments/files/15614251/tsconfig.app.json)
[tsconfig.json](https://github.com/user-attachments/files/15614252/tsconfig.json)
[tsconfig.spec.json](https://github.com/user-attachments/files/15614253/tsconfig.spec.json)
",2257963891,Closing in favor of #6086. We'll update the issue when we have any progress on Material UI side or if we can provide any non-breaking updates to fix this. 
2330682206,6007,[BUG] ERR_UNSUPPORTED_DIR_IMPORT when import @refinedev/mui,"### Describe the bug

I create a remix-spa app by `pnpx create-remix@latest --template remix-run/remix/templates/spa`

Then, I add some refine components to `root.tsx`
```tsx
// root.tsx
import { Refine } from ""@refinedev/core"";
import { RefineSnackbarProvider } from ""@refinedev/mui"";


export default function App() {
  return (
    <RefineSnackbarProvider>
      <Refine>
        <Outlet />
      </Refine>
    </RefineSnackbarProvider>
  );
}
```

it raise an error

```
[vite] Internal server error: Directory import '<repo path>/node_modules/.pnpm/@refinedev+mui@5.15.1_@emotion+react@11.11.4_@types+react@18.3.3_react@18.3.1__@emotion+style_n4nk7wpf5mrcjlykwo4hytjbzm/node_modules/@mui/material/Box' is not supported resolving ES modules imported from <repo path>/node_modules/.pnpm/@refinedev+mui@5.15.1_@emotion+react@11.11.4_@types+react@18.3.3_react@18.3.1__@emotion+style_n4nk7wpf5mrcjlykwo4hytjbzm/node_modules/@refinedev/mui/dist/index.mjs
Did you mean to import ""@mui/material/node/Box/index.js""?
      at finalizeResolution (node:internal/modules/esm/resolve:259:11)
      at moduleResolve (node:internal/modules/esm/resolve:933:10)
      at defaultResolve (node:internal/modules/esm/resolve:1157:11)
      at ModuleLoader.defaultResolve (node:internal/modules/esm/loader:390:12)
      at ModuleLoader.resolve (node:internal/modules/esm/loader:359:25)
      at ModuleLoader.getModuleJob (node:internal/modules/esm/loader:234:38)
      at ModuleWrap.<anonymous> (node:internal/modules/esm/module_job:87:39)
      at link (node:internal/modules/esm/module_job:86:36)
```

### Steps To Reproduce

1. create remix-spa app by `pnpx create-remix@latest --template remix-run/remix/templates/spa`
2. install `@refinedev/core`, `@refinedev/mui`, `@mui/material`
3. import `@refinedev/mui`

### Expected behavior

no error

### Packages

- @refinedev/core 4.49.2
- @refinedev/mui 5.15.1
- @mui/material 5.15.19

### Additional Context

_No response_",,
2325792947,6004,[BUG] Access Control lower cases resources intermittently ,"### Describe the bug

Sometimes resource names can get changed to lower case even though they are Camel cased.

                {
                  name: ""auditLogs"",
                  list: ""/administration/auditLogs"",
                  show: ""/administration/auditLogs/show/:id"",
                  meta: {
                    icon: <></>,
                    parent: ""administration"",
                    label: ""Audit Logs"",
                  },
                },


Will then appear as **auditlogs** in the access control Can method

### Steps To Reproduce

Create a camelCase resouce.

Log the resource name in the accessControl.

export const accessControlProvider = {{
  can: async ({{ resource, action, params }}) => {{
    console.log(resource)
    console.log(""Resource Name:"", params?.resource?.name);
...
  }},
}};


### Expected behavior

Not to change the casing

### Packages

- @refine-dev/core

### Additional Context

Was mentioned on discord to put a ticket in @aliemir said he has a solution.

Potentially somehow related to kbar?",,
2321555259,5997,[BUG] MUI useDataGrid's dataGridProps type not compatible with DataGridPro,"### Describe the bug

Upon trying to upgrade from MUI DataGrid to DataGridPro, I'm getting the following TS errors: 

```
TS2322: Type ... is not assignable to type DataGridProProps<any>
Types of property onFilterModelChange are incompatible.
Types of parameters details and details are incompatible.
Types of property reason are incompatible.
```

### Steps To Reproduce

Create an extremely basic component w/ useDataGrid: 

```typescript
import React from 'react';
import {List, useDataGrid} from '@refinedev/mui';
import {DataGridPro} from '@mui/x-data-grid-pro';

const ListPage = () => {
  const { dataGridProps } = useDataGrid<any>({})
  return (
    <List>
       <DataGridPro {...dataGridProps} columns={[]} />
    </List>
  )
}
```

### Expected behavior

The `dataGridProps` type returned from `useDataGrid` will also be compatible with `DataGridPro`.

### Packages

- ""@refinedev/core"": ""4.49.2""
- ""@refinedev/mui"": ""5.15.1""
- ""@mui/material"": ""5.15.8""
- ""@mui/x-data-grid-pro"": ""7.5.1""

### Additional Context

_No response_",,
2299232369,5953,[BUG] Arrows directions in RTL (Right to Left),"### Describe the bug

Arrows used for navigation are always pointing to the same direction as LTR, regardless of the UI direction (LTR or RTL). This can be confusing for users navigating the UI in RTL mode, where the expectation is for the arrows to point to the different direction.

![image](https://github.com/refinedev/refine/assets/54387513/cc047762-c447-4691-9b45-ce5cbdec9503)


### Steps To Reproduce

1. Set the UI direction to RTL (Right-to-Left) in your Refinejs project.
2. Navigate to any page containing one or more arrows used for navigation
3. Observe that the arrows are all pointing to the same direction as LTR.

### Expected behavior

In RTL mode, the arrows used for navigation should be flipped so that they point to the opposite direction. This would be consistent with the user's expectation when navigating a right-to-left UI.

### Packages

```json
{
  ""dependencies"": {
    ""@refinedev/antd"": ""^5.38.1"",
    ""@refinedev/cli"": ""^2.16.31"",
    ""@refinedev/core"": ""^4.49.2"",
    ""@refinedev/react-router-v6"": ""^4.5.9"",
    ""@refinedev/simple-rest"": ""^5.0.6"",
    ""@uiw/react-md-editor"": ""^3.19.5"",
    ""antd"": ""5.16.5"",
    ""react"": ""^18.0.0"",
    ""react-dom"": ""^18.0.0"",
    ""react-router-dom"": ""^6.8.1""
  },
  ""devDependencies"": {
    ""@types/node"": ""^18.16.2"",
    ""@types/react"": ""^18.0.0"",
    ""@types/react-dom"": ""^18.0.0"",
    ""@vitejs/plugin-react"": ""^4.2.1"",
    ""typescript"": ""^5.4.2"",
    ""vite"": ""^5.1.6""
  }
}
```

### Additional Context

_No response_",,
2291432035,5943,[FEAT] Default GraphQL DataProvider cannot function on deeper graphs,"### Is your feature request related to a problem? Please describe.

Currently, the [default GraphQL DataProvider](https://github.com/refinedev/refine/blob/3046f9610f647bb049dbd388cd8cd5c267b481fa/packages/graphql/src/dataProvider/index.ts) is not capable of handling complex object graphs (which is very common in GraphQL). It appears to make the assumption that any query will be designed such that it returns the intended data type at the root level of the response. But this is very frequently not the case with GraphQL. 

E.g. 

```graphql
query {
  userPosts(userId: 'me') {
    id
    title
    content
  }
}
```

But as is typically the case with GraphQL endpoints, they may not expose highly focused queries such as that, and you may have something along the lines of this, which is still very simplistic but contains the desired data only a single level deeper.

```graphql
query {
  user(userId: 'me') {
    posts {
      id
      title
      content
    }
  }
}
```

Unfortunately this is not possible with the current DataProvider. 

### Describe alternatives you've considered

I propose amending the [GraphQLQueryOptions](https://github.com/refinedev/refine/blob/3046f9610f647bb049dbd388cd8cd5c267b481fa/packages/core/src/contexts/data/types.ts#L49-L99) type with a `gqlDataPath` and a `gqlCountPath` properties. These would be an array of strings that tell the DataProvider how to reach the intended data from the response. 

An additional utils function could be added that would then take this path (if provided) and extract the intended object(s) for use in the response, e.g...

```typescript
const getProp = (obj: any, path: (string | number)[], defaultValue: any = undefined): any =>
  path.reduce((acc: any, key: string | number) => acc && acc[key] !== undefined ? acc[key] : defaultValue, obj);
```

Then the returned result could be derived as so...

```typescript
return {
  data: meta?.gqlDataPath ? getProp(meta.gqlDataPath) : response[operation],
  total: meta?.gqlCountPath ? getProp(meta.gqlCountPath): response[operation].count
}
```

### Additional context

_No response_

### Describe the thing to improve

This gives the default GraphQL DataProvider the ability to handle more than the most basic of response types. In my experience, one of the primary purposes of graphQL is to expose deeper, more complex graphs of data precisely because the data owners may not be aware of how clients intend to use it. It's likely not possible to expose rudimentary endpoints for every possible use case. GitHub's GraphQL endpoint is an excellent example of this. ",,
2290961101,5942,[BUG] Default GraphQL DataProvider GetListResponse from 'count' property not possible.,"### Describe the bug

The default GraphQL providers `getList` function return the following `GetListResponse` shaped object: 

https://github.com/refinedev/refine/blob/3046f9610f647bb049dbd388cd8cd5c267b481fa/packages/graphql/src/dataProvider/index.ts#L39-L42

As [mentioned by another user on Discord](https://discord-questions.refine.dev/m/1205328662510047242) (possibly @Karabur?), this does not make sense. In order for `getList` to function correctly with various integration points within Refine (like the MUI `useDataGrid` hook), `response[operation]` must return an array of objects. An array cannot have additional properties on it such as `count`.  I'm not sure I understand how anybody could be using this default data provider out of the box with working pagination. 

### Steps To Reproduce

N/A. Per the graphQL spec, a list cannot have additional properties. 

### Expected behavior

I do not see how any GraphQL API could provide a response that would provide working pagination for the default GraphQL provider. Even the [docs for useList indicate something considerably different](https://refine.dev/docs/data/hooks/use-list/#retrieving-the-total-row-count), more akin to a [Relay response](https://relay.dev/graphql/connections.htm).



### Packages

- @refinedev/graphql: 6.5.0

### Additional Context

_No response_",,
2285506421,5931,[BUG] Named export 'SyncOutlined' not found.,"### Describe the bug

When building our app, we get this error:
```sh
Named export 'SyncOutlined' not found. The requested module '@ant-design/icons' is a CommonJS module, which may not support all module.exports as named exports.
CommonJS modules can always be imported via the default export, for example using:

import pkg from '@ant-design/icons';

```

### Steps To Reproduce

Install the latest refine packages and run the app.


### Expected behavior

No error is given when building

### Packages

""@refinedev/antd"": ""5.38.1""

### Additional Context

_No response_",,
2284341896,5927,[BUG] npm create refine-app@latest fails with Found 58 errors in 12 files.,"### Describe the bug

I just made a fresh install with `npm create refine-app@latest`  and then tried to build the example pages and got a long list errors:

```
 __________________________________________
/ They asked for a robust B2B solution. We \
\ heard 'time to shine with Refine'!       /
 ------------------------------------------
        \   ^__^
            ■-■¬\_______
            (__)\       )\/\
                ||----w |
                ||     ||
√ Downloaded remote source successfully.
√ Choose a project template · refine-vite
√ What would you like to name your project?: · better-spies-obey
√ Choose your backend service to connect: · data-provider-supabase
√ Do you want to use a UI Framework?: · antd
√ Do you want to add example pages?: · antd-example
√ Choose a package manager: · yarn
√ Mind sharing your email? (We reach out to developers for free priority support, events, and SWAG kits. We never spam.) ·


Success! Created better-spies-obey at c:\tmp\refine/better-spies-obey 🚀

Start developing by:

  › cd c:\tmp\refine/better-spies-obey
  › yarn dev

  › Join us at https://discord.gg/refine


c:\tmp\refine>cd better-spies-obey

c:\tmp\refine\better-spies-obey>yarn build
yarn run v1.22.19
$ tsc && refine build
src/App.tsx:1:10 - error TS2305: Module '""@refinedev/core""' has no exported member 'Authenticated'.

1 import { Authenticated, GitHubBanner, Refine } from ""@refinedev/core"";
           ~~~~~~~~~~~~~

src/App.tsx:1:25 - error TS2305: Module '""@refinedev/core""' has no exported member 'GitHubBanner'.

1 import { Authenticated, GitHubBanner, Refine } from ""@refinedev/core"";
                          ~~~~~~~~~~~~

src/App.tsx:1:39 - error TS2305: Module '""@refinedev/core""' has no exported member 'Refine'.

1 import { Authenticated, GitHubBanner, Refine } from ""@refinedev/core"";
                                        ~~~~~~

src/App.tsx:6:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'AuthPage'.

6   AuthPage,
    ~~~~~~~~

src/App.tsx:7:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'ErrorComponent'.

7   ErrorComponent,
    ~~~~~~~~~~~~~~

src/App.tsx:8:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'ThemedLayoutV2'.

8   ThemedLayoutV2,
    ~~~~~~~~~~~~~~

src/App.tsx:9:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'ThemedSiderV2'.

9   ThemedSiderV2,
    ~~~~~~~~~~~~~

src/App.tsx:10:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'useNotificationProvider'.

10   useNotificationProvider,
     ~~~~~~~~~~~~~~~~~~~~~~~

src/App.tsx:20:10 - error TS2305: Module '""@refinedev/supabase""' has no exported member 'dataProvider'.

20 import { dataProvider, liveProvider } from ""@refinedev/supabase"";
            ~~~~~~~~~~~~

src/App.tsx:20:24 - error TS2305: Module '""@refinedev/supabase""' has no exported member 'liveProvider'.

20 import { dataProvider, liveProvider } from ""@refinedev/supabase"";
                          ~~~~~~~~~~~~

src/App.tsx:92:35 - error TS7006: Parameter 'props' implicitly has an 'any' type.

92                           Sider={(props) => <ThemedSiderV2 {...props} fixed />}
                                     ~~~~~

src/authProvider.ts:6:19 - error TS7031: Binding element 'email' implicitly has an 'any' type.

6   login: async ({ email, password, providerName }) => {
                    ~~~~~

src/authProvider.ts:6:26 - error TS7031: Binding element 'password' implicitly has an 'any' type.

6   login: async ({ email, password, providerName }) => {
                           ~~~~~~~~

src/authProvider.ts:6:36 - error TS7031: Binding element 'providerName' implicitly has an 'any' type.

6   login: async ({ email, password, providerName }) => {
                                     ~~~~~~~~~~~~

src/authProvider.ts:63:22 - error TS7031: Binding element 'email' implicitly has an 'any' type.

63   register: async ({ email, password }) => {
                        ~~~~~

src/authProvider.ts:63:29 - error TS7031: Binding element 'password' implicitly has an 'any' type.

63   register: async ({ email, password }) => {
                               ~~~~~~~~

src/authProvider.ts:98:28 - error TS7031: Binding element 'email' implicitly has an 'any' type.

98   forgotPassword: async ({ email }) => {
                              ~~~~~

src/authProvider.ts:134:28 - error TS7031: Binding element 'password' implicitly has an 'any' type.

134   updatePassword: async ({ password }) => {
                               ~~~~~~~~

src/authProvider.ts:182:19 - error TS7006: Parameter 'error' implicitly has an 'any' type.

182   onError: async (error) => {
                      ~~~~~

src/components/header/index.tsx:1:15 - error TS2305: Module '""@refinedev/antd""' has no exported member 'RefineThemedLayoutV2HeaderProps'.

1 import type { RefineThemedLayoutV2HeaderProps } from ""@refinedev/antd"";
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/header/index.tsx:2:10 - error TS2305: Module '""@refinedev/core""' has no exported member 'useGetIdentity'.

2 import { useGetIdentity } from ""@refinedev/core"";
           ~~~~~~~~~~~~~~

src/contexts/color-mode/index.tsx:1:10 - error TS2305: Module '""@refinedev/antd""' has no exported member 'RefineThemes'.

1 import { RefineThemes } from ""@refinedev/antd"";
           ~~~~~~~~~~~~

src/pages/blog-posts/create.tsx:1:10 - error TS2305: Module '""@refinedev/antd""' has no exported member 'Create'.

1 import { Create, useForm, useSelect } from ""@refinedev/antd"";
           ~~~~~~

src/pages/blog-posts/create.tsx:1:18 - error TS2305: Module '""@refinedev/antd""' has no exported member 'useForm'.

1 import { Create, useForm, useSelect } from ""@refinedev/antd"";
                   ~~~~~~~

src/pages/blog-posts/create.tsx:1:27 - error TS2305: Module '""@refinedev/antd""' has no exported member 'useSelect'.

1 import { Create, useForm, useSelect } from ""@refinedev/antd"";
                            ~~~~~~~~~

src/pages/blog-posts/edit.tsx:1:10 - error TS2305: Module '""@refinedev/antd""' has no exported member 'Edit'.

1 import { Edit, useForm, useSelect } from ""@refinedev/antd"";
           ~~~~

src/pages/blog-posts/edit.tsx:1:16 - error TS2305: Module '""@refinedev/antd""' has no exported member 'useForm'.

1 import { Edit, useForm, useSelect } from ""@refinedev/antd"";
                 ~~~~~~~

src/pages/blog-posts/edit.tsx:1:25 - error TS2305: Module '""@refinedev/antd""' has no exported member 'useSelect'.

1 import { Edit, useForm, useSelect } from ""@refinedev/antd"";
                          ~~~~~~~~~

src/pages/blog-posts/list.tsx:2:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'DateField'.

2   DateField,
    ~~~~~~~~~

src/pages/blog-posts/list.tsx:3:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'DeleteButton'.

3   DeleteButton,
    ~~~~~~~~~~~~

src/pages/blog-posts/list.tsx:4:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'EditButton'.

4   EditButton,
    ~~~~~~~~~~

src/pages/blog-posts/list.tsx:5:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'List'.

5   List,
    ~~~~

src/pages/blog-posts/list.tsx:6:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'MarkdownField'.

6   MarkdownField,
    ~~~~~~~~~~~~~

src/pages/blog-posts/list.tsx:7:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'ShowButton'.

7   ShowButton,
    ~~~~~~~~~~

src/pages/blog-posts/list.tsx:8:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'useTable'.

8   useTable,
    ~~~~~~~~

src/pages/blog-posts/list.tsx:10:22 - error TS2305: Module '""@refinedev/core""' has no exported member 'useMany'.

10 import { BaseRecord, useMany } from ""@refinedev/core"";
                        ~~~~~~~

src/pages/blog-posts/list.tsx:25:16 - error TS7006: Parameter 'item' implicitly has an 'any' type.

25         ?.map((item) => item?.categories?.id)
                  ~~~~

src/pages/blog-posts/list.tsx:52:41 - error TS7006: Parameter 'item' implicitly has an 'any' type.

52               categoryData?.data?.find((item) => item.id === value?.id)?.title
                                           ~~~~

src/pages/blog-posts/show.tsx:2:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'DateField'.

2   DateField,
    ~~~~~~~~~

src/pages/blog-posts/show.tsx:3:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'MarkdownField'.

3   MarkdownField,
    ~~~~~~~~~~~~~

src/pages/blog-posts/show.tsx:4:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'NumberField'.

4   NumberField,
    ~~~~~~~~~~~

src/pages/blog-posts/show.tsx:5:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'Show'.

5   Show,
    ~~~~

src/pages/blog-posts/show.tsx:6:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'TextField'.

6   TextField,
    ~~~~~~~~~

src/pages/blog-posts/show.tsx:8:10 - error TS2305: Module '""@refinedev/core""' has no exported member 'useOne'.

8 import { useOne, useShow } from ""@refinedev/core"";
           ~~~~~~

src/pages/blog-posts/show.tsx:8:18 - error TS2305: Module '""@refinedev/core""' has no exported member 'useShow'.

8 import { useOne, useShow } from ""@refinedev/core"";
                   ~~~~~~~

src/pages/categories/create.tsx:1:10 - error TS2305: Module '""@refinedev/antd""' has no exported member 'Create'.

1 import { Create, useForm } from ""@refinedev/antd"";
           ~~~~~~

src/pages/categories/create.tsx:1:18 - error TS2305: Module '""@refinedev/antd""' has no exported member 'useForm'.

1 import { Create, useForm } from ""@refinedev/antd"";
                   ~~~~~~~

src/pages/categories/edit.tsx:1:10 - error TS2305: Module '""@refinedev/antd""' has no exported member 'Edit'.

1 import { Edit, useForm } from ""@refinedev/antd"";
           ~~~~

src/pages/categories/edit.tsx:1:16 - error TS2305: Module '""@refinedev/antd""' has no exported member 'useForm'.

1 import { Edit, useForm } from ""@refinedev/antd"";
                 ~~~~~~~

src/pages/categories/list.tsx:2:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'DeleteButton'.

2   DeleteButton,
    ~~~~~~~~~~~~

src/pages/categories/list.tsx:3:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'EditButton'.

3   EditButton,
    ~~~~~~~~~~

src/pages/categories/list.tsx:4:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'List'.

4   List,
    ~~~~

src/pages/categories/list.tsx:5:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'ShowButton'.

5   ShowButton,
    ~~~~~~~~~~

src/pages/categories/list.tsx:6:3 - error TS2305: Module '""@refinedev/antd""' has no exported member 'useTable'.

6   useTable,
    ~~~~~~~~

src/pages/categories/show.tsx:1:10 - error TS2305: Module '""@refinedev/antd""' has no exported member 'NumberField'.

1 import { NumberField, Show, TextField } from ""@refinedev/antd"";
           ~~~~~~~~~~~

src/pages/categories/show.tsx:1:23 - error TS2305: Module '""@refinedev/antd""' has no exported member 'Show'.

1 import { NumberField, Show, TextField } from ""@refinedev/antd"";
                        ~~~~

src/pages/categories/show.tsx:1:29 - error TS2305: Module '""@refinedev/antd""' has no exported member 'TextField'.

1 import { NumberField, Show, TextField } from ""@refinedev/antd"";
                              ~~~~~~~~~

src/pages/categories/show.tsx:2:10 - error TS2305: Module '""@refinedev/core""' has no exported member 'useShow'.

2 import { useShow } from ""@refinedev/core"";
           ~~~~~~~


Found 58 errors in 12 files.

Errors  Files
    11  src/App.tsx:1
     8  src/authProvider.ts:6
     2  src/components/header/index.tsx:1
     1  src/contexts/color-mode/index.tsx:1
     3  src/pages/blog-posts/create.tsx:1
     3  src/pages/blog-posts/edit.tsx:1
    10  src/pages/blog-posts/list.tsx:2
     7  src/pages/blog-posts/show.tsx:2
     2  src/pages/categories/create.tsx:1
     2  src/pages/categories/edit.tsx:1
     5  src/pages/categories/list.tsx:2
     4  src/pages/categories/show.tsx:1
error Command failed with exit code 2.
info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.

```

### Steps To Reproduce

see above

### Expected behavior

getting no errors

### Packages

see above

### Additional Context

_No response_",,
2283669010,5926,"[BUG] Module '""@refinedev/antd""' has no exported member 'Create' ('List' and so on).","### Describe the bug

Follow the Get Start on the official website and use `npm create refine-app@latest` to create a new project based on `Next.js`, `Ant Design`, `REST API`, `Custom Auth`.
Then, when I tried to `npm run build`, the error appeared. (npm, yarn and pnpm were all tried)

```bash
$ npm run build

> the-project@0.1.0 build
> refine build

   ▲ Next.js 14.1.0

   Creating an optimized production build ...
 ✓ Compiled successfully
   Linting and checking validity of types ...
Failed to compile.

./src/app/blog-posts/create/page.tsx:3:10
Type error: Module '""@refinedev/antd""' has no exported member 'Create'.

  1 | ""use client"";
  2 |
> 3 | import { Create, useForm, useSelect } from ""@refinedev/antd"";
    |          ^
  4 | import { Form, Input, Select } from ""antd"";
  5 |
  6 | export default function BlogPostCreate() {
```

### Steps To Reproduce

1. Run `npm create refine-app@latest` in the terminal.
2. Choose `Next.js`, `Ant Design`, `REST API`, `Custom Auth`.
3. Run `npm run build`, error occurs.
4. Update(Reinstall) all dependences to the last version based on instructions ([refine.dev/docs/guides-concepts/faq/#how-to-solve-module-x-has-no-exported-member-y-error](https://refine.dev/docs/guides-concepts/faq/#how-to-solve-module-x-has-no-exported-member-y-error))
5. Run `npm run build` **again**, error **still** occurs.

### Expected behavior

```bash
Type error: Module '""@refinedev/antd""' has no exported member 'Create'.
```
Complete logs below
```bash
npm run build

> avian-sphere@0.1.0 build
> refine build

   ▲ Next.js 14.1.0

   Creating an optimized production build ...
 ✓ Compiled successfully
   Linting and checking validity of types ...
Failed to compile.

./src/app/blog-posts/create/page.tsx:3:10
Type error: Module '""@refinedev/antd""' has no exported member 'Create'.

  1 | ""use client"";
  2 |
> 3 | import { Create, useForm, useSelect } from ""@refinedev/antd"";
    |          ^
  4 | import { Form, Input, Select } from ""antd"";
  5 |
  6 | export default function BlogPostCreate() {
```

### Packages

```json
{
    ""@ant-design/icons"": ""^5.3.7"",
    ""@ant-design/nextjs-registry"": ""^1.0.0"",
    ""@refinedev/antd"": ""^5.38.0"",
    ""@refinedev/cli"": ""^2.16.30"",
    ""@refinedev/core"": ""^4.49.1"",
    ""@refinedev/devtools"": ""^1.2.0"",
    ""@refinedev/kbar"": ""^1.3.9"",
    ""@refinedev/nextjs-router"": ""^6.0.3"",
    ""@refinedev/simple-rest"": ""^5.0.5"",
    ""antd"": ""^5.17.0"",
    ""js-cookie"": ""^3.0.5"",
    ""next"": ""^14.2.3"", // version 14.1.0 behaves the same way!
    ""react"": ""^18.3.1"",
    ""react-dom"": ""^18.3.1""
  }
```

### Additional Context

_No response_",,
2281162741,5923,"[BUG] After ""npm create refine-app@latest"" refine stucked in the build step forever","### Describe the bug

Infinite build time just after ""npm create refine-app@latest"" with example pages and building the project

### Steps To Reproduce

After ""npm create refine-app@latest"" refine stucked in the build step forever


Then responding with the following in the installation prompts in npm create refine-app@latest
```
✔ Downloaded remote source successfully.
✔ Choose a project template · refine-nextjs
✔ What would you like to name your project?: · frontend
✔ Choose your backend service to connect: · data-provider-supabase
✔ Do you want to use a UI Framework?: · antd
✔ Do you want to add example pages?: · antd-example
✔ Choose a package manager: · npm
✔ Mind sharing your email? (We reach out to developers for free priority support, events, and SWAG kits. We never spam.) · no
```

Navigate to the project frontend
```bash
cd frontend
```

Then it stuck in build step forever
```bash
npm  run build

> frontend@0.1.0 build
> refine build

   ▲ Next.js 14.1.0

   Creating an optimized production build ...
 ✓ Compiled successfully
   Linting and checking validity of types ...
   Collecting page data ...
```

### Expected behavior

It should build normally

### Packages

{
  ""name"": ""frontend"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""engines"": {
    ""node"": "">=18.0.0""
  },
  ""scripts"": {
    ""dev"": ""cross-env NODE_OPTIONS=--max_old_space_size=4096 refine dev"",
    ""build"": ""refine build"",
    ""start"": ""refine start"",
    ""lint"": ""eslint '**/*.{js,jsx,ts,tsx}'"",
    ""refine"": ""refine""
  },
  ""dependencies"": {
    ""@refinedev/cli"": ""^2.16.21"",
    ""@refinedev/core"": ""^4.47.1"",
    ""@refinedev/devtools"": ""^1.1.32"",
    ""@refinedev/nextjs-router"": ""^6.0.0"",
    ""@refinedev/kbar"": ""^1.3.6"",
    ""next"": ""14.1.0"",
    ""react"": ""^18.0.0"",
    ""react-dom"": ""^18.0.0"",
    ""@refinedev/supabase"": ""^5.7.4"",
    ""js-cookie"": ""^3.0.5"",
    ""@refinedev/antd"": ""^5.37.4"",
    ""@ant-design/icons"": ""^5.0.1"",
    ""antd"": ""^5.0.5"",
    ""@ant-design/nextjs-registry"": ""^1.0.0""
  },
  ""devDependencies"": {
    ""@types/react"": ""^18.0.0"",
    ""@types/react-dom"": ""^18.0.0"",
    ""@types/node"": ""^18.0.0"",
    ""@typescript-eslint/parser"": ""5.48.0"",
    ""typescript"": ""^4.7.4"",
    ""cross-env"": ""^7.0.3"",
    ""eslint"": ""^8"",
    ""eslint-config-next"": ""14.1.0"",
    ""@types/js-cookie"": ""^3.0.6""
  },
  ""refine"": {
    ""projectId"": ""bnwFHH-jafWj3-242t1r""
  }
}


### Additional Context

_No response_",,
2275432254,5909,[BUG] Supabase token refresh not handled in Next.js example,"### Describe the bug

When automatically creating a project with `npm create refine-app@latest` using Next.js and Supabase, the authProvider creates a copy of the token created at login time. `Cookies.set(""token"", data.session.access_token, {expires: 30, path: ""/"",});`. This does not take into account the need to refresh the token (which supabase internally does in the client, storing it in local storage).

Remark that this token is used to check the auth: 

```
check: async () => {
  const token = Cookies.get(""token"");
  const { data } = await supabaseClient.auth.getUser(token);
...
```

### Steps To Reproduce

`npm create refine-app@latest` # (supabase and nextjs)

### Expected behavior

Refresh the token.

### Packages

@refinedev/supabase

### Additional Context

_No response_",,
2272082341,5904,[FEAT] Support TypedDocumentNode for GraphQL data-provider,"### Is your feature request related to a problem? Please describe.

Following up on @alicanerdurmaz recent excellent work in #5742, and influenced by the [gql.tada's integration with other GraphQL clients](https://gql-tada.0no.co/guides/typed-documents#integration-with-clients), it would be very impressive if Refine were able to better leverage the [TypedDocumentNode](https://the-guild.dev/graphql/codegen/plugins/typescript/typed-document-node) and could greatly reduce or even eliminate boilerplate/generated code. 

### Describe alternatives you've considered

_No response_

### Additional context

I'm new to Refine and just becoming acquainted with how it works. Since @alicanerdurmaz added support for `meta.gqlQuery` I thought I'd give [gql.tada](https://gql-tada.0no.co) a try. It works for validating/autocompleting the query, but as things currently exist with the GraphQL data-provider, it is unable to infer any type information from the `TypedDocumentNode`

### Describe the thing to improve

Fully support TypedDocumentNode in addition to DocumentNode. ",,
2270926647,5902,[FEAT]: Supabase Data Provider should filter array column by array ,"### Is your feature request related to a problem? Please describe.

I want to filter the array column with an array in Supabase.
For example, I have the `genres` column and it has this data:
- [Comedy, Music, Horror]
- [Comedy]
- [Drama]

and I want to filter with this value:
- [Comedy, Music]

but Refine doesn't have a [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) to support it.

### Describe the thing to improve

We can add `ina` and `nina` [CrudFilter](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/core/src/contexts/data/types.ts#L195) and map to [`query.contains`](https://supabase.com/docs/reference/javascript/contains) in [Supabase data provider](https://github.com/refinedev/refine/blob/b6ee221234287b9fb1a94f0f948f93fbed9c5f24/packages/supabase/src/utils/generateFilter.ts#L4) to support this case.
",,
2262004584,5888,[BUG] `mutationOptions` are overriding Refine's behavior unexpectedly,"### Describe the bug

Consider this:

```tsx
import { useLogin } from ""@refinedev/core"";

const { mutateAsync: login, isLoading } = useLogin({
    mutationOptions: {
        onSuccess(data) {
         console.log(""Hey!"");
        },
    },
});
```

And `authProvider.ts` as follow:

```tsx
""use client"";

import { AuthBindings, HttpError } from ""@refinedev/core"";

export const authProvider: AuthBindings = {
    login: async ({ username, password }) => {
        try {
            // Preform login
            return { success: true, redirectTo: ""/"" };
        } catch (error) {
            return {
                success: false,
                error: { message: ""Username or password is incorrect"", statusCode: (error as HttpError).statusCode },
            };
        }
    },
};
```


Then `onSuccess` callback on `useLogin` will override the Refine's behavior for `onSuccess` causing the `redirectTo` to not work.

### Steps To Reproduce

1. Create a login component
2. Create an `authProvider`
3. Add a custom `onSuccess` callback in `useLogin({ mutationOptions: onSuccess() { /* callback */ }});`
4. Redirect doesn't happen after successful login

### Expected behavior

`mutationOptions` should work along side the Refine's default behavior, redirect should occur.

### Packages

- @refinedev/core

### Additional Context

_No response_",,
2254633795,5872,[FEAT] Unable to highlight non-CRUD page on menu item,"### Is your feature request related to a problem? Please describe.

Hi, I'm having a confusing time on how to highlight non-CURD pages to the left menu items and display the breadcrumb navigation properly?

I now have a usage scenario: there is an order placing function in the member module that is not part of the member's CURD, and this order placing function only requires a create page.

Currently my needs are that I want to highlight this page to the Member menu in the left menu item, and I want that new page to be consistent with the breadcrumb navigation like the one that creates the member, and since I need the member's ID, maybe I should just need an edit page?

Is it now possible to fix the issue in the resources config item? I asked Refine Docs AI and didn't find a solution, if there is a solution please let me know, my code is similar to this: 

```js
const resources = [
 {
    name: 'vip',
    list: '/vip',
    create: '/vip/create',
    edit: '/vip/edit/:id',
    meta: {
      label: 'Member',
      icon: <CrownOutlined />,
    },
  },
  {
    name: 'vipOrder',
    list: '/vip',
    edit: '/vip/order/:id',
    meta: {
      parent: 'vip',
      hide: true,
    },
  }
]
```

Thanks, team


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Ability to implement non-CURD page highlighting in resources configuration, and to do so in a way that is consistent with the breadcrumb navigation of Create, Edit pages.",,
2252167094,5866,[BUG] appendCurrentPathToQuery on Authenticated ,"### Describe the bug

<Authenticated appendCurrentPathToQuery={false} fallback={<Navigate to=""/login"" />}>
    {/* Your routes here */}
</Authenticated>

it not work appendCurrentPathToQuery={false} i do false but it still true or working route to param query after login

### Steps To Reproduce

1. using <Authenticated > 
2. do appendCurrentPathToQuery={false}  on it
3. i put url with Query Param like http://localhost:9777/login?to=%2FContactPublic
4. login
5. it not go welcome page but it still follow to ContactPublic page
6. end

### Expected behavior

it not work appendCurrentPathToQuery={false} i do false but it still true or working route to param query after login

### Packages

import {Authenticated} from ""@refinedev/core"";

### Additional Context

_No response_",,
2250534424,5864,[FEAT] Passing arbitrary graphql variables to hasura dataProvider,"### Is your feature request related to a problem? Please describe.

I am very pleased that gqlQuery allows us to perform arbitrary GraphQL Queries against hasura.
https://github.com/refinedev/refine/issues/5489

However, it is not possible to use hasura's powerful filters because only CrudFilter[] can be passed to filters in the useTable. It is also not possible to use variables type information generated by graphql codegen.

In my case.
Given a type with the relation User has many Books, I can write a query in hasura to get a list of Users who have 3 or more Books, which is not possible in the current CrudFilter.

### Describe alternatives you've considered

added to the following line in hasura dataProvider.
```typescript
        variables = {
          ...hasuraPagination,
          ...(hasuraSorting &&
            (namingConvention === ""graphql-default""
              ? {
                orderBy: hasuraSorting,
              }
              : {
                order_by: hasuraSorting,
              })),
          ...(hasuraFilters && {
            where: hasuraFilters,
          }),
          ...(meta?.gqlVariables && meta?.gqlVariables), // added
        };
```
https://github.com/refinedev/refine/blob/master/packages/hasura/src/dataProvider/index.ts#L181


This allows the addition of any where condition supported by hasura, using type information hints, as follows.
```typescript
  const { tableProps } = useTable<GetFieldsFromList<BlogPostsQuery>>({
    syncWithLocation: true,
    meta: {
      gqlQuery: BlogPostsDocument,
      gqlVariables: {
        where: {
          _and: [
            {
              title: {
                _ilike: ""%test%"",
              },
            }
          ],
        },
      } as BlogPostsQueryVariables, // generated type from graphql query
    },
  });
```

### Additional context

_No response_

### Describe the thing to improve

- add `gqlVariables?: any` to `GraphQLQueryOptions`
  - Ideally, I would like to pass the type information generated from the graphql query by type parameter instead of any, but I can't think of a way to achieve that right now.
- use `meta.gqlVariables` in `getList`, `getMany` of hasura dataProvider",,
2243587488,5852,[BUG] - refine build is failing,"### Describe the bug

Hey guys. When we're trying to build our project we're having an error.
Dependencies in our project:
```
""dependencies"": {
    ""@ant-design/icons"": ""^5.0.1"",
    ""@ant-design/nextjs-registry"": ""^1.0.0"",
    ""@react-google-maps/api"": ""^2.19.3"",
    ""@refinedev/antd"": ""^5.37.6"",
    ""@refinedev/cli"": ""^2.16.29"",
    ""@refinedev/core"": ""^4.49.0"",
    ""@refinedev/devtools"": ""^1.1.37"",
    ""@refinedev/kbar"": ""^1.3.8"",
    ""@refinedev/nextjs-router"": ""^6.0.2"",
    ""@refinedev/simple-rest"": ""^5.0.4"",
    ""antd"": ""^5.0.5"",
    ""antd-utils"": ""^0.1.14"",
    ""eslint-config-prettier"": ""^9.1.0"",
    ""js-cookie"": ""^3.0.5"",
    ""next"": ""14.1.0"",
    ""prettier"": ""^3.2.5"",
    ""react"": ""^18.0.0"",
    ""react-dom"": ""^18.0.0""
  },
  ""devDependencies"": {
    ""@testing-library/jest-dom"": ""^6.4.2"",
    ""@types/js-cookie"": ""^3.0.6"",
    ""@types/node"": ""^18.0.0"",
    ""@types/react"": ""^18.0.0"",
    ""@types/react-dom"": ""^18.0.0"",
    ""@typescript-eslint/eslint-plugin"": ""^7.4.0"",
    ""@typescript-eslint/parser"": ""^7.4.0"",
    ""cross-env"": ""^7.0.3"",
    ""eslint"": ""^8"",
    ""eslint-config-next"": ""14.1.0"",
    ""jest"": ""^29.7.0"",
    ""jest-environment-jsdom"": ""^29.7.0"",
    ""typescript"": ""^4.7.4""
  }
``` 

An error:
```shell
./node_modules/@refinedev/core/src/contexts/data/types.ts:2:30
Type error: Cannot find module 'graphql' or its corresponding type declarations.

  1 | import { QueryFunctionContext, QueryKey } from ""@tanstack/react-query"";
> 2 | import { DocumentNode } from ""graphql"";
    |                              ^
  3 |
  4 | import { UseListConfig } from ""../../hooks/data/useList"";
  5 |
``` 

We're tried to remove node_modules and package_lock, and re-install all the modules. Didn't helped.

### Steps To Reproduce

1 - Check the dependencies (refine is updated to the last version)
2 - Try to make `refine build`
3 - See an error (at least we seeing it)

### Expected behavior

`refine build` builds the project without errors

### Packages

```
    ""@refinedev/antd"": ""^5.37.6"",
    ""@refinedev/cli"": ""^2.16.29"",
    ""@refinedev/core"": ""^4.49.0"",
    ""@refinedev/devtools"": ""^1.1.37"",
    ""@refinedev/kbar"": ""^1.3.8"",
    ""@refinedev/nextjs-router"": ""^6.0.2"",
    ""@refinedev/simple-rest"": ""^5.0.4"",
```

### Additional Context

_No response_",,
2241805580,5846,[BUG] finefoods-client Sample is broken,"### Describe the bug

Getting this error  from nextjs-router packages when visiting localhost:3000

```
Error: Cannot find module '/workspace/node_modules/next/router' imported from /workspace/node_modules/@refinedev/nextjs-router/dist/pages.mjs
Did you mean to import next/router.js?
```


### Steps To Reproduce

1.  Create a new refine project from sample: `npm create refine-app@latest -- --example finefoods-client`
2. `cd  finefoods-client`
3.  `npm run dev`

### Expected behavior

The routing should work as expected and the default page (root route) should be displayed on the browser

### Packages

  ""dependencies"": {
    ""@refinedev/cli"": ""^2.16.29"",
    ""@refinedev/core"": ""^4.49.0"",
    ""@refinedev/nextjs-router"": ""^6.0.2"",
    ""@refinedev/react-table"": ""^5.6.8"",
    ""@refinedev/simple-rest"": ""^5.0.4"",
    ""@tanstack/react-table"": ""^8.2.6"",
    ""gsap"": ""^3.8.0"",
    ""js-confetti"": ""^0.9.0"",
    ""next"": ""^14.1.0"",
    ""react"": ""^18.0.0"",
    ""react-dom"": ""^18.0.0""
  },
  ""devDependencies"": {
    ""@types/node"": ""^18.16.2"",
    ""@types/react"": ""^18.0.0"",
    ""autoprefixer"": ""^10.4.1"",
    ""postcss"": ""^8.1.4"",
    ""tailwindcss"": ""^3.0.11"",
    ""typescript"": ""^5.4.2""
  }

### Additional Context

It's a fresh installation no custom code has been added.

you can see the error even in codesandbox:
[codesandbox](https://codesandbox.io/embed/github/refinedev/refine/tree/master/examples/finefoods-client?view=preview&theme=dark&codemirror=1)",,
2234125853,5838,[BUG] Documentation broken,"### Describe the bug

https://refine.dev/blog/shadcn-ui/#refine--shadcn-building-a-reusable-datatable--component-with-shadcn

This doc does not seem to work, i followed the instructions and i get an error after implementing the Datatable component.

Uncaught TypeError: Cannot read properties of undefined (reading 'categoryData')

checking the table object from

{
        id: ""category"",
        header: ""Category"",
        accessorKey: ""category.id"",
        cell: function render({ getValue, table }) {
          const meta = table.options.meta as {
            categoryData: GetManyResponse<ICategory>;
          };
          const category = meta.categoryData?.data?.find(
            (item: ICategory) => item.id === getValue()
          );

          return category?.title ?? """";
          // console.log(table);
        },
      },

this column section, i can see that table does not have a meta under options object..

is this document outdated?

### Steps To Reproduce

Follow the instructions on the documentation.

### Expected behavior

should work. instead i get an error and nothing is shown on the page.

### Packages

simple-rest and shadcnui


### Additional Context

```
import React from ""react"";
import {
  IResourceComponentsProps,
  useNavigation,
  useMany,
  GetManyResponse,
} from ""@refinedev/core"";

import { useTable } from ""@refinedev/react-table"";
import { ColumnDef, flexRender } from ""@tanstack/react-table"";

import { Button } from ""@/components/ui/button"";
import { DataTable } from ""@/components/ui/data-table"";
import {
  ArrowLeftToLine,
  ArrowRightToLine,
  ChevronLeftIcon,
  ChevronRightIcon,
  LucideEdit,
  LucideEye,
} from ""lucide-react"";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from ""@/components/ui/table"";
import {
  Pagination,
  PaginationContent,
  PaginationItem,
  PaginationLink,
  PaginationNext,
  PaginationPrevious,
} from ""@/components/ui/pagination"";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from ""@/components/ui/select"";

interface ICategory {
  id: number;
  title: string;
}

interface IBlogPost {
  id: number;
  title: string;
  content: string;
  status: ""published"" | ""draft"" | ""rejected"";
  category: {
    id: number;
  };
}

export const BlogPostList: React.FC<IResourceComponentsProps> = () => {
  const columns = React.useMemo<ColumnDef<IBlogPost>[]>(
    () => [
      {
        id: ""id"",
        accessorKey: ""id"",
        header: ""ID"",
      },
      {
        id: ""title"",
        accessorKey: ""title"",
        header: ""Title"",
      },
      {
        id: ""content"",
        accessorKey: ""content"",
        header: ""Content"",
      },
      {
        id: ""category"",
        header: ""Category"",
        accessorKey: ""category.id"",
        cell: function render({ getValue, table }) {
          const meta = table.options.meta as {
            categoryData: GetManyResponse<ICategory>;
          };
          const category = meta.categoryData?.data?.find(
            (item: ICategory) => item.id === getValue()
          );

          return category?.title ?? """";
          // console.log(table);
        },
      },
      {
        id: ""status"",
        accessorKey: ""status"",
        header: ""Status"",
      },
      {
        id: ""actions"",
        accessorKey: ""id"",
        header: ""Actions"",
        cell: function render({ getValue }) {
          return (
            <div className=""flex flex-row flex-nowrap gap-0"">
              <Button
                variant=""ghost""
                size=""icon""
                onClick={() => {
                  show(""blog_posts"", getValue() as string);
                }}
              >
                <LucideEye size={16} />
              </Button>
              <Button
                variant=""ghost""
                size=""icon""
                onClick={() => {
                  edit(""blog_posts"", getValue() as string);
                }}
              >
                <LucideEdit size={16} />
              </Button>
            </div>
          );
        },
      },
    ],
    []
  );

  const { edit, show, create } = useNavigation();

  const tableProps = useTable({
    columns,
    refineCoreProps: {
      meta: {
        populate: [""category""],
      },
    },
  });

  return (
    <div className=""p-2"">
      <div className=""flex justify-between items-center my-2 mx-2"">
        <h1 className=""scroll-m-20 text-2xl font-extrabold tracking-tight"">
          Blog Posts
        </h1>
        <div className=""p-2"">
          <Button onClick={() => create(""blog_posts"")}>Create</Button>
        </div>
      </div>
      <DataTable {...tableProps} />
    </div>
  );
};

```",,
2233784846,5834,I updated refinedev and refinedev/inferencer and suddenly project breaks 'prism-react-renderer/themes/vsDark',"### Describe the bug

I just updated the following packages @refinedev/appwrite 6.4.4 -> 6.4.8, @refinedev/cli 2.16.14 ->2.16.29, @refinedev/kbar                1.3.4 -> 1.3.8, @refinedev/react-router-v6     4.5.4 -> 4.5.7, @refinedev/antd 5.36.14 -> 5.37.6, @refinedev/core  4.44.7 -> 4.49.0, @refinedev/inferencer  4.5.14 ->4.6.0, @refinedev/simple-rest  4.5.4 -> 5.0.4

And now my project breaks, this is the full error message:

""ERROR in ./node_modules/@refinedev/inferencer/dist/antd.mjs 418:0-52

Module not found: Error: Can't resolve 'prism-react-renderer/themes/vsDark' in 'C:\Users\omrih\Documents\TaxRay\taxray_demo_poc\taxray-demo-poc\node_modules@refinedev\inferencer\dist'
Did you mean 'index.js'?
BREAKING CHANGE: The request 'prism-react-renderer/themes/vsDark' failed to resolve only because it was resolved as fully specified
(probably because the origin is strict EcmaScript Module, e. g. a module with javascript mimetype, a '.mjs' file, or a '.js' file where the package.json contains '""type"": ""module""').
The extension in the request is mandatory for it to be fully specified.
Add the extension to the request.""

### Steps To Reproduce

1. updated the following packages @refinedev/appwrite 6.4.4 -> 6.4.8, @refinedev/cli 2.16.14 ->2.16.29, @refinedev/kbar                1.3.4 -> 1.3.8, @refinedev/react-router-v6     4.5.4 -> 4.5.7, @refinedev/antd 5.36.14 -> 5.37.6, @refinedev/core  4.44.7 -> 4.49.0, @refinedev/inferencer  4.5.14 ->4.6.0, @refinedev/simple-rest  4.5.4 -> 5.0.4
2. Site breaks

### Expected behavior

Site shouldn't break

### Packages


        ""@ant-design/icons"": ""^5.0.1"",
        ""@ant-design/plots"": ""^1.2.5"",
        ""@babel/runtime"": ""^7.22.11"",
        ""@emotion/babel-plugin"": ""^11.11.0"",
        ""@emotion/is-prop-valid"": ""^1.2.1"",
        ""@emotion/serialize"": ""^1.1.2"",
        ""@emotion/styled"": ""^11.11.0"",
        ""@emotion/use-insertion-effect-with-fallbacks"": ""^1.0.1"",
        ""@emotion/utils"": ""^1.2.1"",
        ""@fullcalendar/react"": ""^6.1.11"",
        ""@refinedev/antd"": ""^5.37.6"",
        ""@refinedev/appwrite"": ""^6.4.8"",
        ""@refinedev/cli"": ""^2.16.29"",
        ""@refinedev/core"": ""^4.49.0"",
        ""@refinedev/inferencer"": ""^4.6.0"",
        ""@refinedev/kbar"": ""^1.3.8"",
        ""@refinedev/react-router-v6"": ""^4.5.7"",
        ""@refinedev/simple-rest"": ""^5.0.4"",
        ""antd"": ""^5.0.5"",
        ""axios"": ""^1.4.0"",
        ""cors"": ""^2.8.5"",
        ""fullcalendar"": ""^6.1.11"",
        ""leaflet"": ""^1.9.4"",
        ""lodash"": ""^4.17.21"",
        ""prism-react-renderer"": ""^2.3.1"",
        ""react"": ""^18.0.0"",
        ""react-dom"": ""^18.0.0"",
        ""react-leaflet"": ""^4.2.1"",
        ""react-leaflet-cluster"": ""^2.1.0"",
        ""react-router-dom"": ""^6.8.1"",
        ""react-scripts"": ""^5.0.0""
      },
      ""devDependencies"": {
        ""@definitelytyped/dtslint"": ""^0.0.168"",
        ""@emotion/react"": ""^11.11.0"",
        ""@testing-library/jest-dom"": ""^5.16.4"",
        ""@testing-library/react"": ""^13.1.1"",
        ""@testing-library/user-event"": ""^14.1.1"",
        ""@types/jest"": ""^29.2.4"",
        ""@types/leaflet"": ""^1.9.9"",
        ""@types/lodash"": ""^4.14.171"",
        ""@types/node"": ""^12.20.11"",
        ""@types/react"": ""^18.0.0"",
        ""@types/react-dom"": ""^18.0.0"",
        ""prettier"": ""^3.2.5"",
        ""typescript"": ""^4.7.4"",
        ""web-vitals"": ""^1.1.1""

### Additional Context

_No response_",,
2232303160,5832,[BUG] useInfiniteList pagination is broken,"### Describe the bug

At [useInfiniteList](https://github.com/refinedev/refine/blob/master/packages/core/src/hooks/data/useInfiniteList.ts#L253) is missing the default value for pageParam, setting `pageParam = preferredPagination.current ?? 1` seems to fix it.

```
queryFn: ({ queryKey, pageParam, signal }) => {
      const paginationProperties = {
        ...prefferedPagination,
        current: pageParam,
      };
```


### Steps To Reproduce

1. define a useInfiniteList hook
```
    const {
        data,
        isError,
        isLoading,
        hasNextPage,
        fetchNextPage,
        isFetchingNextPage,
    } = useInfiniteList<ContactsPage>({
        resource: ""contacts"",
        meta: {
            fields: [""id"", ""name"", ""photo""],
        },
        pagination: {
            pageSize: 20,
            mode: ""server""
        },
    });
```

2. Test it, we are using the nestjs-query for our graphql apis
3. You will see that the paging field is not passed as argument for the query, because `paginationProperties.current` is overriden by `pageParam` (always undefined)

### Expected behavior

Pagination to work

### Packages

- @refinedev/core

### Additional Context

I can make a PR, but I'm very new to Refine and Tanstack.
Just want to make sure this is the correct approach.
Thanks!",,
2232020837,5831,[BUG] ESM/CJS error with `@refinedev/devtools`,"### Describe the bug

Hey there again.

Seems like Ive found another  ESM/CJS issue
```sh
⨯ file:///Users/Projects/Code/app/node_modules/@refinedev/devtools/dist/index.mjs:2

SyntaxError: Named export 'getParentOfFiber' not found. The requested module '@aliemir/dom-to-fiber-utils' is a CommonJS module, which may not support all module.exports as named exports.
CommonJS modules can always be imported via the default export, for example using:

import pkg from '@aliemir/dom-to-fiber-utils';
  at ModuleJob._instantiate (node:internal/modules/esm/module_job:124:21)
    at async ModuleJob.run (node:internal/modules/esm/module_job:190:5) {
  page: '/auth/signup'
}
```

### Steps To Reproduce

Upgrade to the latest refine packages and run next.js app.

### Expected behavior

No error

### Packages

- @refinedev/devtools ""1.1.37""

### Additional Context

_No response_",,
2229319469,5827,[BUG] Upgrading from 4.48.0 to 4.49.0 break TypeScript imports in `@refinedev/core`,"### Describe the bug

After an upgrade to 4.49.0, TypeScript is not able to figure out the imports: `Module '""@refinedev/core""' has no exported member 'useTranslate'.ts(2305)`.

So far, in my codebase, the following elements are not being processed by TypeScript:
- Authenticated
- useLogin
- useTranslate
- useIsAuthenticated
- useLogout
- useGetLocale
- useSetLocale 
- useTranslate
- Refine

The following elements seems to be imported correctly by TypeScript:
- AuthProvider
- RefineProps
- I18nProvider
- ResourceProps

### Steps To Reproduce

I'll have to detail it more later on if needed. I am using a Nx workspace.

1. Create a file that uses `import { Authenticated, useLogin, useTranslate } from ""@refinedev/core"";`

### Expected behavior

Imports work as they did in 4.48.0.

### Packages

- @refinedev/core: 4.49.0

### Additional Context

I suspect #5755 is the pull that introduced that behavior.

When running vite to serve, everything works fine. So I guess my `serve` by-pass typechecking in some way 🤷🏼.

This is what my `tsconfig.json` looks like (at least, when at the Nx `tsconfig` are merged).
```json
{
  ""compilerOptions"": {
    ""jsx"": ""react-jsx"",
    ""allowJs"": false,
    ""esModuleInterop"": false,
    ""allowSyntheticDefaultImports"": true,
    ""strict"": true,
    ""composite"": false,
    ""sourceMap"": true,
    ""declaration"": true,
    ""composite"": true,
    ""moduleResolution"": ""Node16"",
    ""emitDecoratorMetadata"": true,
    ""experimentalDecorators"": true,
    ""importHelpers"": true,
    ""verbatimModuleSyntax"": true,
    ""target"": ""ES2022"",
    ""module"": ""Node16"",
    ""lib"": [""ES2023"", ""DOM""],
    ""skipLibCheck"": true,
    ""skipDefaultLibCheck"": true,
  }
}
```",,
2228067405,5826,[BUG],"### Describe the bug

Go to
[examples/app-crm-minimal](https://github.com/refinedev/refine/blob/master/examples/app-crm-minimal/src/providers/auth.ts)

![image](https://github.com/refinedev/refine/assets/129784756/13ee42f6-dba8-49aa-9a53-eb5b183bbb0d)
Unable to find module **'@/graphql/schema.types'** or its corresponding type declarations.

### Steps To Reproduce

Go to line 103
![image](https://github.com/refinedev/refine/assets/129784756/a7bec6e5-8a3b-40d7-ab76-60214ab230e2)

I've already tried using the **'any'** type but it keeps giving me an error when logging in.
![image](https://github.com/refinedev/refine/assets/129784756/f7d4e4bc-a2a5-472d-a863-a1aef5484553)

### Expected behavior

I hope it is possible to make this correction to log in.

I'm a beginner and I couldn't find a solution

### Packages

""graphql-tag"": ""^2.12.6"",
""graphql-ws"": ""^5.9.1"",

""@graphql-codegen/cli"": ""^5.0.2"",
""@graphql-codegen/import-types-preset"": ""^3.0.0"",
""@graphql-codegen/typescript"": ""^4.0.6"",
""@graphql-codegen/typescript-operations"": ""^4.2.0"",

### Additional Context

_No response_",,
2226114185,5822,[BUG] Error with modules after ESM/CJS changes,"### Describe the bug

Updating `@refinedev/devtools` and `@refinedev/nextjs-router` to use ESM (I believe in this PR #5765) now causes the Next.js app to not run, giving the following errors:
```sh
✓ Compiled /_error in 14.4s (8818 modules)
 ⨯ Error: Cannot find module '/Users/Projects/Code/app/node_modules/lodash/debounce' imported from /Users/Projects/Code/app/node_modules/@refinedev/devtools/dist/index.mjs
Did you mean to import lodash/debounce.js?
    at new NodeError (node:internal/errors:405:5)
    at finalizeResolution (node:internal/modules/esm/resolve:327:11)
    at moduleResolve (node:internal/modules/esm/resolve:946:10)
    at defaultResolve (node:internal/modules/esm/resolve:1132:11)
    at nextResolve (node:internal/modules/esm/loader:163:28)
    at ESMLoader.resolve (node:internal/modules/esm/loader:835:30)
    at ESMLoader.getModuleJob (node:internal/modules/esm/loader:424:18)
    at ModuleWrap.<anonymous> (node:internal/modules/esm/module_job:77:40)
    at link (node:internal/modules/esm/module_job:76:36) {
  code: 'ERR_MODULE_NOT_FOUND',
  page: '/auth/login'
}

✓ Compiled /_error in 13.3s (8819 modules)
 ⨯ Error: Cannot find module '/Users/Projects/Code/app/node_modules/next/router' imported from /Users/Projects/Code/app/node_modules/@refinedev/nextjs-router/dist/pages.mjs
Did you mean to import next/router.js?
    at new NodeError (node:internal/errors:405:5)
    at finalizeResolution (node:internal/modules/esm/resolve:327:11)
    at moduleResolve (node:internal/modules/esm/resolve:946:10)
    at defaultResolve (node:internal/modules/esm/resolve:1132:11)
    at nextResolve (node:internal/modules/esm/loader:163:28)
    at ESMLoader.resolve (node:internal/modules/esm/loader:835:30)
    at ESMLoader.getModuleJob (node:internal/modules/esm/loader:424:18)
    at ModuleWrap.<anonymous> (node:internal/modules/esm/module_job:77:40)
    at link (node:internal/modules/esm/module_job:76:36) {
  code: 'ERR_MODULE_NOT_FOUND',
  page: '/auth/login'
}
```

### Steps To Reproduce

1. Install `""@refinedev/devtools"": ""^1.1.36""` and/or ` ""@refinedev/nextjs-router"": ""^6.0.2""`
2. Run your next.js app

### Expected behavior

Next.js app runs succesfully

### Packages

- @refinedev/devtools : 1.1.36
- @refinedev/nextjs-router: 6.0.2

### Additional Context

_No response_",,
2224299843,5818,This Suspense boundary received an update before it finished hydrating.,"### Describe the bug

I started working again on a project I left for 3 days and all of a sudden I am getting the error below 
```
Unhandled Runtime Error
Error: This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition.
```

<img width=""995"" alt=""Screenshot 2024-04-03 at 7 13 50 PM"" src=""https://github.com/refinedev/refine/assets/5164910/516d2fc9-b499-437e-9bde-be27080315cc"">

Any pointers would be great!

### Steps To Reproduce

1. 

### Expected behavior

Not sure how to repro as it started popping up right after I do `npm run dev`

### Packages

{
  ""name"": ""electra"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""engines"": {
    ""node"": "">=18.0.0""
  },
  ""scripts"": {
    ""dev"": ""cross-env NODE_OPTIONS=--max_old_space_size=4096 refine dev"",
    ""build"": ""refine build"",
    ""start"": ""refine start"",
    ""lint"": ""eslint '**/*.{js,jsx,ts,tsx}'"",
    ""refine"": ""refine""
  },
  ""dependencies"": {
    ""@emotion/react"": ""^11.8.2"",
    ""@emotion/styled"": ""^11.8.1"",
    ""@mui/icons-material"": ""^5.8.3"",
    ""@mui/lab"": ""^5.0.0-alpha.85"",
    ""@mui/material"": ""^5.8.6"",
    ""@mui/x-charts"": ""^6.19.4"",
    ""@mui/x-data-grid"": ""^6.6.0"",
    ""@react-pdf/renderer"": ""^3.3.8"",
    ""@refinedev/cli"": ""^2.16.21"",
    ""@refinedev/core"": ""^4.46.1"",
    ""@refinedev/devtools"": ""^1.1.29"",
    ""@refinedev/inferencer"": ""^4.5.16"",
    ""@refinedev/kbar"": ""^1.3.5"",
    ""@refinedev/mui"": ""^5.14.1"",
    ""@refinedev/nextjs-router"": ""^5.5.5"",
    ""@refinedev/react-hook-form"": ""^4.8.13"",
    ""@refinedev/simple-rest"": ""^5.0.1"",
    ""@vercel/speed-insights"": ""^1.0.10"",
    ""d3"": ""^7.8.5"",
    ""next"": ""^13.0.6"",
    ""nookies"": ""^2.5.2"",
    ""react"": ""^18.0.0"",
    ""react-dom"": ""^18.0.0"",
    ""react-pdf"": ""^7.7.0""
  },
  ""devDependencies"": {
    ""@types/d3"": ""^7.4.3"",
    ""@types/node"": ""^18.0.0"",
    ""@types/react"": ""^18.0.0"",
    ""@types/react-dom"": ""^18.0.0"",
    ""@typescript-eslint/parser"": ""5.48.0"",
    ""cross-env"": ""^7.0.3"",
    ""typescript"": ""^4.7.4""
  },
  ""refine"": {
    ""projectId"": ""LqCkSN-iTxp2d-OT9ZPY""
  }
}


### Additional Context

_No response_",,
2218715101,5809,[FEAT]  Deep Filtering on Nested JSON Fields in Supabase,"### Is your feature request related to a problem? Please describe.

I'm currently working on a project using Refine with Supabase as the data provider. I have a use case where I need to filter data based on a nested JSON field. However, it seems that Refine does not support deep filtering on nested JSON fields out of the box.

Here's a snippet of my current implementation:

```jsx
const {{ tableProps, searchFormProps }} = useTable({{
  onSearch: (values: any) => {{
    return [
      {{
        field: ""data->>'spanish'"",
        operator: ""contains"",
        value: values.value,
      }},
    ];
  }},
}});
```
where `data` is a JSONB field in Postgresql containing a key named `spanish`.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

allow filtering based on nested json.",,
2216779528,5803,[BUG] env utility breaks Vite dotenv conventions,"### Describe the bug

Vite uses dotenv (and a plugin or two) to load values from files with the following conventions:

```
.env                # loaded in all cases
.env.local          # loaded in all cases, ignored by git
.env.[mode]         # only loaded in specified mode
.env.[mode].local   # only loaded in specified mode, ignored by git
```

Additionally, it behaves according to the following description:

> An env file for a specific mode (e.g. .env.production) will take higher priority than a generic one (e.g. .env).
> 
> In addition, environment variables that already exist when Vite is executed have the highest priority and will not be overwritten by .env files.

([reference](https://vitejs.dev/guide/env-and-mode))

The Refine CLI automatically loads values in the `.env` file which appear to persist in the environment when executing the Vite commands (i.e. `vite dev`).

https://github.com/refinedev/refine/blob/16eefc493da3e66a095a11d9dcbeff0ec64dca57/packages/cli/src/utils/env/index.ts#L3

These take precedence and effectively break the `.env.local`, `.env.development`, etc. conventions of Vite.

CRA has slightly different but similar conventions. I assume the Refine CLI would be affecting it similarly?

### Steps To Reproduce

1. Create a Refine/Vite project.
2. Create a `.env` file with the content `VITE_TITLE=production`.
3. Create a `.env.development` file with the content `VITE_TITLE=development`.
4. Run `npm run refine dev`.
5. Observe the value of `import.meta.env.VITE_TITLE` is ""production"", not ""development"".

### Expected behavior

The Refine CLI shouldn't break Vite's dotenv conventions. In the trivial example provided, the value of `import.meta.env.VITE_TITLE` should be ""development"" from the `.env.development` file.

### Packages

- ""@refinedev/cli"": ""2.16.27""
- ""@refinedev/core"": ""4.48.0""
- ""@refinedev/kbar"": ""1.3.7""
- ""@refinedev/mui"": ""5.14.5""
- ""@refinedev/react-hook-form"": ""4.8.15""
- ""@refinedev/react-router-v6"": ""4.5.6""
- ""vite"": ""5.2.7""
- package manager: Yarn 4.1.1 w/ node_modules linker

### Additional Context

I explicitly renamed my `.env` file to `.env.production` to ""workaround"" the issue. That file appears to not be loaded by the Refine CLI, and then my app builds as expected. It's an unfortunate workaround, effectively forcing us to not use the `.env` file and ""layering"" of settings.",,
2214215361,5797,[DOC] Documenting that `@refinedev/react-router-v6` is working with `<RouterProvider>` also,"### Documentation issue

In their v6.4, `react-router-dom` added an alternative to the Router Components (like the know [`<BrowserRouter>`](https://reactrouter.com/en/main/router-components/browser-router) by using a [`<RouterProvider>`](https://reactrouter.com/en/main/routers/router-provider) with [data API routers](https://reactrouter.com/en/main/routers/picking-a-router).

All documentation of its [integration](https://refine.dev/docs/routing/integrations/react-router/) (there are also example code shown [here](https://refine.dev/docs/guides-concepts/routing/#react-router) and [there](https://refine.dev/docs/guides-concepts/routing/#router-integrations)) in Refine uses the `<BrowserRouter>` method.

### Describe the thing to improve

The doc should be improved to document the fact that using `<RouterProvider>`, with a [`createBrowserRouter()`](https://reactrouter.com/en/main/routers/create-browser-router) is supported and works out of the box (at least, according to #4715 and my limited usage for now[^1]).

Also, it is not clear how all these data apis interact with the integration, including the [loaders](https://reactrouter.com/en/main/route/loader), [fetchers](https://reactrouter.com/en/main/hooks/use-fetcher) and [actions](https://reactrouter.com/en/main/route/action). They seems to provide features that overlap somewhat with Refine.

[^1]: I don't know if there is some smoke tests for `@refinedev/react-router-v6`, but maybe adding some more using the `<RouterProvider>` could be useful?

### Describe the solution (optional)

I think a quick win would be to show the [Basic Usage](https://refine.dev/docs/routing/integrations/react-router/#basic-usage) example with tabs, one with the current code and one using the `<RouterProvider>`. Here what it could look like, using the [migration guide they provide](https://reactrouter.com/en/main/upgrading/v6-data). I did not test the code, simply applied the migration guide.

```typescript
import { Refine } from ""@refinedev/core"";
import dataProvider from ""@refinedev/simple-rest"";
import routerProvider from ""@refinedev/react-router-v6"";
import { createBrowserRouter, RouterProvider, Outlet } from ""react-router-dom"";

import { PostList, PostCreate } from ""pages/posts"";
import { CategoryList, CategoryShow } from ""pages/categories"";

const router = createBrowserRouter([
  {
    Component: RefineProvider,
    children: [
      {
        path: ""posts"",
        children: [
          { index: true, Component: PostList },
          { path: ""create"", Component: PostCreate },
        ],
      },
      {
        path: ""categories"",
        children: [
          { index: true, Component: CategoryList },
          { path: ""show/:id"", Component: CategoryShow },
        ],
      },
    ],
  },
]);

const App = () => {
  return <RouterProvider router={router} />;
}

const RefineProvider = () => {
  return (
    <Refine
      dataProvider={dataProvider}
      routerProvider={routerProvider}
      resources={[
        {
          name: ""posts"",
          list: ""/posts"",
          create: ""/posts/create"",
        },
        {
          name: ""categories"",
          list: ""/categories"",
          show: ""/categories/show/:id"",
        },
      ]}
    >
      <Outlet />
    </Refine>
  );
}
```",,
2195064245,5772,[BUG] Wrong types in `@refinedev/react-router-v6` when using legacy router,"### Describe the bug

When using the legacy router provider from `@refinedev/react-router-v6/legacy`, types are inferred as the new router provider and conflicts when using `legacyRouterProvider` prop of `<Refine />`

### Steps To Reproduce

- Import `routerProvider` from `@refinedev/react-router-v6/legacy`,
- Pass `routerProvider` to `legacyRouterProvider` prop of `<Refine />`
- TS throws errors about mismatching types

### Expected behavior

Proper types to be exported in `/legacy` exports.

### Packages

- @refinedev/react-router-v6

### Additional Context

_No response_",,
2194197192,5768,BUG: NextRouter was not mounted. invariant expected app router to be mounted,"### Describe the bug

we have updated the next version and this issue raised while build time. we have tried refine update but this never goes. locally it's working fine and view is clear with no error. Issue only appears once we create a build or while deploy time.
![image](https://github.com/refinedev/refine/assets/77854527/f559c96f-ce04-4c53-a542-ffd8659d53d0)


### Steps To Reproduce

Update the next version
use typescript
create build
issue is there

### Expected behavior

![image](https://github.com/refinedev/refine/assets/77854527/35a8fce0-5c94-47e7-b9b8-6b82b657fcc7)


### Packages

""@refinedev/cli"": ""2.16.27"",
""@refinedev/core"": ""4.48.0"",
""@refinedev/devtools"": ""1.1.35"",
""@refinedev/inferencer"": ""4.5.21"",
""@refinedev/kbar"": ""1.3.7"",
""@refinedev/mui"": ""5.14.5"",
""@refinedev/nextjs-router"": ""^6.0.1"",
""@refinedev/react-hook-form"": ""4.8.15"",
""@refinedev/simple-rest"": ""5.0.3"",

### Additional Context

_No response_",,
2193339404,5767,[BUG] Appwrite `dataProvider` meta.permissions (`@refinedev/appwrite`),"### Describe the bug

Hello,
how to override these default permissions in appwrite dataProvider? I don't want public permissions, only the permissions i set in meta at creation/edition.
```ts
  const { saveButtonProps, formProps, form } = useForm<HttpError>({
    meta: {
      readPermissions: [Permission.read(Role.user(identity.$id))],
      writePermissions: [Permission.write(Role.user(identity.$id))],
    },
  });
  ```
  
  I was able to walk-around it by making custom `dataProviderWrapper` that overrides the original `create` method
  ```ts
    return {
    ...originalDataProvider,
    create: async ({ resource, variables, meta }) => {
      const permissions = [
        // Permission.read(Role.any()),
        // Permission.write(Role.any()),
        ...(meta?.readPermissions ?? [Permission.read(Role.any())]),
        ...(meta?.writePermissions ?? [Permission.write(Role.any())]),
      ];
```

### Steps To Reproduce

1. create new app
```
npm create refine-app@latest -- --example data-provider-appwrite
```
2. use the following snippet with any roles.
```ts
  const { saveButtonProps, formProps, form } = useForm<HttpError>({
    meta: {
      readPermissions: [Permission.read(Role.user(identity.$id))],
      writePermissions: [Permission.read(Role.user(identity.$id))],
    },
  });
  ```

### Expected behavior

expected behavior is to be able to complete override the `meta` params.

### Packages

```json
    ""@refinedev/antd"": ""^5.37.5"",
    ""@refinedev/appwrite"": ""^6.4.7"",
    ""@refinedev/core"": ""^4.48.0"",
    ""@refinedev/devtools"": ""^1.1.35"",
    ""@refinedev/kbar"": ""^1.3.7"",
    ""@refinedev/nextjs-router"": ""^6.0.1"",
    ""@refinedev/react-hook-form"": ""^4.8.15"",
```

### Additional Context

sample after override

```ts
export const customDataProvider = (
  appwriteClient: Appwrite,
  options: { databaseId: string } = { databaseId: 'default' }
): Required<DataProvider> => {
  const { databaseId } = options;
  const database = new Databases(appwriteClient);
  const originalDataProvider: Required<DataProvider> = dataProvider(
    appwriteClient,
    {
      databaseId,
    }
  );

  return {
    ...originalDataProvider,
    create: async ({ resource, variables, meta }) => {
      const permissions = [
        // Permission.read(Role.any()),
        // Permission.write(Role.any()),
        ...(meta?.readPermissions ?? [Permission.read(Role.any())]), // new permisions
        ...(meta?.writePermissions ?? [Permission.write(Role.any())]), // new permisions
      ];

      const { $id, ...restData } = await database.createDocument(
        databaseId,
        resource,
        meta?.documentId ?? ID.unique(),
        variables as unknown as object,
        permissions
      );

      return {
        data: {
          id: $id,
          ...restData,
        },
      } as any;
    },
}
```",,
2192056205,5763,[FEAT] Adding <RefreshButton> to a List component,"### Is your feature request related to a problem? Please describe.

Hello, I'm struggling to add a <RefreshButton> component to my user's List page. Here's the approach i've tryed so far:

import {
  List,
  useTable,
  RefreshButton,
  EditButton,
  ShowButton,
  DeleteButton,
} from ""@refinedev/antd"";

export const UserList: React.FC<IResourceComponentsProps> = () => {
  const { tableProps } = useTable<IUser>({
    initialSorter: [{ field: ""last_name"", order: ""asc"" }],
    syncWithLocation: true,
  });

return (
    <List
      headerButtons={({ defaultButtons, refreshButtonProps }) => (
        <>
          {defaultButtons}
          <RefreshButton {...refreshButtonProps} resource=""users"" />
        </>
      )}
    >
      <Table
        {...tableProps}
        rowKey=""id""
        pagination={{
          pageSizeOptions: [""10"", ""20"", ""50"", ""100"", ""200""],
          showSizeChanger: true,
          total: tableProps.pagination.total,
          current: tableProps.pagination.current,
          pageSize: tableProps.pagination.pageSize,
        }}
      >
    ...
  );
}

Button is actually where it should have to be but, if clicked, there's no way to trigger an update of the user's list. Works flawlessly if used in Show page btw. What am I doing wrong?

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Is there a way to make it works?
Thanks in advance",,
2185559205,5752,[FEAT] Upgrade TypeScript to v5,"### Is your feature request related to a problem? Please describe.

Currently, all examples and packages use `typescript@4`, all examples and packages should upgraded to v5.

https://devblogs.microsoft.com/typescript/announcing-typescript-5-0/

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

_No response_",,
2183369030,5743,[FEAT] add `gqlMutaton` and `gqlQuery` support for graphql data provider ,"### Is your feature request related to a problem? Please describe.

docs: https://refine.dev/docs/data/packages/graphql/

Currently, the `@refinedev/graphql` package only supports the `meta.fields` field for writing queries and mutations. To improve developer experience, `@refinedev/graphql` should support `meta.gqlQuery` and `metal.gqlMutation`

### Describe alternatives you've considered

_No response_

### Additional context

The syntax can be like this:

Query Example:
```tsx
import { useList } from ""@refinedev/core"";
import gql from ""graphql-tag"";

const POSTS_LIST_QUERY = gql`
  query PostList($where: JSON, $sort: String) {
    posts(where: $where, sort: $sort) {
      id
      title
      content
      category {
        id
      }
    }
  }
`;

const { data } = useList({
  resource: ""posts"",
  meta: { gqlQuery: POSTS_QUERY },
});
```

Mutation Example:

```tsx
import { useForm } from ""@refinedev/core"";
import gql from ""graphql-tag"";

const POST_CREATE_MUTATION = gql`
  mutation createPost($input: createPostInput!) {
    createPost(input: $input) {
      id
      title
      content
      category {
        id
      }
    }
  }
`;

const { formProps } = useForm({
  resource: ""posts"",
  meta: { gqlMutation: CREATE_POST_MUTATION },
});
```

### Describe the thing to improve

_No response_
",,
2175965456,5735,[FEAT] add `useTranslation` hook,"### Is your feature request related to a problem? Please describe.

Refine has three hooks to access [`i18nProvider`](https://refine.dev/docs/i18n/i18n-provider/) methods

The following methods can be combined into one hook for a better developer experience.
- https://refine.dev/docs/i18n/hooks/use-get-locale/
- https://refine.dev/docs/i18n/hooks/use-set-locale/
- https://refine.dev/docs/i18n/hooks/use-translate/

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Example of improvements:

```diff
import {
-  useGetLocale,
-  useSetLocale,
-  useTranslate,
+  useTranslation,
} from ""@refinedev/core"";

export const MyComponent = () => {
-  const setLocale = useSetLocale();
-  const locale = useGetLocale();
-  const translate = useTranslate();

+  const { translate, getLocale, changeLocale } = useTranslation();

  return <div>{/* ... */}</div>;
};
```",,
2175961383,5734,[BUG] Remix (SPA) Support,"### Describe the bug

The current build process of refine packages makes it incompatible with Remix SPA, and possibly? more.

This has been tested on Remix 2.8.0.

The following steps need to be taken:

- Disable minify on all repos in tsup `esbuildOptions` via `options.minify = false;` (remix SPA does a sort-of 1 time SSR eval, running `Refine` through a node-js server which needs the ESM import, unminified)
- Disable tsbuild `--legacyOutput`.
- Add export maps with the esm `import` pointing to a `.mjs` file (this actually really matters)
  - Ensure export maps have typings as well.
- Replace `lodash-es` and `papaparse` at a minimum to use `.js` extensions when imported
- Update commands in `packages/cli/src/commands/runner` as `remix-serve` no longer exists and needs to use `remix vite:*`?

You can see a debug branch with many of these changes at https://github.com/LumeWeb/refine/tree/remix for reference.

### Steps To Reproduce

Try to build a remix SPA with any basic refine example.

### Expected behavior

It should run the dev server and build correctly.

### Packages

All refine packages are likely impacted if they are to be used within remix.

### Additional Context

_No response_",,
2172977201,5727,[BUG] `useDrawerForm` and `defaultFormValues` does not work,"### Describe the bug

useDrawerForm and defaultFormValues does not work

### Steps To Reproduce

https://codesandbox.io/p/devbox/pedantic-bhabha-jqdy0y?embed=1&file=%2Fsrc%2Fpages%2Fposts%2Flist.tsx%3A47%2C28

### Expected behavior

 defaultFormValues is work

### Packages

```
{
    ""@refinedev/antd"": ""^5.37.4"",
    ""@refinedev/cli"": ""^2.16.26"",
    ""@refinedev/core"": ""^4.47.2"",
    ""@refinedev/react-router-v6"": ""^4.5.5"",
    ""@refinedev/simple-rest"": ""^5.0.2"",
    ""antd"": ""^5.0.5"",
    ""react"": ""^18.0.0"",
    ""react-dom"": ""^18.0.0"",
    ""react-router-dom"": ""^6.8.1"",
    ""typescript"": ""^4.7.4""
}
```

### Additional Context

_No response_",,
2169218794,5721,[BUG] Type Mismatch: `LoaderArgs/ActionArgs` in Remix,"### Describe the bug

In Remix v2.0.0, the argument type definitions have been updated.
Specifically, the previous types `LoaderArgs` and `ActionArgs` have been renamed to `LoaderFunctionArgs` and `ActionFunctionArgs`, respectively.

Remix changelog: https://github.com/remix-run/remix/blob/7424850e49d6af28101f07919395a8770b924e9a/CHANGELOG.md?plain=1#L1383

### Steps To Reproduce

1. Create Refine project with an example using Remix.
2. Error in type definition with `LoaderArgs/ActionArgs`.

### Expected behavior

Type is set correctly.

### Packages

@remix-run/node

### Additional Context

_No response_",,
2148459362,5667,[BUG] `onFinish` promise is never rejected,"### Describe the bug

If there is a mutation error, the `onFinish` promise is supposed to be rejected but right now the Promise never finishes because the `reject` function is not called:
https://github.com/refinedev/refine/blob/ae34559a5e44a878e85514d4cc137539e060aeae/packages/core/src/hooks/form/useForm.ts#L461-L464

(same applies for the error handler of update)

I think either the reject function should be passed to the `onMutationError` handler or the reject function should be called in every case.

### Steps To Reproduce

1. Submit a form that throws a mutation error
2. Check if the `onFinish` handler rejects 

### Expected behavior

The `onFinish` handler should not only resolve but also reject in case of any errors.

### Packages

@refinedev/core@latest

### Additional Context

_No response_",,
2141024191,5655,[BUG] Supabase useImport onSucces failure,"### Describe the bug

I'm using useImport and it imports the records correctly but is throwing an error: ""Cannot read properties of null (reading 'filter')"". I tracked it down to the createMany API call. I'm using supabase and it returns an empty body. But the useCreateMany hook is expecting a body and so is trying to filter a null value. 

### Steps To Reproduce

1. Add useImport hook
2. Import records
3. Add onFinish handler to catch errors

### Expected behavior

Success response returned since records are imported correctly

### Packages

@refinedev/core - 4.47.1

### Additional Context

_No response_",,
2139735071,5652,[BUG] Starting a nextjs antd project from scratch does not work,"### Describe the bug

utilizing the command line `pnpm create refine-app@latest -- -o refine-nextjs my-refine-nextjs-app`
and running `pnpm run dev` provides me the error message of `TypeError: Cannot read properties of undefined (reading 'READY')`
<img width=""1183"" alt=""Screenshot 2024-02-17 at 10 49 06 AM"" src=""https://github.com/refinedev/refine/assets/10239468/5bbebba1-f049-461a-ab87-47010ea8fc3e"">


### Steps To Reproduce

1. run `pnpm create refine-app@latest -- -o refine-nextjs my-refine-nextjs-app`
2. choose PNPM, Antd, nextjs, no auth
3. pnpm install
4. pnpm run dev
5. go to localhost:3000

### Expected behavior

It should allow us to view the page without issues.

### Packages

  ""dependencies"": {
    ""@refinedev/cli"": ""^2.16.21"",
    ""@refinedev/core"": ""^4.47.1"",
    ""@refinedev/devtools"": ""^1.1.32"",
    ""@refinedev/nextjs-router"": ""^6.0.0"",
    ""@refinedev/kbar"": ""^1.3.6"",
    ""next"": ""14.1.0"",
    ""react"": ""^18.0.0"",
    ""react-dom"": ""^18.0.0"",
    ""@refinedev/simple-rest"": ""^5.0.1"",
    ""@refinedev/antd"": ""^5.37.4"",
    ""@ant-design/icons"": ""^5.0.1"",
    ""antd"": ""^5.0.5"",
    ""js-cookie"": ""^3.0.5"",
    ""@ant-design/nextjs-registry"": ""^1.0.0""
  },
  ""devDependencies"": {
    ""@types/react"": ""^18.0.0"",
    ""@types/react-dom"": ""^18.0.0"",
    ""@types/node"": ""^18.0.0"",
    ""@typescript-eslint/parser"": ""5.48.0"",
    ""typescript"": ""^4.7.4"",
    ""cross-env"": ""^7.0.3"",
    ""eslint"": ""^8"",
    ""eslint-config-next"": ""14.1.0"",
    ""@types/js-cookie"": ""^3.0.6""
  }

### Additional Context

_No response_",,
2134139368,5638,[BUG] forwardRef warning in finefoods-material-ui example,"### Describe the bug

Hi, in finefoods-material-ui example, in categories page when a category is selected and we click on edit on it's child product action's menu, this warning is happened: 

```
act-dom.development.js:86 Warning: Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?

Check the render method of `EditProduct`.
    at Controller (http://localhost:5174/node_modules/.vite/deps/chunk-OGQ4Q4KL.js?v=a5dc189a:304:35)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at FormControl2 (http://localhost:5174/node_modules/.vite/deps/chunk-E2LXLCWJ.js?v=a5dc189a:120:17)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Grid2 (http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:8326:24)
    at form
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Box3 (http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:5964:19)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Grid2 (http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:8326:24)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at CardContent2 (http://localhost:5174/node_modules/.vite/deps/chunk-5QCRKTOK.js?v=a5dc189a:84:17)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Paper2 (http://localhost:5174/node_modules/.vite/deps/chunk-U3PC3K2P.js?v=a5dc189a:118:17)
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Card2 (http://localhost:5174/node_modules/.vite/deps/chunk-S7JPETVC.js?v=a5dc189a:87:17)
    at Edit (http://localhost:5174/node_modules/.vite/deps/@refinedev_mui.js?v=ef7a4a10:15684:23)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Paper2 (http://localhost:5174/node_modules/.vite/deps/chunk-U3PC3K2P.js?v=a5dc189a:118:17)
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Transition2 (http://localhost:5174/node_modules/.vite/deps/chunk-ZOCGASZX.js?v=a5dc189a:85:30)
    at Slide2 (http://localhost:5174/node_modules/.vite/deps/chunk-RLSNGQL4.js?v=a5dc189a:151:17)
    at FocusTrap (http://localhost:5174/node_modules/.vite/deps/chunk-ZE7T523J.js?v=a5dc189a:1688:5)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Portal2 (http://localhost:5174/node_modules/.vite/deps/chunk-ZE7T523J.js?v=a5dc189a:1913:5)
    at Modal2 (http://localhost:5174/node_modules/.vite/deps/chunk-HCQQVMF6.js?v=a5dc189a:316:17)
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Drawer2 (http://localhost:5174/node_modules/.vite/deps/chunk-RLSNGQL4.js?v=a5dc189a:518:17)
    at EditProduct (http://localhost:5174/src/components/product/edit.tsx:41:3)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at CardContent2 (http://localhost:5174/node_modules/.vite/deps/chunk-5QCRKTOK.js?v=a5dc189a:84:17)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Paper2 (http://localhost:5174/node_modules/.vite/deps/chunk-U3PC3K2P.js?v=a5dc189a:118:17)
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Card2 (http://localhost:5174/node_modules/.vite/deps/chunk-S7JPETVC.js?v=a5dc189a:87:17)
    at List (http://localhost:5174/node_modules/.vite/deps/@refinedev_mui.js?v=ef7a4a10:15691:23)
    at CategoryProductsTable (http://localhost:5174/src/pages/categories/list.tsx:482:34)
    at td
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at TableCell2 (http://localhost:5174/node_modules/.vite/deps/chunk-EYEPTBS3.js?v=a5dc189a:155:17)
    at tr
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at TableRow2 (http://localhost:5174/node_modules/.vite/deps/@mui_material_TableRow.js?v=8f063936:112:17)
    at tbody
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at TableBody2 (http://localhost:5174/node_modules/.vite/deps/@mui_material_TableBody.js?v=b12d09ed:88:17)
    at table
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Table2 (http://localhost:5174/node_modules/.vite/deps/@mui_material_Table.js?v=c4c5617a:105:17)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at TableContainer2 (http://localhost:5174/node_modules/.vite/deps/@mui_material_TableContainer.js?v=50837f70:82:17)
    at form
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at CardContent2 (http://localhost:5174/node_modules/.vite/deps/chunk-5QCRKTOK.js?v=a5dc189a:84:17)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Paper2 (http://localhost:5174/node_modules/.vite/deps/chunk-U3PC3K2P.js?v=a5dc189a:118:17)
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Card2 (http://localhost:5174/node_modules/.vite/deps/chunk-S7JPETVC.js?v=a5dc189a:87:17)
    at List (http://localhost:5174/node_modules/.vite/deps/@refinedev_mui.js?v=ef7a4a10:15691:23)
    at CategoryList (http://localhost:5174/src/pages/categories/list.tsx:59:7)
    at RenderedRoute (http://localhost:5174/node_modules/.vite/deps/chunk-3FXL47SJ.js?v=a5dc189a:3547:5)
    at Outlet (http://localhost:5174/node_modules/.vite/deps/chunk-3FXL47SJ.js?v=a5dc189a:3918:26)
    at main
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Box3 (http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:5964:19)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Box3 (http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:5964:19)
    at div
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at Box3 (http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:5964:19)
    at ThemedLayoutContextProvider (http://localhost:5174/node_modules/.vite/deps/@refinedev_mui.js?v=ef7a4a10:15402:26)
    at ThemedLayoutV2 (http://localhost:5174/node_modules/.vite/deps/@refinedev_mui.js?v=ef7a4a10:15617:23)
    at Authenticated (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:10169:31)
    at RenderedRoute (http://localhost:5174/node_modules/.vite/deps/chunk-3FXL47SJ.js?v=a5dc189a:3547:5)
    at Routes (http://localhost:5174/node_modules/.vite/deps/chunk-3FXL47SJ.js?v=a5dc189a:3982:5)
    at UnsavedWarnContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:8730:25)
    at RefineContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:8532:29)
    at UndoableQueueContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:9031:25)
    at AuditLogContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:9903:23)
    at AccessControlContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:9804:20)
    at TranslationContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:9507:25)
    at ResourceContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:9389:26)
    at LegacyRouterContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:9798:25)
    at RouterBindingsProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:9398:25)
    at LiveContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:9379:29)
    at DataContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:9342:25)
    at AuthBindingsContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:8647:25)
    at LegacyAuthContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:8614:25)
    at NotificationContextProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:9495:21)
    at QueryClientProvider (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:5910:3)
    at Refine (http://localhost:5174/node_modules/.vite/deps/chunk-RCBUVQIQ.js?v=a5dc189a:10135:35)
    at SnackbarProvider2 (http://localhost:5174/node_modules/.vite/deps/@refinedev_mui.js?v=ef7a4a10:13593:24)
    at http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:1698:50
    at ThemeProvider2 (http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:6502:5)
    at ThemeProvider3 (http://localhost:5174/node_modules/.vite/deps/chunk-HVUWR5DN.js?v=a5dc189a:6589:5)
    at ThemeProvider (http://localhost:5174/node_modules/.vite/deps/chunk-IUD756KU.js?v=a5dc189a:308:12)
    at ColorModeContextProvider (http://localhost:5174/src/contexts/index.tsx:32:3)
    at KBarProvider (http://localhost:5174/node_modules/.vite/deps/@refinedev_kbar.js?v=a054cc96:1393:50)
    at Router (http://localhost:5174/node_modules/.vite/deps/chunk-3FXL47SJ.js?v=a5dc189a:3925:15)
    at BrowserRouter (http://localhost:5174/node_modules/.vite/deps/chunk-3FXL47SJ.js?v=a5dc189a:4665:5)
    at App (http://localhost:5174/src/App.tsx:66:23)
```

also this warning is displayed in this page, when we select a category:

```
st.tsx:414 [useForm]: action: ""edit"", resource: ""products"", id: undefined 

If you don't use the `setId` method to set the `id`, you should pass the `id` prop to `useForm`. Otherwise, `useForm` will not be able to infer the `id` from the current URL. 

See https://refine.dev/docs/api-reference/core/hooks/useForm/#resource
w
```

and later this error:
```
st.tsx:414 [useForm]: action: ""edit"", resource: ""products"", id: 9 

If you don't use the `setId` method to set the `id`, you should pass the `id` prop to `useForm`. Otherwise, `useForm` will not be able to infer the `id` from the current URL. 

See https://refine.dev/docs/api-reference/core/hooks/useForm/#resource
warnOnce @ index.js:14
useForm @ useForm.ts:345
useForm @ index.ts:137
useModalForm @ index.ts:153
CategoryProductsTable @ list.tsx:414
renderWithHooks @ react-dom.development.js:16305
updateFunctionComponent @ react-dom.development.js:19588
beginWork @ react-dom.development.js:21601
beginWork$1 @ react-dom.development.js:27426
performUnitOfWork @ react-dom.development.js:26557
workLoopSync @ react-dom.development.js:26466
renderRootSync @ react-dom.development.js:26434
performSyncWorkOnRoot @ react-dom.development.js:26085
flushSyncCallbacks @ react-dom.development.js:12042
(anonymous) @ react-dom.development.js:25651
Show 14 more frames
14:44:08.532 re
```

### Steps To Reproduce

1. Go to categories page
2. Click Plus Sign on any category
3. Click actions menu of any product entry
4. Click Edit Option
5. On console we see warnings

### Expected behavior

No warning

### Packages

    ""@refinedev/core"": ""^4.47.0"",
    ""@refinedev/cli"": ""^2.16.23"",
    ""@refinedev/mui"": ""^5.14.3"",
    ""@refinedev/kbar"": ""1.3.5"",
    ""@refinedev/react-hook-form"": ""^4.8.13"",
    ""@refinedev/react-router-v6"": ""^4.5.5"",
    ""@refinedev/react-table"": ""^5.6.5"",
    ""@tanstack/react-table"": ""^8.2.6"",
    ""@refinedev/simple-rest"": ""^5.0.2"",
    ""@emotion/react"": ""^11.8.2"",
    ""@emotion/styled"": ""^11.8.1"",
    ""@mui/lab"": ""^5.0.0-alpha.85"",
    ""@mui/material"": ""^5.14.2"",
    ""@mui/x-data-grid"": ""^6.6.0"",

### Additional Context

_No response_",,
2122462938,5607,[FEAT]Ability to pass an argument to usePermissions,"### Is your feature request related to a problem? Please describe.

In auth provider, I am expecting an argument in getPermissions but currently there's no standard way of passing the argument when using usePermissions hook

### Describe alternatives you've considered

this is my workaround

`import { usePermissions } from ""@refinedev/core""
import userService from ""services/user.service""

export const useGetPermissions = (tenantId: string) => {
  return usePermissions({ options: {
    queryKey: ['permissions', tenantId],
    queryFn: () => userService.getUserPermissions(tenantId)
  }})
}`

### Additional context

_No response_

### Describe the thing to improve

I should be able to pass the parameter to getPermissions using usePermissions",,
2122393882,5606,[FEAT]: implement `getApiUrl` in `@refinedev/nestjs-query`,"### Is your feature request related to a problem? Please describe.

[`getApiUrl` method](https://github.com/refinedev/refine/blob/master/packages/nestjs-query/src/dataProvider/index.ts#L445C9-L445C18) is not implemented.

### Describe the thing to improve

`getApiUrl` method should return GraphQLClient's URL.",,
2120679740,5600,[FEAT]: refactor `useCustom` type to improve developer experience.,"The following changes should be implemented to improve developer experience.

- `useCustom`'s `url` prop should be optional.
- at least one of `gqlQuery`, `gqlMutation` or `method` prop must be required
  - If the user provides `gqlQuery` or `gqlMutation`, the `method` prop type should be optional.
  - If the user provides `method` prop, the `gqlQuery` or `gqlMutation` type should be optional.

```tsx
import { useCustom } from ""@refinedev/core"";

useCustom({}); // ❌ At least one of the `gqlQuery`, `gqlMutation`, or `method` props must be required.

useCustom({ method: ""GET"" }); // ✅

useCustom({ gqlQuery: ""query { ... }"" }); // ✅
useCustom({ gqlMutation: ""mutation { ... }"" }); // ✅
useCustom({ gqlMutation: ""mutation { ... }"", gqlQuery: ""query { ... }"" }); // ✅

useCustom({ method: ""GET"", gqlQuery: ""query { ... }"" }); // ✅ 
useCustom({ method: ""GET"", gqlMutation: ""mutation { ... }"" }); // ✅ 
useCustom({ method: ""GET"", gqlMutation: ""mutation { ... }"", gqlQuery: ""query { ... }"" }); // ✅
```

",,
2115273397,5588,[DOC] Data Fetching page link to DataProvider interface is broken,"### Documentation issue

On this page: https://refine.dev/docs/guides-concepts/data-fetching/

The docs say:
 > To manage data, Refine needs a data provider, which is a function that implements the [DataProvider](https://refine.dev/docs/core/interface-references/#dataprovider) interface.

However, the link (`https://refine.dev/docs/core/interface-references/#dataprovider`) is broken. While the interface-references page exists, there is no `#dataprovider` element and no documentation on the `DataProvider` interface

### Describe the thing to improve

The link should go somewhere useful or not exist

### Describe the solution (optional)

Either the `DataProvider` interface should be documented and linked, or this sentence should be re-written. I am new to this project so I'm not sure if the issue is that this interface does exist and is undocumented or if it doesn't exist at all",,
2102018646,5567,[FEAT] rename notificationProvider with `useNotificationProvider`,"### Is your feature request related to a problem? Please describe.

currently notification provider names are different in UI packages and it is confusing.

- @refinedev/antd: `useNotificationProvider`
- @refinedev/mui: `notificationProvider`
- @refinedev/chakra-ui: `notificationProvider`
- @refinedev/mantine: `notificationProvider`

### Describe the thing to improve

All notification providers should follow the same naming convention.
To do that, we need to deprecate `notificationProvider` and export `useNotificationProvider` from all packages",,
2099832975,5562,[FEAT]: Implement `authProvider.onError` method in all examples,"### Is your feature request related to a problem? Please describe.

In almost all examples the [`authProvider.onError`](https://github.com/refinedev/refine/blob/master/examples/blog-invoice-generator/src/authProvider.ts#L43) method is not implemented and authentication errors from the API are not handled.

### Describe the thing to improve

The `onError` method of the examples should be implemented and handle the error according to the data provider it uses",,
2095984520,5548,[BUG] `@refinedev/nextjs-router` types are not available,"### Describe the bug

When importing elements from `@refinedev/nextjs-router` without any subpaths, it fallbacks to the `/pages` but the appropriate types are not available and all the imports are throwing typescript errors.

### Steps To Reproduce

1. run `npm i @refinedev/nextjs-router`
2. import something from the package `import routerProvider from ""@refinedev/nextjs-router"";`
3. Check the type of the `routerProvider` which shows as `any`
4. Update the import line with `@refinedev/nextjs-router/pages`
5. Notice the type is now correctly available

### Expected behavior

Types should be available when doing imports from `@refinedev/nextjs-router`",,
2086525982,5529,[DOC] AuthProvider updated on v4 but not reflected on docs,"### Documentation issue

I've come across numerous examples utilizing the AuthProvider typing:

[What is Auth Provider](https://refine.dev/docs/tutorial/understanding-authprovider/index/#what-is-auth-provider)
[Creating a Mock Auth Provider](https://refine.dev/docs/tutorial/understanding-authprovider/create-authprovider/#creating-a-mock-auth-provider)

However, in the migration tutorial, specifically [here](https://refine.dev/docs/migration-guide/auth-provider/#naming-changes), there seems to be a discrepancy. The [migration guide from 3.x to 4.x](https://refine.dev/docs/migration-guide/3x-to-4x/#authprovider) provides different information. When attempting to import:

```js
import type { AuthProvider } from ""@refinedev/core"";
```

TypeScript returns the following error: '""@refinedev/core""' has no exported member named 'AuthProvider'. Did you mean 'OAuthProvider'?ts(2724)

Upon inspecting the typings inside the core, I found a slight difference from the documentation:

<img width=""790"" alt=""image"" src=""https://github.com/refinedev/refine/assets/11761170/369b9ce7-da29-4ad0-afa4-db5a00083f21"">

Should we update the AuthProvider in examples and code to AuthBindings, or is it necessary to continue using LegacyAuthProvider for now? On examples and documentation.

I'm using the following packages:
```json
...
""dependencies"": {
    ""@emotion/react"": ""^11.8.2"",
    ""@mantine/core"": ""^5.10.4"",
    ""@mantine/dates"": ""^5.10.4"",
    ""@mantine/form"": ""^5.10.4"",
    ""@mantine/hooks"": ""^5.10.4"",
    ""@mantine/notifications"": ""^5.10.4"",
    ""@refinedev/cli"": ""^2.16.21"",
    ""@refinedev/core"": ""^4.46.1"",
    ""@refinedev/devtools"": ""^1.1.29"",
    ""@refinedev/inferencer"": ""^4.5.16"",
    ""@refinedev/kbar"": ""^1.3.5"",
    ""@refinedev/mantine"": ""^2.29.1"",
    ""@refinedev/react-router-v6"": ""^4.5.5"",
    ""@refinedev/react-table"": ""^5.6.5"",
    ""@refinedev/simple-rest"": ""^5.0.1"",
    ""@tabler/icons"": ""^1.1.0"",
    ""axios"": ""^1.6.2"",
    ""query-string"": ""^7.1.1"",
    ""react"": ""^18.0.0"",
    ""react-dom"": ""^18.0.0"",
    ""react-router-dom"": ""^6.8.1""
  },
  ""devDependencies"": {
    ""@types/node"": ""^18.16.2"",
    ""@types/react"": ""^18.0.0"",
    ""@types/react-dom"": ""^18.0.0"",
    ""@typescript-eslint/eslint-plugin"": ""^5.57.1"",
    ""@typescript-eslint/parser"": ""^5.57.1"",
    ""@vitejs/plugin-react"": ""^4.0.0"",
    ""eslint"": ""^8.38.0"",
    ""eslint-plugin-react-hooks"": ""^4.6.0"",
    ""eslint-plugin-react-refresh"": ""^0.3.4"",
    ""typescript"": ""^4.7.4"",
    ""vite"": ""^4.3.1""
  },
  ...
  ```


### Describe the thing to improve

We can update docs and code examples with the new typings from V4

### Describe the solution (optional)

_No response_",,
2086018328,5528,[BUG] TypeScript 5 can't find the type definition of `@refinedev/inferencer`,"### Describe the bug

tsc can't find the type definition of `@refinedev/inferencer/*` so that we couldn't import the packages. The error message is below:

```
TS7016: Could not find a declaration file for module '@refinedev/inferencer/mantine'. '/tmp/tmp.gIbEnmIS6x/node_modules/@refinedev/inferencer/dist/esm/mantine.js' implicitly has an 'any' type.
  There are types at '/tmp/tmp.gIbEnmIS6x/node_modules/@refinedev/inferencer/dist/inferencers/mantine/index.d.ts', but this result could not be resolved when respecting package.json ""exports"". The '@refinedev/inferencer' library may need to update its package.json or typings.
```

### Steps To Reproduce

First, `cd $(mktemp -d)`

Place these files:

`package.json`:

```json
{
  ""dependencies"": {
    ""@refinedev/inferencer"": ""^4.5.17"",
    ""typescript"": ""^5.3.3""
  }
}
```

`tsconfig.json`:

```json
{
  ""compilerOptions"": {
    ""esModuleInterop"": true,
    ""lib"": [""esnext"", ""dom""],
    ""module"": ""esnext"",
    ""moduleResolution"": ""bundler"",
    ""strict"": true,
    ""target"": ""es2022""
  }
}
```

`index.ts`:

```typescript
import { } from ""@refinedev/inferencer/mantine"";
```

Then, `npm i && npx tsc` shows the compile error:

![image](https://github.com/refinedev/refine/assets/1362750/c3e19dbc-83cb-4844-8e72-cf650b125590)

(BTW, I tried to find a tsconfig configuration that would work, but could not find one. `""moduleResolution"": ""node16""`, `""resolvePackageJsonExports"": false`, all didn't help)

### Expected behavior

TSC compilation works without error.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
2081757422,5513,[FEAT] Re-export AuthBindings type as AuthProvider,"### Is your feature request related to a problem? Please describe.

Currently AuthProvider's type is `AuthBinding`, which is confusing since all other providers'
 types are ending with `..Provider`. (ie: DataProvider, NotificationProvider).

Since renaming this type would be a breaking change, let's re-export AuthBindings type as AuthProvider for this version.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

",,
2072497886,5492,[BUG]Errors occuring while following contributing steps,"### Describe the bug

While i following contributing steps at docs, i stuck at build step because of errors below:

```sh
refine>npm run build -- --scope @refinedev/antd --scope base-antd --includeDependencies

> @refinedev/devtools-server@1.1.22 build ~\refine\packages\devtools-server
> npm run build:client && tsup --format esm,cjs,iife --minify --legacy-output

> @refinedev/devtools-server@1.1.22 build:client
> NODE_ENV=production tsc && vite build --config src/client/vite.config.ts

'NODE_ENV' is not recognized as an internal or external command,
operable program or batch file.
 ELIFECYCLE  Command failed with exit code 1.
```

I completed previous steps successfully

### Steps To Reproduce

1. Go to docs/contributing
2. Follow steps as described
3. Run build command after bootstrapping packages and see error

### Expected behavior

Build should finish without errors

### Screenshot

![error](https://github.com/refinedev/refine/assets/151969082/51c609e3-4c71-4fd6-a89a-3321f176e2c5)


### Desktop

OS: Windows, Refine version: latest

### Mobile

- Not related

### Additional Context

I think its related wih node:env but dont know why its causing that error",,
2071734133,5489,[FEAT] add `meta.gqlQuery` and `meta.qglMutation` support to `@refinedev/hasura`,"hasura documentation: https://refine.dev/docs/data/packages/hasura/

To improve the developer experience, support for `meta.gqlQuery` and `meta.qglMutation` should be added to the `@refinedev/hasura` data provider.

`gqlQuery` and `gqlMutation` accept [`graphql-tag`](https://www.npmjs.com/package/graphql-tag), which simplifies the process of writing queries and mutations and provides a better developer experience with auto-completions.

Expected usage can be seen in the following examples

Query Example:
```tsx
import { useList } from ""@refinedev/core"";
import gql from ""graphql-tag"";

const PRODUCTS_QUERY = gql`
  query ProductsList(
    $offset: Int.
    $limit: Int!
    $order_by: [products_order_by!]
    where: $where
  ) {
    products(offset: $paging, limit: $filter, order_by: $order_by, where: $where) {
      id
      name
    }
    categories_aggregate(where: $where) {
      aggregate {
        count
      }
    }
  }
`;

const { data } = useList({
  resource: ""products"",
  meta: { gqlQuery: PRODUCTS_QUERY },
});
```

Mutation Example:
```tsx
import { useForm } from ""@refinedev/core"";
import gql from ""graphql-tag"";

const CREATE_PRODUCT_MUTATION = gql`
  mutation CreateProduct($object: posts_insert_input!) {
    createOneProduct(object: $object) {
      id
      name
    }
  }
`;

const { formProps } = useForm({
  resource: ""products"",
  meta: { gqlMutation: CREATE_PRODUCT_MUTATION },
});
```


Also, documentation should be updated with this improvement.",,
2065769792,5479,[BUG] Strapi v4 data provider does not working with nested filters $or and $and operator,"### Describe the bug

<img width=""484"" alt=""image"" src=""https://github.com/refinedev/refine/assets/15341301/4b6db99e-9146-471e-869b-c3d56a61a595"">
<img width=""535"" alt=""image"" src=""https://github.com/refinedev/refine/assets/15341301/7f05d693-aa83-40a3-af00-42e630388e82"">


### Steps To Reproduce

```ts
import { generateFilter } from ""@refinedev/strapi-v4"";

const filters = [
  {
    operator: ""or"",
    value: [
      {
        field: ""affect_global"",
        operator: ""eq"",
        value: true,
      },
      {
        operator: ""and"",
        value: [
          {
            field: ""studio.id"",
            operator: ""eq"",
            value: 2,
          },
          {
            field: ""is_primary"",
            operator: ""eq"",
            value: true,
          },
        ],
      },
    ],
  },
];

const query = generateFilter(filters);
```

### Expected behavior

`filters[$or][0][affect_global][$eq]=true&filters[$or][1][$and][0][studio][id][$eq]=2&filters[$or][1][$and][1][is_primary][$eq]=true`

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
2065153025,5473,[FEAT] Add `successNotification` field to AuthProvider methods' return type.,"### Is your feature request related to a problem? Please describe.

Currently, if any of the Auth Provider methods returns `success: false` and `error` fields, we are showing error notification.

But it's not possible to do the same easily for success notifications.

### Describe alternatives you've considered

_No response_

### Additional context

https://github.com/refinedev/refine/discussions/5170#discussioncomment-7619752

### Describe the thing to improve

1- Add `successNotification` field to [`AuthActionResponse` type](https://github.com/refinedev/refine/blob/master/packages/core/src/interfaces/bindings/auth.ts).

```ts
type SuccessNotificationResponse {
  message: string;
  description?: string;
}

export type AuthActionResponse = {
    success: boolean;
    redirectTo?: string;
    error?: RefineError | Error;
    [key: string]: unknown;
    successNotification?: SuccessNotificationResponse
};
```

2-) Update relevant hooks to show success notification when `successNotification` object is provided and **add specs**.

- `useForgotPassword`
- `useLogin`
- `useLogout`
- `useRegister`
- `useUpdatePassword`

3-) Update relevant documentation pages.",,
2065143087,5472,[FEAT] Ability to configure `useCan`'s queryOptions globally and through `CanAccess` component.,"### Is your feature request related to a problem? Please describe.

Currently, `useCan` hook already accepts `queryOptions` parameter. This is useful when users wants to modify `cacheTime` or `staleTime` options to improve performance.

However, currently it's not possible to modify queryOptions for `CanAccess` component, or UI components using `CanAccess` under the hood, such as `EditButton` of `@refinedev`'s `antd`, `mui`, `mantine`, `chakra-ui` packages.

### Describe alternatives you've considered

It's possible to swizzle these components and update their `useCan` calls, but that's irreversible and overkill, just to cache AC queries.

### Additional context

_No response_

### Describe the thing to improve

1-) Global Configuration

Update `AccessControlProvider` interface to accept optional `queryOptions`.

```tsx
<Refine ....
  accessControlProvider={{
    can: ....
    options: {
      queryOptions: {  staleTime: 5000 //  UseQueryOptions<CanReturnType> }
    }  
  }}
```

2-) Component prop

Add `queryOptions` prop to `CanAccess` component.

```tsx
<CanAccess queryOptions={{ cacheTime: 25000 }} />
```


Checklist:
- Refactor `useCan` hook to respect `queryOptions` in the following prioritization order if provided: `hook parameter -> component prop -> global config`
- Add new specs.
- Update relevant documentation sections.",,
2062124353,5463,[BUG]: `react-markdown`'s `remark` plugins throws type error,"### Describe the bug

When `import ReactMarkdown from ""react-markdown""` used with `remark-gfm` plugin, it throws the following error

```md
assignable to type 'Pluggable<any[], Settings>'.
  Type 'Gfm' is not assignable to type 'Plugin<any[], Settings>'.
    The 'this' types of each signature are incompatible.
      Property 'attachers' is missing in type 'Processor<Settings>' but required in type 'Processor<void, Node<Data>, void, void>'.
```

To fix this we can use `@ts-expect-error`

Other related issues: https://github.com/orgs/rehypejs/discussions/63

### Steps To Reproduce

build packages using `react-markdown`

Build packages 
```bash
npm run bootstrap -- --scope @refinedev/chakra-ui --scope @refinedev/antd  --scope @refinedev/mui --scope @refinedev/mantine
```

### Expected behavior

Should not give type error

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
2061077062,5460,[BUG] useForm onFinishUpdate promise never settles when in pessimistic mutationMode,"### Describe the bug

The useForm hook is used with mutationMode set to ""pessimistic"" and the update mutation from the data provider rejects.
The issue in the code is here:  https://github.com/refinedev/refine/blob/master/packages/core/src/hooks/form/useForm.ts#L581
In that code path, the promise executor returns without ever calling reject (nor resolve) so the promise is never settled. This means the onFinish function never rejects (nor resolves) and it also means the underlying react-hook-form state remains with `isSumitting` as true indefinitely.

### Steps To Reproduce

1. Implement a component with useForm configured with mutationMode set to ""pessimistic""
2. Add a then and catch to the onFinish method with console log statements to tell when its promise resolves or rejects
3. Add a console log to log the isSubmitting form state on every render of the component
4. Submit a form update mutation that fails (rejecting the promise)
5. Monitor the isSubmitting form state, noting that it remains true
6. Note the log statements from the onFinish resolve nor reject are ever called

### Expected behavior

The promise returned by onFinish should reject and the form state should revert to isSubmitting set to false.
A simple fix would be to just remove the ""return"" from line 581 so that `reject` is called after `onMutationError` executes. 
(Perhaps reject should be called with the error passed in as an argument, but that may be a bigger and undesired change.)

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
2060297201,5458,[BUG] useRegister() deletes register form data values other than email and password,"### Describe the bug

I was trying to customize RegisterPage to add Name and Company fields to the registration form. I confirmed the parameters passed to useRegister containing name and company fields but when the request was on the fly, only email and password are submitted. Is it impossible to add additional fields in Register Page?

### Steps To Reproduce

/*RegisterPage.tsx*/

import { useRegister } from ""@refinedev/core"";

type RegisterVariables = {
  email: string;
  password: string;
  name: string;
};

export const RegisterPage = () => {
  const { mutate: register } = useRegister<RegisterVariables>();

  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    const values = {
        name: e.currentTarget.name.value,
      email: e.currentTarget.email.value,
      password: e.currentTarget.password.value,
    };
    console.log(values);
    register(values);
  };

  return (
    <form onSubmit={onSubmit}>
      <label>Name</label>
      <input name=""name"" value=""test"" />  
      <label>Email</label>
      <input name=""email"" value=""test@refine.com"" />
      <label>Password</label>
      <input name=""password"" value=""refine"" />
      <button type=""submit"">Submit</button>
    </form>
  );
};

### Expected behavior

in the console, the values passed to register() function are printed as {name: '...', email: '..', password:'...'}. But when you inspect in the network window using Google Chrome, auth/signup request payloads are something like {email: '...', password: '...'} omitting name on the fly.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
2056409432,5434,Question about the pagination props in the uselist hooks.,"### Is your feature request related to a problem? Please describe.

I have a question about the pagination props in the uselist hooks.  I don't pass in the pagination props, but [here](https://github.com/refinedev/refine/blob/67a98aeed8695fd59b3e01d17ec1954ba8f804c3/packages/core/src/definitions/helpers/handlePaginationParams/index.ts#L15) it's  fallback to server mode, limit 10, which I'm not sure if that's what's expected or not, but it seems to me that it should be set to off mode by default, not server mode.


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Changing the pagination mode to off by default, but this will probably be a breaking change for people who were using it.",,
2056403272,5433,[BUG] Mantine Notification not closing.,"### Describe the bug

I am using `notificationProvider` from `@refinedev/mantine@2.29.1` package alongside `NotificationsProvider` from `@mantine/notifications@^5.10.4`. When I try to close it with useNotification.close(""notification-key"") from the @refinedev/core@4.46.1 package, the notification does not close.



### Steps To Reproduce

Reproducible example
https://codesandbox.io/p/devbox/stupefied-smoke-w943mt

```tsx
import React from ""react"";
import { Refine } from ""@refinedev/core"";
import { notificationProvider, RefineThemes } from ""@refinedev/mantine"";
import { NotificationsProvider } from ""@mantine/notifications"";
import { MantineProvider, Global } from ""@mantine/core"";
import dataProvider from ""@refinedev/simple-rest"";
import { Flex, Button } from ""@mantine/core"";
import { useNotification } from ""@refinedev/core"";

const App: React.FC = () => {
  return (
    <MantineProvider
      theme={RefineThemes.Blue}
      withNormalizeCSS
      withGlobalStyles
    >
      <Global styles={{ body: { WebkitFontSmoothing: ""auto"" } }} />
      <NotificationsProvider position=""top-right"">
        <Refine
          dataProvider={dataProvider(""https://api.fake-rest.refine.dev"")}
          notificationProvider={notificationProvider}
        >
          <HomePage />
        </Refine>
      </NotificationsProvider>
    </MantineProvider>
  );
};

export const HomePage = () => {
  const { open, close } = useNotification();
  return (
    <Flex mih={""100vh""} gap=""md"" justify=""center"" align=""center"">
      <Button
        onClick={() => {
          open?.({
            type: ""success"",
            message: ""Notification Title"",
            description: ""This is the content of the notification."",
            key: ""notification-key"",
          });
        }}
      >
        Open Notification
      </Button>
      <Button
        variant=""outline""
        onClick={() => {
          close?.(""notification-key"");
        }}
      >
        Close Notification
      </Button>
    </Flex>
  );
};

export default App;

```

### Expected behavior

if there is a notification with the same key, it should close

### Screenshot

_No response_

### Desktop

## System:
 - OS: macOS 14.1.1
 - CPU: (10) arm64 Apple M2 Pro
## Binaries:
 - Node: 18.5.0 - ~/.nvm/versions/node/v18.5.0/bin/node
 - Yarn: 1.22.17 - /opt/homebrew/bin/yarn
 - npm: 8.12.1 - ~/.nvm/versions/node/v18.5.0/bin/npm
## Browsers:
 - Chrome: 120.0.6099.109
 - Firefox: Not Found
 - Safari: 17.1

## Refine Packages:
 - @refinedev/cli: 2.16.21
 - @refinedev/core: 4.46.1
 - @refinedev/mantine: 2.29.1
 - @refinedev/react-router-v6: 4.5.5
 - @refinedev/react-table: 5.6.5
 - @refinedev/simple-rest: 5.0.1

### Mobile

_No response_

### Additional Context

_No response_",,
2056391554,5431,[BUG] Material UI Notification not closing.,"### Describe the bug

I am using `notificationProvider` and `RefineSnackbarProvider` from the `@refinedev/mui@5.14.1` package. When I try to close it with `useNotification.close(""notification-key"")` from the `@refinedev/core@4.46.1` package, the notification does not close.

### Steps To Reproduce

Reproducible example
https://codesandbox.io/p/devbox/awesome-rhodes-8vp5ys?file=%2Fsrc%2FApp.tsx%3A45%2C9

```tsx
import React from ""react"";
import { Refine } from ""@refinedev/core"";
import {
  RefineThemes,
  notificationProvider,
  RefineSnackbarProvider,
} from ""@refinedev/mui"";
import CssBaseline from ""@mui/material/CssBaseline"";
import GlobalStyles from ""@mui/material/GlobalStyles"";
import { ThemeProvider } from ""@mui/material/styles"";
import dataProvider from ""@refinedev/simple-rest"";
import Grid from ""@mui/material/Grid"";
import Button from ""@mui/material/Button"";
import { useNotification } from ""@refinedev/core"";

const App: React.FC = () => {
  return (
    <ThemeProvider theme={RefineThemes.Blue}>
      <CssBaseline />
      <GlobalStyles styles={{ html: { WebkitFontSmoothing: ""auto"" } }} />
      <RefineSnackbarProvider preventDuplicate={true}>
        <Refine
          dataProvider={dataProvider(""https://api.fake-rest.refine.dev"")}
          notificationProvider={notificationProvider}
        >
          <HomePage />
        </Refine>
      </RefineSnackbarProvider>
    </ThemeProvider>
  );
};

export const HomePage = () => {
  const { open, close } = useNotification();
  return (
    <Grid
      container
      spacing={2}
      sx={{
        justifyContent: ""center"",
        alignItems: ""center"",
        height: ""100vh"",
      }}
    >
      <Grid item>
        <Button
          variant=""contained""
          onClick={() => {
            open?.({
              type: ""success"",
              message: ""Notification Title"",
              description: ""This is the content of the notification."",
              key: ""notification-key"",
            });
          }}
        >
          Open Notification
        </Button>
      </Grid>
      <Grid item>
        <Button
          variant=""outlined""
          onClick={() => {
            close?.(""notification-key"");
          }}
        >
          Close Notification
        </Button>
      </Grid>
    </Grid>
  );
};

export default App;
```

### Expected behavior

if there is a notification with the same key, it should close

### Screenshot

_No response_

### Desktop

## System:
 - OS: macOS 14.1.1
 - CPU: (10) arm64 Apple M2 Pro
## Binaries:
 - Node: 18.5.0 - ~/.nvm/versions/node/v18.5.0/bin/node
 - Yarn: 1.22.17 - /opt/homebrew/bin/yarn
 - npm: 8.12.1 - ~/.nvm/versions/node/v18.5.0/bin/npm
## Browsers:
 - Chrome: 120.0.6099.109
 - Firefox: Not Found
 - Safari: 17.1

## Refine Packages:
 - @refinedev/cli: 2.16.21
 - @refinedev/core: 4.46.1
 - @refinedev/mui: 5.14.1
 - @refinedev/react-hook-form: 4.8.13
 - @refinedev/react-router-v6: 4.5.5
 - @refinedev/simple-rest: 5.0.1

### Mobile

_No response_

### Additional Context

_No response_",,
2044832248,5380,"[BUG] Missing `loginLink` attribute in AuthPageProps for AuthPage type=""register"".","### Describe the bug

`Type '{ type: ""register""; loginLink: Element; }' is not assignable to type 'IntrinsicAttributes & AuthProps'.
  Property 'loginLink' does not exist on type 'IntrinsicAttributes & { type: ""register""; providers?: OAuthProvider[] | undefined; hideForm?: boolean | undefined; } & { children?: ReactNode; } & { ...; } & { ...; }'.ts(2322)`
  
packages:
├── @ant-design/icons@5.2.6
├── @refinedev/antd@5.37.0
├── @refinedev/cli@2.16.20
├── @refinedev/core@4.46.0
├── @refinedev/devtools@1.1.28
├── @refinedev/inferencer@4.5.15
├── @refinedev/kbar@1.3.4
├── @refinedev/nextjs-router@5.5.4
├── @refinedev/supabase@5.7.3
├── @types/node@18.19.3
├── @types/react-dom@18.2.18
├── @types/react@18.2.45
├── @typescript-eslint/parser@5.48.0
├── antd@5.12.2
├── cross-env@7.0.3
├── next-i18next@8.10.0
├── next@13.5.6
├── nookies@2.5.2
├── react-dom@18.2.0
├── react@18.2.0
└── typescript@4.9.5

### Steps To Reproduce

1. `npm create refine-app@latest`
2. Selected Supabase for db and auth, Ant design for ui
3. Navigate to `/pages/register/index.tsx`
4. Attempt to add custom loginLink

### Expected behavior

Should not get typescript errors.

### Screenshot

<img width=""883"" alt=""Screenshot 2023-12-16 at 10 38 26 AM"" src=""https://github.com/refinedev/refine/assets/5833422/2d067dc2-2f72-4ddd-9b0d-80367776bb0e"">

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

Adding the following code to the Registration props seemed to resolve the issue:

`packages/core/src/interfaces/auth.tsx`
```
/**
     * @description Render a redirect to login page button node. If set to false, login button will not be rendered.
     * @default `""/login""`
     * @optional
     */
    loginLink?: React.ReactNode;
```

",,
2038643158,5364,[FEAT] Allow objects to be translated in i18nProvider,"### Is your feature request related to a problem? Please describe.

In certain cases it makes sense to store translations as JSON objects (with locales as keys) in the database. It would be great if the types of the `i18nProvider` could be extended to allow objects as well as the first parameter of the `translate` function so we can easily translate them as well.

### Describe alternatives you've considered

An alternative is of course a function in user land.

### Additional context

_No response_

### Describe the thing to improve

I would like to see the following type in `@refinedev/core/src/contexts/translation/ITranslationContext.ts`:
````typescript
export type Translate = (
    key: string | Record<string, string>, // here is the change
    options?: any,
    defaultMessage?: string,
) => string;
````",,
2031439728,5356,[BUG] AntdShowInferencer with custom id column name,"### Describe the bug

Currently, I have  to specify a custom id column name like this to the ShowInferencer:
```typescript
<AntdShowInferencer meta={{
    currencies: {
      default: {
        idColumnName: ""code"",
      }
    }
  }} />
```

It doesn't take the `idColumnName` from meta in `Refine` component which I would assume it would be the correct way.

### Steps To Reproduce

1. Set up `Show` route for a resource that has a different primary key than `id`
2. Use `AntdShowInferencer`

### Expected behavior

I would expect that the ShowInferencer will take the `meta` property from the resources definition into account.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
2026380946,5350,[BUG] RefineDev/Supabase not returning file ID after upload ,"### Describe the bug

refinedev/supabase package is not returning the ID of the uploaded file. After checking the storage API's latest update, the ID is being returned after calling the ""upload"" API. However, in the refinedev/supabase npm package, storage.upload() function, only the path (string) and the fullPath (string) are returned. Kindly add the file id to the response since some users will link the file id to their database tables.

After going through the code in refindev/supabase npm package, I noticed that the ID is being returned by the storage API but the structure of the returned object was {""path"": string, ""fullPath"": string}. Kindly fix it to { id: string; path: string; fullPath: string }
note that the change should be done in StorageFileAPI.ts file line 201

Fixed it by manually changing the @supabase/supabase-js version to 2.39.0 in 'node_modules/@refinedev/supabase/package.json'

### Steps To Reproduce

const { data: uploadFileData, error: uploadFileError } = await supabaseClient
.storage
.from(bucketName)
.upload(path, file, {
{},
cacheControl: ""3600"",
upsert: true
});
the id was not returned.

### Expected behavior

the response data object should contain id.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
2025167740,5348,[FEAT] Improve DataProvider for Hasura,"### Is your feature request related to a problem? Please describe.

Modify code for generating the sort parameters of the GraphQL query that gets sent off to a Hasura GraphQL endpoint (might want to patch these changes to the other GraphQL data providers).  This would allow for multi-sort

### Describe alternatives you've considered

_No response_

### Additional context

This is the current implementation of generating the sort parameter, https://github.com/refinedev/refine/blob/master/packages/hasura/src/utils/generateSorting.ts#L10C1-L25.

Which should generate an array of `${operation}_order_by`, but currently generates a record of `${operation}_order_by`,
https://github.com/refinedev/refine/blob/master/packages/hasura/src/dataProvider/index.ts#L112-L116.

The generation of the sort parameter should be recursive like https://github.com/refinedev/refine/blob/master/packages/hasura/src/utils/generateFilters.ts#L111-L122.

So an input like 
```
[
  {
    field: 'patient_status.title',
    order: 'asc'
  },
  {
    field: 'insurance_status.title',
    order: 'asc'
  },
  {
    field: 'patient.name_and_dob',
    order: 'asc'
  },
  {
    field: 'rx_received_date',
    order: 'desc'
  },
]
```

Would produce an output like,
```
[
  {
    ""patient_status"": {
        ""title"": ""asc""
    }
  },
  {
    ""insurance_status"": {
      ""title"": ""asc""
    } 
  },
  {
    ""patient"": {
      ""name_and_dob"": ""asc""
    }
  },
  {
    ""rx_received_date"": ""desc""
  }
]
```

an example implementation would be something like this
```
const generateNestedSorting = (sorter:any) => {
  if (!sorter) {
      return undefined;
  }

  const { field, order } = sorter;

  const fieldsArray = field.split(""."");

  return {
    ...(setWith({}, fieldsArray, order, Object))
  };
};

const generateSorting = (sorters:any[] | undefined) => {
  if (!sorters){
    return undefined
  }

  return sorters.map(generateNestedSorting)
}
```

### Describe the thing to improve

Sorts of GraphQL provider",,
2024780635,5347,[BUG] @refinedev/remix-router doesn't work with Remix v2,"### Describe the bug

After installing  ""@refinedev/remix-router"": ""^2.3.0"", I get this error
 ```
✘ [ERROR] No matching export in ""node_modules/@remix-run/react/dist/esm/index.js"" for import ""unstable_useBlocker""

    node_modules/@refinedev/remix-router/dist/esm/index.js:158:9:
      158 │ import { unstable_useBlocker as useBlocker } from ""@remix-run/rea...
          ╵          ~~~~~~~~~~~~~~~~~~~
```

### Steps To Reproduce

1. Remix 2.3.1
2. Install ""@refinedev/remix-router"": ""^2.3.0""
3. npm run dev

### Expected behavior

Run it without errros


### Screenshot

_No response_

### Desktop

- Mac 13.6
- Chrome  119

### Mobile

_No response_

### Additional Context

I think this error is due to the fact that `unstable_useBlocker` is deprecated in Remix 2.
In general it'd be appreciate it if you could update all Remix examples to Remix v2",,
2011133963,5317,[BUG] - CSV Export uses an outdated pacakge - export-to-csv-fix-source-map,"### Describe the bug


Current version of the `export-to-csv` package is `export-to-csv-fix-source-map@0.2.1` 

This version has a bug where not all headers are exported and it depends on the first data item.

This issue affect `@refinedev/core` since `useExport` was added @ [8a115b5f](https://github.com/refinedev/refine/commit/8a115b5f6bcfaa8db6126dfff3adb6d0890923ce) 

### Steps To Reproduce

1. Load a table with the following data 
``` json
[
 {""field1"":""foo""}, 
 {""field1"":""bar"", ""field2"": ""baz""}
]
```
2. Export a CSV using
``` ts
    const { triggerExport, isLoading } = useExport<IVendor>({
        mapData: item => flatten(item),
        exportOptions: {
            showLabels: true,
            // There is an issue if the first item in the list is missing a keys, no column will be generated for them.
            // Manually defining the keys
            useKeysAsHeaders: false,
            headers: [""field1"", ""field2""]
        }
    });
```
4. CSV will not contain ""field2""




### Expected behavior

Specifying the headers for the CSV should export all the headers without depending on the actual data for the keys.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
2009243090,5312,[FEAT] Missing HttpError error type in useOne hooks.,"### Is your feature request related to a problem? Please describe.

I noticed that the TError generic is not passed into the QueryObserverResult in the useOne hook, which results in a type inference of unkown in useOne . Eventually the type is lost.I was wondering if this is by design? Or if there is a plan to fix it?

https://github.com/refinedev/refine/blob/master/packages/core/src/hooks/data/useOne.ts#L109



### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Useone hook's return type is incorrect.",,
2003308144,5295,[BUG] Error: Text content does not match server-rendered HTML.,"### Describe the bug

Hi there, I'm just starting my first experience with Refine, and unfortunately I'm running into an issue: 

```
Error: Text content does not match server-rendered HTML.

Warning: Text content did not match. Server: ""Enhance Refine's reach. Give us a star on GitHub!"" Client: ""Let's elevate Refine together. Star us on GitHub!""

See more info here: https://nextjs.org/docs/messages/react-hydration-error
```

### Steps To Reproduce

1. run `npm create refine-app@latest`
2. Use the following settings:

```
/ In a world of constraints, Refine \
\ offers freedom. Code on!          /
 -----------------------------------
        \   ^__^
            ■-■¬\_______
            (__)\       )\/\
                ||----w |
                ||     ||
✔ Downloaded remote source successfully.
✔ Choose a project template · refine-nextjs
✔ What would you like to name your project?: · violet-numbers-shout
✔ Choose your backend service to connect: · data-provider-custom-json-rest
✔ Do you want to use a UI Framework?: · mantine
✔ Do you want to add example pages?: · inferencer
✔ Do you need any Authentication logic?: · auth-provider-custom
✔ Do you need i18n (Internationalization) support?: · no
✔ Choose a package manager: · npm
✔ Mind sharing your email? (We reach out to developers for free priority support, events, and SWAG kits. We never spam.) ·

Success! Created violet-numbers-shout at /Users/erikpragt/projects/other/refine/violet-numbers-shout 🚀
```

After that, the application seems to start up well, but getting the above error:

```
Start developing by:

  › cd /Users/erikpragt/projects/other/refine/violet-numbers-shout
  › npm run dev

  › Join us at https://discord.gg/refine


    ~/projects/other/refine  cd violet-numbers-shout                                                                                                                                                                                      ✔  5m 58s 

    ~/projects/other/refine/violet-numbers-shout    main  npm run dev                                                                                                                                                                             ✔

> violet-numbers-shout@0.1.0 dev
> cross-env NODE_OPTIONS=--max_old_space_size=4096 refine dev


✓ refine devtools is running at port 5001

ready - started server on 0.0.0.0:3000, url: http://localhost:3000
We detected TypeScript in your project and reconfigured your tsconfig.json file for you. Strict-mode is set to false by default.

The following suggested values were added to your tsconfig.json. These values can be changed to fit your project's needs:

	- incremental was set to true

event - compiled client and server successfully in 3s (1327 modules)
wait  - compiling / (client and server)...
event - compiled client and server successfully in 137 ms (1330 modules)
wait  - compiling /blog-posts...
event - compiled client and server successfully in 1195 ms (1892 modules)
wait  - compiling /login...
event - compiled client and server successfully in 114 ms (1895 modules)
^C%
```

### Expected behavior

A working demo / login app.

### Screenshot

<img width=""1847"" alt=""image"" src=""https://github.com/refinedev/refine/assets/119275045/98b4d413-cfc4-438b-a113-7b221dc4a471"">


### Desktop

MacOS 14.1
Using Firefox
Now using node v20.6.1 (npm v9.8.1)

### Mobile

_No response_

### Additional Context

_No response_",,
2003153166,5294,[BUG] Devtools Error: listen EADDRINUSE: address already in use :::5002,"### Describe the bug

When I try to run two refine projects simultaneously, devtools will throw an error saying that the port is already in use



```bash
✓ refine devtools is running at port 5001

node:events:495
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE: address already in use :::5002
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at new WebSocketServer (F:\code\experiments\refine-vite\node_modules\ws\lib\websocket-server.js:95:20)
    at j (F:\code\experiments\refine-vite\node_modules\@refinedev\devtools-server\dist\index.js:1:1205)
    at We (F:\code\experiments\refine-vite\node_modules\@refinedev\devtools-server\dist\index.js:378:6378)
    at ke (F:\code\experiments\refine-vite\node_modules\@refinedev\cli\dist\cli.js:17:484)
Emitted 'error' event on WebSocketServer instance at:
    at Server.emit (node:events:517:28)
    at emitErrorNT (node:net:1844:8)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  code: 'EADDRINUSE',
  errno: -4091,
  syscall: 'listen',
  address: '::',
  port: 5002
}

Node.js v18.18.2
```

### Steps To Reproduce

1. Run `npm run dev` to start the development server on your refine project
2. Open a second refine project and run `npm run dev` to also start a development server
3. See the error on the second project terminal

### Expected behavior

I believe that it should catch this specific error and trigger the generation of a new port, like this example in Next.js
```
⚠ Port 3000 is in use, trying 3001 instead.
```

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

The reason why I needed two or more refine projects running is for testing and development purposes, I wanted to check some specific behaviors while running refine with different frameworks such as vite, next and remix.

Similar Issues:
- #5215 
",,
2001846216,5287,[BUG] npm run refine swizzle (nestjsx-crud),"### Describe the bug

Running refine swizzle for the first time, transformHttpError & transformHttpMessages exported from index.ts but not included in the generated files.

### Steps To Reproduce

1. $ npm run refine swizzle
2. Select nestjsx-crud data provider
3. Cannot find module(s) in index.ts

### Expected behavior

I would expect to see these files auto-generated or the index.ts import them from another source.

### Screenshot

![image](https://github.com/refinedev/refine/assets/45456027/a8a38f71-3974-4def-b20d-b835bd8f1e7b)


### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
2000930593,5279,[BUG] Error [ERR_REQUIRE_ESM]: require() of ES Module ,"### Describe the bug

After creating a new application with the `npm create refine-app@latest testapp` command, the application does not start with the `nmp run dev` command and the following error occurs:

```
> testapp@0.1.0 refine
> refine

/home/user/testapp/node_modules/node-emoji/lib/index.cjs:47
var import_is2 = __toESM(require(""@sindresorhus/is""), 1);
                         ^

Error [ERR_REQUIRE_ESM]: require() of ES Module /home/user/testapp/node_modules/@sindresorhus/is/dist/index.js from /home/user/testapp/node_modules/node-emoji/lib/index.cjs not supported.
Instead change the require of index.js in /home/user/testapp/node_modules/node-emoji/lib/index.cjs to a dynamic import() which is available in all CommonJS modules.
    at Object.<anonymous> (/home/user/testapp/node_modules/node-emoji/lib/index.cjs:47:26)
    at Object.<anonymous> (/home/user/testapp/node_modules/marked-terminal/index.cjs:10:13)
    at Object.<anonymous> (/home/user/testapp/node_modules/@refinedev/cli/dist/cli.js:25:1400) {
  code: 'ERR_REQUIRE_ESM'
}
```


### Steps To Reproduce

1. `npm create refine-app@latest testapp`
```
✔ Choose a project template · refine-vite
✔ What would you like to name your project?: · testapp
✔ Choose your backend service to connect: · data-provider-strapi-v4
✔ Do you want to use a UI Framework?: · antd
✔ Do you want to add example pages?: · no
✔ Do you need i18n (Internationalization) support?: · no
```
2. `cd testapp`
3. `npm run dev`

### Expected behavior

Run normally.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

OS: ubuntu 22.04 LTS
Node: v20.9.0
NPM: v10.1.0
create-refine-app: v1.12.1",,
1971542261,5202,[FEAT] Vite support on  Remix experimental ,"### Describe the bug

Trying to use remix in vite support experimental [link](https://remix.run/docs/en/main/future/vite)  and refine giving issue on  `[vite] Error when evaluating SSR module /app/root.tsx: failed to import ""@refinedev/remix-router""`

### Steps To Reproduce

create remix on vite using it docs and manually add refine base on the instruction docs based

### Expected behavior

refine should be working and no issue 

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

I  know its remix support is experimental but it no hurt if we could support it in early stage thanks ",,
1964356259,5178,[FEAT] Mantine v7 support?,"### Describe the bug

[Installation & Usage doc | @refinedev/mantine](https://github.com/refinedev/refine/tree/next/packages/mantine#installation--usage):

```
npm install @refinedev/mantine @refinedev/react-table @mantine/core @mantine/hooks @mantine/form @mantine/notifications @emotion/react @tabler/icons
```



### Steps To Reproduce

`pnpm install @mantine/core @mantine/hooks @mantine/form @mantine/notifications @emotion/react @tabler/icons` result:

```
└─┬ @refinedev/mantine 2.28.16                                                              
  ├── ✕ unmet peer @mantine/core@^5.10.4: found 7.1.7                                     
  ├── ✕ unmet peer @mantine/hooks@^5.10.4: found 7.1.7                                    
  ├── ✕ unmet peer @mantine/form@^5.10.4: found 7.1.7                                     
  └── ✕ unmet peer @mantine/notifications@^5.10.4: found 7.1.7  
```

`pnpm run dev`:

```
✘ [ERROR] No matching export in ""node_modules/.pnpm/@mantine+core@7.1.7_@mantine+hooks@7.1.7_@types+react@18.2.32_react-dom@18.2.0_react@18.2.0/node_modules/@mantine/core/esm/index.mjs"" for import ""Navbar""

    node_modules/.pnpm/@refinedev+mantine@2.28.16_@emotion+react@11.11.1_@mantine+core@7.1.7_@mantine+form@7.1.7_@ma_uwtpencjuswysal3gjy55gi7ly/node_modules/@refinedev/mantine/dist/esm/index.js:1:40577:
      1 │ ...as vl,Box as At,Drawer as Sl,Navbar as Le,NavLink as To,ScrollAr...
        ╵                                 ~~~~~~

✘ [ERROR] No matching export in ""node_modules/.pnpm/@mantine+core@7.1.7_@mantine+hooks@7.1.7_@types+react@18.2.32_react-dom@18.2.0_react@18.2.0/node_modules/@mantine/core/esm/index.mjs"" for import ""MediaQuery""

    node_modules/.pnpm/@refinedev+mantine@2.28.16_@emotion+react@11.11.1_@mantine+core@7.1.7_@mantine+form@7.1.7_@ma_uwtpencjuswysal3gjy55gi7ly/node_modules/@refinedev/mantine/dist/esm/index.js:1:40621:
      1 │ ...ink as To,ScrollArea as It,MediaQuery as Ze,Button as wl,Tooltip...
        ╵                               ~~~~~~~~~~

✘ [ERROR] No matching export in ""node_modules/.pnpm/@mantine+core@7.1.7_@mantine+hooks@7.1.7_@types+react@18.2.32_react-dom@18.2.0_react@18.2.0/node_modules/@mantine/core/esm/index.mjs"" for import ""Header""

    node_modules/.pnpm/@refinedev+mantine@2.28.16_@emotion+react@11.11.1_@mantine+core@7.1.7_@mantine+form@7.1.7_@ma_uwtpencjuswysal3gjy55gi7ly/node_modules/@refinedev/mantine/dist/esm/index.js:1:44525:
      1 │ ...ort{Avatar as Ul,Group as Ml,Header as Hl,Title as Ql}from""@mant...
        ╵                                 ~~~~~~

✘ [ERROR] No matching export in ""node_modules/.pnpm/@mantine+core@7.1.7_@mantine+hooks@7.1.7_@types+react@18.2.32_react-dom@18.2.0_react@18.2.0/node_modules/@mantine/core/esm/index.mjs"" for import ""Navbar""

    node_modules/.pnpm/@refinedev+mantine@2.28.16_@emotion+react@11.11.1_@mantine+core@7.1.7_@mantine+form@7.1.7_@ma_uwtpencjuswysal3gjy55gi7ly/node_modules/@refinedev/mantine/dist/esm/index.js:1:46414:
      1 │ ...as td,Box as Ut,Drawer as rd,Navbar as We,NavLink as ho,ScrollAr...
        ╵                                 ~~~~~~

✘ [ERROR] No matching export in ""node_modules/.pnpm/@mantine+core@7.1.7_@mantine+hooks@7.1.7_@types+react@18.2.32_react-dom@18.2.0_react@18.2.0/node_modules/@mantine/core/esm/index.mjs"" for import ""MediaQuery""

    node_modules/.pnpm/@refinedev+mantine@2.28.16_@emotion+react@11.11.1_@mantine+core@7.1.7_@mantine+form@7.1.7_@ma_uwtpencjuswysal3gjy55gi7ly/node_modules/@refinedev/mantine/dist/esm/index.js:1:46458:
      1 │ ...ink as ho,ScrollArea as Mt,MediaQuery as Je,Button as nd,Tooltip...
        ╵                               ~~~~~~~~~~

✘ [ERROR] No matching export in ""node_modules/.pnpm/@mantine+core@7.1.7_@mantine+hooks@7.1.7_@types+react@18.2.32_react-dom@18.2.0_react@18.2.0/node_modules/@mantine/core/esm/index.mjs"" for import ""Header""

    node_modules/.pnpm/@refinedev+mantine@2.28.16_@emotion+react@11.11.1_@mantine+core@7.1.7_@mantine+form@7.1.7_@ma_uwtpencjuswysal3gjy55gi7ly/node_modules/@refinedev/mantine/dist/esm/index.js:1:50520:
      1 │ ...ort{Avatar as yd,Group as gd,Header as xd,Title as hd,useMantine...

✘ [ERROR] No matching export in ""node_modules/.pnpm/@mantine+core@7.1.7_@mantine+hooks@7.1.7_@types+react@18.2.32_react-dom@18.2.0_react@18.2.0/node_modules/@mantine/core/esm/index.mjs"" for import ""Navbar""

    node_modules/.pnpm/@refinedev+mantine@2.28.16_@emotion+react@11.11.1_@mantine+core@7.1.7_@mantine+form@7.1.7_@ma_uwtpencjuswysal3gjy55gi7ly/node_modules/@refinedev/mantine/dist/esm/index.js:1:53206:
      1 │ ...mport{Box as tp,Drawer as rp,Navbar as ro,NavLink as vo,ScrollAr...
        ╵                                 ~~~~~~

✘ [ERROR] No matching export in ""node_modules/.pnpm/@mantine+core@7.1.7_@mantine+hooks@7.1.7_@types+react@18.2.32_react-dom@18.2.0_react@18.2.0/node_modules/@mantine/core/esm/index.mjs"" for import ""MediaQuery""

    node_modules/.pnpm/@refinedev+mantine@2.28.16_@emotion+react@11.11.1_@mantine+core@7.1.7_@mantine+form@7.1.7_@ma_uwtpencjuswysal3gjy55gi7ly/node_modules/@refinedev/mantine/dist/esm/index.js:1:53250:
      1 │ ...ink as vo,ScrollArea as Rt,MediaQuery as So,Tooltip as wo,useMan...
        ╵                               ~~~~~~~~~~

✘ [ERROR] No matching export in ""node_modules/.pnpm/@mantine+core@7.1.7_@mantine+hooks@7.1.7_@types+react@18.2.32_react-dom@18.2.0_react@18.2.0/node_modules/@mantine/core/esm/index.mjs"" for import ""Header""

    node_modules/.pnpm/@refinedev+mantine@2.28.16_@emotion+react@11.11.1_@mantine+core@7.1.7_@mantine+form@7.1.7_@ma_uwtpencjuswysal3gjy55gi7ly/node_modules/@refinedev/mantine/dist/esm/index.js:1:62246:
      1 │ ...port{Avatar as yp,Flex as Xt,Header as gp,Title as xp,useMantine...
        ╵                                 ~~~~~~

✘ [ERROR] No matching export in ""node_modules/.pnpm/@mantine+core@7.1.7_@mantine+hooks@7.1.7_@types+react@18.2.32_react-dom@18.2.0_react@18.2.0/node_modules/@mantine/core/esm/index.mjs"" for import ""MediaQuery""

    node_modules/.pnpm/@refinedev+mantine@2.28.16_@emotion+react@11.11.1_@mantine+core@7.1.7_@mantine+form@7.1.7_@ma_uwtpencjuswysal3gjy55gi7ly/node_modules/@refinedev/mantine/dist/esm/index.js:1:62359:
      1 │ ...t"";import{ActionIcon as Kt,MediaQuery as Zt}from""@mantine/core"";...
```

`http://localhost:5173/` won't open

### Expected behavior

`pnpm run dev` (`refine dev`) works normally

### Additional Context

```
@refinedev/core@4.44.7
@refinedev/mantine@2.28.16
@mantine/core@7.1.7
```",,
1961056001,5164,[BUG] onSearchProps values',"### Describe the bug

https://refine.dev/docs/api-reference/antd/hooks/table/useTable/#searchformprops

I followed the codes from this example and it's causing at an error of 'values' is of type 'unknown'

`const PostList: React.FC = () => {
    const { searchFormProps, tableProps } = useTable<IPost, HttpError, ISearch>(
        {
            onSearch: (values) => {
                return [
                    {
                        field: ""title"",
                        operator: ""contains"",
                        value: values.title,
                    },
                ];
            },
        },
    );
`



### Steps To Reproduce

1. https://refine.dev/docs/api-reference/antd/hooks/table/useTable/#searchformprops
2. Use the codes provided



### Expected behavior

To pass a value for search results

### Screenshot

![error-refine](https://github.com/refinedev/refine/assets/140708598/43120cb4-916e-4bd4-b7bc-83b2ae7e1d67)


### Desktop

Windows 11
Visual Studio Code
NPM 9.8.1
refinedev/antd@5.36.14
antd 5.10.2
typescript 4.9.5


### Mobile

_No response_

### Additional Context

_No response_",1778980618,"Hello @j2yau,

We couldn't reproduce the bug locally. We also have an example here, and it works. Can you also check and let us know?

https://codesandbox.io/p/sandbox/gracious-margulis-yh7h8s?embed=1&file=%2Fsrc%2Fpages%2Fposts%2Flist.tsx%3A27%2C1-28%2C1"
1959029430,5159,[FEAT] AuthProvider as part of refine with integrations,"### Is your feature request related to a problem? Please describe.

I looked into `AuthProvider` examples. All of them are exemplified into refine's `AuthProvider` interface usage.
I think it would be of great help to have it implemented as part of `refine` itself, similar to how `DataProvider` is within the repo.


### Describe alternatives you've considered

As an alternative solution, 
```js
import { useAuthProvider } from ""@refinedev/auth0"";

const authProvider = useAuthProvider({
      clientId: `AUTH0_CLIENT_ID`,
      domain: `AUTH0_DOMAIN`,
});
```

### Additional context

_No response_

### Describe the thing to improve

I looked into how DataProvider's ease the integration, similar to that `AuthProvider` can be integrated into the repo.
Referring to `next-auth`, I would like to suggest integration of `AuthProvider` like `@refinedev/auth0/react`.",1777185606,"That sounds good, would you like to create a refine package for Auth0?"
1959029430,5159,[FEAT] AuthProvider as part of refine with integrations,"### Is your feature request related to a problem? Please describe.

I looked into `AuthProvider` examples. All of them are exemplified into refine's `AuthProvider` interface usage.
I think it would be of great help to have it implemented as part of `refine` itself, similar to how `DataProvider` is within the repo.


### Describe alternatives you've considered

As an alternative solution, 
```js
import { useAuthProvider } from ""@refinedev/auth0"";

const authProvider = useAuthProvider({
      clientId: `AUTH0_CLIENT_ID`,
      domain: `AUTH0_DOMAIN`,
});
```

### Additional context

_No response_

### Describe the thing to improve

I looked into how DataProvider's ease the integration, similar to that `AuthProvider` can be integrated into the repo.
Referring to `next-auth`, I would like to suggest integration of `AuthProvider` like `@refinedev/auth0/react`.",1777188664,"> That sounds good, would you like to create a refine package for Auth0?

Yes, I am looking for the same. I have started for [Kinde](https://kinde.com/) actually.

I hope it works fine, once it does I will move it further."
1959029430,5159,[FEAT] AuthProvider as part of refine with integrations,"### Is your feature request related to a problem? Please describe.

I looked into `AuthProvider` examples. All of them are exemplified into refine's `AuthProvider` interface usage.
I think it would be of great help to have it implemented as part of `refine` itself, similar to how `DataProvider` is within the repo.


### Describe alternatives you've considered

As an alternative solution, 
```js
import { useAuthProvider } from ""@refinedev/auth0"";

const authProvider = useAuthProvider({
      clientId: `AUTH0_CLIENT_ID`,
      domain: `AUTH0_DOMAIN`,
});
```

### Additional context

_No response_

### Describe the thing to improve

I looked into how DataProvider's ease the integration, similar to that `AuthProvider` can be integrated into the repo.
Referring to `next-auth`, I would like to suggest integration of `AuthProvider` like `@refinedev/auth0/react`.",1777210648,Great! We'd like to gift you a Refine Swag Kit for your efforts and interest. We'll send you with a gift code you can use at https://store.refine.dev! Thank you.
1959029430,5159,[FEAT] AuthProvider as part of refine with integrations,"### Is your feature request related to a problem? Please describe.

I looked into `AuthProvider` examples. All of them are exemplified into refine's `AuthProvider` interface usage.
I think it would be of great help to have it implemented as part of `refine` itself, similar to how `DataProvider` is within the repo.


### Describe alternatives you've considered

As an alternative solution, 
```js
import { useAuthProvider } from ""@refinedev/auth0"";

const authProvider = useAuthProvider({
      clientId: `AUTH0_CLIENT_ID`,
      domain: `AUTH0_DOMAIN`,
});
```

### Additional context

_No response_

### Describe the thing to improve

I looked into how DataProvider's ease the integration, similar to that `AuthProvider` can be integrated into the repo.
Referring to `next-auth`, I would like to suggest integration of `AuthProvider` like `@refinedev/auth0/react`.",1778539725,"Here's the first installment of `AuthProvider`, It's for [Kinde](https://kinde.com) with react.
https://github.com/hirenf14/refine-auth-kinde-react"
1958565486,5157,[BUG] Mantine useSelect hook return value as type number instead of type string,"### Describe the bug

For mantine Select, it only accepts value as string but the current useSelect hook return value type of number instead. It's kinda inconvenient to convert data type once again.

Current code of core useSelect doesn't actually convert the type of value:
<img width=""331"" alt=""Screen Shot 2023-10-24 at 12 47 38"" src=""https://github.com/refinedev/refine/assets/146188526/32826842-d189-49de-acec-332b03fb2923"">

Fix proposal:
a.toString() or String(a)


### Steps To Reproduce

 I reproduced the code: 
<img width=""332"" alt=""Screen Shot 2023-10-24 at 12 45 28"" src=""https://github.com/refinedev/refine/assets/146188526/68b318cf-fb39-42f3-aa54-41eb4475960e"">
<img width=""173"" alt=""Screen Shot 2023-10-24 at 12 46 53"" src=""https://github.com/refinedev/refine/assets/146188526/3227473d-d345-4c5b-a096-7237c3c5f377"">


### Expected behavior

Each option should have `value` of type string

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",1777359858,"Hello @an-tran511 

As a hint, we need to change this line to fix this issue: https://github.com/refinedev/refine/blob/ceadcd29fc9e42c875a4b0a78622e9fc14b4ce42/packages/core/src/hooks/useSelect/index.ts#L252

Then you can create a patch changeset open the PR.
https://refine.dev/docs/contributing/#changeset"
1948607858,5125,[BUG] Invalidation,"### Describe the bug

Hey guys, I'm trying to understand why sometimes the delete doesn't trigger the invalidate in order to refresh the list, you can see on this video that the first time is working, and the other ones aren't working(the API call is working for all the calls because I can see the API call in the network tab), it seems the invalidate + Optimistic aren't triggering.

Not necessarily the other attempts will not work, sometimes it does, it's kind of unpredictable

https://github.com/refinedev/refine/assets/38195454/299f2d2b-dc4c-4a25-8baa-0e0eb4a78f5b



### Steps To Reproduce

1. I delete 2 different items, the first one work

### Expected behavior

When the user presses delete it should call the api to delete it and then refresh the list

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",1768442177,"Hey @omeraplak, thank you for the help, I was checking and it seems the endpoint isn't waiting for the delete(when we delete it the backend just returns without settling the promise), that's why when I try to delete fast, this error is happening,  we invalidate the `list` but the query is returning faster than the delete."
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",1764590600,"Hello @rassie thanks for the issue, and sorry for the despair :)

We need to clarify some things:
- Could you share your dockerfile (minimal version)?
- Are you running devtools and your app separately / in different containers?
- Is your app running at `127.0.0.1`? 
- Maybe you can put all of them into the same network
- If your app/devtools not exposed to your machine, could you try `--network=host` option? https://docs.docker.com/engine/reference/run/#network-host

"
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",1764792933,"Hi, thanks for the reply.

I would very much like to avoid running anything on the host network. For starters, I'm not running pure Docker, it was more or less a simplification for the issue tracker. I'm running a minimal Kubernetes cluster (based on k3s/k3d), so host networking is way more difficult that just setting `--network=host` (besides, some team mates are running Windows with WSL2, which does not support host networking). Running Devtools and the app on the same network wouldn't normally do anything, since Devtools would still be listening only on `localhost`.

On the other point: my application (running with `vite`) is running with the `--host 0.0.0.0` option, so that I can reach it from outside the container. In general, the problem is similar: if I want to run my development in container, I cannot do so with pure `vite`, which would bind itself to `localhost` by default, I need to add that option to actually expose ports. Which is totally fine, `localhost` is a sane default, there just needs to be an override option.

The `docker-compose.yaml` (there is no Dockerfile) corresponding to my Kubernetes config would look something like this:

```yaml
services:
  web:
    image: ""node:18""
    volumes:
      - ""./:/app""
    working_dir: /app
    ports:
      - 5173:5173
    command: [""sh"", ""-c"", ""npm install && npm run dev -- --host""]
```

I would normally run the devtools in the same container by default, but I'm also open to starting a separate container. "
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",1782877648,"Hello @rassie, we'll try to explore our options and get back to you, as this one is a bit complicated issue. We'll see what we can do about it."
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",1869622137,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",1869626832,"It's not stale.

@BatuhanW could you elaborate what's the difficult part of this issue? I wanted to take a stab at it myself and haven't seen anything inherently difficult apart from the ""working with unknown code"" part for me."
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",1884494385,"Hello @rassie, sorry for the late reply! Your notification got lost in GitHub's bloated notification UI.


The main problem is, DevTools authentication server only allows localhost:5001 and 127.0.0.1:5001 origins for security reasons. So running it in the container will have invalid origin issue.

One solution could be to run proxy server, running in 5001 port, proxying requests from container to host, and the auth server."
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",1884502799,"Can you make the origin overridable? I understand that the ""normal"" use case is to develop on `localhost`, however remote development instances are not _that_  unusual anymore and those won't be called `localhost` in most cases."
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",1884538639,"Allowed origin configuration is dictated on the backend with white-list approach. We are using ORY Kratos for authorization server and kratos doesn't even allow using localhost or 127.0.0.1 as origin: https://www.ory.sh/docs/guides/cors

So we have our forked version of self-hosted ory kratos, behind Ory's Oathkeeper reverse proxy. 

Since we can't have a growing list of allowed origins there, only solution seems to have wildcard for allowed origins, but I need to check with the team if we can do that. cc @omeraplak "
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",1886997178,"Hello @rassie, a quick update. We discussed with @omeraplak and agreed to allow any port from `localhost` and `127.0.0.1` origins. We can also allow certain origins like GitHub codespaces if needed.

I tried to use wildcard for port as defined in [OAuth spec](https://www.oauth.com/oauth2-servers/oauth-native-apps/redirect-urls-for-native-apps/) and [Google's match patterns](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) doc, but it didn't work.

I'll take a look at it next week."
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",1902061247,Hi! I'm having the same error and it would definitely help to allow GitHub codespaces as an origin.
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",2009380753,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",2022654554,"@BatuhanW I still would like to have this, thank you!"
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",2048609837,I'm sending some love for this issue to be solved 💜🙏🏽
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",2157060428,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
"
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",2163017598,"This issue is not stale - I'm also looking at running refine dev in a container next to my APIs all in the same compose stack. This is preventing the devtools from working.

Regards,
Doug"
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",2165050431,"Bumping this. My current development environment does not allow the project to be ran locally, options to expose the devtools like the --host option from vite would be nice"
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",2271204951,"We've released an update to the related Devtools packages and `@refinedev/cli` to allow Devtools to be used outside of localhost, with a custom port or a domain. 🙏 "
1945241864,5111,[BUG] Devtools cannot be used outside of `localhost`,"### Describe the bug

I would like use Devtools in my Refine project. I'm running my development in Docker containers and since Devtools bind exclusively on `localhost`, Devtools client cannot reach the server.

### Steps To Reproduce

1. Start a new Devtools project
2. Observe it's binding on `localhost` and no other network interface
3. Look for a configuration option for defining binding IP.
4. Fail to find anything and cry a little in despair :) 

### Expected behavior

Binding interface (and port) should be configurable.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There has been some attempts to implement port configuration, which have been reverted in https://github.com/refinedev/refine/pull/5056, with a [promise](https://github.com/refinedev/refine/pull/5056#discussion_r1345475273) to provide a solution in the future.",2318018218,"In case someone gets here. Here is how I implemented (I´m using devcontainers):
#compose.yaml:
services:
  web:
    ports:
      - 5001:5001
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env

#.devcontainer/docker-compose.yml:
version: '3.8'
services:
  web:
    network_mode: host
    ports:
      - 5001:5001
      - 5173:5173
    volumes:
      - ..:/workspaces:cached
    command: sleep infinity

#.devcontainer/devcontainer.json
{
	""name"": ""DevContainer - WEB"",
	""dockerComposeFile"": [
		""../compose.yaml"",
		""docker-compose.yml""
	],
	""service"": ""web"",
	""workspaceFolder"": ""/home/web"",
	""forwardPorts"": [
		5001
	]
	}



You´ll see you have two forwarded ports, 5173 (origin: Auto Forwarded) and 5001(origin: Dev Containers). Then, on devcontainer, I run `npm run dev`, and i´m ready to go.  I shouldn´t need to expose ports as the dev container is on host network mode, but it was necessary. The same for forwardPorts. I think my setting is optimal and there are misconfiguration but at least it works.  

        
        "
1921738652,5039,[FEAT] `useCustomMutation` should be able to modify headers for each individual call.,"### Is your feature request related to a problem? Please describe.

The following Providers are currently setting default headers, which results in the same headers being included in all subsequent API calls. Data providers should have the capability to modify headers for each individual call.

- [altogic](https://github.com/refinedev/refine/blob/next/packages/altogic/src/index.ts#L276)
- [medusa](https://github.com/refinedev/refine/blob/next/packages/medusa/src/dataProvider/index.ts#L159)
- [nestjsx-crud](https://github.com/refinedev/refine/blob/next/packages/nestjsx-crud/src/provider.ts#L197)
- [strapi](https://github.com/refinedev/refine/blob/next/packages/medusa/src/dataProvider/index.ts#L159)
- [strapi-v4](https://github.com/refinedev/refine/blob/next/packages/medusa/src/dataProvider/index.ts#L159)

We can implement this feature like this:
https://github.com/refinedev/refine/pull/5036
",,
1913150233,5014,"[BUG] Error: No QueryClient set, use QueryClientProvider to set one","### Describe the bug

If `useQueryClient` is used to invalidate data on NextJS Layout this raise this error `Error: No QueryClient set, use QueryClientProvider to set one`.

I have already found a workaround that is to define a `QueryClientProvider` parent of Refine. I think the source of this bug is Layout have been rendered before the QueryClientProvider. But i'm not sure if that will create some side effects.

### Steps To Reproduce

1. Define queryClient in _app.js with useState cache.
2. Extend MyApp with Layout. I use typescript.
```
type NextPageWithLayout<P = object | undefined, IP = P> = NextPage<
  P,
  IP
> & {
  noTemplate?: boolean
  getLayout?: (page: ReactElement, pageProps: AppProps) => ReactNode
}
type ExtendedAppProps = AppProps & {
  Component: NextPageWithLayout
}

function MyApp({ Component, pageProps }: ExtendedAppProps): JSX.Element {
  const [queryClient] = useState<QueryClient>(new QueryClient())

  const getLayout = useMemo(
    () => Component.getLayout ?? ((page: ReactElement) => page),
    [Component]
  )

  const ComponentWithLayout: React.FC<{
    children: JSX.Element
  }> = ({ children }): ReactNode => {
    return getLayout(children, pageProps)
  }

  return (
    <Refine
      options={{
        reactQuery: {
          clientConfig: queryClient,
        },
    }}
    ...>
          <ComponentWithLayout>
            <Component {...pageProps} />
          </ComponentWithLayout>
</Refine>
```
3. Create some layout
```
const Layout: React.FC<{
  children: ReactElement
}> = ({ children }) => {
  const queryClient = useQueryClient()
  return (
    <div>{children}</div>
  )
}
```
4. Create page with layout
```
Page.getLayout = (page: ReactElement, pageProps: AppProps) => (
    <Layout>
      {page}
    </Layout>
)
5. Reload the page. The bug happen during the hard refresh.

### Expected behavior

I guess no error or some explanation about what i have done wrong :-p

### Screenshot

_No response_

### Desktop

""@refinedev/antd"": ""^5.36.2"",
""@refinedev/cli"": ""^2.15.2"",
""@refinedev/core"": ""^4.42.0"",
""@refinedev/hasura"": ""^6.4.6"",
""@refinedev/inferencer"": ""^4.5.12"",
""@refinedev/nextjs-router"": ""^5.5.0"",
""@refinedev/react-hook-form"": ""^4.8.8"",


### Mobile

_No response_

### Additional Context

In the same layout i also have `useInvalidate` but no problem with it...",,
1909732602,4999,"[BUG] Typing issues with TypeScript 5 and tsconfig.json ""moduleResolution"": ""Bundler""","### Describe the bug

If you are using TypeScript 5, there is a new moduleResolution option which is ""Bundler"".
With this setup, when building refine.dev projects using vite, there will be an error message like this:
```
src/App.tsx:6:56 - error TS7016: Could not find a declaration file for module '@refinedev/react-router-v6'. '/node_modules/.pnpm/@refinedev+react-router-v6@4
.5.0_@refinedev+core@4.42.0_@types+react-dom@18.2.7_@types+react@_fwg4v2jhs3hybc3iotfsqx6icq/node_modules/@refinedev/react-router-v6/dist/esm/index.js' implicitly has an 'any' type.
  There are types at '/apps/admin/node_modules/@refinedev/react-router-v6/dist/index.d.ts', but this result could not be resolved when respecting package.json ""exports"". The '@refinedev/react-router-v6' library may need to update its package.json or typings.
```


### Steps To Reproduce

1. Create a new Refine.dev project with vite and TypeScript v5
2. Set tsconfig.json, change moduleResolution to ""Bundler"" and module to ""ESNext""
3. Import @refinedev/react-router-v6 from any file `import routerProvider from '@refinedev/react-router-v6'`
4. Run npm run build

### Expected behavior

Correctly pick up typings for TypeScript 5

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1904436105,4972,"[BUG] Hasura Provide's ""null"" filter is not working with naming-convention: graphql-default","### Describe the bug

Hasura and Hasura Provider can use either ""hasura-default"" or ""graphql-default"" as the naming convention for GraphQL fields.
When using the latter, attempting to retrieve a list with filter `null` and `nnull` will result in a ""Error: field '_is_null' not found in type: ..."" and data retrieval will fail.

The mappings ""null"" and ""nnull"" are defined as ""_is_null"", but if naming-convention: graphql-default is specified, they must be converted to camelCase, i.e. ""_isNull"". 

refs: https://github.com/refinedev/refine/blob/next/packages/hasura/src/utils/generateFilters.ts#L40-L45

### Steps To Reproduce

1. Create a project with the following configuration values.

```
❯ npm create refine-app@latest
✔ Downloaded remote source successfully.
✔ Choose a project template · refine-vite
✔ What would you like to name your project?: · metal-goats-flash
✔ Choose your backend service to connect: · data-provider-hasura
✔ Do you want to use a UI Framework?: · mui
✔ Do you want to add example pages?: · no
✔ Do you need any Authentication logic?: · none
✔ Do you need i18n (Internationalization) support?: · no
✔ Choose a package manager: · npm
```

2. Add namingConvention settings to Hasura Provider(src/App.tsx).

```tsx
  <Refine
-    dataProvider={dataProvider(client)}
+    dataProvider={dataProvider(client, { namingConvention: ""graphql-default"" })} 
```

3. Create a Hasura project for testing and set naming-convention to graphql-default according to the [documentation](https://hasura.io/docs/latest/schema/postgres/naming-convention/).
4. Add an appropriate resource for the list and generate the list display page with inferencer.
5. Add ""null"" or ""nnull"" filters to refine's data hooks（e.g. useList, useOne, useTable,...etc)

```ts
    filters: [
      {
        field: 'fieldName',
        operator: 'null',
        value: true,
      },
    ],
```

6. The above-mentioned bug occurs during data acquisition.

### Expected behavior

- null"" is incorporated into the query as ""_isNull: true"".
- nnull"" is incorporated into the query as ""_isNull: false"".

### Screenshot

![Visual Studio Code at 2023-09-20-17 14 10](https://github.com/refinedev/refine/assets/61409641/d200914e-c170-4c18-80de-bcb5bdeea4d0)


### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1903895834,4970,[BUG] Some MUI Data Grid filter is not working with Hasura Provider,"### Describe the bug

When using MUI's DataGrid and Hasura Provider and selecting 'starts with', 'ends with' or 'is any of' in the DataGrid default filter, I get the 'Operator <SELECTED_OPERATOR_NAME> is not supported' error.

---

Here is my guess for the situation.

The error seems to occur because the Hasura Provider throws an exception when an unsupported filter is specified in the Hasura Provider.
However, the Hasura Provider defines 'starts with' and 'ends with' as filters. 

Therefore, I suspect that this is not a bug specific to Hasura Provider, but a bug in useDataGrid, which provides props to the Data Grid. useDataGrid has a process for converting MUI operators to refine CRUDOperators. However, the conversion target for the three filters above is not implemented here. 

refs: https://github.com/refinedev/refine/blob/next/packages/mui/src/definitions/dataGrid/index.ts#L35-L69

The 'equals', 'isEmpty' and 'isNotEmpty' definitions, which are defined here, and 'contains', which can be referenced directly in the Hasura Provider, work correctly.

The title of this issue assumes that the MUI and Hasura Providers are used, but in reality other DataProviders may not be able to retrieve data correctly, just because they do not generate errors.

### Steps To Reproduce

1. Create MUI × Hasura playground with [refine.dev](https://refine.dev/#playground). (I chose Vite + MUI + Hasura + No Auth)
1. Filter record by one of the operators ""starts with"", ""ends with"", ""is any of"".
1. After a while, an error ""Operator <SELECTED_OPERATOR_NAME> is not supported"" is  occurs.

### Expected behavior

- ""starts with"" behaves as a starts with filter for each Provider.
- ""ends with"" behaves as an ends with filter for each Provider.
- ""is any of"" shall behave as an in filter for each Provider.

### Screenshot

https://github.com/refinedev/refine/assets/61409641/93bbe52d-f164-40ac-82ce-c75d8b390096

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

There is also a bug that the ""is not empty"" filter does not work correctly if ""namingConvention: ""graphql-default"" is specified in the Hasura provider.
However this is a bug on the Hasura provider side, so it has been fixed in another issue. I would like to submit it as a separate issue (This is because `_is_null` cannot be converted correctly as camelCase and the correct query cannot be issued).",,
1903280791,4962,"[BUG] Using different schema for Supabase prevents build, results in error","### Describe the bug

Heya, I'm having trouble trying to use different table schema using Supabase for the template refine project
```ts
// utility/supabaseClient.ts
export const supabaseClient = createClient(SUPABASE_URL, SUPABASE_KEY, {
    db: {
// problematic part vv
        schema: ""custom"",
    },
    auth: {
        persistSession: true,
    },
});
```

That exact code results in the following error.

```sh

22:08:57.278    Executing user command: npm run build
22:08:57.892    
22:08:57.892    > data-provider-supabase@3.25.0 build
22:08:57.892    > tsc && refine build
22:08:57.892    
22:09:02.920    src/App.tsx(328,48): error TS2345: Argument of type 'SupabaseClient<any, ""custom"", any>' is not assignable to parameter of type 'SupabaseClient<any, ""public"", any>'.
22:09:02.921      Type '""custom""' is not assignable to type '""public""'.
22:09:02.921    src/App.tsx(329,48): error TS2345: Argument of type 'SupabaseClient<any, ""custom"", any>' is not assignable to parameter of type 'SupabaseClient<any, ""public"", any>'.
22:09:02.967    Failed: build command exited with code: 2
22:09:03.827    Failed: error occurred while running build command
```

### Steps To Reproduce

1. Get the Supabase refine template
2. Change supabaseClient options schema from ""public"" to anything else
3. `npm run build`
4. Error

### Expected behavior

works

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1886150742,4921,[BUG] New project generated by create-refine-app fails to start with pnpm,"### Describe the bug

After running `pnpm create refine-app@latest` for the first time, it generates a project, but then `pnpm dev` fails with:

```
✘ [ERROR] No matching export in ""node_modules/.pnpm/@tabler+icons@1.35.0_react-dom@18.0.0_react@18.0.0/node_modules/@tabler/icons/icons-react/dist/index.esm.js"" for import ""IconFileExport""

    node_modules/.pnpm/@refinedev+mantine@2.5.0_@emotion+react@11.8.2_@mantine+core@5.10.4_@mantine+form@5.10.4_@man_weaus3jy4gluisabrak4qaipqu/node_modules/@refinedev/mantine/dist/esm/index.js:1:12049:
      1 │ ...om""@mantine/core"";import{IconFileExport as Nt}from""@tabler/icons...
        ╵                             ~~~~~~~~~~~~~~

✘ [ERROR] No matching export in ""node_modules/.pnpm/@tabler+icons@1.35.0_react-dom@18.0.0_react@18.0.0/node_modules/@tabler/icons/icons-react/dist/index.esm.js"" for import ""IconFileImport""

    node_modules/.pnpm/@refinedev+mantine@2.5.0_@emotion+react@11.8.2_@mantine+core@5.10.4_@mantine+form@5.10.4_@man_weaus3jy4gluisabrak4qaipqu/node_modules/@refinedev/mantine/dist/esm/index.js:1:14772:
      1 │ ...om""@mantine/core"";import{IconFileImport as jt}from""@tabler/icons...
        ╵                             ~~~~~~~~~~~~~~

```

Note that replacing `pnpm` with `npm` does **not** fail, so the problem seems to be limited to pnpm.



### Steps To Reproduce

Run `pnpm create refine-app@latest`, selecting:

- Vite
- Hasura
- Mantine or Chakra (I haven't tested other options)
- Yes (for example page)
- Custom (for auth provider)
- Yes or No (for i18n support, I've tested both)
- pNpm (npm works correctly)

Then `cd` into the new directory and run `pnpm dev`

### Expected behavior

The app should start correctly.

### Screenshot

_No response_

### Desktop

- OS: MacOS 13.4.1
- Node: 18.17.1
- pnpm: 8.6.2

### Mobile

_No response_

### Additional Context

_No response_",,
1881026774,4910,[BUG] Dependencies not updated by Playground,"### Describe the bug

I did follow instructions in by https://refine.dev/#playground to download custom template but found that dependencies is not updated as below:
```shell
WARN  Issues with peer dependencies found
.
├─┬ @refinedev/cli 2.7.4
│ ├─┬ ink 3.2.0
│ │ └─┬ react-reconciler 0.26.2
│ │   └── ✕ unmet peer react@^17.0.2: found 18.0.0
│ └─┬ ink-markdown 1.0.1
│   └─┬ marked-terminal 4.2.0
│     └── ✕ unmet peer marked@""^1.0.0 || ^2.0.0"": found 0.8.2
├─┬ @refinedev/kbar 1.1.2
│ └─┬ kbar 0.1.0-beta.43
│   └─┬ react-virtual 2.10.4
│     └── ✕ unmet peer react@""^16.6.3 || ^17.0.0"": found 18.0.0
└─┬ @auth0/auth0-react 1.5.0
  ├── ✕ unmet peer react@""^16.11.0 || ^17"": found 18.0.0
  └── ✕ unmet peer react-dom@""^16.11.0 || ^17"": found 18.0.0
```

So I just run `pnpm update` then below appeared:
```shell
 $ pnpm update
 WARN  deprecated i18next-xhr-backend@3.2.2: replaced by i18next-http-backend
 WARN  deprecated @babel/plugin-proposal-class-properties@7.18.6: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-class-properties instead.
 WARN  deprecated @babel/plugin-proposal-nullish-coalescing-operator@7.18.6: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-nullish-coalescing-operator instead.
 WARN  deprecated @babel/plugin-proposal-optional-chaining@7.21.0: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-optional-chaining instead.
 WARN  deprecated source-map-resolve@0.5.3: See https://github.com/lydell/source-map-resolve#deprecated
 WARN  deprecated source-map-url@0.4.1: See https://github.com/lydell/source-map-url#deprecated
 WARN  deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated
 WARN  deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated
Packages: +84 -94
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-----------------------------------------------------------------------
Progress: resolved 833, reused 787, downloaded 24, added 84, done

dependencies:
- @auth0/auth0-react 1.5.0
+ @auth0/auth0-react 1.12.1 (2.2.1 is available)
- @emotion/react 11.8.2
+ @emotion/react 11.11.1
- @emotion/styled 11.8.1
+ @emotion/styled 11.11.0
- @mui/icons-material 5.8.3
+ @mui/icons-material 5.14.7
- @mui/lab 5.0.0-alpha.85
+ @mui/lab 5.0.0-alpha.142
- @mui/material 5.8.6
+ @mui/material 5.14.7
- @mui/x-data-grid 6.6.0
+ @mui/x-data-grid 6.12.1
- @refinedev/cli 2.7.4
+ @refinedev/cli 2.9.0
- @refinedev/core 4.28.2
+ @refinedev/core 4.36.2
- @refinedev/inferencer 4.3.2
+ @refinedev/inferencer 4.5.4
- @refinedev/kbar 1.1.2
+ @refinedev/kbar 1.3.0
- @refinedev/mui 5.0.0
+ @refinedev/mui 5.13.4
- @refinedev/react-hook-form 4.1.2
+ @refinedev/react-hook-form 4.8.2
- @refinedev/react-router-v6 4.1.0
+ @refinedev/react-router-v6 4.5.0
- @refinedev/simple-rest 4.0.0
+ @refinedev/simple-rest 4.5.0
- i18next 20.1.0
+ i18next 20.6.1 (23.4.6 is available)
- i18next-browser-languagedetector 6.1.1
+ i18next-browser-languagedetector 6.1.8 (7.1.0 is available)
- react 18.0.0
+ react 18.2.0
- react-dom 18.0.0
+ react-dom 18.2.0
- react-hook-form 7.30.0
+ react-hook-form 7.46.1
- react-i18next 11.8.11
+ react-i18next 11.18.6 (13.2.2 is available)
- react-router-dom 6.8.1
+ react-router-dom 6.15.0

devDependencies:
- @types/node 18.16.2
+ @types/node 18.17.14 (20.5.9 is available)
- @types/react 18.0.0
+ @types/react 18.2.21
- @types/react-dom 18.0.0
+ @types/react-dom 18.2.7
- @typescript-eslint/eslint-plugin 5.57.1
+ @typescript-eslint/eslint-plugin 5.62.0 (6.6.0 is available)
- @typescript-eslint/parser 5.57.1
+ @typescript-eslint/parser 5.62.0 (6.6.0 is available)
- @vitejs/plugin-react 4.0.0
+ @vitejs/plugin-react 4.0.4
- eslint 8.38.0
+ eslint 8.48.0
- eslint-plugin-react-refresh 0.3.4
+ eslint-plugin-react-refresh 0.3.5 (0.4.3 is available)
- typescript 4.7.4
+ typescript 4.9.5 (5.2.2 is available)
- vite 4.3.1
+ vite 4.4.9

 WARN  Issues with peer dependencies found
.
├─┬ @refinedev/cli 2.9.0
│ ├─┬ ink 3.2.0
│ │ └─┬ react-reconciler 0.26.2
│ │   └── ✕ unmet peer react@^17.0.2: found 18.2.0
│ └─┬ ink-markdown 1.0.1
│   └─┬ marked-terminal 4.2.0
│     └── ✕ unmet peer marked@""^1.0.0 || ^2.0.0"": found 0.8.2
└─┬ @refinedev/kbar 1.3.0
  └─┬ kbar 0.1.0-beta.43
    └─┬ react-virtual 2.10.4
      └── ✕ unmet peer react@""^16.6.3 || ^17.0.0"": found 18.2.0

The integrity of 3063 files was checked. This might have caused installation to take longer.
Done in 31.1s

```

### Steps To Reproduce

Follow https://refine.dev/#playground

### Expected behavior

Expected that all dependencies are updated

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1878299409,4897,[BUG] type error when implementing `DataProvider`,"### Describe the bug

I'm not sure if this is technically a bug, but I'm getting a [TS2322](https://stackoverflow.com/questions/56505560/how-to-fix-ts2322-could-be-instantiated-with-a-different-subtype-of-constraint?noredirect=1&lq=1) error when implementing DataProvider. 

```typescript
export const dataProvider: DataProvider = {
  getList: async (params: { resource: string }) => {
    return {
      data: [{ name: 'tom' }], // This seems valid but throws TS2322 error.
      total: 3,
    };
  },
}
```
<img width=""581"" alt=""스크린샷 2023-09-02 오전 11 49 29"" src=""https://github.com/refinedev/refine/assets/5436405/15ef03c1-1d94-4f66-8570-d31e05e9b581"">


https://github.com/refinedev/refine/blob/9d4b4b3776b4e1dd90e1719e4e5d3b624dd197f3/packages/core/src/contexts/data/IDataContext.ts#L137-L158
Can we remove the generics from the DataProvider type declaration and simply change the return type to BaseRecord?

### Steps To Reproduce

Please check `getList` method in below project:
https://stackblitz.com/edit/stackblitz-starters-pzgyse?file=src%2FdataProvider.tsx

### Expected behavior

It would be nice if the above implementation didn't throw an error.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1862821648,4852,[BUG] Inaccessible recourses (unautherized via AccessControlProvider) still show up on sider,"### Describe the bug

in the doucmentation it is stated 
Sider is integrated, which means that unaccessible resources won't appear in the sider menu. 

but it does unless i manually hide it through meta:{hide} property


### Steps To Reproduce

i have this basic AccessControlProvider

```
export const accessControlProvider : AccessControlProvider= {
    can: async ({ resource, action, params }) => {
        const roles = (await authProvider.getPermissions?.() as string[])||[];
        // console.log(roles, resource)
        if (resource === ""User"") {
            return {
                can: roles.includes('admin'),
                reason: ""Unauthorized"",
            };
        }

        return { can: true };
    },
    options: {
        buttons: {
            enableAccessControl: true,
            hideIfUnauthorized: true,
        },
    },

}
```


### Expected behavior

this should effectively hide Users from sider menu when role is not admin. since can is false when the action is list (in fact in my code its always false for non admin users) 

when i go to users route (click on the menu item) it correctly says unauthorized so the provider is working correctly but it just wont hide User from sider. 


### Screenshot

![image](https://github.com/refinedev/refine/assets/6717001/ba52cb86-fd83-4b6f-b19b-c55766e87c7c)

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

i updated to the latest refine version 4.34 but the problem is not resolved ",,
1857766745,4840,[BUG] `deleteOne` from `mutateDelete` Function Not Invoked Correctly in List View When Using Specific Resource Name,"### Describe the bug

When attempting to delete a specific resource using the `mutateDelete `function in refine, the associated `deleteOne `function is not being called with the correct resource name. However, when passing random gibberish into the resource name for `mutateDelete`, it does invoke the `deleteOne `function, indicating unexpected behavior.

### Steps To Reproduce

1. Set up a list view with column actions allowing deletion of a specific row.
2. Configure the `deleteOne `function in the `dataProvider` (custom dataProvider).
3. Attempt to delete a row using the delete action and observe that the `deleteOne `function is not called (also observer errors in console)
4. Pass random gibberish as the resource name in `mutateDelete `and observe that the `deleteOne `function is called.

### Expected behavior

The `deleteOne` function should be called with the correct resource name when attempting to delete a specific row.

### Screenshot

The `deleteOne `function is not called with the correct resource name, but instead appears to be invoked when passing random gibberish as the resource name.

### Desktop

- Windows 11
- Chrome
- Version 115.0.5790.171 (Official Build) (64-bit)
- used custom dataProvider (pretty standard stuff from the docs, just really added axios interceptors to add custom auth headers on all requests, this works fine)
- used custom authProvider (made it to work with AWS Amplify Auth library so I can use AWS Cognito for auth)

### Mobile

_No response_

### Additional Context

Here is my code for my App.tsx:
```
import CorporateFareIcon from ""@mui/icons-material/CorporateFare"";
import Dashboard from ""@mui/icons-material/Dashboard"";
import CssBaseline from ""@mui/material/CssBaseline"";
import GlobalStyles from ""@mui/material/GlobalStyles"";
import { Authenticated, Refine } from ""@refinedev/core"";
import { KBarProvider } from ""@refinedev/kbar"";
import { ErrorComponent, RefineSnackbarProvider, ThemedLayoutV2, notificationProvider } from ""@refinedev/mui"";
import routerProvider, { CatchAllNavigate, DocumentTitleHandler, NavigateToResource, UnsavedChangesNotifier } from ""@refinedev/react-router-v6"";
import { useTranslation } from ""react-i18next"";
import { BrowserRouter, Outlet, Route, Routes } from ""react-router-dom"";

import { authProvider } from ""./authProvider"";
import { Header, Title } from ""./components"";
import { ColorModeContextProvider } from ""./contexts"";
import { DashboardPage } from ""./pages/dashboard"";

import config from ""./config"";
import { dataProvider } from ""./dataProvider"";
import { Login } from ""./pages/auth/login"";
import { OrganizationCreate } from ""./pages/organizations/create"";
import { OrganizationEdit } from ""./pages/organizations/edit"";
import { OrganizationList } from ""./pages/organizations/list"";

const API_URL = config.apiGateway.URL;

const App: React.FC = () => {
  const { t, i18n } = useTranslation();
  const i18nProvider = {
    translate: (key: string, params: object) => t(key, params),
    changeLocale: (lang: string) => i18n.changeLanguage(lang),
    getLocale: () => i18n.language,
  };

  return (
    <BrowserRouter>
      <KBarProvider>
        <ColorModeContextProvider>
          <CssBaseline />
          <GlobalStyles styles={{ html: { WebkitFontSmoothing: ""auto"" } }} />
          <RefineSnackbarProvider>
            <Refine
              routerProvider={routerProvider}
              dataProvider={dataProvider(API_URL)}
              authProvider={authProvider}
              i18nProvider={i18nProvider}
              options={{
                syncWithLocation: true,
                warnWhenUnsavedChanges: true,
              }}
              notificationProvider={notificationProvider}
              resources={[
                {
                  name: ""dashboard"",
                  list: ""/"",
                  meta: {
                    label: ""Dashboard"",
                    icon: <Dashboard />,
                  },
                },
                {
                  name: ""organizations"",
                  list: ""/organizations"",
                  create: ""/organizations/create"",
                  edit: ""/organizations/edit/:id"",
                  meta: {
                    label: ""Organizations"",
                    icon: <CorporateFareIcon />,
                    canDelete: true,
                  },
                },
              ]}
            >
              <Routes>
                <Route
                  element={
                    <Authenticated fallback={<CatchAllNavigate to=""/login"" />}>
                      <ThemedLayoutV2 Header={Header} Title={Title}>
                        <Outlet />
                      </ThemedLayoutV2>
                    </Authenticated>
                  }
                >
                  <Route index element={<DashboardPage />} />
                  <Route path=""/organizations"">
                    <Route index element={<OrganizationList />} />
                    <Route path=""create"" element={<OrganizationCreate />} />
                    <Route path=""edit/:id"" element={<OrganizationEdit />} />
                  </Route>
                </Route>

                <Route
                  element={
                    <Authenticated fallback={<Outlet />}>
                      <NavigateToResource resource=""dashboard"" />
                    </Authenticated>
                  }
                >
                  <Route path=""/login"" element={<Login />} />
                </Route>

                <Route
                  element={
                    <Authenticated>
                      <ThemedLayoutV2 Header={Header} Title={Title}>
                        <Outlet />
                      </ThemedLayoutV2>
                    </Authenticated>
                  }
                >
                  <Route path=""*"" element={<ErrorComponent />} />
                </Route>
              </Routes>
              <UnsavedChangesNotifier />
              <DocumentTitleHandler />
            </Refine>
          </RefineSnackbarProvider>
        </ColorModeContextProvider>
      </KBarProvider>
    </BrowserRouter>
  );
};

export default App;

```

Here is my code for my list.index for my organizations resource:
```
import { EditOutlined } from ""@mui/icons-material"";
import DeleteOutlineIcon from ""@mui/icons-material/DeleteOutline"";
import { CircularProgress } from ""@mui/material"";
import { DataGrid, GridActionsCellItem, GridColDef } from ""@mui/x-data-grid"";
import { BaseRecord, IResourceComponentsProps, useDelete, useInfiniteList, useNavigation, useTranslate } from ""@refinedev/core"";
import { List, useDataGrid } from ""@refinedev/mui"";
import React from ""react"";
import { IOrganization } from ""../../interfaces"";

export const OrganizationList: React.FC<IResourceComponentsProps> = () => {
  const { dataGridProps } = useDataGrid();
  const { edit } = useNavigation();
  const { mutate: mutateDelete } = useDelete();
  const t = useTranslate();

  const { data, error, hasNextPage, isLoading, fetchNextPage, isFetchingNextPage } = useInfiniteList<IOrganization>({
    resource: ""organizations"",
  });

  if (isLoading) {
    <CircularProgress />;
  }

  if (error) {
    return <div>{error.message}</div>;
  }

  const allPages = (data?.pages ?? []).map((page) => page.data).reduce((acc, val) => acc.concat(val), [] as BaseRecord[]);
  // so this basically takes the data from the pages and puts it into one array
  // we need to add an id to the data so that the data grid can use it
  // we can do this by using the map function
  const mappedPages = allPages.map((page) => ({
    ...page,
    id: page.orgId,
  }));

  const columns = React.useMemo<GridColDef[]>(
    () => [
      {
        field: ""name"",
        flex: 1,
        headerName: ""name"",
        minWidth: 200,
      },
      {
        field: ""desc"",
        flex: 1,
        headerName: ""Description"",
        minWidth: 250,
      },
      {
        field: ""actions"",
        headerName: t(""table.actions""),
        type: ""actions"",
        getActions: ({ row }) => [
          <GridActionsCellItem key={1} label={t(""buttons.edit"")} icon={<EditOutlined />} showInMenu onClick={() => edit(""organizations"", row.id)} />,
          <GridActionsCellItem
            key={2}
            label={t(""buttons.delete"")}
            icon={<DeleteOutlineIcon />}
            showInMenu
            onClick={() => {
              console.log(""delete"", row);
              mutateDelete({
                resource: ""randomGibberish_thatshouldntwork"",
                id: row.id,
                mutationMode: ""undoable"",
              });
            }}
          />,
        ],
      },
    ],
    [data]
  );

  return (
    <List>
      <DataGrid {...dataGridProps} columns={columns} autoHeight pagination={true} rows={mappedPages} />
    </List>
  );
};
```

Here is my code for my dataProvider.tsx:
```
import { CrudFilters, DataProvider, HttpError } from ""@refinedev/core"";
import { mapOperator, stringify } from ""@refinedev/simple-rest"";
import axios, { AxiosRequestConfig } from ""axios"";

// Error handling with axios interceptors
const axiosInstance = axios.create();

axiosInstance.interceptors.request.use((request: AxiosRequestConfig) => {
  const token = localStorage.getItem(""accessToken"");
  if (request.headers) {
    request.headers[""Authorization""] = `Bearer ${token}`;
  } else {
    request.headers = {
      ""Content-Type"": ""application/json; charset=utf-8"",
      Accept: ""application/json"",
      Authorization: `Bearer ${token}`,
    };
  }
  return request;
});

axiosInstance.interceptors.response.use(
  (response) => {
    return response;
  },
  (error) => {
    const customError: HttpError = {
      ...error,
      message: error.response?.data?.message,
      statusCode: error.response?.status,
    };

    return Promise.reject(customError);
  }
);

const generateFilters = (filters?: CrudFilters) => {
  const queryFilters: { [key: string]: string } = {};

  filters?.map((filter): void => {
    if (""field"" in filter) {
      const { field, operator, value } = filter;
      const mappedOperator = mapOperator(operator);
      queryFilters[`${field}${mappedOperator}`] = value;
    }
  });

  return queryFilters;
};

export const dataProvider = (apiUrl: string): DataProvider => ({
  getList: async ({ resource, pagination, sorters, filters }) => {
    console.log(""resource"", resource);
    const url = `${apiUrl}/${resource}`;

    const queryFilters = generateFilters(filters);

    const { data: response, headers } = await axiosInstance.get(`${url}?cursor=${pagination?.current || 0}&${stringify(queryFilters)}`);

    console.log(""DATA FROM LAMBDA"", response);

    // we have a valid response, extract the data from the body
    const cursor = response.body.cursor;
    const data = response.body.data;
    return {
      data,
      total: 0,
      cursor: {
        next: cursor,
        prev: pagination?.current || 0,
      },
    };
  },
  getOne: async ({ resource, id }) => {
    const url = `${apiUrl}/${resource}/${id}`;

    const { data } = await axiosInstance.get(url);
    console.log(""DATA FROM LAMBDA"", data.body);

    return {
      data: data.body,
    };
  },
  create: async ({ resource, variables }) => {
    const url = `${apiUrl}/${resource}/create`;

    const { data } = await axiosInstance.post(url, variables);

    return {
      data,
    };
  },
  update: async ({ resource, id, variables }) => {
    const url = `${apiUrl}/${resource}/${id}`;

    const { data } = await axiosInstance.patch(url, variables);

    return {
      data,
    };
  },
  deleteOne: async ({ resource, id, variables }) => {
    console.log(""DELETE ONE"", resource, id, variables);
    const url = `${apiUrl}/${resource}/${id}`;

    const { data } = await axiosInstance.delete(url, {
      data: variables,
    });

    return {
      data,
    };
  },
  getApiUrl: () => apiUrl,
});
```
",,
1856328316,4839,[BUG]. Loss of TranslationContext after wrapping a three-way package ,"### Describe the bug

Wrapped a third-party library, using @refinedev/core and react-i18next, after installing this third-party library in the project, using useGetLocale, useTranslate and other language package hooks, all failed, but directly using the react-i18next hook, everything is fine!

```
import { useTranslation } from 'react-i18next'
const { t, i18n } = useTranslation()
```

If you apply another hook to the methods such as useGetLocale in the triple library, it works fine, as follows:
```
import {
  I18nProvider, useTranslate as useRTranslation()
  useTranslate as useRTranslate, useGetLocale as useRGTranslate, useGetLocale as useRGTranslate
  
  useSetLocale as useRSetLocale, } from '@refinedev/core'
} from '@refinedev/core'

export const useTranslate = () => {
  return useRTranslate()
}


export const useGetLocale = () => {
  return useRGetLocale()
}

export const useSetLocale = () => { return useRSetLocale() }
  return useRSetLocale()
}
```

### Steps To Reproduce

1. Create a tripartite library that uses and uses react-i18next and @refinedev/core

```
import enTranslation from '.. /locales/en/common.json'
import zhTranslation from '.. /locales/zh/common.json'

i18n
.use(detector)
.use(initReactI18next)
.init({
supportedLngs: ['en', 'zh'],
resources: {
en: {
common: enTranslation,
},
zh: {
common: zhTranslation,
},
},
ns: ['common'],
defaultNS: 'common',
fallbackLng: ['en', 'zh'],
interpolation: {
escapeValue: false, // not needed for react as it escapes by default
},
})

export default i18n
```

```

const { i18n, t } = useTranslation()
const  i18nProvider = {
translate: (key: string, params: object) => t(key, params),
changeLocale: (lang: string) => i18n.changeLanguage(lang),
getLocale: () => i18n.language,
}
const App = (props) => {

return <Refine
  i18nProvider={i18nProvider}
  >
  <Outlet />
  </Refine>
  }
```

2. Install the three-party library in the project

```
import i18n from ""./i18n""

<React.StrictMode>
<React.Suspense fallback='loading'>
<I18nextProvider i18n={i18n}>
<App><MyComp /></App>
</I18nextProvider>
</React.Suspense>
</React.StrictMode>
```

3, used in MyComp, return empty

```
import { useTranslate, useGetLocale, TranslationContext } from '@refinedev/core'

const translationContext = useContext(TranslationContext)
const locale = useGetLocale()
console.log(locale(), translationContext)
```

### Expected behavior

Methods such as useGetLocale should be passed correctly in the above text, just like the useTranslation method.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1848793331,4820,[BUG] missing hooks,"### Describe the bug

I see this import in core/hooks/useSelect
```
import { useList, useMany, useMeta } from ""@hooks"";
```
But useList, useMany folder is missing in core/hooks

### Steps To Reproduce

As above

### Expected behavior

Can see useList and useMany in @hooks

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1846691007,4816,[BUG] @refine/mui list header buttons do not align,"### Describe the bug

When using the `<List>` component with header buttons (like the create button) the buttons horizontal align is inconsistent with the rest of the layout.

The code used is pretty standard:
```jsx
<List>
  <DataGrid
    {...dataGridProps}
    columns={columns}
    disableColumnMenu
    autoHeight
  />
</List>
```

See screenshot attached for the result.


### Steps To Reproduce

I prepared a codesandbox with a very basic example, just navigate to this URL:

https://codesandbox.io/s/refinedev-with-mui-hw2z4d?file=/src/PostList.tsx:540-685

It's a very minimal setup with @refinedev/mui and it's clear that the *Create* button is not aligned in the `PostList` component.

### Expected behavior

The header buttons should have some margin right. If I add that margin manually then everything's ok:

```jsx
<List headerButtons={({ defaultButtons }) => (
  <Stack direction=""row"" gap={2} mr={1}>
    {defaultButtons}
  </Stack>
)}>...</List>
```

### Screenshot

<img width=""725"" alt=""image"" src=""https://github.com/refinedev/refine/assets/14589/76fcb935-9d40-41c5-83bb-98b825de2216"">

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1835961921,4782,[BUG] Redirection after login does not work if async code is used in authProvider check method,"### Describe the bug

When the user logs in, they are redirected to the first resource defined on the refined resources instead of the custom redirect path specified in the login method. This is caused because I am making an API call to verify if the JWT is valid within the check method, which is automatically executed after login. If I remove this call, the redirection occurs as expected. However, I really need to redirect the user based on the API response, as their landing page after a successful login depends on it. Despite trying with async/await and promises callback, I have been unable to solve this problem. For now, I will verify that the token exists in localStorage, but I prefer to avoid this for security reasons.

### Steps To Reproduce

1. use the cli to install refine with authProvider
2. set redirectTo  property on the login method
3. await for a promise within the check method
4. try to login

### Expected behavior

User should be redirected to the custom path specified if it is successfully login

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1834881099,4779,[FEAT] supabase getList count option for performance,"### Is your feature request related to a problem? Please describe.

The supabase `getList` provider method uses the `count=exact` parameter. This makes the query very slow on large tables. As described [here](https://postgrest.org/en/stable/references/api/tables_views.html#exact-count).

### Describe alternatives you've considered

I thought about modifying the supabase's `getList` method. But I think it makes sense to upstream that.

### Additional context

_No response_

### Describe the thing to improve

I added the meta count option.

```diff
diff --git a/packages/supabase/src/dataProvider/index.ts b/packages/supabase/src/dataProvider/index.ts
index e5fdc14319ef..4050c0110786 100644
--- a/packages/supabase/src/dataProvider/index.ts
+++ b/packages/supabase/src/dataProvider/index.ts
@@ -16,7 +16,7 @@ export const dataProvider = (
             const query = supabaseClient
                 .from(resource)
                 .select(meta?.select ?? ""*"", {
-                    count: ""exact"",
+                    count: meta?.count ?? ""exact"",
                 });
 
             if (mode === ""server"") {
```",,
1820597135,4729,[FEAT] Support multi path for same resource,"### Is your feature request related to a problem? Please describe.

I'm new to refine, I want to point multi path to same resource

e.g.

```tsx
export function createCustomerRoutes({prefix}:{prefix:string}): RouteObject[] {
  return [
    {
      element: (
        <Refine
          dataProvider={dataProvider(`${location.origin}/api`)}
          routerProvider={routerProvider}
          resources={[
            {
              name: 'account',
              list: `${prefix}/account`,
              show: `${prefix}/account/:id`,
            },
            {
              name: 'contact',
              list: `${prefix}/contact`,
            },
          ]}
        >
          <Outlet />
        </Refine>
      ),
      children: [
        {
          path: 'account',
          element: <AccountListPage/>,
        },
        {
          path: 'contact',
          element: <div>contact list</div>,
        },
      ],
    },
  ];
}
```

bu this function may called by multi context, Refine should put into top level, but I want to multi path point to same resource

- /svr1/account -> account
- /svr2/account -> account

for different role, they use difference entrypoint.



### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Support multi path for same resource",,
1817304656,4702,[DOC] Wrong symbol used in the date picker doc,"### Documentation issue

![image](https://github.com/refinedev/refine/assets/91601706/ca9105a9-3817-471f-aa67-43172a86da91)


this is not the correct symbol used here and copying this throws error in the code editor.

### Describe the thing to improve

Instead proper single quote must be used.

### Describe the solution (optional)

![image](https://github.com/refinedev/refine/assets/91601706/6ced1bd5-170c-43a2-a00d-8ae1dc84d9eb)
I have already made the change by forking the repo as you can see in the image

Can I create a PR ?",,
1816966287,4701,[FEAT] Why there is only frontend code generated?,"### Is your feature request related to a problem? Please describe.

I chose  NestJS and other frontend frameworks. When I exported the code. I found there only have NextJS code was downloaded. I  was wondering whether I can export the NestJS code. 

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

I hope we can export both frontend and backend code.",,
1816313861,4699,[DOC] Build Problems on Examples for Ant Design Hooks,"### Documentation issue

There are a build problems for Codesandbox examples of the hooks below

- [useDrawerForm](https://refine.dev/docs/api-reference/antd/hooks/form/useDrawerForm/#example)
- [useForm](https://refine.dev/docs/api-reference/antd/hooks/form/useForm/#example)
- [useModalForm](https://refine.dev/docs/api-reference/antd/hooks/form/useModalForm/#example)
- [useStepsForm](https://refine.dev/docs/api-reference/antd/hooks/form/useStepsForm/#example)

The error is `Error: Cannot find module '@vitejs/plugin-react'`

### Describe the thing to improve

Adding @vitejs/plugin-react will solve this issue

### Describe the solution (optional)

_No response_",,
1816117238,4698,[FEAT] Support Yarn 2 (specifically Plug n Play),"### Is your feature request related to a problem? Please describe.

I see in the documentation that currently only Yarn 1 is supported by Refine:

![Screenshot 2023-07-21 at 12 56 03 PM](https://github.com/refinedev/refine/assets/3629052/8edfc254-7674-4a22-b2db-f2a57d441d4e)

I tested this a bit myself, and was in fact able to get a Refine project to run using Yarn Modern, but where it breaks down is in attempting to use the Plug 'n' Play. Specifically the first issue is [here](https://github.com/refinedev/refine/blob/next/packages/cli/src/commands/runner/projectScripts.ts), where various `.bin/` scripts that aren't listed as dependencies of the project are imported.

Are there any plans on the roadmap to add support for PNP?

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

I'd like to be able to use Refine in a project that's using yarn Plug n Play!",,
1813604384,4690,[BUG] Can't resolve '@ant-design/icons/lib/icons/createFromIconfontCN' - Pro Layout,"### Describe the bug

create project https://refine.new/
project https://refine.new/api/.refine/d/mqPo7c22Bxv2LfZ
React Platform
Next.js

UI Framework
Ant Design

Backend
Strapi

Authentication
Strapi



./node_modules/@ant-design/pro-layout/es/components/SiderMenu/BaseMenu.js:7:0
Module not found: Can't resolve '@ant-design/icons/lib/icons/createFromIconfontCN'

https://nextjs.org/docs/messages/module-not-found

Import trace for requested module:
./node_modules/@ant-design/pro-layout/es/components/TopNavHeader/index.js
./node_modules/@ant-design/pro-layout/es/index.js
./node_modules/@refinedev/antd/dist/esm/index.js
./pages/_app.tsx

and not work dark theme

### Steps To Reproduce

create project https://refine.new/

React Platform
Next.js

UI Framework
Ant Design

Backend
Strapi

Authentication
Strapi

### Expected behavior

work project

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1796469258,4651,"[BUG] Fresh project -- app-icon component cause build error, antd causes runtime error (remix, antd, rest, google)","### Describe the bug

1. Using either refine.new or the create-refine-app, without modifying any code, the new project created has the following runtime error in the browser, with a few additional errors in the browser console, which are attached:

`TypeError: Cannot read properties of null (reading 'firstChild')
    at injectCSS (http://localhost:3000/build/_shared/chunk-DOI7WL5K.js:14967:30)
    at syncRealContainer (http://localhost:3000/build/_shared/chunk-DOI7WL5K.js:15002:28)
    at updateCSS (http://localhost:3000/build/_shared/chunk-DOI7WL5K.js:15011:3)
    at http://localhost:3000/build/_shared/chunk-DOI7WL5K.js:15919:22
    at http://localhost:3000/build/_shared/chunk-DOI7WL5K.js:15217:67
    at http://localhost:3000/build/_shared/chunk-DOI7WL5K.js:15160:5
    at commitHookEffectListMount (http://localhost:3000/build/_shared/chunk-GY5AQWTY.js:16904:34)
    at commitMutationEffectsOnFiber (http://localhost:3000/build/_shared/chunk-GY5AQWTY.js:17700:19)
    at recursivelyTraverseMutationEffects (http://localhost:3000/build/_shared/chunk-GY5AQWTY.js:17681:15)
    at commitMutationEffectsOnFiber (http://localhost:3000/build/_shared/chunk-GY5AQWTY.js:17695:15)`

2. Using refine.new or adding example pages to create-refine-app, creates the 'app-icon' component, which uses 'fill-rule' and 'clip-rule', instead of the React versions of these properties 'fillRule' and 'clipRule'. Upon modifying these, however, the project builds properly (but still has the above runtime error).


### Steps To Reproduce

1. create a refine project with create-refine-app or refine.new (both have the same problem), with the following settings
`~/refine % npm create refine-app@latest
Need to install the following packages:
  create-refine-app@1.11.0
Ok to proceed? (y) y
✔ Downloaded remote source successfully.
✔ Choose a project template · refine-remix
✔ What would you like to name your project?: · refine-template
✔ Choose your backend service to connect: · data-provider-custom-json-rest
✔ Do you want to use a UI Framework?: · antd
✔ Do you want to add example pages?: · no
✔ Do you need any Authentication logic?: · auth-provider-google
✔ Choose a package manager: · yarn`
Note, at this point, I'm already getting warnings about deprecations and peer dependency issues (below), but no outright errors. 
`warning @refinedev/cli > jscodeshift > micromatch > snapdragon > source-map-reso
lve@0.5.3: See https://github.com/lydell/source-map-resolve#deprecated
warning @refinedev/cli > jscodeshift > micromatch > snapdragon > source-map-reso
warning @refinedev/cli > jscodeshift > micromatch > snapdragon > source-map-reso
lve@0.5.3: See https://github.com/lydell/source-map-resolve#deprecated
warning @refinedev/cli > jscodeshift > micromatch > snapdragon > source-map-reso
lve > urix@0.1.0: Please see https://github.com/lydell/urix#deprecated
warning @refinedev/cli > jscodeshift > micromatch > snapdragon > source-map-reso
lve > resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated
warning @refinedev/cli > jscodeshift > micromatch > snapdragon > source-map-reso
lve > source-map-url@0.4.1: See https://github.com/lydell/source-map-url#depreca
ted
warning @remix-run/dev > cacache > @npmcli/move-file@1.1.2: This functionality h
as been moved to @npmcli/fs
warning ""@refinedev/cli > jscodeshift@0.13.1"" has unmet peer dependency ""@babel/
preset-env@^7.1.6"".
warning ""@refinedev/cli > ink-markdown > marked-terminal@4.2.0"" has incorrect pe
er dependency ""marked@^1.0.0 || ^2.0.0"".
warning ""@refinedev/cli > ink > react-reconciler@0.26.2"" has incorrect peer depe
`
2. cd refine-template
3. yarn dev
4. Open either localhost or the assigned IP at port 3000. It may start to render the page, but almost immediately throws a type error on whatever is calling 'firstChild'.

### Expected behavior

The app should run the out of the box program without any errors. 

### Screenshot

<img width=""682"" alt=""image"" src=""https://github.com/refinedev/refine/assets/54201747/3943e75f-8b58-475e-af82-7faa900a64d8"">

<img width=""677"" alt=""image"" src=""https://github.com/refinedev/refine/assets/54201747/d1c301ad-87ba-4b00-94e3-f925c8d7db6a"">


### Desktop

- OS: macOS Ventura 13.4
- Browser: chrome
- Version: 114.0.5735.133 (Official Build) (arm64)
- Used data provider: Rest API

### Mobile

_No response_

### Additional Context

I did a bit of digging and the problem looks like it starts in rc-util/es/DOM/dynamicCSS.js (antd dependency) in the getContainer(options) function, where there may be a race condition. If you log out options and document, both are defined, but document.body and document.querySelector('head') are both undefined. 

`function getContainer(option) {
  console.log('getContainer option', option)
  if (option.attachTo) {
    return option.attachTo;
  }
  var head = document.querySelector('head');
  console.log('getContainer head', head)
  console.log('getContainer document.body', document.body)
  console.log('document', document)
  return head || document.body;
}`

double returns:  
<img width=""675"" alt=""image"" src=""https://github.com/refinedev/refine/assets/54201747/9c1e7683-b2a5-4b63-b512-8481f28b6c38"">

I can also bring this up to antd's issue board, if this is better suited there, but I'm hoping this is a matter of getting something to load inside a useEffect. 


P.S.
There looks like there's a known issue with rc-util and antd ([see here](https://github.com/react-component/util/pull/114)) that had been resolved with a versions of rc-util from 2020. It's very similar issue, but dealt with a getContainer function that was returning null somewhere else. I did a quick double check, and everything is running on latest right now (antd@5.6.4 and rc-util@5.34.1). There was also an [antd issue](https://github.com/ant-design/ant-design/issues/169) on it like 8 years ago, but the solution didn't seem to help. ",,
1795499482,4649,[FEAT] Toggle off automatic real-time message publishing with Refine hooks on the client side,"### Is your feature request related to a problem? Please describe.

Just a suggestion, there should be a way to shut off automatically publishing a message with hooks when using the live provider. 

`<Refine
     liveProvider={liveProvider(ablyClient)}
     ....
/>`

Right now, useUpdate and many other supported hooks will automatically publish a message when triggered. Developers sometimes only publish messages on the server side and keep the client to only receiving those messages. 


### Describe alternatives you've considered

My workaround is to build a custom liveProvider in src/ folder, but it would be great if there is an option you can set under the <Refine> jsx.


### Describe the thing to improve

```
const App: React.FC = () => {
    return (
        <Refine
            liveProvider={liveProvider}
            options={{ liveMode: ""silent"" }}

        />
    );
};
```",,
1789976158,4638,[BUG] Can't resolve antd dependencies,"### Describe the bug

I am getting the following errors when using refine with antd:

```sh
- wait compiling /[...catchAll] (client and server)...
- error ./node_modules/@refinedev/antd/dist/esm/index.js:1:17980
Module not found: Can't resolve 'antd/es/ConfigProvider'
```

### Steps To Reproduce

Run Refine app and import an AntD package in any page.

### Expected behavior

App builds without issues.

### Screenshot

![image](https://github.com/refinedev/refine/assets/44002321/0121d998-fee9-4d43-a8ac-acb033a70374)

### Desktop

""@refinedev/antd"": ""^5.28.0"",
""@refinedev/cli"": ""^2.7.2"",
""@refinedev/core"": ""^4.26.4"",

",,
1788493755,4633,[BUG] Module not found: Can't resolve 'antd/es/TimePicker',"### Describe the bug

This error is thrown for several components which are present inside antd, I've updated the refine version using latest antd version but still facing this issue. Below is my package.json, the error log for reference.
<img width=""1440"" alt=""Screenshot 2023-07-05 at 2 54 37 AM"" src=""https://github.com/refinedev/refine/assets/128123801/c4546a64-57a2-4e4d-8e30-902735dc8487"">
<img width=""1440"" alt=""Screenshot 2023-07-05 at 2 57 08 AM"" src=""https://github.com/refinedev/refine/assets/128123801/5ed3d133-a985-40bf-859f-e9c0c6959247"">


### Steps To Reproduce

1. Run the latest Refine version with antd.

### Expected behavior

The code should run properly

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1788310894,4631,[DOC] MUI change default font family example not working,"### Documentation issue

MUI Theme overriding for typography is not working. fontFamily is not changing

https://refine.dev/docs/api-reference/mui/theming/#overriding-variables

### Describe the thing to improve

For typography override, we need to recreate the theme using `createTheme`

```typescript
const typographyOptions: TypographyVariantsOptions = {
  fontFamily: [
    ""Montserrat"",
    ""-apple-system"",
    ""BlinkMacSystemFont"",
    '""Segoe UI""',
    ""Roboto"",
    '""Helvetica Neue""',
    ""Arial"",
    ""sans-serif"",
    '""Apple Color Emoji""',
    '""Segoe UI Emoji""',
    '""Segoe UI Symbol""',
  ].join("",""),
};

const overridedLightTheme = createTheme({
  palette: RefineThemes.Blue.palette,
  typography: {
    ...typographyOptions,
  },
});
```

### Describe the solution (optional)

_No response_",,
1769206392,4575,[BUG] Inferencer not working as expected,"### Describe the bug

The inferencer with a custom rest-api produces an exception

### Steps To Reproduce

Using the tutorial code with a different rest-api having these two endpoints:
```
// /api/users
[
		{
			""date_joined"": ""2023-06-15T15:48:25"",
			""email"": ""aaaa@aaaa.com"",
			""first_name"": ""aaaaa"",
			""groups"": [
				{
					""id"": 1,
					""name"": ""Group 2"",
					""permissions"": [],
					""resource_uri"": ""/api/v1/groups/1""
				},
				{
					""id"": 4,
					""name"": ""Group 9"",
					""permissions"": [],
					""resource_uri"": ""/api/v1/groups/4""
				}
			],
			""id"": 1,
			""is_active"": true,
			""is_staff"": true,
			""is_superuser"": true,
			""last_login"": null,
			""last_name"": ""bbbb"",
			""resource_uri"": ""/api/v1/users/1"",
			""user_permissions"": [],
			""username"": ""admin""
		}
	]
```
```
// /api/groups
[
		{
			""id"": 3,
			""name"": ""Group 8"",
			""permissions"": [],
			""resource_uri"": ""/api/v1/groups/3""
		},
		{
			""id"": 5,
			""name"": ""Group 12345"",
			""permissions"": [],
			""resource_uri"": ""/api/v1/groups/5""
		},
		{
			""id"": 2,
			""name"": ""Changed from Refine"",
			""permissions"": [],
			""resource_uri"": ""/api/v1/groups/2""
		},
		{
			""id"": 1,
			""name"": ""Group 2"",
			""permissions"": [],
			""resource_uri"": ""/api/v1/groups/1""
		},
		{
			""id"": 4,
			""name"": ""Group 9"",
			""permissions"": [],
			""resource_uri"": ""/api/v1/groups/4""
		}
]
```
**Listing groups works fine but Listing users produces this Exception: **
```
Unhandled Runtime Error
ReferenceError: groupsIsLoading is not defined
```
After checking the Chrome devtools I notice the app tries to perform some unexpected fetch requests like :

- /api/first_names/aaaaa (why would refine try to get this as it's not a relation)
- /api/last_names/bbbb (same here)
- api/groups?id=Group%202 (This should use the value of ""id"" field not the ""name"" field !)
- ...

### Expected behavior

In this case List Inferencer should display the list of users.

### Screenshot

![ssrefine](https://github.com/refinedev/refine/assets/95150308/4e84dfac-aadd-4665-94e8-11e07976720d)


### Desktop

_No response_

### Mobile

_No response_

### Additional Context

Generated code with inferencer :
```typescript
import React from ""react"";
import {
    IResourceComponentsProps,
    BaseRecord,
    useTranslate,
} from ""@refinedev/core"";
import {
    useTable,
    List,
    EditButton,
    ShowButton,
    DeleteButton,
    DateField,
    TagField,
    EmailField,
    BooleanField,
} from ""@refinedev/antd"";
import { Table, Space } from ""antd"";

export const UserList: React.FC<IResourceComponentsProps> = () => {
    const translate = useTranslate();
    const { tableProps } = useTable({
        syncWithLocation: true,
    });

    return (
        <List>
            <Table {...tableProps} rowKey=""id"">
                <Table.Column
                    dataIndex={[""date_joined""]}
                    title={translate(""users.fields.date_joined"")}
                    render={(value: any) => <DateField value={value} />}
                />
                <Table.Column
                    dataIndex={[""email""]}
                    title={translate(""users.fields.email"")}
                    render={(value: any) => <EmailField value={value} />}
                />
                <Table.Column
                    dataIndex=""first_name""
                    title={translate(""users.fields.first_name"")}
                />
                <Table.Column
                    dataIndex=""groups""
                    title={translate(""users.fields.groups"")}
                    render={(value: any[]) =>
                        groupsIsLoading ? (
                            <>Loading...</>
                        ) : (
                            <>
                                {value?.map((item, index) => (
                                    <TagField key={index} value={item} />
                                ))}
                            </>
                        )
                    }
                />
                <Table.Column
                    dataIndex=""id""
                    title={translate(""users.fields.id"")}
                />
                <Table.Column
                    dataIndex={[""is_active""]}
                    title={translate(""users.fields.is_active"")}
                    render={(value: any) => <BooleanField value={value} />}
                />
                <Table.Column
                    dataIndex={[""is_staff""]}
                    title={translate(""users.fields.is_staff"")}
                    render={(value: any) => <BooleanField value={value} />}
                />
                <Table.Column
                    dataIndex={[""is_superuser""]}
                    title={translate(""users.fields.is_superuser"")}
                    render={(value: any) => <BooleanField value={value} />}
                />
                <Table.Column
                    dataIndex=""last_name""
                    title={translate(""users.fields.last_name"")}
                />
                <Table.Column
                    dataIndex=""resource_uri""
                    title={translate(""users.fields.resource_uri"")}
                />

                <Table.Column
                    dataIndex=""username""
                    title={translate(""users.fields.username"")}
                />
                <Table.Column
                    title={translate(""table.actions"")}
                    dataIndex=""actions""
                    render={(_, record: BaseRecord) => (
                        <Space>
                            <EditButton
                                hideText
                                size=""small""
                                recordItemId={record.id}
                            />
                            <ShowButton
                                hideText
                                size=""small""
                                recordItemId={record.id}
                            />
                            <DeleteButton
                                hideText
                                size=""small""
                                recordItemId={record.id}
                            />
                        </Space>
                    )}
                />
            </Table>
        </List>
    );
};
```",,
1768659417,4572,[BUG] TypeError: Cannot read properties of undefined (reading 'map'),"### Describe the bug

When I use hook useSelect with @refinedev/nestjsx-crud I receive error: 
""TypeError: Cannot read properties of undefined (reading 'map')""

I found mistake in dataProvider in method getList. This method return object like

```
    return {
      data: data.data,
      total: data.total,
    };
```
For useList it's okay, but for useSelect need return 
```
    return {
      data: data,
      total: data.total,
    };
```


### Steps To Reproduce

1. yarn create refine-app 
![image](https://github.com/refinedev/refine/assets/59068428/1f66bf75-66e1-4b0e-be30-cc2d34e5d6f8)
2. open file /pages/blog-posts/create/index.tsx and replace code
```
import { GetServerSideProps } from 'next';
import { Create, useForm, useSelect } from '@refinedev/antd';
import { useList } from '@refinedev/core';
import { Form, Input, Select } from 'antd';
import { authProvider } from 'src/authProvider';

export default function BlogPostCreate() {
  const { formProps, saveButtonProps } = useForm<IPost>();
  const { data } = useList<IPost>({
    resource: 'categories',
  });

  const { selectProps: categorySelectProps } = useSelect<IPost>({
    resource: 'categories',
  });

  console.log(
    '🚀 ~ file: index.tsx:17 ~ BlogPostCreate ~ categorySelectProps:',
    categorySelectProps,
  );

  return (
    <Create saveButtonProps={saveButtonProps}>
      <Form {...formProps} layout=""vertical"">
        <Form.Item label=""Title"" name=""title"">
          <Input />
        </Form.Item>
        <Form.Item label=""Status"" name=""status"">
          <Select
            options={[
              {
                label: 'Published',
                value: 'published',
              },
              {
                label: 'Draft',
                value: 'draft',
              },
              {
                label: 'Rejected',
                value: 'rejected',
              },
            ]}
          />
        </Form.Item>
        <Form.Item label=""Category"" name={['category', 'id']}>
          {categorySelectProps && <Select {...categorySelectProps} />}
        </Form.Item>
      </Form>
    </Create>
  );
}

export const getServerSideProps: GetServerSideProps<{}> = async context => {
  const { authenticated, redirectTo } = await authProvider.check(context);

  if (!authenticated) {
    return {
      props: {},
      redirect: {
        destination: `${redirectTo}?to=${encodeURIComponent('/blog-posts')}`,
        permanent: false,
      },
    };
  }

  return {
    props: {},
  };
};
```
3. run app and click on ""Create"" button on blog posts list

### Expected behavior

useSelect should be work

### Screenshot

![image](https://github.com/refinedev/refine/assets/59068428/a72acef8-252a-4af5-9c86-197e9e1117ce)


### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1761797304,4543,[DOC] i18n Provider Section -> i18n trying to fetch translation.json & updating the installation,"### Documentation issue

Currently, i18n is trying to fetch translation.json file in the relative language directory before falling back to the defaultNs.
Can be seen below
<img width=""246"" alt=""refine-lang-error"" src=""https://github.com/refinedev/refine/assets/78694073/09851d1f-6c30-488d-8901-d1a2c2bb0257"">

This is the code thats responsible for it
https://github.com/refinedev/refine/blob/2d48c4e368da1c06f28f7eca36c85b5900dea66a/examples/i18n-react/src/i18n.ts#L6-L17


Another problem that I noticed is that in the docs we only installed 2 packages but missed out on installing **i18next-http-backend** and  **i18next-browser-languagedetector** packages which are then later immediately imported in the next section where we creating the i18n instance:

![image](https://github.com/refinedev/refine/assets/78694073/c1f7f110-4d43-4c71-9118-28333dd2021b)


### Describe the thing to improve

1. For the first issue, Just add the **ns** property and set it to be an array of common namespace that is being used in the
**defaultNs**
2. For the second one, we can just import all the required packages, instead of installing them separately since they are being imported immediately in the next session when creating the i18n instance.

### Describe the solution (optional)

**1.** Just by setting **ns** option to be an array of the namespace that is used in the defaultNs fixes it.  
This is because by default ns is set to [translation](https://www.i18next.com/overview/configuration-options) and it still tries to fetch it before it uses the **defaultNs**

```diff
 i18n.use(Backend) 
     .use(detector) 
     .use(initReactI18next) 
     .init({ 
         supportedLngs: [""en"", ""de""], 
         backend: { 
             loadPath: ""/locales/{{lng}}/{{ns}}.json"", 
         }, 
+       ns: [""common""],
         defaultNS: ""common"", 
         fallbackLng: [""en"", ""de""], 
     }); 

```

**2.** For the second issue we can just install the two packages togather:
```diff
- npm install react-i18next i18next
+ npm install react-i18next i18next i18next-http-backend i18next-browser-languagedetector
```",,
1756098719,4524,[BUG] LiveProvider generates wrong graphql subscription query,"### Describe the bug

When I use the LiveProvider for a graphql subscription from @refinedev/graphql, a query is created starting with ""query"" instead of ""subscription"".

Find documentation about subscription here: https://refine.dev/docs/api-reference/core/providers/live-provider/#creating-a-live-provider-with-graphql-subscriptions

The generateUseListSubscription function uses `gql.query` instead of `gql.subscription`.
https://github.com/refinedev/refine/blob/6fdf9c002c55359a7c6fcd7e03b3ca0698a44996/packages/graphql/src/utils/generateUseListSubscription.ts#L42


### Steps To Reproduce

1. create liveProvider of @refinedev/graphql
2. check ws query

### Expected behavior

![image](https://github.com/refinedev/refine/assets/122349054/adb82b93-a558-497a-bcba-5af74612ef93)


### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1750932619,4497,[BUG] Inferencer relationInfer issue with accessor key,"### Describe the bug

I override the field tags with field **_fieldTransformer_**

```tsx
    {
        key: ""tags"",
        type: ""relation"",
        relation: true,
        multiple: true,
        resource: { name: ""tags"", route: ""/tags"" },
        relationInfer: {
            accessor: ""name"",
        },
        accessor: ""id"",
    },
```

And If the record's tag array does not have any item, the next records on the list does not mapped with the accessor key.

```json
{
  ""id"": 1,
  ""title"": ""1111123dasdasd"",
  ""content"": ""adasdasdasd"",
  ""published"": true,
  ""authorId"": null,
  ""categoryId"": 2,
  ""tags"": [
    
  ],
}

```

![Screenshot 2023-06-10 at 14 29 54](https://github.com/refinedev/refine/assets/53280610/cb0f3a3b-3a7b-461b-a261-2b7608ec9950)


Also on the show page, it says ""not-handled - relation with multiple but no resource""

![Screenshot 2023-06-10 at 14 32 00](https://github.com/refinedev/refine/assets/53280610/9379010c-7d70-49f8-85a3-3a1aa01ea725)


### Steps To Reproduce

To solve this I have made some changes to the file while debugging

.../packages/inferencer/src/inferencers/mui/show.tsx

.../packages/inferencer/src/use-relation-fetch/index.ts

### Expected behavior

When the array of a key does not have any item, it should show empty view.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

- UI Framework: MUI

### Additional Context

_No response_",,
1747835566,4479,[BUG] `useExport` doesn't consume `resource` argument,"### Describe the bug

When using the `useExport` hook the `resource` parameter is not taken into consideration and the default resource name in page is always used.

----
Example: 

`list.tsx page`
```typescript
const { triggerExport } = useExport({
    resource: 'events_data',
    dataProviderName: 'rest',
    onError: (error) => {
      console.log(error);
    },
  });
```

`menu item`
```
    {
      name: 'data_process_logs',
      icon: <Icons.UnorderedListOutlined />,
      list: { component: LogsListPage, path: '/data/logs' },
      meta: {
        label: 'LOG',
      },
    },
```

The generated URL for exporting is always
`http://localhost:5001/data_process_logs?_end=20&_order=desc&_sort=timestamp&_start=0&` no matter what `resource` arg is passed to `useExport`

### Steps To Reproduce

1. Create a page with name `foo`
2. Import the useExport hook
3. Use another `resource` name for the export action, ex. `bar`
4. The generated url contains always `foo`

### Expected behavior

`useExport` hook should take into consideration `resource` arg passed when using it.

```typescript
const { triggerExport } = useExport({
    resource: 'events_data',
    dataProviderName: 'rest',
    onError: (error) => {
      console.log(error);
    },
  });
```

Should generate an url like:
`http://localhost:5001/events_data?_end=20&_order=desc&_sort=timestamp&_start=0&` 

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1737592096,4442,[DOC] One broken link and an extra async keyword in tutorial,"### Documentation issue

One broken link and an extra async on page https://refine.dev/docs/tutorial/understanding-authprovider/create-authprovider/

### Describe the thing to improve

I will open a pull request with the fix

### Describe the solution (optional)

_No response_",,
1736293155,4439,[BUG] Clean install doesn't compile: export 'TranslationContext' (imported as 'lt') was not found in '@refinedev/core' in mui.js,"### Describe the bug

I just set up a refine project and tried to run it without changing anything but it does not compile.
It rather shows this error: 
```
ERROR in ./node_modules/.pnpm/@refinedev+inferencer@3.5.4_@ant-design+icons@5.0.1_@emotion+react@11.8.2_@emotion+styled@11._37j77djiae3777g6ori3tcy35y/node_modules/@refinedev/inferencer/dist/esm/mui.js 1112:15-17
export 'TranslationContext' (imported as 'lt') was not found in '@refinedev/core'
```

### Steps To Reproduce

1. Open terminal
2. Run create refine-app with following command:
3. npm create refine-app@latest client
4. Select following options:
```
✔ Choose a project template · refine-react
✔ What would you like to name your project?: · client
✔ Choose your backend service to connect: · data-provider-custom-json-rest
✔ Do you want to use a UI Framework?: · mui
✔ Do you want to add example pages?: · inferencer
✔ Do you need any Authentication logic?: · auth-provider-google
✔ Do you need i18n (Internationalization) support?: · no
✔ Choose a package manager: · pnpm
✔ Would you mind sending us your choices so that we can improve superplate? · yes
```
5. complete the installation
6. move to project folder and launch it like this `cd client && pnpm dev`

### Expected behavior

Launching the clean new project should compile and run without errors

### Screenshot

Full output below

```
pnpm dev

> client@0.1.0 dev /home/kevin/Projects/refine_dashboard/client
> refine start

(node:11956) [DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE] DeprecationWarning: 'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
(Use `node --trace-deprecation ...` to show where the warning was created)
(node:11956) [DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE] DeprecationWarning: 'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
Starting the development server...

Failed to compile.

Attempted import error: 'TranslationContext' is not exported from '@refinedev/core' (imported as 'lt').
assets by path static/js/*.js 11.6 MiB
  asset static/js/bundle.js 11.6 MiB [emitted] (name: main) 1 related asset
  asset static/js/node_modules_pnpm_web-vitals_1_1_1_node_modules_web-vitals_dist_web-vitals_js.chunk.js 6.78 KiB [emitted] 1 related asset
asset index.html 1.99 KiB [emitted]
asset asset-manifest.json 598 bytes [emitted]
orphan modules 7.49 MiB [orphan] 11261 modules
runtime modules 31.7 KiB 16 modules
cacheable modules 8.88 MiB
  modules by path ./node_modules/.pnpm/ 8.83 MiB 1402 modules
  modules by path ./src/ 46.5 KiB
    modules by path ./src/pages/ 18.5 KiB 11 modules
    modules by path ./src/*.tsx 17.2 KiB
      ./src/index.tsx 1.89 KiB [built] [code generated]
      ./src/App.tsx 15.3 KiB [built] [code generated]
    ./src/reportWebVitals.ts 1.43 KiB [built] [code generated]
    ./src/contexts/color-mode/index.tsx 2.85 KiB [built] [code generated]
    ./src/components/header/index.tsx 5.14 KiB [built] [code generated]
    ./src/utils/parse-jwt.ts 1.36 KiB [built] [code generated]
  ./util.inspect (ignored) 15 bytes [built] [code generated]

WARNING in [eslint] 
src/App.tsx
  Line 4:3:   'WelcomePage' is defined but never used  @typescript-eslint/no-unused-vars
  Line 11:3:  'AuthPage' is defined but never used     @typescript-eslint/no-unused-vars

ERROR in ./node_modules/.pnpm/@refinedev+inferencer@3.5.4_@ant-design+icons@5.0.1_@emotion+react@11.8.2_@emotion+styled@11._37j77djiae3777g6ori3tcy35y/node_modules/@refinedev/inferencer/dist/esm/mui.js 1112:15-17
export 'TranslationContext' (imported as 'lt') was not found in '@refinedev/core' (possible exports: AuthPage, Authenticated, CanAccess, ErrorComponent, GitHubBanner, LayoutWrapper, LoginPage, ReadyPage, Refine, ResourceContext, RouteChangeHandler, UndoableQueue, WelcomePage, createTreeView, file2Base64, getDefaultFilter, getDefaultSortOrder, getNextPageParam, getPreviousPageParam, handleUseParams, importCSVMapper, legacyResourceTransform, matchResourceFromRoute, parseTableParams, parseTableParamsFromQuery, pickNotDeprecated, routeGenerator, setInitialFilters, setInitialSorters, stringifyTableParams, unionFilters, unionSorters, useActiveAuthProvider, useApiUrl, useAuthenticated, useBack, useBreadcrumb, useCan, useCanWithoutCache, useCancelNotification, useCheckError, useCreate, useCreateMany, useCustom, useCustomMutation, useDataProvider, useDelete, useDeleteMany, useExport, useForgotPassword, useForm, useGetIdentity, useGetLocale, useGetToPath, useGo, useHandleNotification, useImport, useInfiniteList, useInvalidate, useIsAuthenticated, useIsExistAuthentication, useLink, useList, useLiveMode, useLog, useLogList, useLogin, useLogout, useMany, useMenu, useModal, useMutationMode, useNavigation, useNotification, useOnError, useOne, useParse, useParsed, usePermissions, usePublish, useRedirectionAfterSubmission, useRefineContext, useRegister, useResource, useResourceSubscription, useResourceWithRoute, useRouterContext, useRouterType, useSelect, useSetLocale, useShow, useSubscription, useSyncWithLocation, useTable, useTitle, useToPath, useTranslate, useUpdate, useUpdateMany, useUpdatePassword, useWarnAboutChange, userFriendlyResourceName)
 @ ./src/pages/blog-posts/show.tsx 4:0-62 7:30-47
 @ ./src/pages/blog-posts/index.ts 6:0-38 6:0-38
 @ ./src/App.tsx 13:0-92 202:50-62 213:50-64 224:50-62 235:50-62
 @ ./src/index.tsx 7:0-24 12:33-36

webpack 5.84.1 compiled with 1 error and 1 warning in 39507 ms
No issues found.
Compiling...
Failed to compile.

Attempted import error: 'TranslationContext' is not exported from '@refinedev/core' (imported as 'lt').
assets by status 6.78 KiB [cached] 1 asset
assets by chunk 11.6 MiB (name: main)
  asset static/js/bundle.js 11.6 MiB [emitted] (name: main) 1 related asset
  asset main.db03048376b87da596b7.hot-update.js 357 bytes [emitted] [immutable] [hmr] (name: main) 1 related asset
assets by path *.json 751 bytes
  asset asset-manifest.json 723 bytes [emitted]
  asset main.db03048376b87da596b7.hot-update.json 28 bytes [emitted] [immutable] [hmr]
asset index.html 1.99 KiB [emitted]
Entrypoint main 11.6 MiB (10.2 MiB) = static/js/bundle.js 11.6 MiB main.db03048376b87da596b7.hot-update.js 357 bytes 2 auxiliary assets
orphan modules 7.49 MiB [orphan] 11258 modules
cached modules 852 KiB [cached] 233 modules
runtime modules 31.7 KiB 16 modules
cacheable modules 8.05 MiB
  modules by path ./node_modules/.pnpm/ 8 MiB 1173 modules
  modules by path ./src/ 46.5 KiB
    modules by path ./src/pages/ 18.5 KiB 11 modules
    modules by path ./src/*.tsx 17.2 KiB
      ./src/index.tsx 1.89 KiB [built]
      ./src/App.tsx 15.3 KiB [built]
    ./src/reportWebVitals.ts 1.43 KiB [built]
    ./src/contexts/color-mode/index.tsx 2.85 KiB [built]
    ./src/components/header/index.tsx 5.14 KiB [built]
    ./src/utils/parse-jwt.ts 1.36 KiB [built]

WARNING in [eslint] 
src/App.tsx
  Line 4:3:   'WelcomePage' is defined but never used  @typescript-eslint/no-unused-vars
  Line 11:3:  'AuthPage' is defined but never used     @typescript-eslint/no-unused-vars

ERROR in ./node_modules/.pnpm/@refinedev+inferencer@3.5.4_@ant-design+icons@5.0.1_@emotion+react@11.8.2_@emotion+styled@11._37j77djiae3777g6ori3tcy35y/node_modules/@refinedev/inferencer/dist/esm/mui.js 1112:15-17
export 'TranslationContext' (imported as 'lt') was not found in '@refinedev/core' (possible exports: AuthPage, Authenticated, CanAccess, ErrorComponent, GitHubBanner, LayoutWrapper, LoginPage, ReadyPage, Refine, ResourceContext, RouteChangeHandler, UndoableQueue, WelcomePage, createTreeView, file2Base64, getDefaultFilter, getDefaultSortOrder, getNextPageParam, getPreviousPageParam, handleUseParams, importCSVMapper, legacyResourceTransform, matchResourceFromRoute, parseTableParams, parseTableParamsFromQuery, pickNotDeprecated, routeGenerator, setInitialFilters, setInitialSorters, stringifyTableParams, unionFilters, unionSorters, useActiveAuthProvider, useApiUrl, useAuthenticated, useBack, useBreadcrumb, useCan, useCanWithoutCache, useCancelNotification, useCheckError, useCreate, useCreateMany, useCustom, useCustomMutation, useDataProvider, useDelete, useDeleteMany, useExport, useForgotPassword, useForm, useGetIdentity, useGetLocale, useGetToPath, useGo, useHandleNotification, useImport, useInfiniteList, useInvalidate, useIsAuthenticated, useIsExistAuthentication, useLink, useList, useLiveMode, useLog, useLogList, useLogin, useLogout, useMany, useMenu, useModal, useMutationMode, useNavigation, useNotification, useOnError, useOne, useParse, useParsed, usePermissions, usePublish, useRedirectionAfterSubmission, useRefineContext, useRegister, useResource, useResourceSubscription, useResourceWithRoute, useRouterContext, useRouterType, useSelect, useSetLocale, useShow, useSubscription, useSyncWithLocation, useTable, useTitle, useToPath, useTranslate, useUpdate, useUpdateMany, useUpdatePassword, useWarnAboutChange, userFriendlyResourceName)
 @ ./src/pages/categories/list.tsx 4:0-62 7:30-47
 @ ./src/pages/categories/index.ts 3:0-38 3:0-38
 @ ./src/App.tsx 14:0-92 253:50-62 264:50-64 275:50-62 286:50-62
 @ ./src/index.tsx 7:0-24 12:33-36

webpack 5.84.1 compiled with 1 error and 1 warning in 32265 ms
No issues found.
```

### Desktop

- OS: Ubuntu 22.04
- Browser: Google Chrome

### Mobile

_No response_

### Additional Context

_No response_",,
1732161613,4420,[BUG] Next 13 app dir router breaks Create and List components navigation,"### Describe the bug

In a Next 13 with app directory, we can't go back from a Create page using the Create component to a List page using the List component.

### Steps To Reproduce

1. Create a refine context in a client component, imports the next app router from `@refinedev/nextjs-router/app`, then provide the client component in the root layout.

2. Create a list and create pages

```ts
'use client'

import { List } from '@refinedev/chakra-ui'

export default async function Page() {
    return (
        <List canCreate resource=""test"">
            test 1
        </List>
    )
}
```
```ts
'use client'

import { List } from '@refinedev/chakra-ui'

export default async function Page() {
    return (
        <Create resource=""test"">
            test 2
        </Create>
    )
}
```

3. Go to the list page and click on the Create button
4. On the Create page, click on the return button
5. The URL will change but not the page content. The page will be stuck.

### Expected behavior

Going  back from a Create page to a List page should not crash the app.

### Desktop

OS: Ubuntu 22.04

```
""next"": ""13.4.4""
""@refinedev/chakra-ui"": ""2.14.2""
""@refinedev/core"": ""4.16.2""
""@refinedev/nextjs-router"": ""5.3.0""
```
",,
1731192628,4414,[BUG] Create refine-app crashing with SAOError ,"### Describe the bug

I am trying to create a refine project with the following command:
`npm create refine-app@latest client`

However, it systematically crashes at the moment of Installing packages with npm with this error:
```
superplate-cli has encountered an error.

If you think this is caused by a bug. Please check out:
https://github.com/pankod/superplate/issues

ERROR SAOError: Failed to install packages in /home/kevin/Projects/refine_dashboard/client
    at ChildProcess.<anonymous> (/home/kevin/.npm/_npx/98c66fac912b1cba/node_modules/sao/dist/chunk.T-GsVNZ1.js:6885:16)
    at ChildProcess.emit (node:events:526:28)
    at maybeClose (node:internal/child_process:1092:16)
    at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5) {
  sao: true
}
```

### Steps To Reproduce

1) Open terminal
2) Run create refine-app with following command: 
`npm create refine-app@latest client`
3) Select following options:
```
✔ Choose a project template · refine-react
✔ What would you like to name your project?: · client
✔ Choose your backend service to connect: · data-provider-custom-json-rest
✔ Do you want to use a UI Framework?: · mui
✔ Do you want to add example pages?: · inferencer
✔ Do you need any Authentication logic?: · auth-provider-google
✔ Do you need i18n (Internationalization) support?: · no
✔ Choose a package manager: · npm
✔ Would you mind sending us your choices so that we can improve superplate? · yes
```
4) Validate choices to proceed with installation

### Expected behavior

It should properly create the project without errors

### Screenshot

```
✔ Downloaded remote source successfully.
✔ Choose a project template · refine-react
✔ What would you like to name your project?: · client
✔ Choose your backend service to connect: · data-provider-custom-json-rest
✔ Do you want to use a UI Framework?: · mui
✔ Do you want to add example pages?: · inferencer
✔ Do you need any Authentication logic?: · auth-provider-google
✔ Do you need i18n (Internationalization) support?: · no
✔ Choose a package manager: · npm
✔ Would you mind sending us your choices so that we can improve superplate? · yes
superplate-cli has encountered an error.

If you think this is caused by a bug. Please check out:
https://github.com/pankod/superplate/issues

ERROR SAOError: Failed to install packages in /home/kevin/Projects/refine_dashboard/client
    at ChildProcess.<anonymous> (/home/kevin/.npm/_npx/98c66fac912b1cba/node_modules/sao/dist/chunk.T-GsVNZ1.js:6885:16)
    at ChildProcess.emit (node:events:526:28)
    at maybeClose (node:internal/child_process:1092:16)
    at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5) {
  sao: true
}
```

### Desktop

- OS: Ubuntu 22.04
- Browser: Google Chrome

### Mobile

_No response_

### Additional Context

_No response_",,
1724889337,4390,[BUG] Inferencer assumes `id` is number,"### Describe the bug

At least for the AntD Inferencers, the `id` is interpolated directly into the id property, seemingly assuming that it is a number:
```tsx
export const ${COMPONENT_NAME}: React.FC<IResourceComponentsProps> = () => {
        const { queryResult } = useShow(${
            isCustomPage
                ? `{ 
                    resource: ""${resource.name}"", 
                    id: ${id}, // <----- HERE
                    ${getMetaProps(
                        resource?.identifier ?? resource?.name,
                        meta,
                        ""getOne"",
                    )}
                }`
```

If one is using UUIDs or any other string-based ids, the Inferencer fails as the string is not properly assigned:

<img width=""467"" alt=""image"" src=""https://github.com/refinedev/refine/assets/44002321/d4caa952-8765-42ca-bbb6-5655f28edf26"">


### Steps To Reproduce

1. Setup a test page with an inferencer.
2. Pass a string as an `id` with either `show` or `edit` actions.
3. Navigate to page and see error.

### Expected behavior

Component is able to fetch the data and render the component fully.

### Screenshot

<img width=""946"" alt=""image"" src=""https://github.com/refinedev/refine/assets/44002321/520f9390-613b-4d19-9e9d-1cab07245c77"">


### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1718968553,4365,[BUG] While creating project with basic `npm create refine-app@latest` command is giving me this error.,"### Describe the bug

Though while running the application using `npm run dev` the application seems to be working fine.
```
node:internal/process/promises:289
            triggerUncaughtException(err, true /* fromPromise */);
            ^
Error [ERR_SOCKET_CONNECTION_TIMEOUT]: Socket connection timeout
    at new NodeError (node:internal/errors:399:5)
    at internalConnectMultiple (node:net:1099:20)
    at Timeout.internalConnectMultipleTimeout (node:net:1638:3)
    at listOnTimeout (node:internal/timers:575:11)
    at process.processTimers (node:internal/timers:514:7) {
  code: 'ERR_SOCKET_CONNECTION_TIMEOUT',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [Function: httpAdapter],
    transformRequest: [ [Function (anonymous)] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: '\r\n',
        DEFAULT_CONTENT_TYPE: 'application/octet-stream'
      }
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'user-agent': 'analytics-node/6.2.0',
      'Content-Length': 704
    },
    auth: { username: 'dNsgapkYciyGCtTCySYcdHG7yTGI6IwV' },
    method: 'post',
    url: 'https://api.segment.io/v1/batch',
    data: '{""batch"":[{""event"":""generate"",""properties"":{""name"":""practise"",""data-provider"":""data-provider-custom-json-rest"",""ui-framework"":""no"",""inferencer"":""no"",""inferencer-headless"":""no"",""auth-provider"":""none"",""i18n-no"":""no"",""i18n-antd"":""no"",""i18n-mui"":""no"",""i18n-mantine"":""no"",""i18n-chakra"":""no"",""npmClient"":""npm"",""type"":""refine-nextjs""},""anonymousId"":""9776c774-4bb1-485e-842d-457ca404eb1c"",""type"":""track"",""context"":{""library"":{""name"":""analytics-node"",""version"":""6.2.0""}},""_metadata"":{""nodeVersion"":""20.2.0""},""timestamp"":""2023-05-22T05:49:22.958Z"",""messageId"":""node-c928545dc057307307d77566bc1e9ffa-d9bd3568-1b5e-4500-97b5-60cc6a401614""}],""timestamp"":""2023-05-22T05:49:22.962Z"",""sentAt"":""2023-05-22T05:49:22.962Z""}',
    'axios-retry': { retryCount: 3, lastRequestTime: 1684734571135 }
  },
  request: <ref *3> Writable {
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: true,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    _events: [Object: null prototype] {
      response: [Function: handleResponse],
      error: [Function: handleRequestError],
      socket: [Function: handleRequestSocket]
    },
    _eventsCount: 3,
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: 10485760,
      protocol: 'https:',
      path: '/v1/batch',
      method: 'POST',
      headers: {
        Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/json',
        'user-agent': 'analytics-node/6.2.0',
        'Content-Length': 704
      },
      agent: undefined,
      agents: { http: undefined, https: undefined },
      auth: 'dNsgapkYciyGCtTCySYcdHG7yTGI6IwV:',
      hostname: 'api.segment.io',
      port: null,
      nativeProtocols: {
        'http:': {
          _connectionListener: [Function: connectionListener],
          METHODS: [
            'ACL',         'BIND',       'CHECKOUT',
            'CONNECT',     'COPY',       'DELETE',
            'GET',         'HEAD',       'LINK',
            'LOCK',        'M-SEARCH',   'MERGE',
            'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
            'MOVE',        'NOTIFY',     'OPTIONS',
            'PATCH',       'POST',       'PROPFIND',
            'PROPPATCH',   'PURGE',      'PUT',
            'REBIND',      'REPORT',     'SEARCH',
            'SOURCE',      'SUBSCRIBE',  'TRACE',
            'UNBIND',      'UNLINK',     'UNLOCK',
            'UNSUBSCRIBE'
          ],
          STATUS_CODES: {
            '100': 'Continue',
            '101': 'Switching Protocols',
            '102': 'Processing',
            '103': 'Early Hints',
            '200': 'OK',
            '201': 'Created',
            '202': 'Accepted',
            '203': 'Non-Authoritative Information',
            '204': 'No Content',
            '205': 'Reset Content',
            '206': 'Partial Content',
            '207': 'Multi-Status',
            '208': 'Already Reported',
            '226': 'IM Used',
            '300': 'Multiple Choices',
            '301': 'Moved Permanently',
            '302': 'Found',
            '303': 'See Other',
            '304': 'Not Modified',
            '305': 'Use Proxy',
            '307': 'Temporary Redirect',
            '308': 'Permanent Redirect',
            '400': 'Bad Request',
            '401': 'Unauthorized',
            '402': 'Payment Required',
            '403': 'Forbidden',
            '404': 'Not Found',
            '405': 'Method Not Allowed',
            '406': 'Not Acceptable',
            '407': 'Proxy Authentication Required',
            '408': 'Request Timeout',
            '409': 'Conflict',
            '410': 'Gone',
            '411': 'Length Required',
            '412': 'Precondition Failed',
            '413': 'Payload Too Large',
            '414': 'URI Too Long',
            '415': 'Unsupported Media Type',
            '416': 'Range Not Satisfiable',
            '417': 'Expectation Failed',
            '418': ""I'm a Teapot"",
            '421': 'Misdirected Request',
            '422': 'Unprocessable Entity',
            '423': 'Locked',
            '424': 'Failed Dependency',
            '425': 'Too Early',
            '426': 'Upgrade Required',
            '428': 'Precondition Required',
            '429': 'Too Many Requests',
            '431': 'Request Header Fields Too Large',
            '451': 'Unavailable For Legal Reasons',
            '500': 'Internal Server Error',
            '501': 'Not Implemented',
            '502': 'Bad Gateway',
            '503': 'Service Unavailable',
            '504': 'Gateway Timeout',
            '505': 'HTTP Version Not Supported',
            '506': 'Variant Also Negotiates',
            '507': 'Insufficient Storage',
            '508': 'Loop Detected',
            '509': 'Bandwidth Limit Exceeded',
            '510': 'Not Extended',
            '511': 'Network Authentication Required'
          },
          Agent: [Function: Agent] { defaultMaxSockets: Infinity },
          ClientRequest: [Function: ClientRequest],
          IncomingMessage: [Function: IncomingMessage],
          OutgoingMessage: [Function: OutgoingMessage],
          Server: [Function: Server],
          ServerResponse: [Function: ServerResponse],
          createServer: [Function: createServer],
          validateHeaderName: [Function: __node_internal_],
          validateHeaderValue: [Function: __node_internal_],
          get: [Function: get],
          request: [Function: request],
          setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
          maxHeaderSize: [Getter],
          globalAgent: [Getter/Setter]
        },
        'https:': {
          Agent: [Function: Agent],
          globalAgent: Agent {
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype],
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype],
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 4,
            maxCachedSessions: 100,
            _sessionCache: [Object],
            [Symbol(kCapture)]: false
          },
          Server: [Function: Server],
          createServer: [Function: createServer],
          get: [Function: get],
          request: [Function: request]
        }
      },
      pathname: '/v1/batch'
    },
    _ended: false,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 704,
    _requestBodyBuffers: [
      {
        data: Buffer(704) [Uint8Array] [
          123,  34,  98,  97, 116,  99, 104,  34,  58,  91, 123,  34,
          101, 118, 101, 110, 116,  34,  58,  34, 103, 101, 110, 101,
          114,  97, 116, 101,  34,  44,  34, 112, 114, 111, 112, 101,
          114, 116, 105, 101, 115,  34,  58, 123,  34, 110,  97, 109,
          101,  34,  58,  34, 112, 114,  97,  99, 116, 105, 115, 101,
           34,  44,  34, 100,  97, 116,  97,  45, 112, 114, 111, 118,
          105, 100, 101, 114,  34,  58,  34, 100,  97, 116,  97,  45,
          112, 114, 111, 118, 105, 100, 101, 114,  45,  99, 117, 115,
          116, 111, 109,  45,
          ... 604 more items
        ],
        encoding: undefined
      }
    ],
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: <ref *1> ClientRequest {
      _events: [Object: null prototype] {
        response: [Function: bound onceWrapper] {
          listener: [Function (anonymous)]
        },
        abort: [Function (anonymous)],
        aborted: [Function (anonymous)],
        connect: [Function (anonymous)],
        error: [Function (anonymous)],
        socket: [Function (anonymous)],
        timeout: [Function (anonymous)]
      },
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 704,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: true,
      _closed: false,
      socket: <ref *2> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: false,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: true,
        _SNICallback: null,
        servername: null,
        alpnProtocol: null,
        authorized: false,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function],
            [Function: onClose],
            [Function: socketCloseListener],
            [Function]
          ],
          end: [ [Function: onConnectEnd], [Function: onReadableStreamEnd] ],
          newListener: [Function: keylogNewListener],
          connect: [ [Function], [Function], [Function] ],
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [ [Function: onTimeout], [Function] ],
          agentRemove: [Function: onRemove],
          error: [Function: socketErrorListener],
          drain: [Function: ondrain]
        },
        _eventsCount: 11,
        connecting: false,
        _hadError: true,
        _parent: null,
        _host: 'api.segment.io',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: true,
          emitClose: false,
          autoDestroy: true,
          destroyed: true,
          errored: Error [ERR_SOCKET_CONNECTION_TIMEOUT]: Socket connection timeout
              at new NodeError (node:internal/errors:399:5)
              at internalConnectMultiple (node:net:1099:20)
              at Timeout.internalConnectMultipleTimeout (node:net:1638:3)
              at listOnTimeout (node:internal/timers:575:11)
              at process.processTimers (node:internal/timers:514:7) {
            code: 'ERR_SOCKET_CONNECTION_TIMEOUT'
          },
          closed: true,
          closeEmitted: true,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: true,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 974,
          writing: true,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: [Function (anonymous)],
          writelen: 974,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 1,
          constructed: true,
          prefinished: false,
          errorEmitted: true,
          emitClose: false,
          autoDestroy: true,
          errored: Error [ERR_SOCKET_CONNECTION_TIMEOUT]: Socket connection timeout
              at new NodeError (node:internal/errors:399:5)
              at internalConnectMultiple (node:net:1099:20)
              at Timeout.internalConnectMultipleTimeout (node:net:1638:3)
              at listOnTimeout (node:internal/timers:575:11)
              at process.processTimers (node:internal/timers:514:7) {
            code: 'ERR_SOCKET_CONNECTION_TIMEOUT'
          },
          closed: true,
          closeEmitted: true,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: [
          {
            chunk: 'POST /v1/batch HTTP/1.1\r\n' +
              'Accept: application/json, text/plain, */*\r\n' +
              'Content-Type: application/json\r\n' +
              'user-agent: analytics-node/6.2.0\r\n' +
              'Content-Length: 704\r\n' +
              'Host: api.segment.io\r\n' +
              'Authorization: Basic ZE5zZ2Fwa1ljaXlHQ3RUQ3lTWWNkSEc3eVRHSTZJd1Y6\r\n' +
              'Connection: keep-alive\r\n' +
              '\r\n',
            encoding: 'latin1',
            callback: [Function: nop]
          },
          {
            chunk: [Buffer [Uint8Array]],
            encoding: 'buffer',
            callback: [Function (anonymous)]
          },
          allBuffers: false
        ],
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        timeout: 5000,
        parser: null,
        _httpMessage: [Circular *1],
        autoSelectFamilyAttemptedAddresses: [
          '52.11.123.128:443',
          '34.208.188.127:443',
          '34.210.22.225:443',
          '54.69.86.105:443',
          '54.188.249.31:443',
          '44.241.251.193:443',
          '44.231.54.55:443',
          '52.24.69.186:443'
        ],
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *2]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: false,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(verified)]: false,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: 14428,
        [Symbol(kHandle)]: null,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 98358,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 14430,
          [Symbol(triggerId)]: 0
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          maxRedirects: 21,
          maxBodyLength: 10485760,
          protocol: 'https:',
          path: null,
          method: 'POST',
          headers: {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/json',
            'user-agent': 'analytics-node/6.2.0',
            'Content-Length': 704
          },
          agent: undefined,
          agents: { http: undefined, https: undefined },
          auth: 'dNsgapkYciyGCtTCySYcdHG7yTGI6IwV:',
          hostname: 'api.segment.io',
          port: 443,
          nativeProtocols: { 'http:': [Object], 'https:': [Object] },
          pathname: '/v1/batch',
          _defaultAgent: Agent {
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype],
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype],
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 4,
            maxCachedSessions: 100,
            _sessionCache: [Object],
            [Symbol(kCapture)]: false
          },
          host: 'api.segment.io',
          keepAlive: true,
          scheduling: 'lifo',
          timeout: 5000,
          noDelay: true,
          servername: 'api.segment.io',
          _agentKey: 'api.segment.io:443:::::::::::::::::::::',
          encoding: null,
          keepAliveInitialDelay: 1000
        }
      },
      _header: 'POST /v1/batch HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'user-agent: analytics-node/6.2.0\r\n' +
        'Content-Length: 704\r\n' +
        'Host: api.segment.io\r\n' +
        'Authorization: Basic ZE5zZ2Fwa1ljaXlHQ3RUQ3lTWWNkSEc3eVRHSTZJd1Y6\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: Agent {
        _events: [Object: null prototype] {
          free: [Function (anonymous)],
          newListener: [Function: maybeEnableKeylog]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object: null prototype] {
          keepAlive: true,
          scheduling: 'lifo',
          timeout: 5000,
          noDelay: true,
          path: null
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {
          'api.segment.io:443:::::::::::::::::::::': [ [TLSSocket], [TLSSocket], [TLSSocket], [TLSSocket] ]
        },
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: true,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: 'lifo',
        maxTotalSockets: Infinity,
        totalSocketCount: 4,
        maxCachedSessions: 100,
        _sessionCache: {
          map: {
            'codeload.github.com:443:::::::::::::::::::::': [Buffer [Uint8Array]]
          },
          list: [ 'codeload.github.com:443:::::::::::::::::::::' ]
        },
        [Symbol(kCapture)]: false
      },
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/v1/batch',
      _ended: false,
      res: null,
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'api.segment.io',
      protocol: 'https:',
      _redirectable: [Circular *3],
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype] {
        accept: [ 'Accept', 'application/json, text/plain, */*' ],
        'content-type': [ 'Content-Type', 'application/json' ],
        'user-agent': [ 'user-agent', 'analytics-node/6.2.0' ],
        'content-length': [ 'Content-Length', 704 ],
        host: [ 'Host', 'api.segment.io' ],
        authorization: [
          'Authorization',
          'Basic ZE5zZ2Fwa1ljaXlHQ3RUQ3lTWWNkSEc3eVRHSTZJd1Y6'
        ]
      },
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _currentUrl: 'https://dNsgapkYciyGCtTCySYcdHG7yTGI6IwV:@api.segment.io/v1/batch',
    [Symbol(kCapture)]: false
  }
}
```

### Steps To Reproduce

1. Use a Linux distro specifically.
2. Create a project with `npm create refine-app@latest` and check for this error after the project has been created.

### Expected behavior

This error should not be shown.

### Screenshot

_No response_

### Desktop

- OS: ArchLinux
- Browser: Google Chrome
- Version: 113.0.5672.126 (Official Build) (64-bit)

### Mobile

_No response_

### Additional Context

_No response_",,
1702192331,4310,[FEAT]: Provide a way to tweak navigation for resources,"### Is your feature request related to a problem? Please describe.

It would be good if we can forcefully render on Resource click. For example, I'm working on a big-scale ERP-like software and I've created some resources like the following.

```javascript
//...some jsx stuff
resources={[
  {
    name: 'dashboard',
    list: '/',
    meta: {
      label: 'Dashboard',
      icon: <Dashboard />
    }
  },
  {
    name: 'weight-calculator',
    list: WEIGHT_CALCULATOR_PATH,
    meta: {
      label: 'Weight Calculator',
      parent: 'Tools',
      icon: <Calculate />
    }
  },
  {
    name: 'weight-calculator-records',
    list: WEIGHT_CALCULATOR_RECORDS_PATH,
    meta: {
      label: 'Calculation Records',
      parent: 'Tools',
      icon: <Feed />
    }
  },
  {
    name: 'roles-list',
    list: ROLES_LIST_PATH,
    meta: {
      label: 'Roles',
      icon: <ManageAccounts />
    }
  }
]}
```

Currently, it seems there is no easier way to achieve the reload on the menu click. What I mean here is that if my current tab is `Weight Calculator` and I click on it again, It just navigates to the path but it doesn't trigger remounting. Because of this, the UI gets reset but the form values stay persistent!

### Describe alternatives you've considered

I can do a nasty workaround using some sort of `useEffect` and state to check if the values have been reset and then upon that, I can reset the form as well so it just seems a bit of a hacky way to do this!

### Additional context

![Screenshot_63](https://github.com/refinedev/refine/assets/57582883/03da4619-59f6-4652-8f92-05b8267262d1)
![Screenshot_64](https://github.com/refinedev/refine/assets/57582883/672f8fe9-e3b8-4663-a817-60d8e1236d11)


### Describe the thing to improve

I have 2 suggestions.
There can be an optional prop that ignores active tab click, So if the route and resource are on the same URL, Clicking on a resource will not trigger route change if this prop has been turned on

Alternatively, we can have a prop similar to `navigationProps` which contains settings related to navigations like `reload: boolean` etc!",,
1692144579,4258,[FEAT] Trigger getList function in custom data provider manually,"### Is your feature request related to a problem? Please describe.

Is it possible to trigger `getList` function in custom data provider via `useDataGrid` hook manually? Currently, I had to call the `setFilters` function with unique key for each trigger needs. My problem is we have a toggle button in actions and we'd like to refresh datagrid's data(state) after toggle state is changed in a record.

My solution is: Send a same filter props and one unique key to bypass `React.memo`. There is an `useEffect` hook which listens every custom mutate so we are able to catch the toggle changes.
```  
useEffect(() => {
    if (customMutateData?.data) {
      setFilters([...filters, { field: Date.now().toString(), operator: 'eq', value: '' }]);
    }
  }, [customMutateData]);
```

### Describe alternatives you've considered

As I reviewed source codes, `getList` is called in `useTable` hook after component is initialized.
https://github.com/refinedev/refine/blob/9c4f73e5112f74b77f0ed415f5296ee32fc969dd/packages/core/src/hooks/useTable/index.ts#L511-L530


### Additional context

_No response_

### Describe the thing to improve

We'd like to trigger useList, useUpdate and other hooks in DataGrid Component via useDataGrid hook, manually whenever we  want without a trick. ",,
1690884600,4251,[BUG] Missing `dayjs` dependency on first `Build & Download` execution,"### Describe the bug

When I build and download my project, I had a missing dependency.
I solved it only adding the missing dependency, but it's not a plug-n-play solution

```
❯ pnpm run dev

> refine-project@0.1.0 dev /home/deck/code/refine-project
> remix dev

Watching Remix app in development mode...

✘ [ERROR] Could not resolve ""dayjs""

    node_modules/.pnpm/@refinedev+inferencer@3.1.4_@ant-design+icons@5.0.1_@refinedev+core@4.5.8_@refinedev+react-ho_p3hwasyq7inhrde4fdp27oytv4/node_modules/@refinedev/inferencer/dist/esm/headless.js:12:2043:
      12 │ ...""boolean""}:!1;import ze from""dayjs"";var vr=/(_at|_on|At|On|AT|O...
         ╵                                ~~~~~~~

  You can mark the path ""dayjs"" as external to exclude it from the bundle, which will remove this error.


Build failed with 1 error:
node_modules/.pnpm/@refinedev+inferencer@3.1.4_@ant-design+icons@5.0.1_@refinedev+core@4.5.8_@refinedev+react-ho_p3hwasyq7inhrde4fdp27oytv4/node_modules/@refinedev/inferencer/dist/esm/headless.js:12:2043: ERROR: Could not resolve ""dayjs""
💿 Built in 1.3s
^C ELIFECYCLE  Command failed.
```

### Steps To Reproduce

1. Go to https://refine.new/
2. Create your project using Remix, No UI Framework and Supabase
3. Click on the left button ""Build & Download""
4. Unzip your project
5. Run `pnpm install`
6. Run `pnpm run dev`
7. You should see the error on console

### Expected behavior

All dependencies should be added

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

```
   1   │ {
   2   │   ""name"": ""refine-project"",
   3   │   ""version"": ""0.1.0"",
   4   │   ""private"": true,
   5   │   ""sideEffects"": false,
   6   │   ""scripts"": {
   7   │     ""dev"": ""remix dev"",
   8   │     ""build"": ""remix build"",
   9   │     ""start"": ""remix-serve build"",
  10   │     ""refine"": ""refine""
  11   │   },
  12   │   ""dependencies"": {
  13   │     ""@refinedev/cli"": ""^2.5.1"",
  14   │     ""@refinedev/core"": ""^4.5.8"",
  15   │     ""@refinedev/inferencer"": ""^3.1.4"",
  16   │     ""@refinedev/kbar"": ""^1.1.0"",
  17   │     ""@refinedev/react-hook-form"": ""^4.1.2"",
  18   │     ""@refinedev/react-table"": ""^5.0.0"",
  19   │     ""@refinedev/remix-router"": ""^2.1.0"",
  20   │     ""@refinedev/supabase"": ""^5.0.0"",
  21   │     ""@remix-run/node"": ""^1.6.7"",
  22   │     ""@remix-run/react"": ""^1.6.7"",
  23   │     ""@remix-run/serve"": ""^1.6.7"",
  24   │     ""cookie"": ""^0.5.0"",
  25   │     ""dayjs"": ""^1.11.7"",
  26   │     ""js-cookie"": ""^3.0.1"",
  27   │     ""react"": ""^18.0.0"",
  28   │     ""react-dom"": ""^18.0.0""
  29   │   },
  30   │   ""devDependencies"": {
  31   │     ""@remix-run/dev"": ""^1.6.8"",
  32   │     ""@remix-run/eslint-config"": ""^1.6.8"",
  33   │     ""@types/js-cookie"": ""^3.0.2"",
  34   │     ""@types/react"": ""^18.0.0"",
  35   │     ""@types/react-dom"": ""^18.0.0"",
  36   │     ""eslint"": ""^8.24.0"",
  37   │     ""typescript"": ""^4.7.4""
  38   │   }
  39   │ }
```",,
1683520452,4226,[BUG] i18n-nextjs example throws 500 error,"### Describe the bug

When I deployed the example app(i18n-nextjs), it throws the error below

react-i18next:: You will need to pass in an i18next instance by using initReactI18next
Error: ENOENT: no such file or directory, scandir '/var/task/public/locales/en'
    at Object.readdirSync (node:fs:1452:3)
    at getLocaleNamespaces (/var/task/node_modules/next-i18next/dist/commonjs/config/createConfig.js:175:23)
    at /var/task/node_modules/next-i18next/dist/commonjs/config/createConfig.js:181:20
    at Array.map (<anonymous>)
    at getNamespaces (/var/task/node_modules/next-i18next/dist/commonjs/config/createConfig.js:180:44)
    at createConfig (/var/task/node_modules/next-i18next/dist/commonjs/config/createConfig.js:221:29)
    at _callee$ (/var/task/node_modules/next-i18next/dist/commonjs/serverSideTranslations.js:199:53)
    at tryCatch (/var/task/node_modules/@babel/runtime/helpers/regeneratorRuntime.js:44:17)
    at Generator.<anonymous> (/var/task/node_modules/@babel/runtime/helpers/regeneratorRuntime.js:125:22)
    at Generator.next (/var/task/node_modules/@babel/runtime/helpers/regeneratorRuntime.js:69:21) {
  errno: -2,
  syscall: 'scandir',
  path: '/var/task/public/locales/en',
  page: '/en/images/flags/undefined.svg'
}
RequestId: f3c59618-5d5d-43e0-8fd3-7287369c82bd Error: Runtime exited with error: exit status 1
Runtime.ExitError

### Steps To Reproduce

1. If you visit [the app](https://i18n-nextjs-next-js.vercel.app/), it will throw the error

### Expected behavior

The i18n does not work with the example

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1675162270,4203,[BUG] MaterialUI Themed not apply for imports from @mui,"### Describe the bug

I'm using refine and I also have imports from @mui. But the theme I set from refine header (dark/light mode) is not apply to the components imported from @mui, only to the components build in refine.

### Steps To Reproduce

1. Install a refine project
2. Import a component from @mui
3. Change the theme

### Expected behavior

The theme is applied to components imported from @mui.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1665824516,4161,[BUG] IMG uploaded correctly on strapi but file details not stored.,"### Describe the bug

>I'm following the [refine week ft. strapi blog](https://refine.dev/blog/refine-invoice-generator/) and got stuck in the uploading of an img part. I just cloned the example from Github and have the same problem occurring in the example project. The IMG is uploaded correctly in the media library but the file details are not stored at all in the company collection.

### Steps To Reproduce

1. Follow the blog and [reach here](https://refine.dev/blog/refine-react-invoice-generator-3/#company-create-action).
2. Create a company and upload image.
3. Save company.
4. See error in image.

### Expected behavior

The image is tied to the company.

### Screenshot

![image](https://user-images.githubusercontent.com/33681318/231676736-cf992ba5-5703-40b9-871a-d9bdadd140a7.png)


### Desktop

n/a

### Mobile

n/a

### Additional Context

See [this discord help post](https://discord.com/channels/837692625737613362/1095769269058408469)",,
1664634416,4156,[DOC] React-table code sandbox example is not working,"### Documentation issue

[While looking at this doc](https://refine.dev/docs/examples/table/react-table/advanced-react-table/), I saw there was an issue with the Code sandbox.

<img width=""823"" alt=""image"" src=""https://user-images.githubusercontent.com/55913724/231481517-5e5c3528-124b-475c-b0d7-678d8bdf3d68.png"">


### Describe the thing to improve

Would be nice to edit the `tsconfig.json` file to make it work:

```json
{
  ""compilerOptions"": {
    ""baseUrl"": ""src"",
    ""target"": ""es5"",
    ""lib"": [
      ""dom"",
      ""dom.iterable"",
      ""esnext""
    ],
    ""allowJs"": true,
    ""skipLibCheck"": true,
    ""esModuleInterop"": true,
    ""allowSyntheticDefaultImports"": true,
    ""strict"": true,
    ""forceConsistentCasingInFileNames"": true,
    ""noFallthroughCasesInSwitch"": true,
    ""module"": ""esnext"",
    ""moduleResolution"": ""node"",
    ""resolveJsonModule"": true,
    ""isolatedModules"": true,
    ""noEmit"": true,
    ""jsx"": ""react-jsx""
  },
  ""include"": [
    ""src""
  ]
}
```


### Describe the solution (optional)

https://codesandbox.io/embed/boring-cohen-6dmz3b?fontsize=14&hidenavigation=1&theme=dark

Here's the fix directly if needed :) ",,
1654830349,4087,[Bug] MUI Inferencer Checkbox import,"Hi, thanks for creating this great tool!
I am just starting using it and not sure whether it is something I did wrong or it is a bug. The inferencer seems to generate an incorrect import statement for the list view:
```
import {
    useDataGrid,
    EditButton,
    ShowButton,
    DeleteButton,
    List,
    Checkbox,
} from ""@refinedev/mui"";
```
The error: TS2305: Module '""@refinedev/mui""' has no exported member 'Checkbox'.

Replacing with the following seems to fix it:
`import Checkbox from '@mui/material/Checkbox';`

_Originally posted by @anmnev in https://github.com/refinedev/refine/discussions/3046#discussioncomment-5527139_",,
1650835204,4052,[BUG] Installation broken out of the box (headless),"### Describe the bug

Hi folks

Easy solution here, simply get rid of the following in `App.tsx`

I'm trying to bolt Refine onto an existing Laravel project which we have our own UI framework setup for, I'm seeing this after copying the contents of my Refine project into the Laravel project and merging `package.json` and `.gitignore`.

```
import {
  BlogPostList,
  BlogPostCreate,
  BlogPostEdit,
  BlogPostShow,
} from ""pages/blog-posts"";
import {
  CategoryList,
  CategoryCreate,
  CategoryEdit,
  CategoryShow,
} from ""pages/categories"";
```

### Steps To Reproduce

- Run setup for headless
- Run `npm run dev`

### Expected behavior

- Builds out of the box

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1647599370,4031,[FEAT] Improve `useParsed` through the ability to add Generic Types,"### Is your feature request related to a problem? Please describe.

Currently when I'm using `useParsed` there's no option to add generic typing like you can add to `useParams` of React Router V6.

Your current implementation: [packages/core/src/hooks/router/use-parsed/index.tsx](https://github.com/refinedev/refine/blob/3ec08ea2ec9a2c187f5b6d5df55e67c72bc8cf3e/packages/core/src/hooks/router/use-parsed/index.tsx)

Router Bindings for V6: [packages/react-router-v6/src/bindings.tsx#L87](https://github.com/refinedev/refine/blob/next/packages/react-router-v6/src/bindings.tsx#L87)

In the current version of Refine:
```tsx
const parsedParams = useParsed();
const { locale_id, provider_id } = parsedParams.params as any;
```

What you would want to do:
```tsx
const { locale_id, provider_id } = useParsed<{ params: { locale_id: string; provider_id: string } }>();
```

### Describe alternatives you've considered

The current alternative seems to be to use the following solution:

```tsx
import { useParams } from 'react-router-dom';
...
const { locale_id, provider_id } = useParams<{ locale_id: string; provider_id: string }>();
```

### Additional context

I stumbled across this while searching for a solution for composite-primary-keys (CPK), which makes sense since we have lots of tables that have ""i18n"" clone-tables which have three primary keys. To access this information I need to have a route like: `/post/:id/:locale_id/:provider_id`

### Describe the thing to improve

Currently we're missing type-safety for the sake of simplicity. React Router V6 does this is a good manner, where you can pass a generic to `useParams`. Maybe we can teach `useParsed` this as well?

Implementation reference: [react-router/lib/hooks.tsx#L257](https://github.com/remix-run/react-router/blob/main/packages/react-router/lib/hooks.tsx#L257)",,
1641762631,3984,[FEAT] Customize subtitle in notification,"### Is your feature request related to a problem? Please describe.

Currently I am customizing error notification from `authProvider`

```js
const authProvider: AuthBindings = {
  login: async ({ email, password }) => {
    try {
      const { data, error } = await supabaseClient.auth.signInWithPassword({
        email,
        password,
      });

      if (error) {
        return {
          success: false,
          error: new Error(""Nieprawidłowy email lub hasło""),
        };
      }
}
```

which results in this

<img width=""322"" alt=""Screenshot 2023-03-27 at 11 39 46"" src=""https://user-images.githubusercontent.com/17653648/227904243-2815048d-594d-4b3f-baec-13578b5dff56.png"">

Unfortunately I don't see a way to change `Error` subtitle in the notification. This ""Error"" text is also not present in translations. How can I customize it?


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Customize subtitle text in error notifications triggered from auth provider.",,
1641558449,3981,Hasura ID options doesn't contain `String`,"https://github.com/refinedev/refine/blob/1a6c1e8a7754b5b6bb9567f83bc93ac9ef1f7c73/packages/hasura/src/dataProvider/index.ts#L155

We had created a Postgres table with text primary key, and the Qraphql query expects the same in ID type. But, ID customization only offers `Int` and `uuid` as 2 options, leading to query throwing the error. I think we should add all the types possible as an ID field here.",,
1637284667,3960,useCustom missing 3rd generic type,my use case is to overrides  data from api via select options(queryOptions) but i dont know how to adding custom type in useCustom to overrides existing type. according to tkdodo blog (https://tkdodo.eu/blog/react-query-and-type-script) the way to overrides generic type TQueryFnData is adding new type in 3rd generic type called TData = TQueryFnData in useQuery. how can i do to overrides TData from useCustom ? sorry for my bad english,,
1633683075,3937,[BUG] Access control provider is not working,"### Describe the bug

Access control provider is not working in Refine v4.

I am following the example in the docs -> https://refine.dev/docs/api-reference/core/providers/accessControl-provider/#usage

### Steps To Reproduce

1. Open this CodeSandbox https://codesandbox.io/s/sharp-snowflake-yxc8q9?file=/src/App.tsx
2. This code should block access to `categories` resource but it's not working

```
            accessControlProvider={{
              can: async ({ resource, action, params }) => {
                if (resource === ""categories"") {
                  return Promise.resolve({
                    can: false,
                    reason: ""Unauthorized""
                  });
                }

                return { can: true };
              }
            }}
```

### Expected behavior

Access control provider should work. Categories page should not be accessible.

### Screenshot

_No response_

### Desktop

- macOS 11.6.1
- Chrome 111.0.5563.64
- @refinedev/core 4.3.0
- @refinedev/mui 4.1.0

### Mobile

_No response_

### Additional Context

_No response_",,
1633455864,3934,[DOC] Inconsistency in access control provider,"### Documentation issue

https://refine.dev/docs/api-reference/core/providers/accessControl-provider/#usage

<img width=""873"" alt=""Screenshot 2023-03-21 at 09 48 09"" src=""https://user-images.githubusercontent.com/17653648/226556435-23552c0f-6530-470b-9b78-7e72218e6862.png"">

Based on this example, it's not obvious if we should return a Promise or object.

### Describe the thing to improve

Looks like returing a Promise in access control provider no longer works in Refine v4. Thus, object should be returned in both places.

### Describe the solution (optional)

_No response_",,
1631911960,3927,"[BUG] Module '""@refinedev/mui""' has no exported member 'LoadingButton'.","### Describe the bug

After running this codemode
```
npx @refinedev/codemod@latest refine3-to-refine4
```

I got the following error:

```
Module '""@refinedev/mui""' has no exported member 'LoadingButton'.
```

### Steps To Reproduce

1. Use `LoadingButton` component in your code.
2. Run the codemode to migrate to Refine v4.
3. You will get an error:
```
Module '""@refinedev/mui""' has no exported member 'LoadingButton'.
```

### Expected behavior

Codemode should not break the app.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1631900049,3926,[BUG] Codemod breaks react-router,"### Describe the bug

After running codemode

```
npx @refinedev/codemod@latest refine3-to-refine4
```

I got the following error:
```
Module not found: Error: Can't resolve 'react-router-dom' in '/Users/user/my/europig-refine/src/users'
```

This is because of this change done by codemode:

![Screenshot 2023-03-20 at 12 12 24](https://user-images.githubusercontent.com/17653648/226323273-2e64a19a-504a-432a-b3f3-0d18c95fc81f.png)


### Steps To Reproduce

1. Add this line somewhere in your codebase:
```
import { useNavigate } from ""@pankod/refine-react-router-v6"";
```
2. Run this codemode
```
@refinedev/codemod@latest refine3-to-refine4
```
3. Run the project. Error will be thrown.

### Expected behavior

Codemode should not break react-router

### Screenshot

_No response_

### Desktop

- macOS 11.6.1

### Mobile

_No response_

### Additional Context

_No response_",,
1631666821,3923,[FEAT] Redirect the user instead of showing 404 page,"### Is your feature request related to a problem? Please describe.

![Screenshot 2023-03-20 at 09 49 48](https://user-images.githubusercontent.com/17653648/226290013-6d16d6fd-ac89-45ef-ae4a-3fbbe3f8946d.png)

Currently if `accessControlProvider` blocks access to the resource for a user, a 404 page is shown. Instead I would like to redirect the user to the first available resource.

Take a look at this example:

```
{
  name: ""orders"",
  list: MuiInferencer,
  edit: MuiInferencer,
  show: MuiInferencer,
  create: MuiInferencer,
  canDelete: true,
},
{
  name: ""users"",
  list: MuiInferencer,
  create: MuiInferencer,
  edit: MuiInferencer,
  canDelete: true,
},

```

```
accessControlProvider={{
    async can({ resource }) {
      const userResponse = await supabaseClient.auth.getUser();
      const user = userResponse.data.role;
      if (user.role === ""user-manager"") {
        return Promise.resolve({
          can: resource === ""users"",
        });
      }
    },
  }}
```

If the user has `user-manager` role, then after sign in, he will see a 404 page. Instead I would like him to redirect to `users` resource.


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Provide a mechanism to redirect a user to the first available resource when access control blocks access.",,
1630226163,3917,[BUG] Incorrect parameter after  light color mode check,"### Describe the bug

Introduced here:

https://github.com/refinedev/refine/pull/1952/files#diff-934258df31bbe37f67489ca0075d554d92488a0403bcb533a17f9677904c72faR30-R34

This function

```typescript
    const setColorMode = () => {
        if (mode === ""light"") {
            setMode(""dark"");
        } else {
            setMode(""light"");
        }
    };   
```

Seems incorrect

### Steps To Reproduce

- create app
- go to src/contexts/color-mode/index.tsx

### Expected behavior

light when it's light
dark when it's dark

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1627777290,3897,[BUG] contrastText on lightTheme same as darkTheme,"### Describe the bug

I've noticed this when a user with white theme (oh boy) accessed my ReadyPage (swizzled from the default one).
The LightTheme values for `contrastText` are white - when I think they're suppose to be black (or some shade-of).
https://github.com/refinedev/refine/blob/next/packages/mui/src/theme/palette/lightPalette.ts


### Steps To Reproduce

Well you can probably see it in the default ReadyPage with White Theme

### Expected behavior

Should be shade of black.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1625089900,3864,[BUG] Controller being imported incorrectly from @refinedev/react-hook-form,"### Describe the bug

Hey, so I've copied out the code generated by MuiCreateInferencer for my edit page. For one of my fields, which is called isActive, it's generated the following code.

```
import { useForm, Controller } from ""@refinedev/react-hook-form"";
<Controller
                    control={control}
                    name=""isActive""
                    // eslint-disable-next-line
                    defaultValue={null as any}
                    render={({ field }) => (
                        <FormControlLabel
                            label=""Is Active""
                            control={
                                <Checkbox
                                    {...field}
                                    checked={field.value}
                                    onChange={(event) => {
                                        field.onChange(event.target.checked);
                                    }}
                                />
                            }
                        />
                    )}
                />
```

### Steps To Reproduce

Use MuiCreateInferencer with a field called isActive, copy the code generated.

### Expected behavior

It imports Controller from react-hook-form package

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1625058565,3862,[BUG] incorrect import of RefineRoutes for Next.js appDir,"### Describe the bug

RefineRoutes is defined in `packages/nextjs-router/src/app/refine-routes.tsx`. 
However it is not imported by `packages/nextjs-router/src/app/index.ts`, nor listed in the package.json as file which can be imported by external packages.

https://github.com/refinedev/refine/blob/next/packages/nextjs-router/src/app/index.ts#L5
```ts
export { RefineRoutes } from ""../pages/refine-routes"";
```

### Steps To Reproduce

1. `import { RefineRoutes } from '@refinedev/nextjs-router/app'` in a Next.js project using the appDir functionality.
2. ""Router not mounted"" error is thrown by Next.js because the incorrect `RefineRoutes` from `@refinedev/nextjs-router/pages` is loaded.

### Expected behavior

Correct resource page is shown by using `RefineRoutes`.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1621407676,3837,[BUG] Multiple errors with fresh created app with Remix and Mui,"### Describe the bug

After creating app with Remix and Mui console displays multiple errors
```
react-dom.development.js:86 
        
       Warning: Expected server HTML to contain a matching <meta> in <head>.
    at meta
    at head
    at html
    at http://localhost:3000/build/root-QGHZKJ44.js:3781:51
    at App
    at RemixRoute (http://localhost:3000/build/_shared/chunk-BT37IK5M.js:6093:3)
    at RenderedRoute (http://localhost:3000/build/_shared/chunk-BT37IK5M.js:4491:5)
    at RenderErrorBoundary (http://localhost:3000/build/_shared/chunk-BT37IK5M.js:4867:9)
    at Routes (http://localhost:3000/build/_shared/chunk-BT37IK5M.js:4740:5)
    at Router (http://localhost:3000/build/_shared/chunk-BT37IK5M.js:4687:15)
    at RouterProvider (http://localhost:3000/build/_shared/chunk-BT37IK5M.js:4638:5)
    at RemixErrorBoundary (http://localhost:3000/build/_shared/chunk-BT37IK5M.js:5721:5)
    at RemixBrowser (http://localhost:3000/build/_shared/chunk-BT37IK5M.js:7106:55)
printWarning @ react-dom.development.js:86
react-dom.development.js:12507 
        
       Uncaught Error: Hydration failed because the initial UI does not match what was rendered on the server.
    at throwOnHydrationMismatch (react-dom.development.js:12507:9)
    at tryToClaimNextHydratableInstance (react-dom.development.js:12535:7)
    at updateHostComponent (react-dom.development.js:19902:5)
    at beginWork (react-dom.development.js:21618:14)
    at HTMLUnknownElement.callCallback2 (react-dom.development.js:4164:14)
    at Object.invokeGuardedCallbackDev (react-dom.development.js:4213:16)
    at invokeGuardedCallback (react-dom.development.js:4277:31)
    at beginWork$1 (react-dom.development.js:27451:7)
    at performUnitOfWork (react-dom.development.js:26557:12)
    at workLoopSync (react-dom.development.js:26466:5)
2errorBoundaries.js:70 
        
       Error: Hydration failed because the initial UI does not match what was rendered on the server.
    at throwOnHydrationMismatch (react-dom.development.js:12507:9)
    at tryToClaimNextHydratableInstance (react-dom.development.js:12535:7)
    at updateHostComponent (react-dom.development.js:19902:5)
    at beginWork (react-dom.development.js:21618:14)
    at beginWork$1 (react-dom.development.js:27426:14)
    at performUnitOfWork (react-dom.development.js:26557:12)
    at workLoopSync (react-dom.development.js:26466:5)
    at renderRootSync (react-dom.development.js:26434:7)
    at performConcurrentWorkOnRoot (react-dom.development.js:25738:74)
    at workLoop (scheduler.development.js:266:34)
RemixRootDefaultErrorBoundary @ errorBoundaries.js:70
react-dom.development.js:86 
        
       Warning: An error occurred during hydration. The server HTML was replaced with client content in <#document>.
printWarning @ react-dom.development.js:86
8react-dom.development.js:12507 
        
       Uncaught Error: Hydration failed because the initial UI does not match what was rendered on the server.
    at throwOnHydrationMismatch (react-dom.development.js:12507:9)
    at tryToClaimNextHydratableInstance (react-dom.development.js:12535:7)
    at updateHostComponent (react-dom.development.js:19902:5)
    at beginWork (react-dom.development.js:21618:14)
    at beginWork$1 (react-dom.development.js:27426:14)
    at performUnitOfWork (react-dom.development.js:26557:12)
    at workLoopSync (react-dom.development.js:26466:5)
    at renderRootSync (react-dom.development.js:26434:7)
    at performConcurrentWorkOnRoot (react-dom.development.js:25738:74)
    at workLoop (scheduler.development.js:266:34)
2react-dom.development.js:26912 
        
       Uncaught Error: Hydration failed because the initial UI does not match what was rendered on the server.
    at throwOnHydrationMismatch (react-dom.development.js:12507:9)
    at tryToClaimNextHydratableInstance (react-dom.development.js:12535:7)
    at updateHostComponent (react-dom.development.js:19902:5)
    at beginWork (react-dom.development.js:21618:14)
    at beginWork$1 (react-dom.development.js:27426:14)
    at performUnitOfWork (react-dom.development.js:26557:12)
    at workLoopSync (react-dom.development.js:26466:5)
    at renderRootSync (react-dom.development.js:26434:7)
    at performConcurrentWorkOnRoot (react-dom.development.js:25738:74)
    at workLoop (scheduler.development.js:266:34)
react-dom.development.js:12507 
        
       Uncaught Error: Hydration failed because the initial UI does not match what was rendered on the server.
    at throwOnHydrationMismatch (react-dom.development.js:12507:9)
    at tryToClaimNextHydratableInstance (react-dom.development.js:12535:7)
    at updateHostComponent (react-dom.development.js:19902:5)
    at beginWork (react-dom.development.js:21618:14)
    at beginWork$1 (react-dom.development.js:27426:14)
    at performUnitOfWork (react-dom.development.js:26557:12)
    at workLoopSync (react-dom.development.js:26466:5)
    at renderRootSync (react-dom.development.js:26434:7)
    at performConcurrentWorkOnRoot (react-dom.development.js:25738:74)
    at workLoop (scheduler.development.js:266:34)
react-dom.development.js:19849 
        
       Uncaught Error: There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering.
    at updateHostRoot (react-dom.development.js:19849:57)
    at beginWork (react-dom.development.js:21615:14)
    at beginWork$1 (react-dom.development.js:27426:14)
    at performUnitOfWork (react-dom.development.js:26557:12)
    at workLoopSync (react-dom.development.js:26466:5)
    at renderRootSync (react-dom.development.js:26434:7)
    at recoverFromConcurrentError (react-dom.development.js:25850:20)
    at performConcurrentWorkOnRoot (react-dom.development.js:25750:22)
    at workLoop (scheduler.development.js:266:34)
    at flushWork (scheduler.development.js:239:14)
query.ts:462 
        
       Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: [""getUserIdentity""]
onSuccess @ query.ts:462
query.ts:444 
        
       Error: undefined
    at Object.onSuccess (query.ts:466:19)
    at resolve (retryer.ts:103:14)
onError @ query.ts:444
```

### Steps To Reproduce

```
yarn create refine-app test
√ Choose a project template · refine-remix
√ What would you like to name your project?: · test
√ Choose your backend service to connect: · data-provider-custom-json-rest
√ Do you want to use a UI Framework?: · mui
√ Do you want to add example pages?: · yes
√ Do you want to add dark mode support?: · mui-dark-mode
√ Do you want an extended theme?: · mui-extend-theme
√ Do you want to customize the Material UI layout?: · mui-custom-layout
√ Do you need any Authentication logic?: · auth-provider-custom
√ Do you want to add kbar command interface support?: · no
√ Choose a package manager: · yarn
```

### Expected behavior

No errors in console output

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1620722411,3828,[BUG] useList filter not working ,"### Describe the bug

Hello, 

I am trying to apply filters on useList data query from API but looks like filter is not working. 
I want the list of users with ""admin"" role. 
```
interface User {
  _id: string;
  name: string;
  role: string;
}

  const { data: Admin } = useList<User>({
    resource: ""users"",
    config: {
      hasPagination: false,
      filters: [
        {
          field: ""role"",
          operator: ""eq"",
          value: ""admin"",
        },
      ],
    },
  });

  const admin: User[] = Admin?.data ?? [];

console.log(""admin:"", admin);
```
and the result as the screenshot 

I was thinking that if I messed up somewhere, I shouldn't be getting any query results and since I am always receiving every data in the collection, filtering is not working. 


hasPagination and pagination are working fine but filters and sort are not.


I checked the documentation but still not sure what is wrong with my code. 
I tried creating a new react app and used the example code but it still doesn't work. 
https://refine.dev/docs/api-reference/core/hooks/data/useList/

Thank you in advance. 


### Steps To Reproduce

useList filters

### Expected behavior

not working 

### Screenshot

![filter](https://user-images.githubusercontent.com/101679287/224605492-b068e94e-39d9-4f81-85e7-5bc7d81c05ac.png)


### Desktop

-OS: windows 10
-browser: Chrome

### Mobile

_No response_

### Additional Context

_No response_",,
1620435352,3824,[BUG] useTable(React Table) is adding an eq condition when I use a gte filter,"### Describe the bug

useTable(React Table) is adding an eq condition when I use a gte filter

The useTable function from the react-table package is adding an eq condition when using a gte filter.

when i call:

```typescript
useTable({
   columns,
   refineCoreProps: {
      permanentFilter: [{
         field: ""category.id"",
         operator: ""gte"",
         value: 0,
      },],
   },
})
```

That way I can't use the useTable

Below is my jest to reproduce

### Steps To Reproduce

```typescript
import { renderHook, waitFor } from ""@testing-library/react"";
import { ColumnDef } from ""@tanstack/react-table"";

import { TestWrapper } from ""../../test"";
import { useTable } from ""./index"";

type Post = {
    id: number;
    title: string;
};

const columns: ColumnDef<Post>[] = [
    {
        id: ""id"",
        header: ""ID"",
        accessorKey: ""id"",
    },
    {
        id: ""title"",
        header: ""Title"",
        accessorKey: ""title"",
        meta: {
            filterOperator: ""contains"",
        },
    },
];

describe(""useTable Hook"", () => {
    it(""It should work successfully with permanentFilter"", async () => {
        const { result } = renderHook(
            () =>
                useTable({
                    columns,
                    refineCoreProps: {
                        permanentFilter: [
                            {
                                field: ""category.id"",
                                operator: ""gte"",
                                value: 0,
                            },
                        ],
                    },
                }),
            {
                wrapper: TestWrapper({}),
            },
        );

        await waitFor(() => {
            expect(
                !result.current.refineCore.tableQueryResult.isFetching,
            ).toBeTruthy();
        });

        const {
            refineCore: { filters: filtersCore },
        } = result.current;

        expect(filtersCore).toEqual([
            { field: ""category.id"", operator: ""gte"", value: 0 },
        ]);
    });
});
```

### Expected behavior

I would expect as a result the filter 
```typescript
[{ field: ""category.id"", operator: ""gte"", value: 0 }, ]
```
 but I am getting 
```typescript
[{ field: ""category.id"", operator: ""gte"", value: 0 } , { field: ""category.id"", operator: ""eq"", value: 0 }, ]
```

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1620338218,3817,[FEAT] export RouteProvider from refine-react-router-v6,"### Is your feature request related to a problem? Please describe.

Id like to use only the RouteProvider, not the Router itself.
We have apps in microfronends and one hub. If you call the app from the hub, there is already an router defined. since you cant have 2 router in your project, this fails with refine currently.
Define the routes, without router, would fix this.

### Describe alternatives you've considered

None

### Additional context

_No response_

### Describe the thing to improve

Export ""RouteProvider"" from refine-react-router-v6",,
1615311808,3762,[DOC] TextField example shows strange readonly input,"### Documentation issue

https://refine.dev/docs/api-reference/mui/components/fields/text/

![Screenshot 2023-03-08 at 14 51 52](https://user-images.githubusercontent.com/17653648/223730413-99eaa38f-09f9-49f1-9a8e-462f06e6ea45.png)

`TextField` example looks like readonly input. When you click on it, it shows the cursor but you cannot enter anything. This looks strange and I don't think this is an intended behavior.

### Describe the thing to improve

`TextField` example should just display text without the readonly input.

### Describe the solution (optional)

_No response_",,
1611998585,3732,[BUG] Refine CLI not supported in yarn monorepos,"### Describe the bug

Since yarn workspaces use the root `node_modules` dir of the project instead of individual ones per package, 
refine CLI fails to resolve the `.bin` directory, because it's expected to be in the current directory relative to the package.json where `refine` is called.

The problem seems to be here https://github.com/refinedev/refine/blob/next/packages/cli/src/commands/runner/projectScripts.ts#L3

It fails to find `./node_modules/.bin/next`
```
@app/admin:dev: Error: Command failed with ENOENT: /usr/src/app/packages/admin/node_modules/.bin/next dev
@app/admin:dev: spawn /usr/src/app/packages/admin/node_modules/.bin/next ENOENT
```

### Steps To Reproduce

1. Create a new refine nextjs app, called e.g. `my-admin`
2. Remove the package-lock.json and node_modules of the new refine app
3. Move it inside a yarn monorepo (Yarn Berry or not, I think it's not important)
4. Run `yarn install`
5. Run `yarn workspace my-admin run refine dev`

### Expected behavior

The NextJS app should be started in dev mode.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1606639776,3695,[FEAT] Add custom error message in CheckError,"### Is your feature request related to a problem? Please describe.

In AuthProvider:login we are able to pass custom error message in Promise.reject() to notify user.
I'd like to pass custom error message in AuthProvider:CheckError also

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

example:
```
Checkerror: (error) => {
    if (error.response.status === 401 || error.response.status === 403) {
       return Promise.reject({redirectPath:false,message:error.response.message,description:error,response.data.detail})
    return Promise.resolve()
```",,
1604764803,3684,[FEAT] Add example how to integrate Refine with Firebase Authentication,"### Is your feature request related to a problem? Please describe.

It's not easy to figure out how to integrate Firebase Authentication with Refine app.

https://firebase.google.com/docs/auth/web/start?authuser=0

Especially I have no idea how to combine `AuthProvider` form Refine with authentication state observer from Firebase:

https://firebase.google.com/docs/auth/web/start?authuser=0#set_an_authentication_state_observer_and_get_user_data

```js
import { getAuth, onAuthStateChanged } from ""firebase/auth"";

const auth = getAuth();
onAuthStateChanged(auth, (user) => {
  if (user) {
    // User is signed in, see docs for a list of available properties
    // https://firebase.google.com/docs/reference/js/firebase.User
    const uid = user.uid;
    // ...
  } else {
    // User is signed out
    // ...
  }
});
```

This seems not compatible with `checkAuth` from Refine.

### Describe alternatives you've considered

Not using Refine.

### Additional context

_No response_

### Describe the thing to improve

Add an example how to integrate Refine with Firebase Authentication.",,
1603345806,3681,"[BUG] TypeError: cyclic object value, while using access control cerbos.","### Describe the bug

The problem occurred when trying to use cerbos as access control. The problem doesn't occur when used cerbos without icon in resource but occurs when we use custom icon for our resources. 

### Steps To Reproduce

1. Install any icons library for example `@ant-design/icons`, or `react-icons`
2. Use icon on the resource as 
 
     ````
    <Refine
    // other options 
    accessControlProvider={{
      can: async ({ action, params, resource }) => {
          const result = await cerbos.checkResource({
              principal: {
                  id: ""123"", // Fake a user ID
                  roles: [role],
                  policyVersion: ""default"",
                  // this is where user attributes can be passed
                  attributes: {},
              },
              resource: {
                  kind: resource,
                  policyVersion: ""default"",
                  id: params?.id + """" || ""new"",
                  attributes: params,
              },
              // the list of actions on the resource to check authorization for
              actions: [action],
          });
          return Promise.resolve({
              can: result.isAllowed(action) || false,
          });
      },
    }}
    resources={[
      {
          name: ""posts"",
          list: PostList,
          icon: <StepBackwardOutlined />,
      }
    ]}
    />
    ```
3. Now run the project and check the console you will get an error as 
    ```
    Uncaught (in promise) TypeError: cyclic object value
        transport index.ts:132
        cerbos client.ts:663
        checkResources client.ts:299
        checkResource client.ts:246
        can App.tsx:103
        M index.tsx:119
        C index.tsx:55
        C index.tsx:55
        C index.tsx:55
        React 14
        batchCalls notifyManager.ts:51
        notifyFn notifyManager.ts:15
        flush notifyManager.ts:63
        flush notifyManager.ts:62
        batchNotifyFn notifyManager.ts:18
        flush notifyManager.ts:61
        promise callback*scheduleMicrotask utils.ts:414
        flush notifyManager.ts:60
        batch notifyManager.ts:29
        dispatch query.ts:577
        setData query.ts:203
        onSuccess query.ts:464
        resolve retryer.ts:103
        promise callback*run retryer.ts:150
        createRetryer retryer.ts:202
        fetch query.ts:450
        executeFetch queryObserver.ts:327
        onSubscribe queryObserver.ts:107
        subscribe subscribable.ts:14
        useBaseQuery useBaseQuery.ts:77
      ```

### Expected behavior

Cerbos should hit the API to check if the use have access to the resource or not.

### Screenshot

_No response_

### Desktop

- OS: Ubuntu 22.04
- Browser: Firefox
- Version: 110.0
- Used dataProvider: refine-simple-rest by overriding to meet custom need.
- Access control: cerbos

### Mobile

_No response_

### Additional Context

_No response_",,
1602341764,3671,[BUG] Invalidating custom queries using custom querykey raised TypeError: this is undefined,"### Describe the bug

While trying to invalidate a query using a custom `queryKey` I got an error as `TypeError: this is undefined`.

### Steps To Reproduce

1. First create a custom query with a custom queryKey.
```
const {} = useCustom({
    method: ""get"",
    url: ""https://api.fake-rest.refine.dev/posts"",
    queryOptions: {
        queryKey: [""custom-key""],
    },
});
```

2. Then try to invalidate the above custom query.
```
const { invalidateQueries } = useQueryClient();
invalidateQueries([""custom-key""]);
```

This will throw an error as below:
```
TypeError: this is undefined
    invalidateQueries queryClient.ts:331
    batch notifyManager.ts:17
    invalidateQueries queryClient.ts:324
    onMutationSuccess index.tsx:76
    onSuccess useForm.ts:360
    notify mutationObserver.ts:167
    batch notifyManager.ts:17
    notify mutationObserver.ts:155
    onMutationUpdate mutationObserver.ts:93
    dispatch mutation.ts:326
    dispatch mutation.ts:326
    batch notifyManager.ts:17
    dispatch mutation.ts:328
    execute mutation.ts:214
    mutate mutationObserver.ts:127
    mutate useMutation.ts:91
    onFinish useForm.ts:356
    setTimeout handler*onFinish/< useForm.ts:355
    onFinish useForm.ts:355
    onFinish useForm.ts:157
    onSubmit index.tsx:185
    onFinish Form.js:63
    submit useForm.js:756
    promise callback*FormStore/this.submit useForm.js:752
    onClick useDrawerForm.ts:95
    handleClick button.js:104
    callCallback bundle.js:234566
    React 3
    executeDispatch bundle.js:238825
    React 14
mutation.ts:240
TypeError: error.response is undefined
    checkError authProvider.ts:55
    fn mutation.ts:172
    run retryer.ts:138
    createRetryer retryer.ts:182
    executeMutation mutation.ts:167
    execute mutation.ts:209
    mutate mutationObserver.ts:127
    mutate useMutation.ts:91
    onError useUpdate.ts:425
    execute mutation.ts:241
    mutate mutationObserver.ts:127
    mutate useMutation.ts:91
    onFinish useForm.ts:356
    setTimeout handler*onFinish/< useForm.ts:355
    onFinish useForm.ts:355
    onFinish useForm.ts:157
    onSubmit index.tsx:185
    onFinish Form.js:63
    submit useForm.js:756
    promise callback*FormStore/this.submit useForm.js:752
    onClick useDrawerForm.ts:95
    handleClick button.js:104
    callCallback bundle.js:234566
    React 3
    executeDispatch bundle.js:238825
    React 14
mutation.ts:240
undefined query.ts:433
undefined query.ts:433
```


### Expected behavior

When we invalidate a query based on custom key the query should be invalidated and re fetched whenever the query is required. 

### Screenshot

_No response_

### Desktop

- OS: Ubuntu 22.04
- Browser: Firefox
- Version: 110.0
- Used dataProvider: `refine-simple-rest` by overriding to meet custom need.

### Mobile

_No response_

### Additional Context

_No response_",,
1598144559,3655,How to query Hasura by using MUI Datagrid,"Hello everybody!

I have currently some issues wrapping my head around how to access data from Hasura by using the refine Hasura dataprovider.
There is no Example using the MUI package with the `DataGrid` component in combination with Hasura so I tried to get bits and pieces from multiple sources.

This is the error message which is blocking me currently. It tells me that there is no resource `NPI_sample_data` to be queried.
<img width=""1012"" alt=""image"" src=""https://user-images.githubusercontent.com/37913833/221125619-2102cde4-04af-4079-84a4-77fafbbfc9c1.png"">


My schema in Hasura is simple and not complex. In the beginning, I just wanted to render some Id's. Here you can see `NPI_sample_data` is existent.
<img width=""1135"" alt=""image"" src=""https://user-images.githubusercontent.com/37913833/221123029-9f5913bd-8ebd-47a5-8fe4-528b47df5690.png"">

My next step was to register the Resource using the same name as provided in Hasura.
<img width=""648"" alt=""image"" src=""https://user-images.githubusercontent.com/37913833/221125870-bc3f6a8f-38be-463e-9eb9-53dfe0a9d8bd.png"">

After what I created a `npi_sample_data/list.tsx` component
```tsx
import React from 'react'
import {
    DataGrid,
    GridColumns,
    List,
    useDataGrid,
} from '@pankod/refine-mui'

interface IItem {
    id: number
    npi_id: number
    pag_me_comment: string
}

/**
 * https://refine.dev/docs/api-reference/mui/hooks/useDataGrid/
*/
const ItemsList: React.FC = () => {
    const {
        dataGridProps,
    } = useDataGrid<IItem>({
        resource: 'NPI_sample_data',
        initialPageSize: 20,
        initialSorter: [
            {
                field: 'npi_id',
                order: 'asc'
            }
        ],
        metaData: {
            fields: [""npi_id""]
        }
    })

    const columns = React.useMemo<GridColumns<IItem>>(
        () => [
            {
                field: ""npi_id"",
                headerName: ""ID"",
                type: ""number"",
                width: 75,
            }
        ],
        []
    );

    return (
        <List>
            <DataGrid
                {...dataGridProps}
                columns={columns}
                autoHeight/>
        </List>
    )
}

export default ItemsList
```

For me, this looks totally fine and should work as the over datasource providers and UI Libraries. Your help is really appreciated as I want to use refine also in the future.  
Thank you for your time! 🤗 ",,
1592011038,3643,[FEAT]: add new properties to `useDrawerForm` hook,"### Is your feature request related to a problem? Please describe.

In `@pankod/refine-antd`package, `useDrawerForm` is similar to `useModalForm` hook. However, `useDrawerForm` does not have `defaultVisible`, `autoSubmitClose`, and `autoResetForm` properties. I think these properties should be added to `useDrawerForm` hook.

### Describe alternatives you've considered

_No response_

### Additional context

Similar properties are available in `useModalForm` hook in `@pankod/refine-react-table` package. You can see the [useModalForm](https://github.com/refinedev/refine/blob/next/packages/react-hook-form/src/useModalForm/index.ts) hook for more information.

<br />

You can see the [contribution guide](https://refine.dev/docs/contributing/) for more information.

### Describe the thing to improve

- [ ] `useDrawerForm` hook should have `defaultVisible` property. It will be used to set the initial visibility of the drawer.
- [ ] `useDrawerForm` hook should have `autoSubmitClose` property. It will be used to close the drawer after the form is submitted.
- [ ] `useDrawerForm` hook should have `autoResetForm` property. It will be used to reset the form after the form is submitted.

You can find more information about these properties in [useModalForm](https://refine.dev/docs/api-reference/antd/hooks/form/useModalForm/#properties) hook documentation.",,
1590723205,3635,[BUG] Date inference too sensitive,"### Describe the bug

Hi :)

In one of my resources I have a string field that for some reason the Inferencer recognizes as a date field.
The field values can be, for example: ""112312"", ""551351"", ""34223"", ""2222"" etc. The sole rule of this field that I can say for sure is that it is a string representation of a number with minimum 4 letters.

It gets inferred as date and so gives values such as ""12/01/1123,"" ""01/01/3333"", ""02/02/202"" etc.

### Steps To Reproduce

Not really sure what triggers this, but perhaps the value the Inferencer tries to infer from is at a length that seems reasonable for the inferring to be date; or even that when a string is only numbers the inferring is automatically date.

Anyway the reproduction is having a field of type string with number values with length of at least 4 letters.

### Expected behavior

Should be inferred as string or number, not date.

### Screenshot

![MicrosoftTeams-image](https://user-images.githubusercontent.com/17084820/219956581-47799a66-37b9-41f5-812e-2b1b19e05927.png)


### Desktop

_No response_

### Mobile

_No response_

### Additional Context

Discord discussion: https://discord.com/channels/837692625737613362/1076868034192486451",,
1579043856,3581,Additional Properties in `resource` definitions,"We're not sure if we're going to keep the `resources` but if we decide to keep it in `<Refine />` component or keep it but use it in a different place, we should consider adding the ability to pass additional properties to the `resource` definitions. This will allow users to have better control in their `router` handling and other functions if we expose them in the future.

## Implementation

- Add `meta` property to `resource` interface just like `metaData` in data hooks.
- Add examples of use cases.
- Update docs to reflect the changes.",,
1577597347,3578,[BUG] NextJS with Antd does not compile,"### Describe the bug

Webapp based on Ant Design with NextJS does not compile and show this error.
```
Server Error
SyntaxError: Cannot use import statement outside a module

This error happened while generating the page. Any console logs will be displayed in the terminal window.
Call Stack
<unknown>
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/antd/es/anchor/style/index.js (1)
internalCompileFunction
node:internal/vm (73:18)
wrapSafe
node:internal/modules/cjs/loader (1166:20)
Module._compile
node:internal/modules/cjs/loader (1210:27)
Module._extensions..js
node:internal/modules/cjs/loader (1300:10)
Module.load
node:internal/modules/cjs/loader (1103:32)
Module._load
node:internal/modules/cjs/loader (942:12)
Module.require
node:internal/modules/cjs/loader (1127:19)
require
node:internal/modules/helpers (112:18)
Object.<anonymous>
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/@ant-design/pro-layout/lib/index.js (103:1)
Module._compile
node:internal/modules/cjs/loader (1246:14)
Module._extensions..js
node:internal/modules/cjs/loader (1300:10)
Module.load
node:internal/modules/cjs/loader (1103:32)
Module._load
node:internal/modules/cjs/loader (942:12)
Module.require
node:internal/modules/cjs/loader (1127:19)
require
node:internal/modules/helpers (112:18)
Object.<anonymous>
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/@pankod/refine-antd/dist/index.js (1:58050)
Module._compile
node:internal/modules/cjs/loader (1246:14)
Module._extensions..js
node:internal/modules/cjs/loader (1300:10)
Module.load
node:internal/modules/cjs/loader (1103:32)
Module._load
node:internal/modules/cjs/loader (942:12)
Module.require
node:internal/modules/cjs/loader (1127:19)
require
node:internal/modules/helpers (112:18)
@pankod/refine-antd
file:///home/grosso_a/Workspace/autorizconstruction/frontend/.next/server/pages/_app.js (131:18)
__webpack_require__
file:///home/grosso_a/Workspace/autorizconstruction/frontend/.next/server/webpack-runtime.js (33:42)
eval
webpack-internal:///./pages/_app.tsx (11:77)
./pages/_app.tsx
file:///home/grosso_a/Workspace/autorizconstruction/frontend/.next/server/pages/_app.js (22:1)
__webpack_require__
file:///home/grosso_a/Workspace/autorizconstruction/frontend/.next/server/webpack-runtime.js (33:42)
__webpack_exec__
file:///home/grosso_a/Workspace/autorizconstruction/frontend/.next/server/pages/_app.js (196:39)
<unknown>
file:///home/grosso_a/Workspace/autorizconstruction/frontend/.next/server/pages/_app.js (197:28)
Object.<anonymous>
file:///home/grosso_a/Workspace/autorizconstruction/frontend/.next/server/pages/_app.js (200:3)
Module._compile
node:internal/modules/cjs/loader (1246:14)
Module._extensions..js
node:internal/modules/cjs/loader (1300:10)
Module.load
node:internal/modules/cjs/loader (1103:32)
Module._load
node:internal/modules/cjs/loader (942:12)
Module.require
node:internal/modules/cjs/loader (1127:19)
require
node:internal/modules/helpers (112:18)
Object.requirePage
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/next/dist/server/require.js (88:12)
<unknown>
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/next/dist/server/load-components.js (45:54)
async Object.loadComponents
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/next/dist/server/load-components.js (43:33)
async DevServer.findPageComponents
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/next/dist/server/next-server.js (563:36)
async DevServer.findPageComponents
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/next/dist/server/dev/next-dev-server.js (1041:20)
async DevServer.renderErrorToResponse
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/next/dist/server/base-server.js (1120:26)
async pipe.req.req
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/next/dist/server/base-server.js (1075:30)
async DevServer.pipe
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/next/dist/server/base-server.js (407:25)
async DevServer.run
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/next/dist/server/dev/next-dev-server.js (751:28)
async DevServer.handleRequest
file:///home/grosso_a/Workspace/autorizconstruction/frontend/node_modules/next/dist/server/base-server.js (322:20)
```
This bug is present on repositories example antd from created with `npm create refine-app@latest`.

This bug is a problem from NextJS that does not by default transpile node_modules packages. So in case of some external modules does not export transpiled package this bug occur.

I have fixed this bug by adding the antd packages to the `next.config.js` file.
```
  transpilePackages: [
    '@pankod/refine-antd',
    'antd',
    '@ant-design/pro-components',
    '@ant-design/pro-layout',
    '@ant-design/pro-utils',
    '@ant-design/pro-provider',
    'rc-pagination',
    'rc-picker'
  ],
```
I also have upgraded the NextJS version to `13.1.6` to use this option.

I think this bug must be fixed on NextJS or on Antd package. But i created this issue here to keep a trace and potentially adding it to the documentation.
My first goal was to create this issue on Antd but some have already been created hand closed without fix. ¯\_(ツ)_/¯

The links that has solved my issue.
- https://stackoverflow.com/questions/65936222/next-js-syntaxerror-unexpected-token-export
- https://github.com/martpie/next-transpile-modules/releases/tag/the-end
- https://nextjs.org/docs/advanced-features/compiler#module-transpilation 

### Steps To Reproduce

Create any app with Antd and NextJs and run it.

### Expected behavior

Running on the first try.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

My package.json
```
{
  ""name"": ""frontend"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""scripts"": {
    ""dev"": ""cross-env NODE_OPTIONS=--max_old_space_size=4096 refine dev"",
    ""build"": ""refine build"",
    ""start"": ""refine start"",
    ""lint"": ""eslint '**/*.{js,jsx,ts,tsx}'"",
    ""refine"": ""refine""
  },
  ""dependencies"": {
    ""@pankod/refine-cli"": ""^1.17.0"",
    ""@pankod/refine-core"": ""^3.99.4"",
    ""@pankod/refine-nextjs-router"": ""^4.3.0"",
    ""@pankod/refine-inferencer"": ""^2.4.0"",
    ""next"": ""^13.1.6"",
    ""next-compose-plugins"": ""^2.2.1"",
    ""react"": ""^18.2.0"",
    ""react-dom"": ""^18.2.0"",
    ""@pankod/refine-hasura"": ""^4.17.3"",
    ""graphql"": ""^16.6.0"",
    ""graphql-request"": ""^5.1.0"",
    ""@pankod/refine-antd"": ""^4.7.1""
  },
  ""devDependencies"": {
    ""@types/react"": ""^18.0.27"",
    ""@types/react-dom"": ""^18.0.10"",
    ""@types/node"": ""^18.13.0"",
    ""@typescript-eslint/parser"": ""^5.51.0"",
    ""typescript"": ""^4.9.5"",
    ""cross-env"": ""^7.0.3""
  }
}
```",,
1574387402,3555,"tutorial: unit3, p3, query-string version issue","### Documentation issue

cf this discussion: https://github.com/refinedev/refine/pull/3532#discussion_r1097461343

refine codebase is using query-string 7.x.x, while if we follow the instructions of the tutorial from scratch, we end up with a ""root"" node-module query-string versioned 8.x.x

The issue is that version 8.x.x don't expose `{ stringify }` as a member anymore:

```ts
// works in v7.x.x, doesn't work in v 8.x.x
// this is what is suggested to do on the tutorial docs, but the
// version we end up with is 8.x.x so it errors out
import { stringify } from ""query-string""

// works in v8.x.x
import queryString from ""query-string""

const { stringify } = queryString;
```

### Describe the solution (optional)

A solution would be or to use the new ""syntax"", but maybe we should bump the version on refine alltogether to avoid any confusion

Another way would be to import stringify from `@pankod/refine-simple-rest` so we are sure it is not dependent of any version of query-string.

",,
1574072955,3550,[BUG] ChakraUIEditInferencer treats number fields as strings when edited ,"### Describe the bug

An example of the generated code is 

```ts
<FormControl mb=""3"" isInvalid={!!(errors as any)?.outstanding_amount}>
        <FormLabel>Outstanding Amount</FormLabel>
        <Input
          type=""number""
          {...register(""outstanding_amount"", {
            required: ""This field is required""
          })}
        />
        <FormErrorMessage>
          {(errors as any)?.outstanding_amount?.message as string}
        </FormErrorMessage>
      </FormControl>
```

The `<input>` type is correctly set to `number` but when the user edits the field the value sent to the server is actually of a `string` type. 

### Steps To Reproduce

Use ChakraUIEditInferencer to generate a UI

### Expected behavior

The generator should accommodate number types

This can be solved by adding `valueAsNumber: true` to the register options, like so 

```ts
      <FormControl mb=""3"" isInvalid={!!(errors as any)?.outstanding_amount}>
        <FormLabel>Outstanding Amount</FormLabel>
        <Input
          type=""number""
          {...register(""outstanding_amount"", {
            required: ""This field is required"",
            valueAsNumber: true,
          })}
        />
        <FormErrorMessage>
          {(errors as any)?.outstanding_amount?.message as string}
        </FormErrorMessage>
      </FormControl>
```

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1564561595,3504,[BUG]: Property 'component' does not exist on type 'IntrinsicAttributes`...,"### Describe the bug

Hey everyone. I am getting a complaint from TypeScript that the `component` attribute of the `<List />` component from the `mui` package doesn't allow a string type.

### Steps To Reproduce

<kbd>ctrl</kbd> + <kbd>c</kbd> & <kbd>ctrl</kbd> + <kbd>v</kbd> the following inside VS code:

```ts
import { List } from ""@pankod/refine-mui"";

const CustomSideBar = () => {
  return (
    <List component=""nav"" />
  );
};

export default CustomSideBar;
```

### Expected behavior

Allow the string type.

### Screenshot

![Screenshot from 2023-01-31 17-37-42](https://user-images.githubusercontent.com/62179149/215805847-b6984176-c570-403b-99ef-4698d23a5a1d.png)


### Desktop

Any.

### Mobile

Any.

### Additional Context

Related to [#mui/issues/36015](https://github.com/mui/material-ui/issues/36015).

Edit: I tried the workaround mentioned there, but it didn't work with `refine-mui`;

![Screenshot from 2023-01-31 17-43-21](https://user-images.githubusercontent.com/62179149/215807311-6e982905-8488-4c82-b4da-bfdbd02eccfb.png)


",,
1560954133,3484,[BUG] refine-kbar doesn't show all actions on initial load,"### Describe the bug

when using refine-kbar on the dashboard not all actions that are available for the user. After navigating to another page more actions are available but not all.

### Steps To Reproduce

n/a

### Expected behavior

All actions that are permitted for that user should be available in all pages / contexts.

### Screenshot

<img width=""603"" alt=""Screenshot 2023-01-28 at 12 50 00"" src=""https://user-images.githubusercontent.com/2242057/215283085-f07769b5-5238-464f-a4fa-3fb176f3d5c0.png"">
<img width=""603"" alt=""Screenshot 2023-01-28 at 12 50 18"" src=""https://user-images.githubusercontent.com/2242057/215283089-112941ad-77fc-46b2-8810-fb7bfae710d2.png"">


### Desktop

Browser: 108.0.2 (64-bit)
Version: refine-kbar 0.10.2

### Mobile

_No response_

### Additional Context

```typescript
    <RefineKbarProvider>
        <Refine
          routerProvider={{
            ...routerProvider,
          }}
          notificationProvider={notificationProvider}
          dataProvider={dataProvider(hasuraClient)}
          accessControlProvider={{
            can: async ({ resource, action, params }) => {
              if (role == ""system_administrator"") {
                return Promise.resolve({
                  can: true,
                });
              }
              if (
                role in PermissionsMap &&
                resource in PermissionsMap[role] &&
                PermissionsMap[role][resource].includes(action)
              ) {
                if (
                  resource == ""users"" &&
                  role == ""operator"" &&
                  action == ""edit""
                ) {
                  if (params && params.id == user.sub) {
                    return Promise.resolve({
                      can: true,
                    });
                  } else {
                    return Promise.resolve({
                      can: false,
                      message: ""Unauthorized"",
                    });
                  }
                }
                return Promise.resolve({
                  can: true,
                });
              }
              return Promise.resolve({ can: false, message: ""Unauthorized"" });
            },
          }}
          Title={Title}
          Header={Header}
          Sider={Sider}
          Footer={Footer}
          Layout={Layout}
          resources={resources}
          catchAll={<ErrorComponent />}
          DashboardPage={DashboardPage}
          OffLayoutArea={OffLayoutArea}
          options={{
            disableTelemetry: true,
          }}
        >
          {children}
        </Refine>
      </RefineKbarProvider>
```",,
1560417113,3482,[FEAT] Hasura naming conventions (camelCase),"### Is your feature request related to a problem? Please describe.

Currently we hard-code snake-case operation and type names.

But recently Hasura released a [setting](https://hasura.io/docs/latest/schema/postgres/naming-convention/) where you can switch from snake_case to camelCase.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

The [Hasura DataProvider](https://github.com/refinedev/refine/blob/master/packages/hasura/src/dataProvider/index.ts) should be refactored to support camelCase.",,
1557776341,3464,[BUG] Remix + Chakra UI is not creating the build folder via pnpm,"### Describe the bug

```
✔ Do you want to use a UI Framework?: · chakra
✔ Do you want to add example pages?: · inferencer
✔ Do you want a customized layout?: · chakra-custom-layout
✔ Do you want to add dark mode support?: · no
✔ Do you need any Authentication logic?: · none
✔ Do you want to add kbar command interface support?: · no
✔ Choose a package manager: · pnpm
✔ Would you mind sending us your choices so that we can improve superplate? · no
```

These parameters does not create the build folder when running command `pnpm dev`

### Steps To Reproduce

```
PNPM
7.18.1

Node
v18.13.0
```

1. `pnpm create refine-app@latest my-project`
2. `cd my-project`
3. `pnpm dev`

### Expected behavior

Refine UI shown

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1554618104,3452,[BUG] Supabase types mismatch,"### Describe the bug

The types in [index.ts](https://github.com/refinedev/refine/blob/042ac8d4dde918dfd4ea374676d73d7724848b28/packages/supabase/src/index.ts) are not available in `@supabase/supabase-js@2.x` anymore.

### Steps To Reproduce

See above

### Expected behavior

See above

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1549991341,3432,[BUG] Can't test a component that uses useCustomMutation,"### Describe the bug

Components that are using refine hooks are impossible to test.

One of the examples is a component making a custom request to server. 

<details>
<summary>Here is my component code.</summary>

```tsx
import { FileUpload, UploadOutlined } from '@mui/icons-material';
import { useApiUrl, useCustomMutation } from '@pankod/refine-core';
import {
  Button,
  Card,
  CardActions,
  CardContent,
  CardMedia,
  LoadingButton,
  Modal,
  SxProps,
  Typography,
} from '@pankod/refine-mui';
import { FC, useState } from 'react';
import { ThumbnailUploadResponse } from 'types';

const cardStyle = {
  position: 'absolute',
  top: '50%',
  left: '50%',
  transform: 'translate(-50%, -50%)',
  maxWidth: 400,
};

type ThumbnailUploaderProps = {
  handleThumbnailUploadSuccess: (link: string) => any;
  sx?: SxProps;
};
const ThumbnailUploader: FC<ThumbnailUploaderProps> = ({
  handleThumbnailUploadSuccess,
  sx,
}) => {
  const [modalOpen, setModalOpen] = useState(false);
  const [fileValue, setFileValue] = useState<File | null>(null);
  const [fileUrl, setFileUrl] = useState('');
  const { mutate, isLoading } = useCustomMutation<ThumbnailUploadResponse>();
  const API_URL = useApiUrl();

  const handleOpen = () => setModalOpen(true);
  const handleClose = () => setModalOpen(false);

  const handleInputChange: React.ChangeEventHandler<HTMLInputElement> = (
    event
  ) => {
    if (!event.target.files?.length) return;
    const file = event.target.files[0];
    setFileValue(file);
    setFileUrl(URL.createObjectURL(file));
    handleOpen();
    event.target.value = '';
  };

  const handleCancelUpload = () => {
    URL.revokeObjectURL(fileUrl);
    setFileUrl('');
    handleClose();
  };
  const handleSubmitUpload = () => {
    if (!fileValue) {
      return;
    }
    const formData = new FormData();
    formData.append('file', fileValue);
    mutate(
      {
        url: `${API_URL}/thumbnail`,
        values: formData,
        method: 'post',
        successNotification: {
          message: 'Succesfully uploaded thumbnail.',
          type: 'success',
        },
        errorNotification: {
          message: 'Could not save thumbnail. Please try again later.',
          type: 'error',
        },
      },
      {
        onSuccess: (data) => {
          handleCancelUpload();
          handleThumbnailUploadSuccess(data.data.url);
        },
      }
    );
  };
  return (
    <>
      <Button
        variant=""outlined""
        color=""primary""
        aria-label=""upload picture""
        component=""label""
        size=""large""
        sx={sx}
      >
        <input
          hidden
          accept=""image/*""
          type=""file""
          onChange={handleInputChange}
          data-testid=""image-input""
          id=""image-input""
        />
        <FileUpload />
      </Button>
      <Modal
        open={modalOpen}
        onClose={handleClose}
        aria-labelledby=""modal-modal-title""
        aria-describedby=""modal-modal-description""
      >
        <Card sx={cardStyle}>
          <CardMedia
            component=""img""
            image={fileUrl}
            sx={{
              maxHeight: '400px',
              objectFit: 'contain',
            }}
          />
          <CardContent>
            <Typography id=""modal-modal-title"" variant=""h6"" component=""h2"">
              Are you sure you want to upload this image as a thumbnail?
            </Typography>
          </CardContent>
          <CardActions sx={{ justifyContent: 'end' }}>
            <Button
              variant=""outlined""
              color=""error""
              disabled={isLoading}
              onClick={handleCancelUpload}
            >
              Cancel
            </Button>
            <LoadingButton
              variant=""contained""
              startIcon={<UploadOutlined />}
              loading={isLoading}
              loadingPosition=""start""
              onClick={handleSubmitUpload}
            >
              Upload
            </LoadingButton>
          </CardActions>
        </Card>
      </Modal>
    </>
  );
};

export default ThumbnailUploader;
```
</details>

<details>
<summary>Here is my test code.</summary>

```tsx

/**
 * @jest-environment jsdom
 */
import { fireEvent, render, waitFor } from '@testing-library/react';
import axios from 'axios';
import ThumbnailUploader from 'components/ThumbnailUploader';
import { QueryClient, QueryClientProvider } from 'react-query';
import { ThumbnailUploadResponse } from 'types';

const queryClient = new QueryClient();

jest.mock('axios');
const mockedAxios = axios as jest.Mocked<typeof axios>;

it('', async () => {
  const url = 'mockedUrlValue';
  const resp: ThumbnailUploadResponse = { url };
  mockedAxios.post.mockResolvedValue(resp);

  const file = new File(['(⌐□_□)'], 'chucknorris.png', {
    type: 'image/png',
  });

  const handleThumbnailUploadSuccess = jest.fn((link: string) => link);
  const { queryByLabelText, getByLabelText, getByTestId } = render(
    <QueryClientProvider client={queryClient} contextSharing={true}>
      <ThumbnailUploader
        handleThumbnailUploadSuccess={handleThumbnailUploadSuccess}
      />
    </QueryClientProvider>
  );

  const uploadInput = getByTestId('image-input');
  await waitFor(() =>
    fireEvent.change(uploadInput, {
      target: { files: [file] },
    })
  );

  let uploadInputFromDom = document.getElementById(
    'image-input'
  ) as HTMLInputElement | null;
  // file should be saved to state and cleared from DOM
  expect(uploadInputFromDom?.files?.length).toBe(0);
});

```
</details>


As you can see I even tried wrapping it onto QueryProvider(as suggested [here](https://stackoverflow.com/a/69376960/14301331)) but it didn't work saying:

`No QueryClient set, use QueryClientProvider to set one`
Screenshot below.

### Steps To Reproduce

Just try to use custom hook in separate component and try to run tests for it.

### Expected behavior

Should be easy to test components(Or at least documentation should have more info about how to actually unit test components).

### Screenshot

<img width=""863"" alt=""image"" src=""https://user-images.githubusercontent.com/42899786/213569268-2006f8b5-382b-4062-88ff-2afd61fcb090.png"">


### Desktop

-

### Mobile

- 

### Additional Context

_No response_",,
1538386035,3421,[DOC] How to do a mutation from authProvider,"### Documentation issue

I can't use `useCreate()` in `authProvider` since we're not in a React component.
How to do a mutation to the db table from `authProvider` ?

I'm using supabase as a back-end and I need to have more fields saved on the `user` table of supabase, so I created a `profile` table which is linked to the `user` table. Now I need to create that `profile` record after the user is registered, so I though of adding this to the `authProvider.ts`. But as I said earlier, I don't know how to make a mutation from that `register` function.

### Describe the thing to improve

Is doing this from the `authProvider` a good thing ? And how can I do so ?

### Describe the solution (optional)

_No response_",,
1536173578,3415,[BUG] useCreateMany mutate onSuccess is not called,"### Describe the bug

`useCreateMany` `mutate` `onSuccess` is not called

### Steps To Reproduce

```typescript
const { mutate } = useCreateMany<any>();

// ...

mutate({
  ressource: ""categories"",
  values: [...]
}, {
  onSuccess: (data: any) => {
    // not being called
  }
})

```

`onError` is not being called either

### Expected behavior

`onSuccess` called when the mutation succeeds.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1535575681,3409,[FEAT] Graphql - configurable mutation InputType,"### Is your feature request related to a problem? Please describe.

In `create` and `update` mutation queries, `operation` name can be configured via `metadata`. `variable.input.type` can't be configured as it's ""hard coded"". 

There is case (or at list mine ;)), where `InputType.type` can't be the same as the ""hardcoded by refine"" ones.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

For example, in the [dataProvider.create](https://github.com/refinedev/refine/blob/master/packages/graphql/src/dataProvider/index.ts#L125), and in the same spirit that allow to configure `operation` : 
```
const operation = metaData?.operation ?? camelCreateName;
```
The variables.input.type should be something like: 
```
const variableInputType = metaData?.variableInputType ?? `${camelCreateName}Input`
```

What do you think about that ? Is it doable ? 
Thanks for this great piece of lib ! 
",,
1535393776,3408,[FEAT] Support cursor based pagination in table component,"### Is your feature request related to a problem? Please describe.

The underlying data that I have with my `dataProvider` periodically changes and the current offset-based pagination doesn't provide any guarantee of consistency. Instead of offset-based pagination, I want to pick a column (usually PK but not always integer / long) and filter based on that column with a cursor in the table component. Here are some use-cases where offset pagination is considered harmful. [1])(https://uxdesign.cc/why-facebook-says-cursor-pagination-is-the-greatest-d6b98d86b6c0), [2](https://dev.to/appwrite/this-is-why-you-should-use-cursor-pagination-4nh5)use cases

### Describe alternatives you've considered

If my table has a primary column that is integer/long, I can use `offset` in a way similar to cursor pagination but this approach doesn't work if the primary key is timestamp, string or a composite key. Also, even if the primary key is integer/long, the UX is not good as the values might be sparse instead of being incremental and continuous.

### Additional context

_No response_

### Describe the thing to improve

An interface in `dataProvider` that lets me provide a cursor value. Material UI already supports it out of the box: https://mui.com/x/react-data-grid/pagination/#cursor-implementation",,
1534911097,3403,"[BUG] Use ""routerProvider"" to customize the route jump problem","### Describe the bug

### The initial route cannot be set to the custom ""routes"" list directory. 
### He will jump to the first route in the ""resources"" list.

### Steps To Reproduce


```tsx
import routerProvider, { BrowserRouterComponent } from ""@pankod/refine-react-router-v6"";

      routerProvider={{
        
        routes: [ 
          {
            path: ""/home"",
            element: (<Home />),
          },        
        ],
        ...routerProvider,
        RouterComponent: BrowserRouterComponent.bind({
          initialRoute: ""/home"",//invalid
        }),
        

      }}

```

### Expected behavior

Can jump normally

### Screenshot

_No response_

### Desktop

OS : Ubuntu 22.04 LTS
browser ：edge

### Mobile

_No response_

### Additional Context

_No response_",,
1533414846,3395,[BUG] [Typing] useTable does return unknown error type,"### Describe the bug

```js
import { useTable } from ""@pankod/refine-react-table""
...
   const useTableMethods = useTable<ExpenseLaborAPI, HttpError>({
      refineCoreProps: {
         resource: ExpensesEnum.Labor,         
     
      },
      columns,
   })

   const {
      refineCore: {
         tableQueryResult: { data: tableData, error, isLoading, isSuccess, refetch },
      },
   } = useTableMethods
```

`tableData`, `isLoading`, `isSuccess `and `refetch `are correctly typed. `error `is `unkown`. 



### Steps To Reproduce

see above

### Expected behavior

error should be correctly typed

### Screenshot

![image](https://user-images.githubusercontent.com/73945900/212489803-552eb0f6-cfdc-43e5-a9c2-b7ab29a27b11.png)


### Desktop

_No response_

### Mobile

_No response_

### Additional Context

@omeraplak  added in discord:
""Ömer — Today at 18:44
It seems we don't use generic error type in return type""
[https://github.com/refinedev/refine/blob/next/packages/react-table/src/useTable/index.ts#L19](https://github.com/refinedev/refine/blob/next/packages/react-table/src/useTable/index.ts#L19)",,
1529863720,3386,[BUG],"### Describe the bug

vscode reports missing tsconfig.build.json file in refine-antd in ""extends"" line

### Steps To Reproduce

- create generic antd application as explained in Discussion #3343
- start server

### Expected behavior

no problems listed in the problems tab

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

my workaround (may not work for everyone) is to simply delete the extends line, since I don't have a tsconfig.build.json to extent.",,
1528977302,3380,[BUG] Annoying error on console when using refine-nextjs-router provider Link component with Material-UI buttons,"### Describe the bug

Project configuration:

![image](https://user-images.githubusercontent.com/16052531/211807984-e9597906-3098-46a5-bc1b-ab51080ac785.png)

Console error:

![image](https://user-images.githubusercontent.com/16052531/211809336-9c62e4e0-f4ca-4585-b837-3689d18a203d.png)

The problem is when using Link with ListItemButton(it is already on template, not added by me)
This ListItemButton component expects something that receives a ref prop.

![image](https://user-images.githubusercontent.com/16052531/211810662-c6a57130-804f-42dc-b33a-b6c61943f06f.png)

### Steps To Reproduce

Create a project with the configuration of bug description.
Add layout, sider and title exports on layout index.ts
```ts
export * from ""./layout"";
export * from ""./sider"";
export * from ""./title"";
```
Run yarn dev.

### Expected behavior

Don't show any error.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

Fix: Add a forwardRef on Link component(it already pass all props to nextjs Link, that expects a ref)",,
1528967403,3379,"[BUG] Material-UI with custom layout, wrong template","### Describe the bug

Project configuration:

![image](https://user-images.githubusercontent.com/16052531/211807984-e9597906-3098-46a5-bc1b-ab51080ac785.png)

Layout import error on _app.tsx:

![image](https://user-images.githubusercontent.com/16052531/211808073-57201eb0-39e5-48de-b451-873368a71619.png)

When you run `yarn dev` the app appears without header and sider.


### Steps To Reproduce

Create a project with the configuration of bug description.
Run yarn dev.

### Expected behavior

Show header and sider by default, it seams to be wrong, importing something that isn't exported.


### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

The fix is really really simple, just export three more things on index.ts on layout components:
```ts
export * from ""./layout"";
export * from ""./sider"";
export * from ""./title"";
```
",,
1527936851,3374,[BUG] DataGrid not changing loading state when mutating or invalidating data,"### Describe the bug

I am using a DataGridPro with row reordering functionality. Whenever I reorder rows I store new order into state and show a ""Save new order"" button. When user clicks this button I do the following:
1. Run a customMutation using `useCustomMutation` to send new row order to backend.
2. After that I invalidate query result using ""useInvalidate"". This way I'm trying to tell refine that this data needs to be refetched.

<details>
<summary>Overall screenshot</summary>

![image](https://user-images.githubusercontent.com/42899786/211651052-d5c504a0-3931-403e-a3fe-b6f295b9eb2d.png)

Pleaase don't mind red lines, it was about another issue.
</details>

What happens is that when I call `invalidate` I expect `useDataGridProps().dataGridProps.isLoading` property to switch from false to true, but this does not happen. Instead, my DataGrid simply gets silently updated without any loading indication.

I've asked this in Discord(https://discord.com/channels/837692625737613362/1062412321642786816), and @omeraplak helped and pointed that it might be a bug here: 
https://github.com/refinedev/refine/blob/next/packages/mui/src/hooks/useDataGrid/index.ts#L310

Probably that ""else"" block in ternary should be `isFetching` instead of `!isFetched`.
I could make a PR, but it can be a wrong assumption, so I'd better not.

### Steps To Reproduce

Described in description.

Except you don't really need to have DataGridPro component, simply add some invalidation to your resource list by button click, that would be enough to see the behaviour.

### Expected behavior

DataGrid shows loading progress when data (or resource) it's using get's invalidated and (re-)fetched.

### Screenshot

Added above.

### Desktop

Not platform-specific.

### Mobile

Not platform-specific.

### Additional Context

_No response_",,
1524582937,3365,[BUG] The color configuration of the sidebar is out of sync with the theme,"### Describe the bug

The color configuration of the sidebar is out of sync with the theme

### Steps To Reproduce

The theme of the sidebar does not match the specified theme
The sidebar does not change synchronously after modifying the color parameter in the example customization-theme-mui
I used the default mui theme Settings but the sidebar was not applied

customization-theme-mui/src/contexts/index.tsx
```js

import React, {
    PropsWithChildren,
    createContext,
    useEffect,
    useState,
} from ""react"";
import { ThemeProvider } from ""@pankod/refine-mui"";
import { DarkTheme } from ""@pankod/refine-mui"";

import { createTheme } from ""@mui/material"";

const LightTheme = createTheme({

    components: {
        MuiAppBar: {
            styleOverrides: {
                colorDefault: {
                    backgroundColor: ""#4f3cc9"",
                },
            },
        },
    
        MuiTypography: {
            styleOverrides: {
                h5: {
                    fontWeight: 800,
                    lineHeight: ""2rem"",
                },
            },
        },
    },
});


type ColorModeContextType = {
    mode: string;
    setMode: () => void;
};

export const ColorModeContext = createContext<ColorModeContextType>(
    {} as ColorModeContextType,
);

export const ColorModeContextProvider: React.FC<PropsWithChildren> = ({
    children,
}) => {
    const colorModeFromLocalStorage = localStorage.getItem(""colorMode"");
    const isSystemPreferenceDark = window?.matchMedia(
        ""(prefers-color-scheme: dark)"",
    ).matches;

    const systemPreference = isSystemPreferenceDark ? ""dark"" : ""light"";
    const [mode, setMode] = useState(
        colorModeFromLocalStorage || systemPreference,
    );

    useEffect(() => {
        window.localStorage.setItem(""colorMode"", mode);
    }, [mode]);

    const setColorMode = () => {
        if (mode === ""light"") {
            setMode(""dark"");
        } else {
            setMode(""light"");
        }
    };

    return (
        <ColorModeContext.Provider
            value={{
                setMode: setColorMode,
                mode,
            }}
        >
            <ThemeProvider theme={mode === ""light"" ? LightTheme : DarkTheme}>
                {children}
            </ThemeProvider>
        </ColorModeContext.Provider>
    );
};

```



### Expected behavior

Expect the theme of the sidebar to match the theme configuration

For example, I want to change the sidebar to black text on a white background

There is currently no way to adjust the color of the sidebar font


### Screenshot


<img width=""1480"" alt=""image"" src=""https://user-images.githubusercontent.com/29041881/211208075-eeacd24e-17f9-42ce-841d-db7918c08582.png"">

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1522247885,3357,[FEAT] Reduce bundle size in Next.js (with Material UI),"### Is your feature request related to a problem? Please describe.

The bundle size of my Refine app built with Next.js and Material UI is very big and the app is very slow:
```
┌   /_app                                  0 B             551 kB
├ λ /[[...refine]]                         249 B           551 kB
└ ○ /404                                   184 B           551 kB
+ First Load JS shared by all              551 kB
  ├ chunks/framework-305dbdef56d67aa9.js   45.4 kB
  ├ chunks/main-a8eaa706e962a5d6.js        27.9 kB
  ├ chunks/pages/_app-1e8eb2bf899090b0.js  476 kB
  └ chunks/webpack-44567bfec3a37904.js     1.05 kB
```
I think there is room for improvement.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

1.Out of curiosity, I removed the resource pages from the `_app.tsx` file to see the results. It significantly reduced the bundle size:
```
┌   /_app                                  0 B             292 kB
├ λ /[[...refine]]                         249 B           292 kB
└ ○ /404                                   184 B           292 kB
+ First Load JS shared by all              292 kB
  ├ chunks/framework-305dbdef56d67aa9.js   45.4 kB
  ├ chunks/main-a8eaa706e962a5d6.js        27.9 kB
  ├ chunks/pages/_app-432b4edb6ea69894.js  217 kB
  └ chunks/webpack-44567bfec3a37904.js     1.05 kB
```
The fact that I have to import all resource pages in the `_app.tsx` file to pass them to `<Refine>` has a significant effect on the bundle size and speed of my app. I wish there was a way to at least lazy load them.

2. I have to import Material UI components using named imports:
```ts
import { Button } from ""@pankod/refine-mui"";
``` 
But the [Material UI docs suggests](https://mui.com/material-ui/guides/minimizing-bundle-size/) to import the components using default imports to improve bundle size in dev mode:
```ts
import Button from ""@pankod/refine-mui/Button"";
```
This is not possible with `@pankod/refine-mui` because it only re-exports mui components with named export.

3. Next.js recently introduced a new compiler option, `modularizeImports` that automatically converts named imports to default imports:
```ts
// before:
import { Delete } ""@mui/icons-material""
// after:
import Delete ""@mui/icons-material/Delete""
```
To enable it I just need to add this to my `next.config.js`:
```js
module.exports = {
  modularizeImports: {
    ""@mui/icons-material"": {
      transform: ""@mui/icons-material/{{member}}"",
    },
  },
};
```
This is very handy for packages like `@mui/icons-material`. It significantly reduces the compile time in dev mode. It doesn't effect the production build because `@mui/icons-material` is side-effect free (at least this is what I've been told, I don't have deep knowledge about how bundles work).
It also could be used with `@mui/material` but not your version of mui (`@pankod/refine-mui/`) so 1) we can't reduce compile time in dev mode with this option 2) it potentially effects the production build because `@pankod/refine-mui` is not side-effect free(?)

Again, I'm not very familiar with this topic. These are just my raw thoughts.

I'm willing to do anything I can do to help you on this because I'm currently blocked by this.",,
1520139792,3350,[FEAT] Update axios for @pankod/refine-strapi-v4,"### Is your feature request related to a problem? Please describe.

Hi, currenty @pankod/refine-strapi-v4 is using axios v0.26 which is a pretty old version. The most current one is v1.2.x. Is it possible to update the dependency to the most current one? I'm having problems after upgrading axios, there is a typescript error.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Use axios 1.2.x",,
1518704067,3345,[BUG] Font family override does not work,"### Describe the bug

Typography override does not work - when trying to change fontFamily from Monserrat to Roboto only, it does not work, when inspecting elements, same `Montserrat,-apple-system,BlinkMacSystemFont,""Segoe UI"",Roboto,""Helvetica Neue"",Arial,sans-serif,""Apple Color Emoji"",""Segoe UI Emoji"",""Segoe UI Symbol""` stays.

### Steps To Reproduce

1. In src/App.tsx define theme override:
```
export const typography: TypographyVariantsOptions = {
  fontFamily: [""Roboto"", ""Arial"", ""sans-serif""].join("",""),
};

const overridenLightTheme = {
  ...LightTheme,
  palette: {
    ...LightTheme.palette,
    primary: {
      main: ""#1976D2"",
      contrastText: ""#FFFFFF"",
    },
    secondary: {
      main: ""#363A47"",
    },
  },
  ...typography,
};
```
2. Pass it to the ThemeProvider
3. Inspect page texts

### Expected behavior

`font-family` properties to be changed to the one defined in the typography override

### Screenshot

<img width=""1874"" alt=""image"" src=""https://user-images.githubusercontent.com/14222839/210533742-c6ea76c6-476e-47c7-b9dc-28ac615e713c.png"">


### Desktop

- Browser: Chromium
- ""@pankod/refine-cli"": ""^1.2.0"",
- ""@pankod/refine-core"": ""^3.18.0"",
- ""@pankod/refine-inferencer"": ""^1.2.0"",
- ""@pankod/refine-mui"": ""^3.30.0"",

### Mobile

_No response_

### Additional Context

_No response_",,
1516409277,3332,[BUG] Material-UI createTheme does not expose MuiDataGrid,"### Describe the bug

If one wants to customize the DataGrid via the main theme, Typescript throws an error because MuiDataGrid is not present in the components object of the Theme object. The @mui/x-data-grid docs recommend [adding a type augmentation](https://mui.com/x/react-data-grid/getting-started/#typescript), but since the createTheme that we get is from the refine library and not mui directly, we can't use the augmentation.

As a workaround, setting the object passed to createTheme as any allows us to style the DataGrid, but we lose Typescript for it.

### Steps To Reproduce

1. Create a theme via the `@pankod/refine-mui`-exposed `createTheme`
2. Use the following structure:
 ```
 components: { 
  MuiDataGrid: {
    styleOverrides: {
      cell: {
        borderBottom: ""1px solid black !important""
      }
    }
  }
}
```

### Expected behavior

To get Typescript autocomplete for the MuiDataGrid object

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1516198971,3328,[BUG] i18n notification message,"### Discussed in https://github.com/refinedev/refine/discussions/3325

<div type='discussions-op-text'>

<sup>Originally posted by **EugeneKostin** December 30, 2022</sup>
Hi everyone,
I use default i18n namespace instead ""common"" and find untranslated notifications. In the refine-core src files, the useList hook notification uses a message with a common namespace when other hooks use the default. Is this an issue or am I missing something?

useList
```
...
message: translate(
    ""common:notifications.error"",
    { statusCode: err.statusCode },
    `Error (status code: ${err.statusCode})`,
),
```

useOne
```
...
message: translate(
    ""notifications.error"",
    { statusCode: err.statusCode },
    `Error (status code: ${err.statusCode})`,
),
```
Thanks for your help!</div>",,
1508058549,3308,[BUG] Hasura Data Provider - Allow remote schemas and possibility to change ID type,"### Describe the bug

When a remote schema is imported into Hasura, the grouping relationships are called as {table}_aggregated instead of {table}_aggregate. Right now the Hasura dataProvider always expects that the name of the aggregation table is suffixed with aggregated.

![image](https://user-images.githubusercontent.com/116877667/209162163-66df2b72-bd9a-4a90-9904-2c33e32d1c9c.png)

We can see this in https://github.com/refinedev/refine/blob/next/packages/hasura/src/dataProvider/index.ts#L215
Aggregate Problem

```
const hasuraFilters = generateFilters(filters);

            const operation = metaData?.operation ?? resource;

            const aggregateOperation = `${operation}_aggregate`;

            const hasuraSortingType = `[${operation}_order_by!]`;
            const hasuraFiltersType = `${operation}_bool_exp`;
```


The same goes for the Hasura id field, which is forced by the data provider to be a uuid and cannot be of the numeric or string type.

https://github.com/refinedev/refine/blob/next/packages/hasura/src/dataProvider/index.ts#L162

UUID Problem

```
        getOne: async ({ resource, id, metaData }) => {
            const operation = `${metaData?.operation ?? resource}_by_pk`;

            const { query, variables } = gql.query({
                operation,
                variables: {
                    id: { value: id, type: ""uuid"", required: true },
                    ...metaData?.variables,
                },
                fields: metaData?.fields,
            });

            const response = await client.request(query, variables);

            return {
                data: response[operation],
            };
        },
```


Is it possible to parameterize these cases in some way or give a solution to the problem?

### Steps To Reproduce

**For aggregated problem:**

1. Go to Hasura and export a remote Schema
2. Try to get the list through Hasura Data Provider with useList hook.
3. Try to execute the next query generated by the dataProvider: 

query: ""query ($limit: Int, $offset: Int, $where: users_test_bool_exp) { users_test (limit: $limit, offset: $offset) { id, name, lastname, email, genre, role } users_test_aggregate (where: $where) { aggregate { count } } }""
variables: {limit: 20, offset: 0}

**For uuid problem:**

You could find this problem is your example case of Hasura DataProvider when you try to access to the detail of a post:
1. Install your hasura data provider sample: npm create refine-app@latest -- --example data-provider-hasura
2. access to: http://localhost:3000/posts 
![image](https://user-images.githubusercontent.com/116877667/209164144-45ae56ea-e5fb-42ab-9cc2-cab82c658e29.png)

3. Access to the detail of a post:
![image](https://user-images.githubusercontent.com/116877667/209164234-01157fe4-7fe3-4bbe-929f-b99582690556.png)

4. See the network error
{""errors"":[{""extensions"":{""code"":""validation-failed"",""path"":""$.selectionSet.posts_by_pk.args.id""},""message"":""variable 'id' is declared as 'uuid!', but used where 'Int!' is expected""}]}


### Expected behavior

Give the possibility of defining these use cases for different data schemas by parameterization.

### Screenshot

_No response_

### Desktop

- OS
- Browser: Last Chrome
- Data Provider: @pankod/refine-hasura

### Mobile

_No response_

### Additional Context

_No response_",,
1501281421,3259,[BUG] Your next.js starter app has issues,"### Describe the bug

I found a couple of issues with your next.js starter app.
```ts
// pages/[[...refine]].tsx
export const getServerSideProps: GetServerSideProps = async (context) => {
  // const { resource, action, id } = handleRefineParams(context.params?.refine);

  const { isAuthenticated, ...props } = await checkAuthentication(
    authProvider,
    context
  );

  const i18nProps = await serverSideTranslations(context.locale ?? ""en"", [
    ""common"",
  ]);

  if (!isAuthenticated) {
    return { props: { ...props, ...i18nProps } };
  }

  return {
    props: {
      ...(await serverSideTranslations(context.locale ?? ""en"", [""common""])),
    },
  };
};
```
1. `i18nProps` is already calculated and stored in a variable so don't need to run `await serverSideTranslations(context.locale ?? ""en"", [""common""])` again. It should be:
```ts
  return {
    props: {
      ...i18nProps,
    },
  };
```
2. Here `props` could be any valid return value of `getServerSideProps`. 
```ts
  if (!isAuthenticated) {
    return { props: { ...props, ...i18nProps } };
  }
```
For example it could be a redirect, but your are spreading it into the `props` ? I think it should be something like this:
```ts
  if (!isAuthenticated) {
    return {
      ...props,
      // @ts-ignore
      props: { ...(props?.props ? props.props : {}), ...i18nProps },
    };
  }
```
Now redirects work. I had to add `@ts-ignore` because otherwise I would get a wired typescript error that I couldn't resolve.

If I know where is your next.js starter app code, I would update it myself.

### Steps To Reproduce

x

### Expected behavior

x

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1499299371,3245,[BUG] Hasura DataProvider - incomplete implementation,"### Describe the bug

The 'handleFilterValue' function of the Hasura Data provider, https://github.com/refinedev/refine/blob/3af9abd4c787783dd85862ec5efa4a22ca1ebd78/packages/hasura/src/dataProvider/index.ts#L88-L109, does not handle the various contain and similar operators, i.e. not concatenating the '%' character(s). 

### Steps To Reproduce

Use the Hasura DataProvider, and use one of the operators mentioned in the bug.

### Expected behavior

To generate the proper GQL query for hasura.

```
case ""contains"":
case ""containss"":
case ""ncontains"":
case ""ncontainss"":
    return `%${value}%`
```

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1498561537,3244,[BUG] simple rest package needs jest types,"### Describe the bug

If I grab the simple rest package to use as a starter for my own data provider, I need the @types/jest. Please include it. Submitting PR. 

### Steps To Reproduce

1. Clone this repo.
2. Copy the simple rest package into separate directory to use as boilerplate for my own data provider.
3. Copy over base tsconfig file from root - kind of expect a few of these steps so I don't consider it a bug. 
4. Install, and build work.
5. Run test. Fails with AfterAll not defined. 
6. Add @types/jest and tests run. 

### Expected behavior

1. There should be a base boilerplate project for data providers that I can grab and go. 
2. Since there isn't, I'm following the documentation and fixing up. The package is close but it would be nice to have any dev dependencies needed to build and test successfully. 

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1495958440,3225,export 'experimental_sx' (reexported as 'experimental_sx') was not found in '@mui/material/styles',"### Describe the bug

The following error occurs when starting the project (tutorial: https://refine.dev/docs/tutorials/material-ui-tutorial):

export 'experimental_sx' (reexported as 'experimental_sx') was not found in '@mui/material/styles'

### Steps To Reproduce

yarn run start

### Expected behavior

Start the project without errors

### Screenshot

![image](https://user-images.githubusercontent.com/45979790/207534301-b2ded326-2aec-45dd-bc76-66ff790085c6.png)


### Desktop

- OS: macOS Big Sur
- Browser: Edge
- Package Manager: yarn

### Mobile

_No response_

### Additional Context

_No response_",,
1492156063,3214,[FEAT] useFormContext is not exported via @pankod/refine-react-hook-form,"### Is your feature request related to a problem? Please describe.

[useFormContext ](https://react-hook-form.com/api/useformcontext) is not available in `pankod/refine-react-hook-form`.

### Describe alternatives you've considered

I have not seen it included in https://github.com/refinedev/refine/pull/3209


`import {  useFormContext } from ""react-hook-form""`

### Additional context

_No response_

### Describe the thing to improve

thank you",,
1491780661,3207,[BUG] Can't serve the app from a subdirectory,"### Describe the bug

I exactly followed your instructions on [`Serving the application from a subdirectory`](https://refine.dev/docs/api-reference/core/providers/router-provider/#serving-the-application-from-a-subdirectory) (with react-location) but it didn't work. Another guy who I believe is a core team member confirmed that it's a bug in [`discord`](https://discord.com/channels/837692625737613362/1019855665633706044/threads/1051820059867234324)

Here is the bug report that I posted on discord:

I want the base path of my app be `/admin/`. So for example the users list page would be `/admin/users`. I followed your instructions : `Serving the application from a subdirectory`
I have a `CustomRouterComponent` component:
```ts
const { RouterComponent, location } = routerProvider;

const CustomRouterComponent = () => (
  <RouterComponent location={location} basepath=""/admin"" />
);
```
And I give it to`<Refine>`:
```ts
routerProvider={{
  ...routerProvider,
  RouterComponent: CustomRouterComponent,
}}
```
Now when I open `/admin` it automatically redirects to `/admin/users` which is a good sign but nothing renders on that page and any other page in my app. I don't get any wired error on the console. I don't get a 404. Just nothing renders. All pages are empty.

**I'm using Vite+React+TS+React location**. All of my dependencies all up-to-date. I've also tried to set `base` to `/admin/` in `vite.config.ts` but it didn't help:
```ts
export default defineConfig({
  base: ""/admin/"",
});
```

### Steps To Reproduce

1. Create a Refine app with React and React Location
2. Follow the instructions https://refine.dev/docs/api-reference/core/providers/router-provider/#serving-the-application-from-a-subdirectory

### Expected behavior

Well, it should work as expected :)

### Screenshot

_No response_

### Desktop

Browser: Chromium 105.0.5195.125 Fedora Project


### Mobile

_No response_

### Additional Context

_No response_",,
1491722363,3204,"[BUG] export [type] FieldPath from ""@pankod/refine-react-hook-form"" ","### Describe the bug

Typescript Type `FieldPath` is not exported from `@pankod/refine-react-hook-form`.
However it is a valid type exported from `react-hook-form`

### Steps To Reproduce

`import type { FieldPath } from ""@pankod/refine-react-hook-form"" `Does not work
`import type { FieldPath } from ""react-hook-form""` Does work

### Expected behavior

All types of react-hook-form should exported from @pankod/refine-react-hook-form

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

thank you",,
1490310200,3193,[DOC] 'useStepForm' API documentation for refine-mantine,"### Documentation issue

Existing code in documentation (https://refine.dev/docs/api-reference/mantine/hooks/form/useStepsForm/) had incorrect import statements.

### Describe the thing to improve

Sync documentation with the code that works in accompanying stackblitz.

### Describe the solution (optional)

_No response_",,
1490244850,3192,"[BUG] export [type] UseFieldArrayReplace from  ""@pankod/refine-react-hook-form""","### Describe the bug

Typescript Type `UseFieldArrayReplace` is not exported from `""@pankod/refine-react-hook-form""`.
However it is a valid type exported from `""react-hook-form""`

### Steps To Reproduce

`import type {  UseFieldArrayReplace } from ""@pankod/refine-react-hook-form""` Does **not** work
`import type { UseFieldArrayReplace } from ""react-hook-form""` Does work

### Expected behavior

All types of `react-hook-form` should exported from `@pankod/refine-react-hook-form`

### Screenshot

![image](https://user-images.githubusercontent.com/73945900/206918552-d83f6a17-7191-4ca4-8a03-3e36c0249a9b.png)


### Desktop

_No response_

### Mobile

_No response_

### Additional Context

Thank you 😘",,
1489802082,3187,[BUG] Refine Antd + Vite fails in production build,"### Describe the bug

I think it's an issue similar to https://bytemeta.vip/repo/rjsf-team/react-jsonschema-form/issues/2962

When building a project with Refine/Antd and Vite there's an error on the browser `generatePickerExports is not a function`. 
It seems that the issue is due to imports from CommonJS modules in AntD and not ESModules as vite requires.

I've patched node_modules/@pankod/refine-antd/dist/esm/index.js to make it work (replacing picker imports from `lib` to `es` and it seem to resolve the issue.

### Steps To Reproduce

1. Create a new refine project with Antd and Vite.
2. Set `  build: {
    minify: false
  },` in `vite.config.ts`.
3. `npm run build`
4. `npm run preview`
5. Open a browser and see the error

### Expected behavior

Production build should work.

### Screenshot

_No response_

### Desktop

- OS: Mac OS 13
- Chrome 108
- Deployment with Vercel

### Mobile

_No response_

### Additional Context

_No response_",,
1487782277,3184,[DOC] Material UI Tutorial,"### Documentation issue

The [Material UI Tutorial](https://refine.dev/docs/tutorials/material-ui-tutorial/) has incorrect directory references for the boilerplate project. 

At [""Create a List Page""](https://refine.dev/docs/tutorials/material-ui-tutorial/#creating-a-list-page), the instructions say to create a directory ""interfaces"" under ""/src"". However, the ""list.tsx"" file calls the interface like it's a library `import { IPost } from ""interfaces""` not a relative directory. 

Later in the step, when adding `import { PostList } from ""pages/posts""` it's the same issue - that's not a relative file or directory. It's calling it like a library. 

### Describe the thing to improve

Inside ""src/pages/posts/list.tsx"" revise from `import { IPost } from ""interfaces""` to `import { IPost } from ""../../interfaces""`.

Inside ""src/App.tsx"" revise from `import { PostList } from ""pages/posts""` to `import { PostList } from ""./pages/posts/list""`. 

### Describe the solution (optional)

_No response_",,
1486086160,3174,[FEAT] Use next.js default compiler SWC,"### Is your feature request related to a problem? Please describe.

The next.js template currently uses babel. Babel is slow. 

### Describe alternatives you've considered

Vite, but next.js will not support vite natively as they are all-in on swc. 

### Additional context

_No response_

### Describe the thing to improve

Since next.js 12, the default compiler is swc. https://nextjs.org/docs/advanced-features/compiler This has:

* 3x faster refresh
* 5x faster builds for production
* 17x faster than Babel for compilation

Additionally, it is the main compiler going forward for next.js. ",,
1483006867,3163,[FEAT] Add support for Relay Cursor Connections Spec (relay.dev),"### Is your feature request related to a problem? Please describe.

Relay is designed for high performance at any scale. Relay keeps management of data-fetching easy, whether your app has tens, hundreds, or thousands of components. And thanks to Relay’s incremental compiler, it keeps your iteration speed fast even as your app grows 

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Create a Dataprovider that supports communication with backends that implement the [Relay Cursor Connections Spec](https://relay.dev/graphql/connections.htm) ",,
1481762591,3155,[FEAT] Export react-router-v6 Search Params in @pankodrefine-react-router-v6,"### Is your feature request related to a problem? Please describe.

Make [React Router's useSearchParams](https://reactrouter.com/en/main/hooks/use-search-params) hook available through @pankodrefine-react-router-v6. This helps with parsing and setting searchparams.


Maybe even consider exporting everything from react router package? (by Ömer in Discord)

Help Thread in Discord: https://discordapp.com/channels/837692625737613362/1049862807786623048

### Describe alternatives you've considered

Parsing and formatting of search params would be possible by a third party package however its more convenient to use the built in hook.

### Additional context

_No response_

### Describe the thing to improve

import { useSearchParams } from @pankodrefine-react-router-v6",,
1474628732,3127,[BUG] env: node\\r: No such file or directory when run refine cli,"### Describe the bug

There is an error when run refine cli `npm run refine create-resource`,

The error message is:
```

 shortMessage: 'Command failed with exit code 127: /Users/john/learning/panel/node_modules/jscodeshift/bin/jscodeshift.js ./ --extensions=ts,tsx,js,jsx --parser=tsx --transform=/Users/john/learning/panel/node_modules/@pankod/refine-cli/dist/../src/transformers/resource.ts --ignore-pattern=**/.cache/** --ignore-pattern=**/node_modules/** --ignore-pattern=**/build/** --ignore-pattern=**/.next/** --__actions=list,create,edit,show --__pathAlias=../src/components --__resourceFolderName=providers --__resource=Provider --__resourceName=provider',

 exitCode: 127,
  signal: undefined,
  signalDescription: undefined,
  stdout: '',
  stderr: 'env: node\\r: No such file or directory',
  failed: true,
  timedOut: false,
  isCanceled: false,
  killed: false
```



### Steps To Reproduce

1. npm run refine create-resource
2. input provider as name
3. enter

### Expected behavior

Fill resource attribute in <Refine> tag.
Create providers/xxx.ts 

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1473892472,3125,[BUG] React router extract incorrect resource in encoded pathname,"### Describe the bug

When the `recordItemId` has some symbol like `:` the pathname will be encoded to `%3A`. Therefore, the `RouterProvider.useParams` will work incorrectly.

### Steps To Reproduce

1. Go to the Show of resource that has contained `:` id.
2. Cannot show the resource

### Expected behavior

Show the resource successfully.

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1471722416,3118,[BUG] using inferencer component with appwrite dataprovider,"### Describe the bug

Using `inferencer` and `appwrite dataprovider` i got this `warning` message in the browser console, obviously the app doesn't work 
```
Formatting error in inferencer SyntaxError: An identifier or keyword cannot immediately follow a numeric literal. (3:26) (at bundle.js:267985:21)
  1 | import React from ""react"";import { useDataGrid, DataGrid, GridColumns, EditButton, ShowButton, DeleteButton, List, DateField } from ""@pankod/refine-mui"";
  2 |         
> 3 |         export const 6357a1b63ef8d80b30c6List = () => {
    |                          ^
  4 |             const { dataGridProps } = useDataGrid();
  5 |         
  6 |             
    at k (bundle.js:267985:21)
```

### Steps To Reproduce

configure resource name with appwrite collectionId e.g: 6357a1b12a5c0d9e41b2
```
function App() {
  return (
    <ThemeProvider theme={LightTheme}>
      <CssBaseline />
      <GlobalStyles styles={{ html: { WebkitFontSmoothing: ""auto"" } }} />
      <RefineSnackbarProvider>
        <Refine
          dataProvider={dataProvider(appwriteClient, {
            databaseId: ""6357a1b12a5c0d9e41b2"",  //moviedb
          })}
          liveProvider={liveProvider(appwriteClient, {
            databaseId: ""6357a1b12a5c0d9e41b2"",
          })}
          liveMode=""auto""
          authProvider={authProvider}
          LoginPage={AuthPage}
          notificationProvider={notificationProvider}
          Layout={Layout}
          ReadyPage={ReadyPage}
          catchAll={<ErrorComponent />}
          routerProvider={routerProvider}
          resources={[
            {
              name: ""6357a1b63ef8d80b30c6"",
              list: MuiListInferencer,
              options: {
                label: 'Movies'
              }
            }
          ]}
        />
      </RefineSnackbarProvider>
    </ThemeProvider>
  );
}
```

### Expected behavior

that app works  🚀

### Screenshot

_No response_

### Desktop

_No response_

### Mobile

_No response_

### Additional Context

_No response_",,
1462180352,3055,[FEAT] export material ui localization files,"### Is your feature request related to a problem? Please describe.

Currently, I have to install `@mui/material` manually to be able to use its translation files. It's not ideal. Especially because you have i18n provider, I assume this library is globally adopted so exporting locale files is essential.

related docs: https://mui.com/material-ui/guides/localization/#locale-text

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

just export ""@mui/material/locale""

I'm willing to create a PR for that",,
1456310510,3021,[BUG] Not able to run it after installation,"### Describe the bug

Cannot run the project after generated by `npx superlate-cli` with the follwowing error:
```
Error: You cannot define a route with the same specificity as a optional catch-all route (""/"" and ""/[[...refine]]"").
```

### Steps To Reproduce

1. run `npx superplate-cli -o refine-antd backend_admin` and with the following choices:
```
E:\projects\backend_admin>npx superplate-cli -o refine-antd backend_admin
√ Cloned remote source successfully.
√ Select your project type » refine-nextjs
refine-antd is not a valid preset.
√ What will be the name of your app · backend_admin
√ Package manager: · yarn
√ Choose your backend service to connect: · data-provider-strapi-v4
√ Do you want to use a UI Framework?: · antd
√ Do you want to customize the Ant Design theme?: · antd-css
√ Do you want to customize the Ant Design layout?: · no
√ Do you need i18n (Internationalization) support?: · no
√ Do you want to add kbar command interface support?: · no
√ Would you like to share your choices with us anonymously? · no

Success! Created backend_admin at E:\projects\backend_admin
```
2. Change to the directory of the project, then run `yarn dev`
It shows the following error:
```
yarn run v1.22.19
$ cross-env NODE_OPTIONS=--max_old_space_size=4096 next dev
ready - started server on 0.0.0.0:3000, url: http://localhost:3000
warn  - Invalid next.config.js options detected:
  - The root value has an unexpected property, webpackDevMiddleware, which is not in the list of allowed properties (amp, analyticsId, assetPrefix, basePath, cleanDistDir, compiler, compress, crossOrigin, devIndicators, distDir, env, eslint, excludeDefaultMomentLocales, experimental, exportPathMap, future, generateBuildId, generateEtags, headers, httpAgentOptions, i18n, images, onDemandEntries, optimizeFonts, output, outputFileTracing, pageExtensions, poweredByHeader, productionBrowserSourceMaps, publicRuntimeConfig, reactStrictMode, redirects, rewrites, sassOptions, serverRuntimeConfig, staticPageGenerationTimeout, swcMinify, trailingSlash, typescript, useFileSystemPublicRoutes, webpack).
  - The root value has an unexpected property, configOrigin, which is not in the list of allowed properties (amp, analyticsId, assetPrefix, basePath, cleanDistDir, compiler, compress, crossOrigin, devIndicators, distDir, env, eslint, excludeDefaultMomentLocales, experimental, exportPathMap, future, generateBuildId, generateEtags, headers, httpAgentOptions, i18n, images, onDemandEntries, optimizeFonts, output, outputFileTracing,
pageExtensions, poweredByHeader, productionBrowserSourceMaps, publicRuntimeConfig, reactStrictMode, redirects, rewrites, sassOptions, serverRuntimeConfig, staticPageGenerationTimeout, swcMinify, trailingSlash, typescript, useFileSystemPublicRoutes, webpack).
  - The root value has an unexpected property, target, which is not in the list of allowed properties (amp, analyticsId, assetPrefix, basePath,
cleanDistDir, compiler, compress, crossOrigin, devIndicators, distDir, env, eslint, excludeDefaultMomentLocales, experimental, exportPathMap, future, generateBuildId, generateEtags, headers, httpAgentOptions, i18n, images, onDemandEntries, optimizeFonts, output, outputFileTracing, pageExtensions, poweredByHeader, productionBrowserSourceMaps, publicRuntimeConfig, reactStrictMode, redirects, rewrites, sassOptions, serverRuntimeConfig, staticPageGenerationTimeout, swcMinify, trailingSlash, typescript,
useFileSystemPublicRoutes, webpack).
  - The root value has an unexpected property, webpack5, which is not in the list of allowed properties (amp, analyticsId, assetPrefix, basePath, cleanDistDir, compiler, compress, crossOrigin, devIndicators, distDir, env, eslint, excludeDefaultMomentLocales, experimental, exportPathMap,
future, generateBuildId, generateEtags, headers, httpAgentOptions, i18n, images, onDemandEntries, optimizeFonts, output, outputFileTracing, pageExtensions, poweredByHeader, productionBrowserSourceMaps, publicRuntimeConfig, reactStrictMode, redirects, rewrites, sassOptions, serverRuntimeConfig, staticPageGenerationTimeout, swcMinify, trailingSlash, typescript, useFileSystemPublicRoutes, webpack).
  - The value at .amp.canonicalBase must be 1 character or more but it was 0 characters.
  - The value at .assetPrefix must be 1 character or more but it was 0 characters.
  - The value at .i18n must be an object but it was null.
  - The value at .webpack must be a function that returns a webpack configuration object.

See more info here: https://nextjs.org/docs/messages/invalid-next-configwarn  - You have enabled experimental feature (newNextLinkBehavior) in next.config.js.
warn  - Experimental features are not covered by semver, and may cause unexpected or broken application behavior. Use at your own risk.

We detected TypeScript in your project and reconfigured your tsconfig.json file for you. Strict-mode is set to false by default.

The following suggested values were added to your tsconfig.json. These values can be changed to fit your project's needs:

        - incremental was set to true

info  - Disabled SWC as replacement for Babel because of custom Babel configuration "".babelrc"" https://nextjs.org/docs/messages/swc-disabled
info  - Using external babel configuration from E:\projects\backend_admin\.babelrc
event - compiled client and server successfully in 20.7s (3263 modules)
Error: You cannot define a route with the same specificity as a optional catch-all route (""/"" and ""/[[...refine]]"").
    at UrlNode._smoosh (E:\projects\backend_admin\node_modules\next\dist\shared\lib\router\utils\sorted-routes.js:36:23)
    at UrlNode.smoosh (E:\projects\backend_admin\node_modules\next\dist\shared\lib\router\utils\sorted-routes.js:11:21)
    at Object.getSortedRoutes (E:\projects\backend_admin\node_modules\next\dist\shared\lib\router\utils\sorted-routes.js:161:17)
    at Watchpack.<anonymous> (E:\projects\backend_admin\node_modules\next\dist\server\dev\next-dev-server.js:422:55)
error Command failed with exit code 1.
info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
```

### Expected behavior

Being able to run without errors

### Screenshot

_No response_

### Desktop

OS: Windows 10
Node Version: 16.13
Package.json:
```json
  ""dependencies"": {
    ""@pankod/refine-core"": ""^3.18.0"",
    ""@pankod/refine-nextjs-router"": ""^3.18.0"",
    ""next"": ""^12.1.6"",
    ""next-compose-plugins"": ""^2.2.1"",
    ""react"": ""^18.2.0"",
    ""react-dom"": ""^18.2.0"",
    ""@pankod/refine-strapi-v4"": ""^3.18.0"",
    ""axios"": ""^0.26.1"",
    ""nookies"": ""^2.5.2"",
    ""@pankod/refine-antd"": ""^3.18.0""
  },
  ""devDependencies"": {
    ""@types/react"": ""^18.0.15"",
    ""@types/react-dom"": ""^18.0.6"",
    ""@types/node"": ""^14.14.13"",
    ""@typescript-eslint/parser"": ""^4.9.1"",
    ""typescript"": ""^4.7.4"",
    ""cross-env"": ""^7.0.3""
  }
```

### Mobile

_No response_

### Additional Context

_No response_",,
1437395773,2966,[FEAT] Support for Elastic UI,"### Is your feature request related to a problem? Please describe.

[Elastic UI](https://elastic.github.io/eui/#/) is the front-end framework used by all products of elastic group. I think this can be a huge addition to refine's portifolio.

### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

I would like to see as many components as possible being used. They have a lot of components that are very well developed and of great value for any current interface.",,
1419860606,2885,[BUG] TimePicker.RangePicker gives error,"### Describe the bug

Trying to use <TimePicker.RangePicker /> returns error
Property RangePicker does not exist on the type...

It should have the possibility to use Ant Design RangePicker
https://ant.design/components/time-picker/#components-time-picker-demo-range-picker

### Steps To Reproduce

import {  TimePicker } from '@pankod/refine-antd';

Use <TimePicker.RangePicker /> in the code

### Expected behavior

Possibility to use RangePicker when using TimePicker


### Screenshot

![Screenshot 2022-10-23 at 14 20 52](https://user-images.githubusercontent.com/7017451/197405526-d427b3a6-9d9a-4571-8d40-339b69f63273.png)

",,
1413321041,2816,[FEAT] Breadcrumb options support,"### Is your feature request related to a problem? Please describe.

CRUD components import the `Breadcrumb`([example Ant Design](https://refine.dev/docs/api-reference/antd/components/breadcrumb/)) component by default. If we want to hide the breadcrumbs, we must set the `breadcrumb` property of the CRUD components to `false`.
```ts
<Create breadcrumb={false} />
```
example: https://refine.dev/docs/api-reference/antd/components/basic-views/create/#breadcrumb

instead, the `breadcrumb` property can be added to the `options` of the [`<Refine />`](https://refine.dev/docs/api-reference/core/components/refine-config/#options-1) component. Thus it is managed globally. The `breadcrumb` property passed to the CRUD component overrides the `options`.


### Describe alternatives you've considered

_No response_

### Additional context

_No response_

### Describe the thing to improve

Breadcrumbs in CRUD components are more manageable",,
1412860537,2809,[FEAT] FeathersJS Data & Auth & Live Provider,"### Is your feature request related to a problem? Please describe.

[FeathersJS](https://docs.feathersjs.com/) is a lightweight web-framework for creating real-time applications and REST APIs using JavaScript or TypeScript. Writing [Data](https://refine.dev/docs/api-reference/core/providers/data-provider/), [Auth](https://refine.dev/docs/api-reference/core/providers/auth-provider/), and [Live](https://refine.dev/docs/api-reference/core/providers/live-provider/) Provider for refine would be great!

### Describe alternatives you've considered

_No response_

### Additional context

It might help to review [Supabase](https://github.com/pankod/refine/tree/next/packages/supabase), [Appwrite](https://github.com/pankod/refine/tree/next/packages/appwrite) packages

### Describe the thing to improve

FeathersJS has a growing community. We think it would be a great pairing with refine 🍕",,
1404152577,2699,[DOC] typo found in ```util/split-code.ts```,"**Is this issue related to an existing part of the documentation? If so, please provide a link**
Comment typo inside util/split-code.ts

**Describe the thing to improve**
Removing typo inside comment

**Describe the solution (optional)**
<img width=""729"" alt=""image"" src=""https://user-images.githubusercontent.com/61142258/195025472-6e5a7de8-056c-4b90-a609-591bd1b31312.png"">

",,
1396278690,2631,[BUG] Unable to import Header component from @pankod/refine-mui,"**Describe the bug**
When trying to import the Header component from @pankod/refine-mui into a CustomLayout I am getting the following error.

Module '""@pankod/refine-mui""' has no exported member 'Header'.ts(2305)

**To Reproduce**
Steps to reproduce the behavior:
1. Create a custom layout (see page https://refine.dev/docs/api-reference/mui/customization/mui-custom-layout/#creating-a-custom-layout)
2. Try to import the header component, e.g.

     `import { Header as DefaultHeader } from ""@pankod/refine-mui"";`

3. See error.

**Expected behavior**
Import happens without errors.

**Screenshots**
![image](https://user-images.githubusercontent.com/6752497/193830721-83d20f7a-923f-4841-abe9-ec375d74f0c9.png)

**Desktop **
 - OS: All
 - Browser N/A
 - Version ^3.45.2


",,
1391039448,2603,[BUG] Wrong total value of Graphql dataProvider getList ,"**Describe the bug**
total value is undefined. Because count is used instead of length.

https://github.com/pankod/refine/blob/next/packages/graphql/src/dataProvider/index.ts

```js
    return {
      data: response[operation],
      total: response[operation].count,
    };
```


",,
1390944096,2602,[FEAT] Returned data structure from useTable,"**Is your feature request related to a problem? Please describe.**
useTable has an array as a result data. I want to return an object. Because columns will be ready and get from server in one query.  Also can be need another things. The current structure is not very flexible. The generic type entered assumes you refer to continuous data and returning an array.

It seems to apply to all the list hooks I've described here.

**Describe the solution you'd like**
Data can be expected in type all the time, but it should be allowed to define fields that the user wants outside of data.

",,
1383465975,2575,[DOC] Headless tutorial code causes error when trying to import icons,"**Is this issue related to an existing part of the documentation? If so, please provide a link**
https://refine.dev/docs/tutorials/headless-tutorial/#adding-resources

**Describe the thing to improve**
After setting up tutorial as instructed (`npx superplate-cli -o refine-headless tutorial`), when trying to use icons as in the tutorial code
```javascript
import { PostIcon } from ""icons"";
```
I am getting error:
`Cannot find module 'icons' or its corresponding type declarations.ts(2307)`

Please note I did not execute `npm i @pankod/refine-simple-rest` as I had used `superplate` to bootstrap the project.

My system info:
MacOS `v12.6`
node `v16.17.0` 
nvm `v8.15.0`

From `package.json`:

```json
""dependencies"": {
    ""@pankod/refine-core"": ""^3.18.0"",
    ""@pankod/refine-react-router-v6"": ""^3.18.0"",
    ""@pankod/refine-react-table"": ""^4.7.2"",
    ""@pankod/refine-simple-rest"": ""^3.18.0"",
    ""@testing-library/jest-dom"": ""^5.12.0"",
    ""@testing-library/react"": ""^11.2.6"",
    ""@testing-library/user-event"": ""^12.8.3"",
    ""@types/jest"": ""^26.0.23"",
    ""react"": ""^18.2.0"",
    ""react-dom"": ""^18.2.0"",
    ""react-scripts"": ""^5.0.0"",
    ""web-vitals"": ""^1.1.1""
  },
  ""devDependencies"": {
    ""@types/node"": ""^12.20.10"",
    ""@types/react"": ""^18.0.15"",
    ""@types/react-dom"": ""^18.0.6"",
    ""autoprefixer"": ""^10.4.12"",
    ""postcss"": ""^8.4.16"",
    ""tailwindcss"": ""^3.1.8"",
    ""typescript"": ""^4.7.4""
  },
```

**Describe the solution (optional)**
Update tutorial with missing package, maybe?",,
1380081074,2550,[BUG] useModalForm doesn't backfill correct generics,"**Describe the bug**
Summary: Type inference for useModalForm seems to be broken, given below
generic types you would expect the hook to be able to infer and return the correct object;
But the return object as any is returned instead.

Example:
```tsx
	const {
		modalProps: closeModalProps,
		formProps: closeFormProps,
		show: closeModalShow
	} = useModalForm<Account, HttpError, InternalAccountUpdates>({
		action: 'edit',
		metaData: {
			httpMethod: 'patch'
		},
		warnWhenUnsavedChanges: true
	})
```

**Received Types**

`modalProps: any`
`formProps:  any`
`show: any`

**Expected behavior**

`modalProps: ModalProps`
`formProps:  FormProps<InternalAccountUpdates>`
`show: (id?: BaseKey) => void`

**To Reproduce**

Get the latest ""@pankod/refine-antd"": ""^3.46.2"" and use useModalForm(),
confirm types are not inferred correctly 

**Deps**

""@pankod/refine-antd"": ""^3.46.2""
""@pankod/refine-core"": ""^3.69.6""
""@pankod/refine-kbar"": ""^0.8.0""
""@pankod/refine-react-router-v6"": ""^3.33.0""

** Current Dirty(Low Effort) Workaround **

Custom type:
```tsx
type TUseCloseModalReturn = TUseModalFormReturnType<Account, HttpError,InternalAccountUpdates>
	const {
		modalProps: closeModalProps,
		formProps: closeFormProps,
		show: closeModalShow
	}: TUseCloseModalReturn
// assign this to the returned object
// where `TUseCloseModalReturn ===   useCloseModalReturn<_, _, _>` is the imported type from refine lib 
// no changes to the type made inference on the type doesn't seem to be broken
```


",,
1374158075,2513,[BUG] `useImport` all batches are sent at once instead of one after the other,"**Describe the bug**
When `useImport` is used with `batchSize` option, it is expected that the batches are sent one **after** another (i.e. next batch is sent to the server **after** the first batch processing completes). However, currently all batches are being sent at once (which is not correct), since it overloads the server with too many requests at the same times, and makes the batching pointless.

**To Reproduce**
Use `useImport` with batchSize as below:
```js
  const { uploadProps, buttonProps, mutationResult, isLoading } = useImport({
    batchSize: 10,
  });
```
and select a large file as upload input. You will seen all the batches being set at once to the server.

**Expected behavior**
Batches should be sent one after another (i.e. after the first one returns, send the next one)

**Additional context**
The code is sending the requests in a map, instead of in a forEach await-loop https://github.com/pankod/refine/blob/c1908141d25e38bbd67aa3e9eb755bf538369aba/packages/core/src/hooks/import/index.tsx#L222-L235
",,
1373102686,2504,[BUG] useMutation Result type has wrong return names,"**Describe the bug**
If I send a mutation with useStepsForm, the return key is given automatically. 
For example, if I have a page like 'alarm', 
```javascript
return { alarm: { id: result.insertedId.toString() } }; 
```

It should return as . However, the values returned on the client side are captured directly as data.id

 If I use a type converter like https://www.the-guild.dev/graphql/codegen/plugins/typescript/typescript-react-query codegen, on the client side, the type checker asks me to use data.alarm.id. 

Because my Graphql schema is designed in the desired structure in useStepsForm. Codegen converter also converts accordingly.


**Expected behavior**
If there is an automatically created parent object name, it should also be written on the client side.

",,
1366214245,2462,[BUG] useStepsForm Mutation does not return result,"**Describe the bug**
The form successfully passes the data to the server, but returns no results. I see the result data is coming on chrome network but there is no MutationResult.


**Expected behavior**
Return data in onMutationSuccess when the mutation completes successfully

```
""@pankod/refine-antd"": ""^3.41.0"",
""@pankod/refine-core"": ""^3.69.0"",
```




**Additional context**
```javascript

import {
  useStepsForm
} from '@pankod/refine-antd';

  const {
    current,
    gotoStep,
    stepsProps,
    formProps,
    saveButtonProps,
    form,
    queryResult: qs,
    mutationResult,
    formResult,
  } = useStepsForm<{ createReport: ReportResult }>({
    isBackValidate: false,
    metaData: {
      fields: ['id'],
    },
    onMutationSuccess: (data) => {
      console.log('🚀 ~ file: list.tsx ~ line 82 ~ data', data);
    },
  });
```
",,
1362863061,2441,[FEAT] **Go To Definition** is not working with source code,"In the current structure of the packages, we're not able to use the `Go To Definition` or `Peek Definition` features of the code editors with source code support. It is a burden on our development and is a big hit for the developer experience.

We should update the build scripts accordingly to support declaration maps by `tsc` so we will have source code navigation instead of the build codes.",,
1358580094,2407,[FEAT] Lazy Query Hooks,"Hi everyone,

I try to list the data with a table at the end from the data I collected using useStepsForm. useStepsForm queries are Graphql.mutation but I need to send Graphql.query to server.

I found with a solution by collecting the data with useStepsForm and passing it to the useTable hooks. But here is a different situation.

I need to invalidate the useTable on the first render and then render whenever I want with the new data collected from useStepsForm. I can't do this in current hooks structure.

Below I share an example of Lazy Query structure in the apollo-client library. If there is a query structure in this structure, I think it will be useful.

[https://www.apollographql.com/docs/react/data/queries/#manual-execution-with-uselazyquery](https://www.apollographql.com/docs/react/data/queries/#manual-execution-with-uselazyquery)

```
import React from 'react';
import { useLazyQuery } from '@apollo/client';

function DelayedQuery() {
  const [getDog, { loading, error, data }] = useLazyQuery(GET_DOG_PHOTO);

  if (loading) return <p>Loading ...</p>;
  if (error) return 'Error! ${error}';

  return (
    <div>
      {data?.dog && <img src={data.dog.displayImage} />}
      <button onClick={() => getDog({ variables: { breed: 'bulldog' } })}>
        Click me!
      </button>
    </div>
  );
}
```

Best regards

",,
1357268517,2393,"[FEAT] Add the ability to export the filtered data from a table to .csv with useExport(), rather than the whole resource","**Is your feature request related to a problem? Please describe.**
Currently you can;t export only the filtered data from a table

**Describe the solution you'd like**
Add the ability for either the current filters from onSearch to be passed to the export, or the filtered table data 

**Describe alternatives you've considered**
I can write my own csv reader / writer but i think this would be pretty useful for the wider community

**Additional context**
Add any other context or screenshots about the feature request here.
",,
1354837016,2385,"[BUG] DataGrid Pro does not style, night mode doesn't work and getRowClassName function","**Describe the bug**
I changed the package DataGrid from '@pankod/refine-mui' to DataGridPro from '@mui/x-data-grid-pro' to use more functions, but it didn't show compatibility with the refine style, I also tried to use the getRowClassName function but without success.

**To Reproduce**
Steps to reproduce the behavior:
1. Install the package - @mui/x-data-grid-pro
2. Use DataGridPro component
3. Change the night mode or add the getRowClassName function
4. See error

**Expected behavior**
Styling adapt to night mode and row colors change when calling getRowClassName function.

**Screenshots**
![image](https://user-images.githubusercontent.com/70238369/187291176-360da8a4-cc12-4a65-a83b-3993f6a60244.png)
![image](https://user-images.githubusercontent.com/70238369/187291245-ed7afb25-8384-4f1f-b8dd-ba091d9178b6.png)

```
import React from 'react'
import {
  DateField,
  List,
  DeleteButton,
  ShowButton,
  EditButton,
  Stack,
  Typography,
  Box,
  darken,
  lighten,
  CreateButton,
  useDataGrid
} from '@pankod/refine-mui'
import { ICrudPermission, IPermission, IPurchaseRequisition } from 'interfaces'
import { useList, usePermissions } from '@pankod/refine-core'
import CustomNoRowsOverlay from 'components/layout/table/no-rows'
import { DataGridPro, GridColumns } from '@mui/x-data-grid-pro'

export function PurchaseRequisitionList () {
  const getBackgroundColor = (color: string, mode: string) =>
    mode === 'dark' ? darken(color, 0.6) : lighten(color, 0.6)

  const getHoverBackgroundColor = (color: string, mode: string) =>
    mode === 'dark' ? darken(color, 0.5) : lighten(color, 0.5)

  const columns = React.useMemo<GridColumns<IPurchaseRequisition>>(
    () => [
      { field: 'id', headerName: 'Nr', flex: 1 },
      { field: 'priority', headerName: 'Prioridad', flex: 1 },
      {
        field: 'department',
        headerName: 'Departamiento',
        flex: 1,
        renderCell: function render ({ row }) {
          return row.department?.description
        }
      },
      {
        field: 'cars',
        headerName: 'Vehículos',
        flex: 1,
        renderCell: function render ({ row }) {
          return row.items
            ? row?.items.filter(it => it.car).map(item => `${item.car?.plate} `).filter((v, i, a) => a.findIndex(v2 => (v2 === v)) === i)
            : ''
        }
      },
      { field: 'fg_status', headerName: 'Status', flex: 1 },
      {
        field: 'required_delivery_date',
        headerName: 'Fecha Requerida',
        flex: 1,
        renderCell: function render ({ row }) {
          return row.required_delivery_date ? <DateField format='D/M/YY' value={row.required_delivery_date } /> : ''
        }
      },
      {
        field: 'createdAt',
        headerName: 'Criado en',
        flex: 1,
        renderCell: function render ({ row }) {
          return <DateField format='HH:mm D/M/YY' value={row.createdAt} />
        }
      },
      {
        field: 'releasedAt',
        headerName: 'Liberado en',
        flex: 1,
        renderCell: function render ({ row }) {
          return row.canceledAt ? <DateField format='HH:mm D/M/YY' value={row.releasedAt } /> : ''
        }
      },
      {
        field: 'canceledAt',
        headerName: 'Cancelado en',
        flex: 1,
        renderCell: function render ({ row }) {
          return row.canceledAt ? <DateField format='HH:mm D/M/YY' value={row.canceledAt } /> : ''
        }
      },
      {
        headerName: 'Acción',
        field: 'actions',
        flex: 1,
        align: 'center',
        headerAlign: 'center',
        renderCell: function render ({ row }) {
          return (
            <Stack direction=""row"" spacing={1}>
              <ShowButton hideText recordItemId={row.id} resourceNameOrRouteName=""purchaseRequisitions"" resource=""purchaseRequisitions"" />
            </Stack>
          )
        }
      }
    ],
    []
  )

  const { dataGridProps } = useDataGrid<IPurchaseRequisition>({
    columns: columns as any,
    initialCurrent: 2,
    initialPageSize: 10,
    syncWithLocation: true,
    resource: 'purchaseRequisitions',
    metaData: {
      operation: 'purchaseRequisitions',
      fields: [
        'id',
        'number_document',
        'priority',
        'observation',
        'releasedAt',
        'canceledAt',
        'createdAt',
        'required_delivery_date',
        'status',
        'fg_status',
        'cancellation_justification',
        {
          department: ['id', 'description']
        },
        {
          items: [
            'id',
            {
              car: ['id', 'plate']
            }
          ]
        }
      ]
    }
  })

  return (
    <List cardHeaderProps={{
      title: <Typography variant=""h5"">Pedido de compra</Typography>,
      action: <CreateButton resource='purchaseRequisitions'></CreateButton>
    }}>
      <Box
        sx={{
          width: '100%',
          '& .super-app-theme--LIBERADA': {
            bgcolor: (theme) =>
              getBackgroundColor(theme.palette.info.main, theme.palette.mode),
            '&:hover': {
              bgcolor: (theme) =>
                getHoverBackgroundColor(theme.palette.info.main, theme.palette.mode)
            }
          },
          '& .super-app-theme--EM_ANDAMENTO': {
            bgcolor: (theme) =>
              getBackgroundColor(theme.palette.warning.main, theme.palette.mode),
            '&:hover': {
              bgcolor: (theme) =>
                getHoverBackgroundColor(
                  theme.palette.warning.main,
                  theme.palette.mode
                )
            }
          },
          '& .super-app-theme--CONCLUIDA': {
            bgcolor: (theme) =>
              getBackgroundColor(theme.palette.success.main, theme.palette.mode),
            '&:hover': {
              bgcolor: (theme) =>
                getHoverBackgroundColor(
                  theme.palette.success.main,
                  theme.palette.mode
                )
            }
          },
          '& .super-app-theme--LIBERADO_COTIZACION': {
            bgcolor: (theme) =>
              getBackgroundColor(theme.palette.primary.main, theme.palette.mode),
            '&:hover': {
              bgcolor: (theme) =>
                getHoverBackgroundColor(
                  theme.palette.primary.main,
                  theme.palette.mode
                )
            }
          },
          '& .super-app-theme--CANCELADA': {
            bgcolor: (theme) =>
              getBackgroundColor(theme.palette.error.main, theme.palette.mode),
            '&:hover': {
              bgcolor: (theme) =>
                getHoverBackgroundColor(theme.palette.error.main, theme.palette.mode)
            }
          }
        }}
      >
        <DataGridPro
          {...dataGridProps as any}
          getRowClassName={({ row }) => `super-app-theme--${row.fg_status?.toString()}`}
          autoHeight
          columns={columns}
          rowsPerPageOptions={[10, 25, 50, 100]}
          components={{
            NoRowsOverlay: CustomNoRowsOverlay
          }}
          initialState={{ pinnedColumns: { right: ['actions'] } }}
        />
      </Box>
    </List>
  )
}
```
",,
1338042183,2320,[FEAT] Nested filters in Hasura data provider,"**Is your feature request related to a problem? Please describe.**
Currently we can only filter on top level keys but we aren't taking advantage of the graphql query syntax by also allowing filtering via nested objects.

**Describe the solution you'd like**
We should allow querying for nested objects via the CrudFilter interface.

**Describe alternatives you've considered**
N/A

**Additional context**
A couple of implementation options.
1. New operator `nested`:
```tsx
{
  // empty field
  field: """",
  operator: ""nested"",
  value: {""category"": {""type"": {""_eq"": ""howto""}}},
},
{
  // or exclude field if operator nested
  operator: ""nested""
  value: {""category"": {""type"": {""_eq"": ""howto""}}},
}
```

The goal being to construct a variables json object:
```json
{
  ""where"": {
    ""category"": {
      ""type"": {
        ""_eq"": ""howto""
      }
    }
  }
}
```
",,
1334502902,2309,[DOC] Web3 example fails on initialization,"**Is this issue related to an existing part of the documentation? If so, please provide a link**
Sign-In with Ethereum example fails on initialization.
https://refine.dev/docs/examples/web3/web3Login/

**Describe the thing to improve**
Example does not work as expected.

**Describe the solution (optional)**
Module not found: Error: Can't resolve 'stream' in '/home/projects/xoriygyzy.github/node_modules/cipher-base' might help checking some missing dependencies or import maps.

",,
1326838948,2265,[DOC] Webpack Polyfills querystring,"**Is this issue related to an existing part of the documentation? If so, please provide a link**
Data Providers, specifically the [getMany section.](https://refine.dev/docs/core/providers/data-provider/#getmany)

**Describe the thing to improve**
Causes this error on compile:
```
BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
    - add a fallback 'resolve.fallback: { ""querystring"": require.resolve(""querystring-es3"") }'
    - install 'querystring-es3'
If you don't want to include a polyfill, you can use an empty module like this:
    resolve.fallback: { ""querystring"": false }
```

**Describe the solution (optional)**
I typically use Vite for all my front-end related development. So I'm not exactly sure what those are, but it would be nice to follow the documentation without any friction. Maybe an up-to-date snippet of code or extended explanation on what to do with webpack causing problems.
",,
1319577716,2232,[BUG] Error after upgrade,"Hi everyone,

I started getting this error when I upgraded to these versions the my project;
` ""@pankod/refine-antd"": ""^3.33.2"",
        ""@pankod/refine-core"": ""^3.50.0"",`

full list is;

`{
""dependencies"": {
        ""@pankod/refine-antd"": ""^3.33.2"",
        ""@pankod/refine-core"": ""^3.50.0"",
        ""@pankod/refine-graphql"": ""^4.5.0"",
        ""@pankod/refine-react-router-v6"": ""^3.29.0"",
        ""@pankod/refine-simple-rest"": ""^3.25.6"",
        ""@testing-library/jest-dom"": ""^5.12.0"",
        ""@testing-library/react"": ""^11.2.6"",
        ""@testing-library/user-event"": ""^12.8.3"",
        ""@types/jest"": ""^26.0.23"",
        ""camelcase"": ""^7.0.0"",
        ""graphql"": ""^15.5.3"",
        ""graphql-request"": ""^4.3.0"",
        ""i18next"": ""^20.1.0"",
        ""i18next-browser-languagedetector"": ""^6.1.1"",
        ""i18next-xhr-backend"": ""^3.2.2"",
        ""leaflet"": ""^1.8.0"",
        ""react"": ""^17.0.2"",
        ""react-dom"": ""^17.0.2"",
        ""react-i18next"": ""^11.8.11"",
        ""react-leaflet"": ""^4.0.1"",
        ""react-leaflet-google-layer"": ""^2.0.7"",
        ""react-scripts"": ""^5.0.0"",
        ""web-vitals"": ""^1.1.1""
    },
}`

`utils.js:186 Uncaught TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'FiberNode'
    |     property 'stateNode' -> object with constructor 'FiberRootNode'
    |     property 'containerInfo' -> object with constructor 'HTMLDivElement'
    --- property '__reactContainer$nnm0w6la9' closes the circle
    at JSON.stringify (<anonymous>)
    at stableValueHash (utils.js:186:1)
    at hashQueryKey (utils.js:179:1)
    at hashQueryKeyByOptions (utils.js:171:1)
    at QueryClient.defaultQueryOptions (queryClient.js:324:1)
    at QueryClient.defaultQueryObserverOptions (queryClient.js:331:1)
    at useBaseQuery (useBaseQuery.js:14:1)
    at useQuery (useQuery.js:7:1)
    at ir (index.ts:25:1)
    at Hn (index.tsx:18:1)
stableValueHash @ utils.js:186
hashQueryKey @ utils.js:179
hashQueryKeyByOptions @ utils.js:171
defaultQueryOptions @ queryClient.js:324
defaultQueryObserverOptions @ queryClient.js:331
useBaseQuery @ useBaseQuery.js:14
useQuery @ useQuery.js:7
ir @ index.ts:25
Hn @ index.tsx:18
renderWithHooks @ react-dom.development.js:14985
mountIndeterminateComponent @ react-dom.development.js:17811
beginWork @ react-dom.development.js:19049
callCallback @ react-dom.development.js:3945
invokeGuardedCallbackDev @ react-dom.development.js:3994
invokeGuardedCallback @ react-dom.development.js:4056
beginWork$1 @ react-dom.development.js:23964
performUnitOfWork @ react-dom.development.js:22776
workLoopSync @ react-dom.development.js:22707
renderRootSync @ react-dom.development.js:22670
performSyncWorkOnRoot @ react-dom.development.js:22293
(anonymous) @ react-dom.development.js:11327
unstable_runWithPriority @ scheduler.development.js:468
runWithPriority$1 @ react-dom.development.js:11276
flushSyncCallbackQueueImpl @ react-dom.development.js:11322
flushSyncCallbackQueue @ react-dom.development.js:11309
batchedUpdates$1 @ react-dom.development.js:22387
(anonymous) @ notifyManager.js:75
Promise.then (async)
scheduleMicrotask @ utils.js:322
flush @ notifyManager.js:74
batch @ notifyManager.js:30
dispatch @ query.js:392
setData @ query.js:85
onSuccess @ query.js:336
resolve @ retryer.js:58
Promise.then (async)
run @ retryer.js:116
Retryer @ retryer.js:156
fetch @ query.js:332
executeFetch @ queryObserver.js:199
onSubscribe @ queryObserver.js:40
subscribe @ subscribable.js:16
(anonymous) @ useBaseQuery.js:60
invokePassiveEffectCreate @ react-dom.development.js:23487
callCallback @ react-dom.development.js:3945
invokeGuardedCallbackDev @ react-dom.development.js:3994
invokeGuardedCallback @ react-dom.development.js:4056
flushPassiveEffectsImpl @ react-dom.development.js:23574
unstable_runWithPriority @ scheduler.development.js:468
runWithPriority$1 @ react-dom.development.js:11276
flushPassiveEffects @ react-dom.development.js:23447
(anonymous) @ react-dom.development.js:23324
workLoop @ scheduler.development.js:417
flushWork @ scheduler.development.js:390
performWorkUntilDeadline @ scheduler.development.js:157
react-dom.development.js:20085 The above error occurred in the <Hn> component:

    at Hn (http://localhost:3000/static/js/bundle.js:76863:15)
    at v (http://localhost:3000/static/js/bundle.js:78528:12)
    at Outlet (http://localhost:3000/static/js/bundle.js:253508:26)
    at div
    at main
    at http://localhost:3000/static/js/bundle.js:90924:25
    at http://localhost:3000/static/js/bundle.js:90903:66
    at section
    at http://localhost:3000/static/js/bundle.js:90940:63
    at http://localhost:3000/static/js/bundle.js:90903:66
    at section
    at http://localhost:3000/static/js/bundle.js:90940:63
    at http://localhost:3000/static/js/bundle.js:90903:66
    at Layout (http://localhost:3000/static/js/bundle.js:853:5)
    at Vn (http://localhost:3000/static/js/bundle.js:76764:15)
    at Routes (http://localhost:3000/static/js/bundle.js:253600:5)
    at R (http://localhost:3000/static/js/bundle.js:78647:71)
    at Router (http://localhost:3000/static/js/bundle.js:253533:15)
    at BrowserRouter (http://localhost:3000/static/js/bundle.js:252343:5)
    at B (http://localhost:3000/static/js/bundle.js:78744:15)
    at Zt (http://localhost:3000/static/js/bundle.js:75215:15)
    at Ot (http://localhost:3000/static/js/bundle.js:74915:19)
    at ct (http://localhost:3000/static/js/bundle.js:73769:15)
    at dr (http://localhost:3000/static/js/bundle.js:76210:13)
    at ar (http://localhost:3000/static/js/bundle.js:75882:10)
    at jt (http://localhost:3000/static/js/bundle.js:75154:15)
    at qt (http://localhost:3000/static/js/bundle.js:75039:16)
    at nr (http://localhost:3000/static/js/bundle.js:75836:15)
    at Wt (http://localhost:3000/static/js/bundle.js:74880:19)
    at Ht (http://localhost:3000/static/js/bundle.js:74849:15)
    at Mt (http://localhost:3000/static/js/bundle.js:73172:15)
    at Jt (http://localhost:3000/static/js/bundle.js:75114:11)
    at QueryClientProvider (http://localhost:3000/static/js/bundle.js:250837:21)
    at Qn (http://localhost:3000/static/js/bundle.js:76614:19)
    at App (http://localhost:3000/static/js/bundle.js:113:69)
    at Suspense

Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.
logCapturedError @ react-dom.development.js:20085
update.callback @ react-dom.development.js:20118
callCallback @ react-dom.development.js:12318
commitUpdateQueue @ react-dom.development.js:12339
commitLifeCycles @ react-dom.development.js:20736
commitLayoutEffects @ react-dom.development.js:23426
callCallback @ react-dom.development.js:3945
invokeGuardedCallbackDev @ react-dom.development.js:3994
invokeGuardedCallback @ react-dom.development.js:4056
commitRootImpl @ react-dom.development.js:23151
unstable_runWithPriority @ scheduler.development.js:468
runWithPriority$1 @ react-dom.development.js:11276
commitRoot @ react-dom.development.js:22990
performSyncWorkOnRoot @ react-dom.development.js:22329
(anonymous) @ react-dom.development.js:11327
unstable_runWithPriority @ scheduler.development.js:468
runWithPriority$1 @ react-dom.development.js:11276
flushSyncCallbackQueueImpl @ react-dom.development.js:11322
flushSyncCallbackQueue @ react-dom.development.js:11309
batchedUpdates$1 @ react-dom.development.js:22387
(anonymous) @ notifyManager.js:75
Promise.then (async)
scheduleMicrotask @ utils.js:322
flush @ notifyManager.js:74
batch @ notifyManager.js:30
dispatch @ query.js:392
setData @ query.js:85
onSuccess @ query.js:336
resolve @ retryer.js:58
Promise.then (async)
run @ retryer.js:116
Retryer @ retryer.js:156
fetch @ query.js:332
executeFetch @ queryObserver.js:199
onSubscribe @ queryObserver.js:40
subscribe @ subscribable.js:16
(anonymous) @ useBaseQuery.js:60
invokePassiveEffectCreate @ react-dom.development.js:23487
callCallback @ react-dom.development.js:3945
invokeGuardedCallbackDev @ react-dom.development.js:3994
invokeGuardedCallback @ react-dom.development.js:4056
flushPassiveEffectsImpl @ react-dom.development.js:23574
unstable_runWithPriority @ scheduler.development.js:468
runWithPriority$1 @ react-dom.development.js:11276
flushPassiveEffects @ react-dom.development.js:23447
(anonymous) @ react-dom.development.js:23324
workLoop @ scheduler.development.js:417
flushWork @ scheduler.development.js:390
performWorkUntilDeadline @ scheduler.development.js:157
utils.js:186 Uncaught TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'FiberNode'
    |     property 'stateNode' -> object with constructor 'FiberRootNode'
    |     property 'containerInfo' -> object with constructor 'HTMLDivElement'
    --- property '__reactContainer$nnm0w6la9' closes the circle
    at JSON.stringify (<anonymous>)
    at stableValueHash (utils.js:186:1)
    at hashQueryKey (utils.js:179:1)
    at hashQueryKeyByOptions (utils.js:171:1)
    at QueryClient.defaultQueryOptions (queryClient.js:324:1)
    at QueryClient.defaultQueryObserverOptions (queryClient.js:331:1)
    at useBaseQuery (useBaseQuery.js:14:1)
    at useQuery (useQuery.js:7:1)
    at ir (index.ts:25:1)
    at Hn (index.tsx:18:1)
stableValueHash @ utils.js:186
hashQueryKey @ utils.js:179
hashQueryKeyByOptions @ utils.js:171
defaultQueryOptions @ queryClient.js:324
defaultQueryObserverOptions @ queryClient.js:331
useBaseQuery @ useBaseQuery.js:14
useQuery @ useQuery.js:7
ir @ index.ts:25
Hn @ index.tsx:18
renderWithHooks @ react-dom.development.js:14985
mountIndeterminateComponent @ react-dom.development.js:17811
beginWork @ react-dom.development.js:19049
callCallback @ react-dom.development.js:3945
invokeGuardedCallbackDev @ react-dom.development.js:3994
invokeGuardedCallback @ react-dom.development.js:4056
beginWork$1 @ react-dom.development.js:23964
performUnitOfWork @ react-dom.development.js:22776
workLoopSync @ react-dom.development.js:22707
renderRootSync @ react-dom.development.js:22670
performSyncWorkOnRoot @ react-dom.development.js:22293
(anonymous) @ react-dom.development.js:11327
unstable_runWithPriority @ scheduler.development.js:468
runWithPriority$1 @ react-dom.development.js:11276
flushSyncCallbackQueueImpl @ react-dom.development.js:11322
flushSyncCallbackQueue @ react-dom.development.js:11309
batchedUpdates$1 @ react-dom.development.js:22387
(anonymous) @ notifyManager.js:75
setTimeout (async)
(anonymous) @ utils.js:323
Promise.catch (async)
scheduleMicrotask @ utils.js:322
flush @ notifyManager.js:74
batch @ notifyManager.js:30
dispatch @ query.js:392
setData @ query.js:85
onSuccess @ query.js:336
resolve @ retryer.js:58
Promise.then (async)
run @ retryer.js:116
Retryer @ retryer.js:156
fetch @ query.js:332
executeFetch @ queryObserver.js:199
onSubscribe @ queryObserver.js:40
subscribe @ subscribable.js:16
(anonymous) @ useBaseQuery.js:60
invokePassiveEffectCreate @ react-dom.development.js:23487
callCallback @ react-dom.development.js:3945
invokeGuardedCallbackDev @ react-dom.development.js:3994
invokeGuardedCallback @ react-dom.development.js:4056
flushPassiveEffectsImpl @ react-dom.development.js:23574
unstable_runWithPriority @ scheduler.development.js:468
runWithPriority$1 @ react-dom.development.js:11276
flushPassiveEffects @ react-dom.development.js:23447
(anonymous) @ react-dom.development.js:23324
workLoop @ scheduler.development.js:417
flushWork @ scheduler.development.js:390
performWorkUntilDeadline @ scheduler.development.js:157`",,
1318223462,2220,[FEAT] Pass the full resource to the `accessControlProvider` `can` method,"**Is your feature request related to a problem? Please describe.**
When making use of the `accessControlProvider` for authorization, it would be useful to have access to the full resource object. This will enable Attribute Based Access Control (ABAC), for example granting permissions based on the value of a field in the resource object.

**Describe the solution you'd like**
In the `can` function, pass in the full object as a parameter, rather than just the ID.
```
<Refine
      accessControlProvider={{
        can: async ({ action, params, resource }) => {
```

Users can then make decisions based on any field in the resource.

**Describe alternatives you've considered**
You could do a separate call to get the resource again from the backend but that is going to double the load on your service.

**Additional context**
Any ABAC supporting authorization system, such as [Cerbos](https://cerbos.dev), is going to need this.",,
1317126137,2211,[BUG] Logout issue.,"Describe the bug:
When I am trying to logout the app. It passes the url with login & query params as resources name: For example, i will attach the
screenshot eg.., **/login?to=%2Fposts**  . Even though I am trying to pass the custom url it routes with same route name **/login?to=%2Fposts**

When Logged In:
![image](https://user-images.githubusercontent.com/80027472/180834292-9a2699d7-a156-4969-96a9-c045bbcdbf50.png)

When Logged Out:
I have passed the 
 logout: () => {
        localStorage.removeItem(TOKEN_KEY);
        return Promise.resolve(""/"");
    },
but it routes as i mentioned below:
![image](https://user-images.githubusercontent.com/80027472/180834543-948786b4-da75-477a-b592-3b81186f1a06.png)

After Passing the custom url:
 logout: () => {
        localStorage.removeItem(TOKEN_KEY);
        return Promise.resolve(""/custom-login"");
    },
 after logged out:
![image](https://user-images.githubusercontent.com/80027472/180834913-206d2569-4285-4929-9d05-e7415b9a7289.png)


**Expected behavior**
The expected behavior when we are trying to pass the /custom-login. It should render this page <CustomLogin />


**Desktop (please complete the following information):**
 - OS: Windows OS
 - Browser [chrome,]
 - Used dataProvider [REST API]
",,
1315845440,2196,[DOCS] How to generate automatic typescript types from your graphql schema. [Hasura],"**Is this issue related to an existing part of the documentation? If so, please provide a link**
I am not sure about this

**Describe the thing to improve**
A clear and concise description of problems.

**If you are using Hasura as backend service, you may want to generate typescript types for your queries/mutation and use them with refine.** 

**Step 1.** Export graphql schema file from hasura. You can follow this [guide](https://hasura.io/docs/latest/guides/export-graphql-schema/)  

I will use apollo's new `rover cli`. Install apollo rover cli using following command
`npm install --save-dev @apollo/rover`

Generate Graphql schema using the following command.
`npx rover graph introspect http://localhost:8080/v1/graphql -H ""X-Hasura-Admin-Secret:adminsecretkey"" | out-file  schema.graphql -encoding utf8`

If you are curious about the `-encoding utf8` flag read [here](https://github.com/apollographql/rover/issues/653)

**Step 2.** Generate typescript types from  `schema.graphql` file

Create a file `codegen.yml` in the same level where your `package json` exist

```
schema: schema8.graphql
generates:
  ./src/generated.ts:
    plugins:
      - typescript
      - typescript-operations
      - typed-document-node
```

Install required packages using following command
`npm i -D @graphql-codegen/cli @graphql-codegen/typed-document-node @graphql-codegen/typescript @graphql-codegen/typescript-operations`

My `devDependencies` tree look like this now

```json
""devDependencies"": {
    ""@apollo/rover"": ""^0.7.0"",
    ""@graphql-codegen/cli"": ""^2.9.1"",
    ""@graphql-codegen/typed-document-node"": ""^2.3.2"",
    ""@graphql-codegen/typescript"": ""^2.7.2"",
    ""@graphql-codegen/typescript-operations"": ""^2.5.2"",
    ""@types/graphql"": ""^14.5.0"",
    ""apollo"": ""^2.34.0"",
    ""graphql"": ""^16.5.0""
  }
```

Add `codegen` script cmd in `package.json` to generate types
```
 ""scripts"": {
    ""start"": ""react-scripts start"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test"",
    ""eject"": ""react-scripts eject"",
    ""codegen"": ""graphql-codegen --config ./codegen.yml""
  },
```
Now run `npm run codegen` and and new file `generated.ts` will be created inside `src` directory 

This [video ](https://www.youtube.com/watch?v=Ob3MRkgQdcc&lc=Ugzk6tTKDjczTlmN-uV4AaABAg.9dkDWH_k8Sm9dnXhQ__En5&ab_channel=JamieBarton)explain more about automatic types from graphql schema 


related [#1713 ](https://github.com/pankod/refine/issues/1713)",,
1315684908,2192,[BUG] Typo in the Tailwind tutorial,"There's a bug (typo) in the Tailwind tutorial;

```
import { Layout } from ""components/layout"";
```

Instead of:

```
import { Layout } from ""components/Layout"";
```",,
1315680845,2191,[BUG] Module not found: Error: Can't resolve 'rc-picker/lib/generate/dayjs' ,"**Describe the bug**
```
Compiled with problems:

ERROR in ./node_modules/@pankod/refine-antd/dist/esm/index.js 978:0-46

Module not found: Error: Can't resolve 'rc-picker/lib/generate/dayjs' in '/home/XXX/dev/js/tmp/refine-tutorial-ant/node_modules/@pankod/refine-antd/dist/esm'

``` 

**To Reproduce**
```
npx superplate-cli -p refine-react refine-tutorial-mui

# Default options except ""Use Ant Design""

cd refine-tutorial-mui
npm run dev
``` 

**Desktop (please complete the following information):**
 - OS: Kubuntu 2022-04
 - Browser: Chrome 103
",,
1315679398,2190,[BUG] Module not found: Error: Can't resolve '@mui/base/composeClasses',"**Describe the bug**
```
Compiled with problems:

ERROR in ./node_modules/@pankod/refine-mui/dist/esm/index.js 269:0-57

Module not found: Error: Can't resolve '@mui/base/composeClasses' in '/home/XXX/dev/js/tmp/refine-tutorial-mui/node_modules/@pankod/refine-mui/dist/esm'


ERROR in ./node_modules/@pankod/refine-mui/dist/esm/index.js 270:0-63

Module not found: Error: Can't resolve '@mui/base/generateUtilityClass' in '/home/XXX/dev/js/tmp/refine-tutorial-mui/node_modules/@pankod/refine-mui/dist/esm'


ERROR in ./node_modules/@pankod/refine-mui/dist/esm/index.js 272:0-65

Module not found: Error: Can't resolve '@mui/base/generateUtilityClasses' in '/home/XXX/dev/js/tmp/refine-tutorial-mui/node_modules/@pankod/refine-mui/dist/esm'
``` 

**To Reproduce**
```
npx superplate-cli -p refine-react refine-tutorial-mui

# Default options except ""Use Material-UI""

cd refine-tutorial-mui
npm run dev
``` 

**Desktop (please complete the following information):**
 - OS: Kubuntu 2022-04
 - Browser: Chrome 103
",,
1314651161,2183,[BUG] Only the most recent version of refine-core does not break app authentication,"**Describe the bug**

On my package.json, I am freezing all my dependencies versions to avoid breaking my app. 
All my refine dependencies are not in the most recent versions, except refine-core that needs to be, otherwise it breaks my app. 

**To Reproduce**


**Expected behavior**

**Screenshots**

  **""engines"": {
    ""node"": "">=16.3.0""
  },
  ""dependencies"": {
    ""@pankod/refine-antd"": ""3.25.6"",
    ""@pankod/refine-core"": ""3.44.0"",
    ""@pankod/refine-react-router-v6"": ""3.25.2"",
    ""@pankod/refine-simple-rest"": ""3.8.3"",
    ""@testing-library/jest-dom"": ""5.12.0"",
    ""@testing-library/react"": ""11.2.6"",
    ""@testing-library/user-event"": ""12.8.3"",
    ""@types/jest"": ""26.0.23"",
    ""@types/js-cookie"": ""3.0.2"",
    ""@types/node"": ""12.20.10"",
    ""@types/react"": ""17.0.44"",
    ""@types/react-dom"": ""17.0.3"",
    ""i18next"": ""21.8.13"",
    ""i18next-http-backend"": ""1.4.1"",
    ""js-cookie"": ""3.0.1"",
    ""react"": ""17.0.2"",
    ""react-dom"": ""17.0.2"",
    ""react-i18next"": ""11.18.0"",
    ""react-markdown"": ""6.0.1"",
    ""react-mde"": ""11.5.0"",
    ""react-scripts"": ""5.0.1"",
    ""typescript"": ""4.2.4"",
    ""web-vitals"": ""1.1.1"",
    ""export-to-csv-fix-source-map"": ""0.2.1"",
    ""humanize-string"": ""2.1.0"",
    ""lodash"": ""4.17.21"",
    ""lodash-es"": ""4.17.21"",
    ""papaparse"": ""5.3.0"",
    ""pluralize"": ""8.0.0"",
    ""qs"": ""6.11.0"",
    ""side-channel"":""1.0.4"",
    ""react-query"": ""3.19.2"",
    ""tslib"": ""2.3.1"",
    ""jose"": ""4.8.3""
  },
  ""resolutions"": {
    ""@types/react"": ""17.0.44""
  },**



**Desktop (please complete the following information):**
 - OS: [Microsoft Windows 10 Enterprise]
 - Browser [chrome]
 - Version [10.0.19042 Build 19042]
**Additional context**
",,
1310310131,2156,[BUG] Uncaught (in promise) Error in useForm.ts:150     ,"**Describe the bug**
When `useForm` is used and the underlying action results in an error (such as ""unauthorized access"" 403 etc.), the error is not caught and handled properly, resulting in `Uncaught (in promise) Error` as shown in the screenshot below.

![image](https://user-images.githubusercontent.com/4610831/179881014-b2c25e90-0650-4296-addc-6bf92c1ee331.png)

![image](https://user-images.githubusercontent.com/4610831/179881208-a97e0a04-d8c6-474a-a1e6-98b295a72106.png)


**To Reproduce**
Steps to reproduce the behavior:
1. `useForm` with an action ""create"" and a `Create` view component with a form
2. on submitting the form, let the server return 403 `unAuthorized` error
3. you will see the error logged in console: Uncaught (in promise) Error in useForm.ts:150


**Expected behavior**
Uncaught promise errors are not good for code. Catching and handling this would be good. 

(Note that the client correctly shows the error notification that the server rejected the action. But at the same time this `uncaught promise error` is also logged. Hope to see this error be handled and the client continues to show the error notification as currently happens)
![image](https://user-images.githubusercontent.com/4610831/179882163-c6ebaf1c-043a-4e5e-b40d-b826336a2520.png)
",,
1310058341,2154,[BUG] Hasura doing queries on the same field only filters on the last operator,"**Describe the bug**
A simple query like filtering field `createdAt` by `gte` and `lte` will only include the last operator.

**To Reproduce**
Steps to reproduce the behavior:
useTable onSearch to create a filter:

```
...
filters.push(
  [
    {
      field: ""created_at"",
      operator: ""gte"",
      value: createdAt ? dayjs.utc(createdAt[0]).startOf(""day"").format() : undefined,
    },
    {
      field: ""created_at"",
      operator: ""lte"",
      value: createdAt ? dayjs.utc(createdAt[1]).add(1, ""day"").startOf(""day"").format() : undefined,
    }
  ]
);
```
Check outgoing graphql request:
```
{
    ""query"": ""query ..."",
    ""variables"": {
        ""limit"": 10,
        ""order_by"": {
            ""priority"": ""asc"",
            ""created_at"": ""desc""
        },
        ""where"": {
            ""created_at"": {
                ""_lte"": ""2022-07-15T00:00:00Z""
            },
        },
        ""offset"": 0
    }
}
```

**Expected behavior**
the where part should contain both `_gte` and `_lte` parts:

```
""where"": {
  ""created_at"": {
    ""_gte"": ""2022-07-12T00:00:00Z"",
    ""_lte"": ""2022-07-15T00:00:00Z""
  },
},
```

**Desktop (please complete the following information):**
 - OS: macOS
 - Browser Firefox
 - Version 102.0.1
 - Used dataProvider Hasura

**Additional context**
Root Cause:
https://github.com/pankod/refine/blob/next/packages/hasura/src/dataProvider/index.ts#L69-L107

You can see on [line 83](https://github.com/pankod/refine/blob/next/packages/hasura/src/dataProvider/index.ts#L83) that the field is cleared and so combination operations only include the last operation.
",,
1303308939,2140,"[BUG] Module '""casbin.js""' has no exported member 'newModel'.","While importing from newModel from casbin.js it throws error Module has no export member.

**Screenshots**
![image](https://user-images.githubusercontent.com/50919570/178724658-93bf2c2a-9a7e-47a9-b8a5-b11f0bc660f9.png)

**Desktop (please complete the following information):**
 - OS: Wndows
 - Browser chrome
 - Used dataProvider hasura
",,
1303196746,2137,[FEAT] `@pankod/refine-antd`s `useTable` and `useSimpleList` does not export `setFilters`,"**Is your feature request related to a problem? Please describe.**
Users cannot manage filters/params manually when they use `@pankod/refine-antd#useTable` or `@pankod/refine-antd#useSimpleList` because of the missing `setFilters` function from`@pankod/refine-core#useTable`

**Describe the solution you'd like**
Exporting all properties of `refine-core#useTable`'s results.

**Describe alternatives you've considered**
Workaround can be applied such as updating `permanentFilters` or `initialFilters` or managing `onFinish` manually but not cool.

",,
1302689112,2134,[BUG] `antd@4.21.6` type change breaks `@pankod/refine-antd` builds,"**Describe the bug**
With `antd@4.21.6`, [`UploadFileStatus`](https://github.com/ant-design/ant-design/blob/master/components/upload/interface.tsx#L13) interface used in `useFileUploadState` hook is changed. `""removed""` is omitted from the type and causes an error in the switch-case block.

It's not really used by us, it's an empty case. I think it's best to clear the cases with no expression inside to avoid any unrelated errors in the future.",,
1294347520,2099,[BUG] MUI showButton not working since @pankod/refine-mui v3.32.0,"**Describe the bug**
A previously working app using `showButton` from `@pankod/refine-mui v3.32.0` suddenly stopped working when the dependency was updated to the latest version with the error:

> Unhandled Runtime Error
> Error: Failed prop type: The prop `href` expects a `string` or `object` in `<Link>`, but got `undefined` instead.
> Open your browser's console to view the Component stack trace.

After testing with several versions, it looks to me this started happening in the change from `3.32.0` to `3.34.0` (seems like `Link` behaviour was changed in that patch). 

The implementation of the button itself is exactly as shown in the docs:

```typescript
<ShowButton hideText size=""small"" recordItemId={record.id} />
```

Where `record.id` always exists.

**To Reproduce**
Steps to reproduce the behavior:
1. Implement MUI's `showButton` as shown in the docs using `@pankod/refine-mui v3.32.0`
2. Verify it's working as intended
3. Upgrade `@pankod/refine-mui` to `v3.34.0` or later
4. See error

**Expected behavior**
Page should display the `showButton` correctly.

**Desktop (please complete the following information):**
 - OS: macOS
 - Browser Chrome
 - Version 103.0.5
 - Used dataProvider: simple-rest",,
1293179137,2090,"[BUG][Typescript] Children element type is not found on List, Edit, Show,Create component ","
Hi,
I use the examples described in the tutorial. I get this typescript error on all components.

Typescript error is;

List
`
Type '{ children: Element; }' has no properties in common with type 'IntrinsicAttributes & ListProps'.
`

Create
`
Type '{ children: Element; saveButtonProps: Partial<{ href: string; target?: string | undefined; onClick?: MouseEventHandler<HTMLElement> | undefined; } & BaseButtonProps & Omit<...> & { ...; } & Omit<...>> & { ...; }; }' is not assignable to type 'IntrinsicAttributes & CreateProps'.
  Property 'children' does not exist on type 'IntrinsicAttributes & CreateProps'.
`

Edit
`
Type '{ children: Element; saveButtonProps: Partial<{ href: string; target?: string | undefined; onClick?: MouseEventHandler<HTMLElement> | undefined; } & BaseButtonProps & Omit<...> & { ...; } & Omit<...>> & { ...; }; }' is not assignable to type 'IntrinsicAttributes & EditProps'.
  Property 'children' does not exist on type 'IntrinsicAttributes & EditProps'.
`

Show
`
Type '{ children: Element[]; isLoading: boolean; }' is not assignable to type 'IntrinsicAttributes & ShowProps'.
  Property 'children' does not exist on type 'IntrinsicAttributes & ShowProps'.
`

I use 

    ""@pankod/refine-antd"": ""^3.27.0"",
    ""@pankod/refine-core"": ""^3.36.0"",
    ""@pankod/refine-react-router-v6"": ""^3.25.2"",
    ""@pankod/refine-simple-rest"": ""^3.25.6"",
    ""@pankod/refine-strapi-graphql"": ""^3.25.8"",
    ""@testing-library/jest-dom"": ""^5.16.4"",
    ""@testing-library/react"": ""^13.3.0"",
    ""@testing-library/user-event"": ""^13.5.0"",
    ""@types/jest"": ""^27.5.2"",
    ""@types/node"": ""^16.11.41"",
    ""@types/react"": ""^18.0.14"",
    ""@types/react-dom"": ""^18.0.5"",
    ""react"": ""^18.2.0"",
    ""react-dom"": ""^18.2.0"",
    ""react-scripts"": ""5.0.1"",
    ""typescript"": ""^4.7.4"",
    ""web-vitals"": ""^2.1.4""",,
1290164625,2077,[BUG] Strapi-V4 useMany has implicit pagination and pageSize,"**Describe the bug**

Let´s suppose I query strapi with this useMany hook and the ids array have 100 ids:

```
const postQueryResult = useMany<IPost>({
    resource: ""posts"",
    ids: [1, 2,3,4,5,6 ... 96,97,98,99,100],
});

```
Strapi will only return the first 25 ids and refine wont call a warning or throw an error.
As for default, strapi imposes a 25 items limit on its API: https://docs.strapi.io/developer-docs/latest/setup-deployment-guides/configurations/optional/api.html

For default, on refinejs code, I cant set a pagination to increase the amount of ids strapi should response, but this pagination is available on other hooks.

**To Reproduce**
Steps to reproduce the behavior:
1. Make a useMany query with more than 25 ids
2. Check response and you will se it will be limited to 25 ids.

**Expected behavior**
It would be ideal for refine.js throw a warning and a property/method to be available to change pagination, as there is on useTable hook.

**Desktop (please complete the following information):**
 - OS: Windows
 - Browser Chrome
 - Version 3.25.2
 - Used dataProvider Strapi

**Additional context**
I don´t know yet how to do a pull request on strapi, I tried to do some changes on efine-strapi-v4 code but I couldn´t build it. It says CJS error (or something like this). 

If you open https://github.com/pankod/refine/blob/next/packages/strapi-v4/src/dataProvider.ts and look at getList function (line 137), it seems that you can just copy hasPagination and pagination  propeties and its code to the getMany function and it may solve the issue.
",,
1282463142,2042,[FEAT] handleNotification for data hook's callbacks should allow more customization for the notification message,"**Is your feature request related to a problem? Please describe.**
Hooks like [useCreate](https://github.com/pankod/refine/blob/next/packages/core/src/hooks/data/useCreate.ts#L154) trigger notistack in a way that makes it imposible to fully customize the content of the toast.

**Describe the solution you'd like**
I'd like the callbacks that trigger these toasts to use the err.message as the notification message. They are currently passing that as the notification description. It would also be nice to get the description to be a part of the notification.

**Describe alternatives you've considered**
I could find a way to trigger a 2nd notification with the err.message but that would make 2 notifications for each request
",,
1268594080,1929,[BUG][strapi-graphql] graphql-request type issue,"Hi,

Due to the difference in typescript between the latest version of graphql-request and the version of graphql-request@3.5.0 used in the strapi-graphql package, I get an error as follows. Can be upgrade or change to other usages of npm.

`Argument of type 'import(""D:/*****/node_modules/graphql-request/dist/index"").GraphQLClient' is not assignable to parameter of type 'import(""D:/*****/node_modules/@pankod/refine-strapi-graphql/node_modules/graphql-request/dist/index"").GraphQLClient'.
  Type 'GraphQLClient' is missing the following properties from type 'GraphQLClient': batchRequests, setEndpointts(2345)`",,
1264196534,1892,[BUG]: Issue in useTable hook when resource has API URL with query parameter ,"Issue in useTable hook when resource has API URL with query parameter 

Steps to reproduce:
1. Define dataProvider in App.tsx
2. Create a ticket.tsx under pages and use ""useTable"" hook 
   a. Below is the code defined in the 
   export const TicketPage: React.FC = () =>{    
        const { tableQueryResult } = useTable<IVehicleList>({
            resource: ""**ticket/getTickets?ticketNoList=3107,3106,3105,3104**"",
        });
        return (
            <div>
             Ticket list here
            </div>
        );
   }

On running above code, I see API request as ""http://abc.com/ticket/getTickets?ticketNoList=3107,3106,3105,3104?limit=10&offset=0&"" in Network tab under developer debugger 

**Expected behavior**
1. I think ""useTable"" hook should check if there are query parameter in API URL then it should not append '?' again, rather append limit and offset
2. There should be flag(bool flag) in ""useTable"" hook to skip paging query parameter ( limit and offset)

Not sure if I am missing anything. Please suggest
",,
1248755840,1839,[BUG]TypeScript error for Next.js,"**Describe the bug**
In `_app.tsx` there is a TypeScript error:
`Property 'children' does not exist on type 'IntrinsicAttributes & RefineProps'`

**To Reproduce**
Steps to reproduce the behavior:
1. Initialize project with superplate, choose Nest.js and Strapi v4.
2. Upgrade dependencies

**Expected behavior**
Should allow children in TypeScript definition.

**Screenshots**
![image](https://user-images.githubusercontent.com/203980/170370586-e9422d13-d0e7-4c9d-a638-978da2f6ad64.png)


**Desktop (please complete the following information):**
 - OS: Windows 10
 - Browser [e.g. chrome, safari]
 - Version [e.g. 22]
 - Used dataProvider Strapi V4

**Smartphone (please complete the following information):**
 - Device: [e.g. iPhone6]
 - OS: [e.g. iOS8.1]
 - Browser [e.g. stock browser, safari]
 - Version [e.g. 22]
 - Used dataProvider [e.g. custom, Strapi, Airtable]

**Additional context**
TypeScript 4.7.2
React 18.1.0
",,
1245415667,1825,[BUG] Filters reset when changing page,"**Describe the bug**
When i apply my filters and then i change page (e.g. from page 1 to page 2), the filters are reset. I wrote the same code as the example so it should work the same way.

**To Reproduce**
Steps to reproduce the behavior:
1. Change filters
2. Change page
3. Filters are reset (seen in the url with synclocation active)

**Expected behavior**
Filters shouldn't be cleared.

**Code**
`import { CrudFilters, HttpError, IResourceComponentsProps, useAuthenticated, useGetIdentity, useShow } from ""@pankod/refine-core"";
import {
  List,
  Table,
  TextField,
  useTable,
  getDefaultSortOrder,
  DateField,
  FilterDropdown,
  FilterDropdownProps,
  ShowButton,
  Checkbox,
  Radio,
  Tooltip,
  Space,
  Card,
  Form,
  Input,
  Icons,
  Button,
  Select,
  Slider,
} from ""@pankod/refine-antd"";

import { WarningOutlined } from ""@ant-design/icons"";

import { ILead, ILeadSearch } from ""interfaces"";
import NumField from ""components/fields/NumField"";
import TypeField from ""components/fields/TypeField"";
import { red } from ""@ant-design/colors"";
import React, { useState } from ""react"";
import dayjs from ""dayjs"";

import ""dayjs/locale/fr"";
import HeaderCustom from ""components/header"";
import { statutsLeads } from ""utils/statutleads"";
import ModalLead from ""components/modals/ModalLead"";

export const LeadList: React.FC<IResourceComponentsProps> = () => {
  const { data: identity } = useGetIdentity();
  const {
    refetch: checkAuth,
  } = useAuthenticated();

  const { tableProps, sorter, tableQueryResult, searchFormProps } = useTable<ILead, HttpError, ILeadSearch>({
    initialSorter: [
      {
        field: ""createdAt"",
        order: ""desc"",
      },
    ],
    initialPageSize: 200,
    onSearch: (params) => {
      const filters: CrudFilters = [];
      let { q, type, age, statut } = params;

      if (!Array.isArray(age)) {
        age= [18,80];
      }

      filters.push(
        {
          operator: ""or"",
          value: [
            {
              field: ""nom"",
              operator: ""contains"",
              value: q ?? """",
            },
            {
              field: ""prenom"",
              operator: ""contains"",
              value: q ?? """",
            }
          ]
        },
        {
          field: ""type"",
          operator: ""eq"",
          value: type,
        },
        {
          operator: ""or"",
          value: [
            {
              field: ""datenaissance"",
              operator: ""gte"",
              value: `${dayjs().year() - (age[1] ?? 80)}-01-01`
            },
            {
              field: ""datenaissance"",
              operator: ""gte"",
              value: dayjs().year() - (age[1] ?? 80)
            }
          ]
        },
        {
          operator: ""or"",
          value: [
            {
              field: ""datenaissance"",
              operator: ""lte"",
              value: `${dayjs().year() - (age[0] ?? 80)}-01-01`
            },
            {
              field: ""datenaissance"",
              operator: ""lte"",
              value: dayjs().year() - (age[0] ?? 18)
            },
          ]
        },
        {
          field: ""statut"",
          operator: statut === ""Non traité"" ? ""ncontains"" : ""contains"",
          value: statut === ""Non traité"" ? """" : statut,
        },
      );
      return filters;
    },
  });

  const leads = tableQueryResult.data?.data;
  const countLeadsToday = leads?.filter(l => dayjs(l.createdAt) > dayjs().hour(0).minute(0).second(0)).length;

  const typeMapping: Record<string, string> = {
    [""recherche avoirs""]: ""Recherche d'avoirs"",
    [""placement avoirs""]: ""Placement d'avoirs"",
  }

  const [visibleShowModal, setVisibleShowModal] = useState<boolean>(false);

  const { queryResult, setShowId, showId } = useShow<ILead>();

  const { data: showQueryResult } = queryResult;
  const record = showQueryResult?.data;

  console.log(searchFormProps);

  return (
    <>
      <HeaderCustom>Bienvenue <b>{identity?.prenom}</b>, aujourd'hui <span className=""header-rappels"">{`${identity?.nbRappelsUrgents} ${identity?.nbRappelsUrgents && identity?.nbRappelsUrgents > 1 ? ""rappels"" : ""rappel""}`}</span>  à traîter. <b>{countLeadsToday}</b> nouveaux leads aujourd'hui</HeaderCustom>
      <Card title=""Filtres"" style={{ marginBottom: 16 }}>
        <Form layout=""vertical"" {...searchFormProps}>
          <Form.Item label=""Rechercher"" name=""q"">
            <Input
              placeholder=""Nom, prénom""
              prefix={<Icons.SearchOutlined />}
            />
          </Form.Item>
          <Form.Item label=""Type de lead"" name=""type"">
            <Select
              allowClear
              options={[
                {
                  label: ""Recherche d'avoirs"",
                  value: ""recherche avoirs"",
                },
                {
                  label: ""Placement d'avoirs"",
                  value: ""placement avoirs"",
                },
              ]}
              placeholder=""Type de lead""
            />
          </Form.Item>
          <Form.Item label=""Age"" name=""age"">
            <Slider range min={18} max={80} defaultValue={[18, 80]} tooltipVisible/>
          </Form.Item>
          <Form.Item label=""Statut"" name=""statut"">
          <Select
              allowClear
              options={statutsLeads.map(s => ({label: s.name, value: s.name}))}
              placeholder=""Statut""
            />
          </Form.Item>
          <Form.Item>
            <Button htmlType=""submit"" type=""primary"">
              Filtrer
            </Button>
          </Form.Item>
        </Form>
      </Card>
      <List title=""Leads"">
        <Table {...tableProps} rowKey=""_id"">
          <Table.Column
            dataIndex=""nom""
            key=""nom""
            title=""Nom""
            render={(value) => <TextField value={value} />}
          />
          <Table.Column
            dataIndex=""prenom""
            key=""prenom""
            title=""Prénom""
            render={(value) => <TextField value={value} />}
          />
          <Table.Column
            dataIndex=""telephone""
            key=""telephone""
            title=""Téléphone""
            render={(value, record: ILead) => <NumField value={value} record={record} />}
          />
          <Table.Column
            dataIndex=""datenaissance""
            key=""datenaissance""
            title=""Age""
            render={(value, record: ILead) => <TextField value={`${Math.trunc(dayjs().diff(dayjs(value, 'YYYY'), 'years', true))}`} />}
            sorter
          />
          <Table.Column
            dataIndex=""type""
            key=""type""
            title=""Type de lead""
            render={(value: string) => <TextField value={typeMapping[value]} />}
          // filterDropdown={(props: FilterDropdownProps) => {
          //   return (
          //     <FilterDropdown {...props}>
          //       <Radio.Group name=""type"">
          //         <Radio value={""recherche avoirs""}>Recherche d'avoirs</Radio>
          //         <Radio value={""placement avoirs""}>Placement d'avoirs</Radio>
          //       </Radio.Group>
          //     </FilterDropdown>
          //   )
          // }}
          />
          <Table.Column
            dataIndex=""statut""
            key=""statut""
            title=""Statut""
            render={(value: string) => <TypeField value={value} />}
          // filterDropdown={(props: FilterDropdownProps) => {
          //   return (
          //     <FilterDropdown {...props}>
          //       <Checkbox.Group name=""type"">
          //         {statutsLeads.map(s => <Checkbox value={s.name}>{s.name}</Checkbox>)}
          //       </Checkbox.Group>
          //     </FilterDropdown>
          //   )
          // }}
          />
          <Table.Column
            dataIndex=""extra""
            key=""extra.anneetravaillees""
            title=""Années travaillées""
            render={value => <TextField value={value.anneetravaillees ?? ""-""} />}
            sorter
          />
          <Table.Column
            dataIndex=""createdAt""
            key=""createdAt""
            title=""Date""
            render={(value) => <DateField value={value} format=""DD/MM/YYYY HH:mm"" />}
            defaultSortOrder={getDefaultSortOrder(""createdAt"", sorter)}
            sorter
          />
          <Table.Column
            title=""Actions""
            dataIndex=""actions""
            render={(_, record: ILead) =>
              <Space>
                <ShowButton hideText recordItemId={record._id}
                  onClick={() => {
                    setShowId(record._id);
                    setVisibleShowModal(true);
                    checkAuth();
                  }} />
                {record.doublonip &&
                  <Tooltip title=""Doublon IP"">
                    <WarningOutlined style={{ color: red.primary, fontSize: ""1.4rem"" }} />
                  </Tooltip>
                }
              </Space>
            }
          />
        </Table>
      </List>
      <ModalLead
        visible={visibleShowModal}
        onCancel={() => setVisibleShowModal(false)}
        record={record}
        showId={showId}
      />
    </>
  );
};`
**Desktop (please complete the following information):**
 - OS: iOS
 - Browser Chrome
 - Version 101.0.4951.64
 - Used dataProvider : custom
",,
1235306999,1804,[FEAT]  Implement support for Deck.GL / Apache-arrow  -> Apache-arrow mjs files and refine webpack config not working. ,"**Describe the bug**
When i try to use Deck.Gl with refine.js, I get several errors like this:

module not found: Error: Can't resolve './io/whatwg/builder' in 'C:\Users\Alberto\desenvolvimento\atrium\Atrium-Frontend\node_modules\apache-arrow' Did you mean 'builder.mjs'?


**To Reproduce**
Steps to reproduce the behavior:

`npx superplate-cli -p refine-react tutorial`

√ Cloned remote source successfully.
√ What will be the name of your app · tutorial
√ Package manager: · npm
√ Do you want to use an UI Framework?: · antd
√ Do you want to customize theme?: · less
√ Router Provider: · react-router-v6
√ Data Provider: · custom-json-rest-data-provider
√ Auth Provider: · none
√ Do you want to add an example page? · example-resource
√ Do you want to customize layout? · custom-layout
√ i18n - Internationalization: · no
√ Would you like to share your choices with us anonymously? · yes
/ Installing packages with npm

`yarn add deck.gl --save `

Delete everything. Leave only` index.tsx` and `reportWebVitals.ts`
Based on deck.GL example on how to use it with open streetmaps tilers: [https://github.com/visgl/deck.gl/blob/8.7-release/examples/website/map-tile/app.js](https://github.com/visgl/deck.gl/blob/8.7-release/examples/website/map-tile/app.js), create app.jsx with the content bellow:


```
import React from 'react';
import {render} from 'react-dom';

import DeckGL from '@deck.gl/react';
import {MapView} from '@deck.gl/core';
import {TileLayer} from '@deck.gl/geo-layers';
import {BitmapLayer, PathLayer} from '@deck.gl/layers';

const INITIAL_VIEW_STATE = {
  latitude: 47.65,
  longitude: 7,
  zoom: 4.5,
  maxZoom: 20,
  maxPitch: 89,
  bearing: 0
};

const COPYRIGHT_LICENSE_STYLE = {
  position: 'absolute',
  right: 0,
  bottom: 0,
  backgroundColor: 'hsla(0,0%,100%,.5)',
  padding: '0 5px',
  font: '12px/20px Helvetica Neue,Arial,Helvetica,sans-serif'
};

const LINK_STYLE = {
  textDecoration: 'none',
  color: 'rgba(0,0,0,.75)',
  cursor: 'grab'
};

/* global window */
const devicePixelRatio = (typeof window !== 'undefined' && window.devicePixelRatio) || 1;

function getTooltip({tile}) {
  return tile && `tile: x: ${tile.x}, y: ${tile.y}, z: ${tile.z}`;
}

export default function App({showBorder = false, onTilesLoad = null}) {
  const tileLayer = new TileLayer({
    // https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Tile_servers
    data: [
      'https://a.tile.openstreetmap.org/{z}/{x}/{y}.png',
      'https://b.tile.openstreetmap.org/{z}/{x}/{y}.png',
      'https://c.tile.openstreetmap.org/{z}/{x}/{y}.png'
    ],

    // Since these OSM tiles support HTTP/2, we can make many concurrent requests
    // and we aren't limited by the browser to a certain number per domain.
    maxRequests: 20,

    pickable: true,
    onViewportLoad: onTilesLoad,
    autoHighlight: showBorder,
    highlightColor: [60, 60, 60, 40],
    // https://wiki.openstreetmap.org/wiki/Zoom_levels
    minZoom: 0,
    maxZoom: 19,
    tileSize: 256,
    zoomOffset: devicePixelRatio === 1 ? -1 : 0,
    renderSubLayers: props => {
      const {
        bbox: {west, south, east, north}
      } = props.tile;

      return [
        new BitmapLayer(props, {
          data: null,
          image: props.data,
          bounds: [west, south, east, north]
        }),
        showBorder &&
          new PathLayer({
            id: `${props.id}-border`,
            visible: props.visible,
            data: [
              [
                [west, north],
                [west, south],
                [east, south],
                [east, north],
                [west, north]
              ]
            ],
            getPath: d => d,
            getColor: [255, 0, 0],
            widthMinPixels: 4
          })
      ];
    }
  });

  return (
    <DeckGL
      layers={[tileLayer]}
      views={new MapView({repeat: true})}
      initialViewState={INITIAL_VIEW_STATE}
      controller={true}
      getTooltip={getTooltip}
    >
      <div style={COPYRIGHT_LICENSE_STYLE}>
        {'© '}
        <a style={LINK_STYLE} href=""http://www.openstreetmap.org/copyright"" target=""blank"">
          OpenStreetMap contributors
        </a>
      </div>
    </DeckGL>
  );
}

```

**ERROR RESULT**

Attempted import error: 'FixedSizeList' is not exported from 'apache-arrow/Arrow.dom' (imported as 'FixedSizeList').
ERROR in ./node_modules/@loaders.gl/schema/dist/esm/category/mesh/mesh-to-arrow-table.js 18:25-38
export 'FixedSizeList' (imported as 'FixedSizeList') was not found in 'apache-arrow/Arrow.dom' (module has no exports)

ERROR in ./node_modules/@loaders.gl/schema/dist/esm/category/mesh/mesh-to-arrow-table.js 18:49-54
export 'Field' (imported as 'Field') was not found in 'apache-arrow/Arrow.dom' (module has no exports)


**Expected behavior**
Show Deck.GL map.

**Desktop (please complete the following information):**
 - OS: Windows 10
 - Browser Chrome
 - Version 101
 - Used dataProvider restAPI

**Additional context**
Maybe it has something to do with apache-arrow mjs files and webpack 5 config. This is discussed here:
[https://github.com/apache/arrow/issues/9752](https://github.com/apache/arrow/issues/9752)

I tried to change craco.config.js to add what was suggested, like this, but it didn´t work:
module.exports = {
    resolve: {
        extensions: ['.ts', '.mjs', '.js']
    },
    module: {
        rules: [
            {
                test: /\.m?js/,
                resolve: {
                    fullySpecified: false
                }
            },
        ]
    },
	plugins: [
    {
      plugin: CracoLessPlugin,
      options: {
        lessLoaderOptions: {
          lessOptions: {
            // modifyVars: { ""@primary-color"": ""#1DA57A"" },
            javascriptEnabled: true,
          },
        },
      },
    },
  ],
};


**Temporary fix **
On package.json, change **""react-scripts"": ""^5.0.0"" for ""react-scripts"": ""^4.0.3""**, Found it here: [https://github.com/solana-labs/wallet-adapter/issues/231](https://github.com/solana-labs/wallet-adapter/issues/231)
",,
1232718526,1794,[BUG] @pankod/refine-nhost is not handling graphQL error responses,"**Describe the bug**
The `@nhost/nhost-js` does not throw errors for graphQL errors, instead it returns `error` field in the return value. Callers are expected to check for the `error` field in the return values and act appropriately.

https://github.com/nhost/nhost/blob/19ccc5ab0d69ba516305548678e09807809845c3/packages/nhost-js/src/clients/graphql.ts#L55-L60
 
However,
The `refine-nhost` is not considering this situation and is not handling the error return values. 
https://github.com/pankod/refine/blob/38278e6b61af8c4cbf90d61e790bd619825fead5/packages/nhost/src/index.ts#L203-L204

This is leading to situation where the error message is eaten away by the `refine-nhost` and no way for the app or caller to know about the graphQL error responses. App gets a ""success"" notification, but the backend does not have the data and no way to know about it (since console log also does not show any errors).

**To Reproduce**
Use `refine-nhost` to make a graphQL query that returns errors (such as permission error) etc.

**Expected behavior**
Error message should be thrown or notification should be displayed



",,
1232439740,1793,[BUG] Module not found: Error: Can't resolve 'rc-picker/lib/generate/dayjs' in '/Users/.../refine_tutorial/node_modules/@pankod/refine-antd/dist/esm',"**Describe the bug**
I'm trying to do the tutorial as described on the tutorial page. Unfortunately, I end up with the following error when running `npm run dev` in the freshly created project.

```
ERROR in ./node_modules/@pankod/refine-antd/dist/esm/index.js 978:0-46
Module not found: Error: Can't resolve 'rc-picker/lib/generate/dayjs' in '/Users/.../refine_tutorial/node_modules/@pankod/refine-antd/dist/esm'
```

**To Reproduce**
Steps to reproduce the behavior:
1. `npx superplate-cli -p refine-react tutorial`
2. `cd tutorial`
3. `npm install`
4. `npm run dev`
5. See error

**Expected behavior**
The tutorial should start without an error.

**Screenshots**
<img width=""1410"" alt=""CleanShot 2022-05-11 at 12 57 23@2x"" src=""https://user-images.githubusercontent.com/9783664/167834011-a831f0a8-da96-459a-9d29-58aaa0e82f18.png"">

**Desktop:**
 - OS: macOS Monterey
 - Browser: Brave
 - Node: v16.13.0
 - Used with UI, with REST API and Custom Authorization

I don't know how to fix it... 
Thanks for any hints or solutions!
",,
1209407643,1738,"[BUG]If an error is returned from the RestAPI, the input is in progress.","Sorry if this isn't a bug.

**Describe the bug**
https://refine.dev/docs/ui-frameworks/antd/tutorial/#editing-a-record
When an error is returned from RestAPI (e.g. http status 422), the data being input is reset. Please provide a workaround for this.

This is a program I created.
```
import { useForm, Form, Input, Edit } from ""@pankod/refine-antd"";
import { HttpError, useTranslate } from ""@pankod/refine-core"";
import { IAdmin } from ""interfaces/admin"";

export const AdminEdit: React.FC = () => {
  const { formProps, saveButtonProps, queryResult } = useForm<
    IAdmin,
    HttpError
  >();

  const translate = useTranslate();

  return (
    <Edit saveButtonProps={saveButtonProps}>
      <Form {...formProps} layout=""vertical"">
        <Form.Item label={translate(""admins.fields.name"")} name=""name"">
          <Input />
        </Form.Item>
        <Form.Item label={translate(""admins.fields.email"")} name=""email"">
          <Input />
        </Form.Item>
        <Form.Item label={translate(""admins.fields.password"")} name=""password"">
          <Input />
        </Form.Item>
      </Form>
    </Edit>
  );
};
```",,
1209301364,1736,findDOMNode is deprecated in StrictMode in Ant Design.,"**Describe the bug**
You may get this error when operating the screen.
```
findDOMNode is deprecated in StrictMode. findDOMNode was passed an instance of DomWrapper which is inside StrictMode. Instead, add a ref directly to the element you want to reference.
```

This is one of the reproduction examples.Occurred when a character was missing from input.

![refine-issue](https://user-images.githubusercontent.com/4780752/164177449-492c3d0c-cd35-4c03-8c79-f76ef4e6feb7.gif)

I'll post the code as well.
```
import React from ""react"";
import { useLogin } from ""@pankod/refine-core"";
import {
  Row,
  Col,
  AntdLayout,
  Card,
  Typography,
  Form,
  Input,
  Button,
} from ""@pankod/refine-antd"";
import ""./styles.css"";

const { Title } = Typography;

export interface ILoginForm {
  email: string;
  password: string;
  remember: boolean;
}

export const LoginPage: React.FC = () => {
  const [form] = Form.useForm<ILoginForm>();
  const { mutate: login } = useLogin<ILoginForm>();

  return (
    <AntdLayout>
      <Row
        justify=""center""
        align=""middle""
        style={{
          height: ""100vh"",
        }}
      >
        <Col xs={22}>
          <div className=""container"">
            <Card
              title={<Title level={3}>Sign in your account</Title>}
              headStyle={{ borderBottom: 0 }}
            >
              <Form<ILoginForm>
                layout=""vertical""
                form={form}
                onFinish={(values) => login(values)}
                requiredMark={false}
              >
                <Form.Item
                  name=""email""
                  label=""Email""
                  rules={[{ required: true }]}
                >
                  <Input size=""large"" placeholder=""Username"" />
                </Form.Item>
                <Form.Item
                  name=""password""
                  label=""Password""
                  rules={[{ required: true }]}
                  style={{ marginBottom: ""12px"" }}
                >
                  <Input type=""password"" size=""large"" />
                </Form.Item>
                <Button type=""primary"" size=""large"" htmlType=""submit"" block>
                  Signin
                </Button>
              </Form>
            </Card>
          </div>
        </Col>
      </Row>
    </AntdLayout>
  );
};
```",,
1208380761,1733,[BUG] Appwrite Storage Error,"**Describe the bug**
A clear and concise description of what the bug is.

**To Reproduce**
Steps to reproduce the behavior:
1. Go to dataProvider Apprwite example
2. try to create new Product
3. Upload image
4. See error

<img width=""1792"" alt=""Screen Shot 2022-04-19 at 20 26 24"" src=""https://user-images.githubusercontent.com/12064619/164015540-5879f001-94b6-476e-b9b6-3eb3ac035292.png"">
<img width=""889"" alt=""Screen Shot 2022-04-19 at 20 26 56"" src=""https://user-images.githubusercontent.com/12064619/164015527-779d2df6-451d-4658-b34d-e4eb316c9ad4.png"">

**Desktop (please complete the following information):**
 - OS: macOS Monterey
 - Browser chrome
 - Version 100.0.4896.127
 - Used dataProvider Appwrite


**Additional context**
Appwrite Storage now has a new interface with Bucket and current createFile interface not compatible with new storage's interface. 

Ref. https://dev.to/appwrite/announcing-appwrite-013-with-major-upgrades-to-storage-and-functions-3hpf",,
1207364408,1729,[BUG] Problems with useForm inside Custom Page (antd UI framework),"I'm trying to make an Edit page for a resource, using a Custom Page. But I'm having some problems with the `useForm` hook, using the antd `Form` component.

1. The `useForm` hook doesn't automatically fetch the initial data, to populate the Form. I had to manually fetch it, using the hook `useOne`, and fill the data inside the form. I'm already setting the `resource` parameter inside the `useForm` hook and `Edit` component (with `recordItemId` aswell), but it only works for the form submit.
2. The `<Input>` fields inside the `<Form.Item>` fields don't update the value prop that I've set, using a variable with `useState`. But it works fine if I put the `<Input>` field outside the `Form` component. I've fixed it using the `form` return value of the hook `useForm`, and manually calling the function `form.setFieldsValue({ name });` when the field value changes.
3. The `<RefreshButton>` uses the URL from the page to refetch the resource, instead of using the provided `resource` parameter of the `useForm` hook. I had to manually set the RefreshButton inside the Form (using `pageHeaderProps`), and use the `refetch` return value of the hook `useOne`, and set the data manually for it to work.

Here is the code that I've implemented to make it work:

`App.tsx`:
``` tsx
<Refine
        routerProvider={{
          ...routerProvider,
          routes: [
            { element: <EmployeeList />, path: ""/employees"", layout: true },
            {
              element: <EmployeeCreate />,
              path: ""/employees/create"",
              layout: true,
            },
            {
              element: <EmployeeEdit />,
              path: ""/employees/edit/:id"",
              layout: true,
            },
          ],
        }}
        ...
/>
```


`pages/employees/edit.tsx` (Custom Page):
``` tsx
import {
  IResourceComponentsProps,
  useNavigation,
  useOne,
  useTranslate,
} from ""@pankod/refine-core"";
import { Edit, Form, Input, RefreshButton, useForm } from ""@pankod/refine-antd"";
import { useParams } from ""react-router-dom"";

import { IEmployee } from ""interfaces"";
import { useContext, useEffect, useState } from ""react"";
import { AppContext } from ""contexts/AppContext"";

export const EmployeeEdit: React.FC<IResourceComponentsProps> = () => {
  const { state } = useContext(AppContext);
  const { id } = useParams();
  const t = useTranslate();
  const { push } = useNavigation();

  const [loadedInitialData, setLoadedInitialData] = useState(false);
  const [name, setName] = useState<string>("""");

  const { data, refetch } = useOne<IEmployee>({
    resource: `stores/${state.storeId}/employees`,
    id: id as string,
  });

  const { form, formProps, saveButtonProps, onFinish } = useForm<IEmployee>({
    action: ""edit"",
    resource: `stores/${state.storeId}/employees/${id}`,
  });

  useEffect(() => {
    if (!loadedInitialData && data) {
      setLoadedInitialData(true);
      setName(data.data.name);
    }
  }, [data, loadedInitialData]);

  useEffect(() => {
    form.setFieldsValue({ name });
  }, [form, name]);

  const onSubmit = async () => {
    await onFinish?.();
    push(""/employees"");
  };

  return (
    <Edit
      saveButtonProps={saveButtonProps}
      resource={`stores/${state.storeId}/employees`}
      title={t(""employees.titles.edit"")}
      recordItemId={id}
      pageHeaderProps={{
        extra: [
          <RefreshButton
            resourceName={`stores/${state.storeId}/employees`}
            recordItemId={id}
            onClick={() => {
              setLoadedInitialData(false);
              refetch();
            }}
          />,
        ],
      }}
    >
      <Form form={form} {...formProps} layout=""vertical"" onFinish={onSubmit}>
        <Form.Item
          label={t(""employees.fields.name"")}
          name=""name""
          rules={[
            {
              required: true,
            },
          ]}
        >
          <Input
            value={name}
            onChange={(e) => {
              setName(e.target.value);
            }}
          />
        </Form.Item>
      </Form>
    </Edit>
  );
};

```

I was expecting that the `useForm` hook behaved the same as `resources` for Custom Pages, so that I wouldn't have to implement all this logic by myself, so I'm opening this issue as a bug.",,
1206068547,1724,[FEAT] Nested resources,"I have an API endpoint that goes like: `/api/admin/stores/:store_id/employees/:id`
Where `:store_id` and `:id` can both be an integer.

I would like to be able to create nested resources like this (for example: Employees resources that belongs to a specific Store).

I don't know if this is possible with the current multi-level menu, I've checked the documentation but it doesn't include the `:store_id` part in the URL, nor in the hooks (useList, etc) API requests.

Does anyone know how to implement this feature with the current version of refine? Or is it impossible right now?

My suggestion would be to approach this with a React Context, storing the selected `:store_id` (from a Select input, for example), and passing as a parameter to the resource, but I'm guessing the only way to do this is by creating a Custom Page and implement the API request with axios or something.

I'm using these dependencies in my package.json (basically refine + react + typescript + antd), and I've deleted my yarn.lock and reinstalled just now, so I could get the most recent version (right now in my yarn.lock has `""@pankod/refine-core"" ""^3.14.0""`):

```
""dependencies"": {
    ""@testing-library/jest-dom"": ""^5.12.0"",
    ""@testing-library/react"": ""^11.2.6"",
    ""@testing-library/user-event"": ""^12.8.3"",
    ""@types/jest"": ""^26.0.23"",
    ""@types/node"": ""^12.20.10"",
    ""@types/react"": ""^17.0.4"",
    ""@types/react-dom"": ""^17.0.3"",
    ""react"": ""^17.0.2"",
    ""react-dom"": ""^17.0.2"",
    ""react-scripts"": ""^5.0.0"",
    ""typescript"": ""^4.2.4"",
    ""web-vitals"": ""^1.1.1"",
    ""@pankod/refine-core"": ""^3.1.0"",
    ""@pankod/refine-react-router-v6"": ""^3.3.0"",
    ""@pankod/refine-antd"": ""^3.1.0"",
    ""@craco/craco"": ""^6.1.2"",
    ""craco-less"": ""^2.0.0"",
    ""@pankod/refine-simple-rest"": ""^3.1.0"",
    ""react-markdown"": ""^6.0.1"",
    ""react-mde"": ""^11.1.0"",
    ""i18next"": ""^20.1.0"",
    ""react-i18next"": ""^11.8.11"",
    ""i18next-browser-languagedetector"": ""^6.1.1"",
    ""i18next-xhr-backend"": ""^3.2.2""
  },
```
",,
1204263664,1716,[BUG] useExport error handling,"**Describe the bug**
Put in a custom resourceName as part of the properties, and when the API returns error 400 (which is expected), the button spins and stays in the loading state forever, until I reload the page.


**To Reproduce**
Steps to reproduce the behavior:
1. provide an API under useExport property, resourceName
2. configure API to return error 400 (I have a use-case where I send some params to the API, upon which it will return the 400 response)
3. Export button (component is called ExportButton) loading state persists, until you manually reload the page.
4. See error

**Expected behavior**
Loading state returns to false after failed getList request under useExport

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Desktop (please complete the following information):**
 - OS: Windows 11
 - Browser Chrome
 - Version 100.0.4896.88
 - Used dataProvider: custom

**Additional context**
None",,
1202491601,1714,[BUG] Multi-level routing does not work under next.js,"**Describe the bug**
Due to the way next.js routing is setup: [resource]->[action]->[id], multi-level routing breaks when trying to access a resource under a parent resource

**To Reproduce**
Steps to reproduce the behavior:
1. Clone and run `yarn dev` on https://github.com/smparekh/refine-test
2. Click on 'CMS'
3. Click on 'Posts'
4. Posts will not be displayed as expected

**Expected behavior**
When routing to a resource under a parentResource it should still handle it the same way as a top-level menu item

**Screenshots**
WITH POSTS UNDER CMS:

<img width=""1434"" alt=""Screen Shot 2022-04-12 at 18 49 12"" src=""https://user-images.githubusercontent.com/2242057/163067135-e9fd7dc2-9470-4192-85ae-8d129bd50977.png"">


WITH POSTS AT TOPLEVEL:
<img width=""1440"" alt=""Screen Shot 2022-04-12 at 18 50 35"" src=""https://user-images.githubusercontent.com/2242057/163067355-f466fca6-4213-4ee1-aa25-a04fa02aa2c6.png"">

**Desktop (please complete the following information):**
 - OS: macOS
 - Browser: Firefox
 - Version: 
 - Used: supabase, next.js, antd, custom layout

**Smartphone (please complete the following information):**
 - Device: [e.g. iPhone6]
 - OS: [e.g. iOS8.1]
 - Browser [e.g. stock browser, safari]
 - Version [e.g. 22]
 - Used dataProvider [e.g. custom, Strapi, Airtable]

**Additional context**
```
@pankod/refine-antd@3.12.2
│  ├─ @ant-design/icons@^4.5.0
│  ├─ @pankod/refine-core@^3.12.1
│  ├─ antd@^4.17.1
│  ├─ dayjs@^1.10.7
│  ├─ react-markdown@^6.0.1
│  ├─ react-query@^3.19.2
│  ├─ remark-gfm@^1.0.0
│  ├─ sunflower-antd@1.0.0-beta.3
│  └─ tslib@^2.3.1
├─ @pankod/refine-core@3.12.1
│  ├─ export-to-csv-fix-source-map@^0.2.1
│  ├─ humanize-string@^2.1.0
│  ├─ lodash-es@^4.17.21
│  ├─ lodash@^4.17.21
│  ├─ papaparse@^5.3.0
│  ├─ pluralize@^8.0.0
│  ├─ qs@^6.10.1
│  ├─ react-query@^3.19.2
│  └─ tslib@^2.3.1
├─ @pankod/refine-nextjs-router@3.12.1
│  ├─ @pankod/refine-core@^3.12.1
│  └─ qs@^6.10.1
├─ @pankod/refine-supabase@3.12.1
│  ├─ @pankod/refine-core@^3.12.1
│  └─ @supabase/supabase-js@^1.22.4
```

",,
1201960560,1713,"How can I generate automatic typescript types, with Hasura and graphql-codegen [Question]","I was following Hasura automatic type generation for React/Angular Apps. It seems that `code-gen` takes all the query and mutation and introspection and then it generates typescript  type defs. 

https://hasura.io/learn/graphql/typescript-react-apollo/codegen/

In refine since I don't have to write query and mutation, how can I generate typescript type definition file.
As of now I am writing all possible query and mutation.

I am using create react app and refine as npm deps
",,
1186817127,1669,[DOC] Typo in quick start ts example,"**Is this issue related to an existing part of the documentation? If so, please provide a link**
Helpful info about this issue.
https://github.com/pankod/refine/blob/master/README.md

**Describe the thing to improve**
The README.md has a typo. ""mport"" instead of ""import"" in the first typescript example under ""Quick Start""
",,
1174277960,1655,[DOC]AuthProvider Custom i18n messages,"**Is this issue related to an existing part of the documentation? If so, please provide a link**
[Helpful info about this issue.](https://refine.dev/docs/core/providers/auth-provider/)

**Describe the thing to improve**
I want to personalize authProvider messages but i can't see how can I do it in the documentation. After some research and reading library codes, I found it. I think you should write it on documents. But however, I can't translate my custom notifications. You should give us some instructions about it.

```
login: ({ username, password, remember }) => {
        
        // Suppose we actually send a request to the back end here.
        const user = mockUsers.find((item) => item.username === username);

        if (user) {
            localStorage.setItem(""auth"", JSON.stringify(user));
            return Promise.resolve();
        }
        return Promise.reject({name:""Login Error"",message:""Something went wrong.""});
    },
```

--- We cant use it this way of course--

Like this way(of course, that does not work), I want to internationalization my notifications.

```
login: ({ username, password, remember }) => {
        
        // Suppose we actually send a request to the back end here.
        const user = mockUsers.find((item) => item.username === username);

        if (user) {
            localStorage.setItem(""auth"", JSON.stringify(user));
            return Promise.resolve();
        }
        return Promise.reject({name:translate(""pages.login.username""),message:translate(""pages.login.username"")});
    },
```

",,
1168062488,1635,[FEAT] Allow DELETE requests' payload (as per RFC 7231),"Not that often, but sometimes, one would like to add a payload/body to their DELETE requests - that is allowed according to [RFC 7231 / 4.3.5](https://www.rfc-editor.org/rfc/rfc7231#section-4.3.5):

>    A payload within a DELETE request message has no defined semantics;
>    sending a payload body on a DELETE request might cause some existing
>    implementations to reject the request.

 However, `useDelete`'s callback does not allow the passing of any data along.
I suggest adding this capability, just as in `useCreate`, `useUpdate` etc.

My specific usecase is telling the server whether this is a ""soft"" delete"" or a ""hard"" delete

```ts
const { mutate: delete } = useDelete()
const deleteCategory = (catId) => delete({
    resource: ""categories"",
    id: catId,
    values: { hard: true },
})
const archiveCategory = (catId) => delete({
    resource: ""categories"",
    id: catId,
    values: { hard: false },
})
```

currently working around this via the metaData attribute in the provider:
```ts
// data-provider.ts
return {
    ...superDataProvider,
    deleteOne: ({ resource, metaData, id }) => {
      return httpClient
        .delete(`${baseUrl}/${resource}/${id}`, {
          data: metaData, // THIS IS A HACK-WORKAROUND TO MAKE DELTE WORK WITH BODY PARAMETERS
        })
        .then((r) => ({
          data: r.data,
        }));
    }
}
```",,
1166259361,1630,[BUG] <EditButton /> and <ShowButton /> doesn't work with the Tooltip (Ant Design) component,"**Describe the bug**
After clicking on `<EditButton />` or `<ShowButton />` wraped with the `<Tooltip></Tooltip>` nothing happens.
Tooltip show the message from title prop, but user are not redirected to the show or edit page.
On the other hand, Tooltip works on the standard ant `<Button />` component.

**To Reproduce**
Steps to reproduce the behavior:
1. `import { ShowButton, Tooltip } from ""@pankod/refine-antd"";`
2. `<Tooltip title=""test"">`
    ` <ShowButton size=""small"" recordItemId={record.id} />`
    `</Tooltip>`
4. Click on the button
5. Nothing happens...

**Expected behavior**
Redirection to a `/{resource}/show/{resourceId}` page

**Desktop (please complete the following information):**
 - OS: Kubuntu 20.04
 - Browser: Google Chrome
 - Version: 99.0.4844.51 (Official Build) (64-bit)
 - Used dataProvider: @pankod/refine-simple-rest
",,
1146060992,1571,"[BUG] Module '""@pankod/refine-antd""' has no exported member 'useGetIdentity'","**Describe the bug**
I'm trying to do the tutorial but after initializing the application with superplate `npx superplate-cli -p refine-react <app_name>` and executing `npm run dev` I encounter with this error

>  Module '""@pankod/refine-antd""' has no exported member 'useGetIdentity'


**To Reproduce**
Steps to reproduce the behavior:
1. Create a new app using superplate `npx superplate-cli -p refine-react <app_name>` with the following configuration:

> ✔ Cloned remote source successfully.
> ✔ What will be the name of your app · refine-tutorial
> ✔ Do you want to using UI Framework?: · antd
> ✔ Do you want to customize theme?: · css
> ✔ Data Provider: · custom-json-rest-data-provider
> ✔ Auth Provider: · custom-auth-provider
> ✔ Do you want to add an example page? · example-resource
> ✔ Do you want to customize layout? · custom-layout
> ✔ i18n - Internationalization: · no

2. run `npm run dev` on the root folder of the recently created application
3. You should see the error on your terminal and the app crashing.

**Expected behavior**
Expect to see the app running on https://localhost:3000

**Additional context**
This is the generated package.json
```
{
  ""name"": ""refine-tutorial"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""dependencies"": {
    ""@testing-library/jest-dom"": ""^5.12.0"",
    ""@testing-library/react"": ""^11.2.6"",
    ""@testing-library/user-event"": ""^12.8.3"",
    ""@types/jest"": ""^26.0.23"",
    ""@types/node"": ""^12.20.10"",
    ""@types/react"": ""^17.0.4"",
    ""@types/react-dom"": ""^17.0.3"",
    ""react"": ""^17.0.2"",
    ""react-dom"": ""^17.0.2"",
    ""react-scripts"": ""^5.0.0"",
    ""typescript"": ""^4.2.4"",
    ""web-vitals"": ""^1.1.1"",
    ""@pankod/refine-core"": ""^3.1.0"",
    ""@pankod/refine-react-router"": ""^3.1.0"",
    ""@pankod/refine-antd"": ""^3.1.0"",
    ""@pankod/refine-simple-rest"": ""^3.1.0"",
    ""react-markdown"": ""^6.0.1"",
    ""react-mde"": ""^11.1.0""
  },
  ""scripts"": {
    ""dev"": ""react-scripts start"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test"",
    ""eject"": ""react-scripts eject""
  },
  ""eslintConfig"": {
    ""extends"": [
      ""react-app"",
      ""react-app/jest""
    ]
  },
  ""browserslist"": {
    ""production"": [
      "">0.2%"",
      ""not dead"",
      ""not op_mini all""
    ],
    ""development"": [
      ""last 1 chrome version"",
      ""last 1 firefox version"",
      ""last 1 safari version""
    ]
  }
}
```

",,
1141226899,1559,[DOC] Improve Ant Design useTable sorting ,"**Describe the thing to improve**
In the sorting process, first of all, the column's ""key"" property is used as the column name, if not exist, the ""dataIndex"" property is used. we should state this clearly in the docs.

Code: https://github.com/pankod/refine/blob/e6909125ea133b94340ce1411b5e8dab56f112e5/packages/antd/src/definitions/table/index.ts#L59

Doc: https://refine.dev/docs/ui-frameworks/antd/hooks/table/useTable/#sorting
",,
1139222620,1553,[BUG] Some antd buttons don't export their extended prop types,"**Describe the bug**
The list, show, edit and clone buttons (possibly others) don´t export their extended button props (i.e. `ListButtonProps`)

**To Reproduce**
Steps to reproduce the behavior:
1. Create a project using refine
2. Try importing `ListButtonProps`

**Expected behavior**
It would help a lot to be able to import each of the button props

**Desktop (please complete the following information):**
 - OS: arch
 - Browser: chrome
 - Version: 96
 - Used dataProvider: custom

**Additional context**
I was trying to extend the action buttons to wrap it in a Next.js Link tag and pass the href to the button and turn it into a anchor tag.

If its ok with you guys I will open a PR adding the exports for those buttons
",,
1138329696,1547,Failed when running yarn dev or yarn build,"Hello,

I have a problem when I run 

```
yarn dev
```

or 

```
yarn build
```

![image](https://user-images.githubusercontent.com/6881663/154017640-885442c8-d8a4-4784-b4dd-f94d666c23fd.png)

A couple of times of debugging, I found a strange behaviour. When I remove this line 
```
import ""../styles/app.less""
```

It works normally and the app is running so well. 

Then, every time I run for development, I have to remove that line then put it again when the hot-reload feature is working.

But, my teammates have run the app normally. He works on Windows 10, I work on macOS. 

Are there some compatibility issues with the operating system? 


",,
1137618504,1546,[BUG] Codemod imports `DataProvider` from `@pankod/refine-antd` instead of `@pankod/refine-core` ,"**Describe the bug**

Codemod for v3 migration uses the wrong import: `DataProvider` is not located in `@pankod/refine-antd`, but instead in `@pankod/refine-core`. Had to correct this after migration.

**Expected behavior**

`DataProvider` is correctly migrated to `@pankod/refine-core`.",,
1129076012,1527,[BUG] @pankod/refine-strapi-v4:3.1.0 AuthHelper login and me functions are not working.,"**Describe the bug**
Default `AuthHelper` of `@pankod/refine-strapi-v4:3.1.0` does not work as expected. Endpoints of Strapi-v4 were changed, it needs an update. Response type of login and me were changed too. So

[Current code](https://github.com/pankod/refine/blob/e78ce1863b98765299d8c0b65fc6860e7c7e1129/packages/strapi-v4/src/helpers/auth.ts?_pjax=%23js-repo-pjax-container%2C%20div%5Bitemtype%3D%22http%3A%2F%2Fschema.org%2FSoftwareSourceCode%22%5D%20main%2C%20%5Bdata-pjax-container%5D#L27)
```ts
export const AuthHelper = (apiUrl: string) => ({
    login: async (identifier: string, password: string) => {
        const url = `${apiUrl}/auth/local`; // url should be like `${apiUrl}/admin/login`;
        
        return await axios.post<ILoginResponse>(url, {
            identifier, // this should be email
            password,
        });
    },
    me: async (token: string) => {
        // new url should be like ${apiUrl}/admin/users/me
        return await axios.get<IUser>(`${apiUrl}/users/me`, {
            headers: {
                Authorization: `Bearer ${token}`,
            },
        });
    },
});


```


**Desktop (please complete the following information):**
 - OS: Windows 10
 - Browser chrome 98
 - Version Strapi v4.0.7
 - Used dataProvider, AuthHelper 


",,
1126143185,1520,[FEAT] Does this work via React Admin,"So I tried to make it work with react admin because the ra-strapi-rest is not working, i think it's quite old because of the count functionality
`import { Admin, Resource } from 'react-admin';
import { DataProvider  } from '@pankod/refine-strapi-v4';
import { PostList } from './components/PostList';

const dataProvider = DataProvider('http://localhost:1337/api');
<Admin dataProvider={dataProvider}>
                <Resource name=""Courses"" list={PostList} />
            </Admin>`


This is my PostList
`import React from 'react';
import { List, Datagrid, TextField } from 'react-admin';

export const PostList = (props) => (
    <List {...props}>
        <Datagrid>
            <TextField source=""id"" />
            <TextField source=""name"" />
            <TextField source=""description"" />
        </Datagrid>
    </List>
);`

Or if i use refine. will i be able to create custom login and pages, i am using a template. It calls undefiend for some reason. 
http://localhost:1337/api/undefined?pagination[page]=1&pagination[pageSize]=10&

i dont want to use the refine front end just the authorisation and rest provider for strapi. 
as per the document it probably looking for this 
resources={[{ name: ""posts"", list: PostList }]}

I am so confused, i have the UI components now i just want the strapi rest to work with it, will i be able to incorporate the template in refine",,
1120932377,1506,[BUG] Edit page refresh button uses raw params instead of decodeURIComponent,"**Describe the bug**
On useEditForm.ts (https://github.com/pankod/refine/blob/master/packages/core/src/hooks/form/useEditForm/useEditForm.ts#L115) the hook gets the id from the route and decodes it before calling getOne. However on the crud edit component (https://github.com/pankod/refine/blob/master/packages/core/src/components/crud/edit/index.tsx#L106) the refresh button uses the encoded id to update the values.

I discovered this because we use base64 ids with graphQL so it is common to have `=` at the end.

**To Reproduce**
Try refresh the data of an edit page where the id have special caracters like `=`.

**Expected behavior**
It is expected the refresh button to use a decoded id url param.

**Screenshots**
The url:

![url screenshot](https://user-images.githubusercontent.com/810728/152007458-81ac762e-3efd-4fa3-abfc-dc22f84e0f47.png)

Edit page refresh query:
![edit page refresh query](https://user-images.githubusercontent.com/810728/152007693-ca74daf6-ab91-4da1-852b-c1b8c552c0a2.png)

useEdit query:
![useEdit query](https://user-images.githubusercontent.com/810728/152007482-f12e075b-768f-4a08-949c-3a03477a8200.png)


**Desktop (please complete the following information):**
 - OS: arch
 - Browser: chrome
 - Version: 96
 - Used dataProvider: custom graphQL
- Refine version: 2.7.1
",,
1120876048,1505,[BUG] Babel aliases do not work in non-Babel environments,"**Describe the bug**

Refine defines several Babel aliases in its distribution in `.babelrc`: 
```
{
    ""plugins"": [
        [
            ""module-resolver"",
            {
                ""root"": ""./"",
                ""alias"": {
                    ""@components"": ""./src/components"",
                    ""@containers"": ""./src/containers"",
                    ""@pages"": ""./src/pages"",
                    ""@contexts"": ""./src/contexts"",
                    ""@dataProviders"": ""./src/dataProviders"",
                    ""@hooks"": ""./src/hooks"",
                    ""@test"": ""./test"",
                    ""@definitions"": ""./src/definitions""
                }
            }
        ]
    ]
}
```

These aliases do not get resolved in any non-Babel environment, like [Vite](https://vitejs.dev/), leading to errors.

**To Reproduce**
Steps to reproduce the behavior:
1. Initialize a new Vite project with React and TypeScript with `npm init vite@latest` (https://vitejs.dev/guide/#scaffolding-your-first-vite-project).
2. Follow first steps on Refine tutorial (https://refine.dev/docs/) until just before ""Adding resources"" chapter. 
3. Run `npm run build`
4. Observe errors in the console like `ERROR(TypeScript)  Cannot find module '@components' or its corresponding type declarations.`

**Expected behavior**

Should work with Vite just like it does with `create-react-app`.",,
1120825905,1504,[Feat] Provide the ability to redirect a user to a custom page after login,"**Is your feature request related to a problem? Please describe.**
After login, the user is taken to the list page of the 1st resource. However, we would like the user to be taken to a custom dashboard instead.

**Describe the solution you'd like**
I suggest that a custom path coud be added to the `return Promise.resolve();` of the login method, alike for the logout method, that would send the user to the desire path.

For example: `return Promise.resolve(""/dashboard/overview"");`
",,
1112003049,1453,Update Dataprovider for Appwrite >0.12 ,"The recent relase of Appwrite 0.12 has changed the database API of Appwrite. Specifically the permissions have been changed. The `""*""` wildcard permission has been replaced by `""role:all""`. You can find more info in the [Migration Guide](https://dev.to/appwrite/appwrite-012-migration-post-3cha) blog post.

I found 4 instances of falling back to the `""*""` wildcard in the provider:
https://github.com/pankod/refine/blob/cba0000f86d35774f9b397fcf3a2f4edae62a739/packages/appwrite/src/index.ts#L139
https://github.com/pankod/refine/blob/cba0000f86d35774f9b397fcf3a2f4edae62a739/packages/appwrite/src/index.ts#L140

https://github.com/pankod/refine/blob/cba0000f86d35774f9b397fcf3a2f4edae62a739/packages/appwrite/src/index.ts#L155
https://github.com/pankod/refine/blob/cba0000f86d35774f9b397fcf3a2f4edae62a739/packages/appwrite/src/index.ts#L156

https://github.com/pankod/refine/blob/cba0000f86d35774f9b397fcf3a2f4edae62a739/packages/appwrite/src/index.ts#L172
https://github.com/pankod/refine/blob/cba0000f86d35774f9b397fcf3a2f4edae62a739/packages/appwrite/src/index.ts#L173

https://github.com/pankod/refine/blob/cba0000f86d35774f9b397fcf3a2f4edae62a739/packages/appwrite/src/index.ts#L226
https://github.com/pankod/refine/blob/cba0000f86d35774f9b397fcf3a2f4edae62a739/packages/appwrite/src/index.ts#L227
",,
1108322174,1445,[BUG] Many examples fail to run out of box,"**Describe the bug**
Many of the examples (notably in examples/customization) fail to run successfully. They both have issues running locally, as well as some of the examples that are code playgrounds in the documentation. I actually get more errors running in linux environment with the same version of node.

**To Reproduce**
Steps to reproduce the behavior:
1. Clone this repo
2. change directory to examples/customization/<project> (customTheme for example)  
3. restore packages (npm install here fails for me, yarn succeeds)
4. yarn start

Observe
```
Compiled with problems:X

ERROR

Failed to load plugin 'react' declared in '..\..\..\.eslintrc': Cannot find module 'eslint-plugin-react'
Require stack:
- C:\Dev\source\refine\.eslintrc
Referenced from: C:\Dev\source\refine\.eslintrc

```

**Expected behavior**
I'd expect to see running examples with their denoted behavior, customTheme, or customLogin, or headermenu etc.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Desktop (please complete the following information):**
 - OS: Windows and Ubuntu LInux
 - Browser Latest Chrome, Brave
 - Node 16.13.2

**Additional context**
These errors popup, but you can hit the x in the browser, but I as actually able to get different errors on ubuntu linux box with same node version, that would not let these specific examples run at all.
",,
1103177246,1436,[BUG] useTable does not return antd Form props properly,"[`searchFormProps`](https://github.com/pankod/refine/blob/master/packages/core/src/hooks/table/useTable/useTable.ts#L243-L244) from useTable hook is a [FormInstance](https://ant.design/components/form/#FormInstance), not a [Form props](https://ant.design/components/form/#Form).


```typescript
<Form
  form={..searchFormProps}
  onValuesChange={() => {
    // this does not work since searchFormProps.form dosn't exist
    searchFormProps.form?.submit(v);

    // searchFormProps.submit exists but onSearch in useTable is not triggered 
    searchFormProps.submit();
  }}
>
```

---
Steps to reproduce the behavior:
```typesript
const { searchFormProps } = useTable({ onSearch: () => {...} });
console.log(searchFormProps);
```
<img width=""478"" alt=""스크린샷 2022-01-14 오후 4 42 31"" src=""https://user-images.githubusercontent.com/5436405/149469942-edbbb318-b643-4f62-938d-41a1dc462a3b.png"">

",,
1098443985,1422,[BUG] Warnings when running the project ,"**Describe the bug**
When starting the project, we get 2 warnings, in the export-to-csv module, the project starts normally as long as we do not need that library.

**To Reproduce**
Run yarn start or npm run start, inside the project folder.

**Expected behavior**
Avoid warnings when running the project.

**Additional context**
This warning started coming with ""react-scripts@5"".
",,
1096650365,1417,[FEAT] Add ability to combine filters into OR arrangement,"**Is your feature request related to a problem? Please describe.**
Would be awesome if it was possible to include a search all input which could technically be coded as several filters set to the same value. The problem is there is no way to tell the data provider how to combine these values (which ones are AND and which ones are OR). In some providers I've seen these filters just passed on with this being left up to them, for example strapi I think does an AND and if there are 2 filters with the same field it uses OR for those.

**Describe the solution you'd like**
It would be great if it was possible to include filters in a more complex arrangement that allows for OR constructions being passed to providers while searching, for example:
```typescript
filter = [
    {
      operator: ""eq"",
      field: ""age"",
      value: 20
    },
    {
      operator: ""or"",
      value: [
        {
          field: ""title"",
          operator: ""eq"",
          value: ""Test"",
        },
        {
          field: ""description"",
          operator: ""eq"",
          value: ""Test""
        }
      ]
   }
]
```

Here the query would look like `""age"" == 20 AND (""title"" == ""Test"" OR ""description"" == ""Test"")`

This could be adopted gradually by data providers that support it (for example this would be possible in the Airtable Provider) and ignored by providers that don't.

**Additional context**
In the example on https://refine.dev/docs/guides-and-concepts/search/table-search/ this is solved with the `q` field but this must be available on the database.
",,
1088142695,1384,[QUESTION] How to programmatically refresh table?,"Hi. I want to ask how to programmatically refresh table?

My use case is like this. I have a table which has drag-and-drop sort. 

![image](https://user-images.githubusercontent.com/476869/147316164-72cc0e2d-cee7-4e37-a948-204f0933f3a7.png)

Here is the pseudo code used to display the table. Index is like row number with values 1, 2, etc.

```jsx
const { tableProps } = useTable<IForm>({
    initialSorter: [{
      field: 'index',
      order: 'asc',
    }],
});

const onSortEnd = async ({ oldIndex, newIndex }: any) => {
    if (oldIndex !== newIndex) {
       // DONE: call api to update the index
       
       // TODO: how to force table to refresh it's data?
    }
};
```

I already implement the handler in the table with [this reference from ant design table](https://ant.design/components/table/#components-table-demo-drag-sorting-handler), and sent api call to backend to update the index.

What I need to do now is after calling api, I want to make the table refresh it's data from server so I can get the correct sort. Is there any way to make the table reload?

I was expecting on return values of `useTable` has refresh function that I can call such as

```jsx
const { tableProps, refresh } = useTable<IForm>();

const onSortEnd = async ({ oldIndex, newIndex }: any) => {    
    if (oldIndex !== newIndex) {
       // DONE: call api to update the index
       
       // TODO: how to force table to refresh it's data?
       refresh();
    }
};
```",,
1083645294,1373,[FEAT] Draft: Add support to switch filter operator dynamically from useTable,"**Is your feature request related to a problem? Please describe.**
Currently it is only possible to set the filter operator on the initial call to `useTable`. This suggestion would allow switching between full string filter (eq), negation (ne) or partial string match/not match (contains/ncontains).

Operators are set here initially:
https://github.com/pankod/refine/blob/445baad768c51fc0c734ddf179402de2664ef471/packages/core/src/hooks/table/useTable/useTable.ts#L144-L146

The filter value can be changed but not the operator:
https://github.com/pankod/refine/blob/445baad768c51fc0c734ddf179402de2664ef471/packages/core/src/hooks/table/useTable/useTable.ts#L198-L211

**Describe the solution you'd like**
- Allow <FilterDropdown> changing the operator through props
  - Breaking change?
  - Would antd even allow this for filter?

    ```tsx
    <Table.Column 
        dataIndex=""contentName""
        filterDropdown={({ dropdownProps, filterOperatorProps }) => { // Would something like this even work?
            return (
                <Fragment>
                    <Select onChange={filterOperatorProps.onChange}>
                        <Select.Option value=""eq"">Equals</Select.Option>
                        <Select.Option value=""ne"">Not Equal</Select.Option>
                    </Select>
                    <FilterDropdown {...dropdownProps}><Input /></FilterDropdown>
                </Fragment>
            )
        }}
    />
    ``` 

- Export a helper method from `useTable`, something like `changeFilterOperator(forField: string, newOperator: CrudOperators)` which could be hooked up manually
  - More work for the developer to hook it up but not breaking
  - Supports changing the filter outside the dropdown too which is cool
  - The operator change input field/select would most likely already be inside of the `dropdownFilter` render prop of a column so specifying the column name/field again seems redundant
 
    ```tsx
     const { changeFilterOperator, ...tableProps } = useTable({});

     ...

     useEffect(() => {
         changeFilterOperator(""contentName"", ""contains""); // We can change the filter operator outside of the dropdown
         // Maybe even the value itself with a slightly different signature
         // changeFilter(""contentName"", ""contains"", someWeirdValue);
     }, [someWeirdValue])

    <Table.Column 
        dataIndex=""contentName"" // First column specification
        filterDropdown={(props) => {
            return (
                <Fragment>
                    <Select onChange={(newOp) => changeFilterOperator(""contentName"", newOp)}> // ""contentName"" must be specified here again
                        <Select.Option value=""eq"">Equals</Select.Option>
                        <Select.Option value=""ne"">Equals</Select.Option>
                    </Select>
                    <FilterDropdown {...props}><Input /></FilterDropdown>
                </Fragment>
            )
        }}
    />
    ``` 

> Work in Progress

**Describe alternatives you've considered**
- Making the initially passed options to `useTable` dynamic so changing them changes the filters state
  - Unintuitive since it behaves differently than react hooks
  - Would overwrite user input or developer would have to merge in current filter input themselves
  - The name of the option is `initialFilters` not `filters` - it's not intuitive that changing these should result in updates ",,
1078765593,1317,[FEAT] filter support for Airtable,"**Is your feature request related to a problem? Please describe.**
I see that the list query for data providers allows for passing a filter in. It seems the Airtable data provider does not support this yet.

**Describe the solution you'd like**
Airtable does support filtering through the [`filterByFormular`](https://vancelucas.com/blog/airtable-api-filterbyformula/) query parameter (supported by the Airtable JS library too). A library like https://github.com/Qualifyze/airtable-formulator can be used to ensure type safety and an ORM-like interface between them.

**Additional context**
I can create a PR with the changes to the Airtable provider to enable this. It just needs a translation layer to transform the Refine CrudFilters into a string that can be given to `filterByFormula` similar to eg.  the strapi data provider package and co",,
1078753202,1316,[BUG] useTable returns stale result while loading when using pagination,"**Describe the bug**
`useTable` returns the current data as result (with loading set to false) while loading when using the pagination. Once the result comes in, the hook returns the correct data (loading is still set to false). This causes the loading animation to not play while using pagination since loading is always false.

**To Reproduce**
Steps to reproduce the behavior:
1. Go to list element using useTable
2. Click on another page
3. Observe that stale data is delivered by hook (no loading animation is started)
4. Once data arrives, the page updates with the new data

**Expected behavior**
The hook returns loading true when using pagination instead of a stale result such that the loading animation plays.

**Screenshots**
![refine-pagination-bug](https://user-images.githubusercontent.com/6438760/145853100-dada1863-a4ac-4808-acde-91594216daae.gif)


**Desktop (please complete the following information):**
 - Browser: Edge
 - Version: 2.0.7
 - dataProvider: fake with a custom delay

<details>
<summary><code>dataProvider</code></summary>
<pre>
const dataProvider: DataProvider = {
    async getList(props) {
      console.log(""Started request - will wait for a few seconds"");
      await new Promise((resolve) => setTimeout(resolve, 5000));
      console.log(""Request 'finished'"");
      return {
        total: 100,
        data: new Array(10).fill(undefined).map((_, index) => ({
          Title: `Content ${
            ((props.pagination?.current ?? 1) - 1) * 10 + index
          }`,
          id: index,
        })),
      } as GetListResponse<any>;
    }
}
</pre>
</details>

<details>
<summary><code>list.tsx</code></summary>
<pre>
export function ContentList() {
  const { tableProps } = useTable<Content>();
  useEffect(() => {
    console.log(""List props updated"", tableProps);
  }, [tableProps]);
    return (
    &lt;List&gt;
      &lt;Table {...tableProps} rowKey=&quot;id&quot; tableLayout=&quot;auto&quot;&gt;
        &lt;Table.Column
          render={(content: Content) =&gt; &lt;ContentThumbnail content={content} /&gt;}
          className={`${tailwind(&quot;w-24&quot;)}`}
        /&gt;
        &lt;Table.Column
          dataIndex=&quot;Title&quot;
          title=&quot;Title&quot;
          render={(content: Content) =&gt; &lt;TextField value={content} /&gt;}
        /&gt;
        &lt;Table.Column&lt;Content&gt;
          title=&quot;Actions&quot;
          className={`${tailwind(&quot;w-24&quot;)}`}
          dataIndex=&quot;actions&quot;
          render={(_text, record): React.ReactNode =&gt; {
            return (
              &lt;Space&gt;
                &lt;EditButton size=&quot;small&quot; recordItemId={record.id} /&gt;
              &lt;/Space&gt;
            );
          }}
        /&gt;
      &lt;/Table&gt;
    &lt;/List&gt;
  );
}
</pre>
</details>",,
1078037214,1312,axios headers type error,"https://github.com/pankod/refine/blob/d58495007d71034ba05678c44246257641eadb7e/examples/dataProvider/strapi/src/App.tsx#L28

I'm using TypeScript and this line got an error. 

```
Type '{ Authorization: string; }' is not assignable to type 'HeadersDefaults'.
  Object literal may only specify known properties, and 'Authorization' does not exist in type 'HeadersDefaults'.ts(2322)
```

It should be 

```ts
            axiosInstance.defaults.headers.common = {
```

Also applies to the the next occurrence of `defaults.headers`

https://github.com/pankod/refine/blob/d58495007d71034ba05678c44246257641eadb7e/examples/dataProvider/strapi/src/App.tsx#L44

Reference: https://github.com/axios/axios#custom-instance-defaults",,
1059497179,1260,[BUG] Badly-constructed GET request fired at an useForm / useModalForm with no need (and gets 404/500),"**Describe the bug**
When using `useForm` or `useModalForm` on resource A in the **Show** context of resource B - a GET request is being performed to resource A with the ID of shown resource B.
**To Reproduce**
Steps to reproduce the behavior:
1. have two resources `Person` and `Car`
2. Create a `ShowPerson` page with `useModalForm` to create a `Car` for that `Person`:  (note that all usage of the hook results is commented out, and this still happens)
```tsx
export const PersonShow = () => {
  const { queryResult } = useShow();
  const { data, isLoading } = queryResult;
  const record: any = data?.data;
  const { list } = useNavigation();

  const { modalProps, formProps, show } = useModalForm({
    action: 'create',
    resource: 'cars',
    defaultFormValues: { person_id: record?.id },
  });

  return (
    <>
      <Show isLoading={isLoading}>
        <Title level={5}>Person Name</Title>
        <Text>{record?.person.name}</Text>

        <Title level={5}>ID</Title>
        <Text>
          <Tag>{record?.id}</Tag>
        </Text>

        <Title level={5}>Actions</Title>
        <ButtonToolbar>
          <DeleteButton
            onSuccess={() => {
              list('persons');
            }}
          />
          {/* <Button onClick={() => show()}>Create Car</Button> */}
        </ButtonToolbar>
      </Show>
      {/* <Modal {...modalProps}>
        <Form {...formProps} layout=""vertical"">
          <Form.Item label=""Person ID"" name=""person_id"">
            <Input disabled/>
          </Form.Item>
          <Form.Item label=""Car Model"" name=""model"">
            <Input/>
          </Form.Item>
        </Form>
      </Modal> */}
    </>
  );
};
```

3. go to that *Show* page
4. See 404 popup (and 404 in browser network tab) - the request is done to `/api/cars/the_person_id`

**Expected behavior**
No request should be made for that hook...since this is a create form (with no `useOptions` etc..."")
At most the request should be done to `/api/persons/the_person_id`

**Desktop:**
 - OS: MacOS 11.6 (Big Sur)
 - Browser: chrome
 - Version 95.0.4638.69
 - Used dataProvider `refine-simple-rest`

",,
1040223469,1199,[FEAT] default operators for filterDropdown,"**Is your feature request related to a problem? Please describe.**
I cant set up default operator (for example `conditions`) for filterDropdown
By default it filters by `eq` if it simple value or `in` if array. Operator could be changed by setting up `initialFilter` or `permanentFilter`, in this case filter would be use operator from initial condition. 

**Describe the solution you'd like**
I want to be available to config operators for filterDropdown without requires to set initialFilter

**Describe alternatives you've considered**
Currently I can do it by rewriting `useTable` hook and add  extra code after mapping tableFilter after line
https://github.com/pankod/refine/blob/c2698dc06ad52a50743d26696e4175c8a45e5d3e/packages/core/src/hooks/table/useTable/useTable.ts#L193

```javascript
// Map Antd:Filter -> refine:CrudFilter
    let crudFilters = mapAntdFilterToCrudFilter(tableFilters, filters);

    if (filterConfig) {  //-------> HERE 
      crudFilters = wrapFilterConfig<TData>(crudFilters, filterConfig);
    }

    setFilters((prevFilters) =>
      unionFilters(permanentFilter, crudFilters, prevFilters),
    );

```
and add config on initial `useTable` hook

```typescript
const { tableProps, sorter, filters } = useTable<IPost>({
    filterConfig: {
      title: {
        operator: 'contains',
      },
    },
  });
```


here I change operators on which I would want


Maybe there is better way to change filter operator for filterDropdown and I missed it
",,
1021388120,1142,[BUG] TypeError: Cannot redefine property: __esModule when running jest,"**Describe the bug**
When running jest refine is throwing the following error:
```
    TypeError: Cannot redefine property: __esModule
        at Function.defineProperty (<anonymous>)

      at node_modules/@pankod/refine/dist/refine.cjs.development.js:7172:31
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (node_modules/@pankod/refine/dist/refine.cjs.development.js:7171:25)
      at Object.<anonymous> (node_modules/@pankod/refine/dist/index.js:7:20)
```

Looking at the stack trace it brings us to the following code in `dist/refine.cjs.development.js` but if we make the following change the error goes away.
```diff
Object.keys(reactQuery).forEach(function (k) {
-  if (k !== 'default') Object.defineProperty(exports, k, {
+  if (k !== 'default' && k !== '__esModule') Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () {
      return reactQuery[k];
    }
  });
});
```
It may be a problem with the way refine re-exports react query.

**To Reproduce**
Steps to reproduce the behavior:
1. Initialize the default boilerplate
2. Install modules:
   - Jest: `27.2.5`
   - TypeScript: `4.2.4`
   - Refine: `1.0.76`
   - React testing library: `11.2.6`
3. Run the jest tests on the source App component

**Expected behavior**
The unit tests should run without that error being thrown

**Screenshots**
![Screen Shot 2021-10-08 at 2 05 09 PM](https://user-images.githubusercontent.com/25378294/136612459-557397d6-ee3b-4fc0-8b00-e82913d0733d.png)

**Desktop (please complete the following information):**
 - OS: MacOS
 - Browser N/A
 - Version: Refine - `1.0.76`
 - Used dataProvider N/A
",,
1021373745,1140,[FEAT] Modify strapi-graphql dataProvider to remove reliance on the Strapi REST interface and return both count and totalCount.,"**Is your feature request related to a problem? Please describe.**
No

**Describe the solution you'd like**
I would like to see the strapi-graphql dataProvider modified such that it removes reliance upon the Strapi REST endpoint for a collection-type when obtaining count information. In addition, it would be nice to have both the count of results for the current operation, in addition to the total count of entities in the collection.

**Describe alternatives you've considered**
Making use of another operation to obtain the aggregate count and totalCount from the Connection associated with the collection-type would achieve the above desired results. 

If we modify the `DataProvider.getList()` function in `packages/strapi-graphql/src/index.ts` , (refine-strapi-graphql@0.1.3) replacing the existing function :
```typescript
        getList: async ({ resource, pagination, sort, filters, metaData }) => {
            const current = pagination?.current || 1;
            const pageSize = pagination?.pageSize || 10;

            const sortBy = genereteSort(sort);
            const filterBy = generateFilter(filters);

            const camelResource = camelCase(resource);

            const operation = metaData?.operation ?? camelResource;

            const { query, variables } = gql.query({
                operation,
                variables: {
                    ...metaData?.variables,
                    sort: sortBy,
                    where: { value: filterBy, type: ""JSON"" },
                    start: (current - 1) * pageSize,
                    limit: pageSize,
                },
                fields: metaData?.fields,
            });

            const domain = new URL(client[""url""]);
            const restApiUrl = domain.origin;

            const response = await Promise.all([
                client.request(query, variables),
                fetch(
                    `${restApiUrl}/${resource}/count?${stringify(filterBy)}`,
                ).then((res) => res.json()),
            ]);

            return {
                data: response[0][operation],
                total: response[1],
            };
        }
```
with:

```typescript
        getList: async ({ resource, pagination, sort, filters, metaData }) => {
            const current = pagination?.current || 1;
            const pageSize = pagination?.pageSize || 10;

            const sortBy = genereteSort(sort);
            const filterBy = generateFilter(filters);

            const camelResource = camelCase(resource);

            const operation = metaData?.operation ?? camelResource;

            const operationConnection = operation+""Connection"";

            const { query, variables } = gql.query([
              {
                operation:operationConnection,
                variables: {
                    ...metaData?.variables,
                    sort: sortBy,
                    where: { value: filterBy, type: ""JSON"" },
                    start: (current - 1) * pageSize,
                    limit: pageSize,
                },
                fields: [{aggregate:[""count"", ""totalCount""]}],
              },
              {
                operation,
                variables: {
                    ...metaData?.variables,
                    sort: sortBy,
                    where: { value: filterBy, type: ""JSON"" },
                    start: (current - 1) * pageSize,
                    limit: pageSize,
                },
                fields: metaData?.fields,
            }]);

            const response = await Promise.all([
                client.request(query, variables),
            ]);

            return {
                data: response[0][operation],
                count: response[0][operationConnection].aggregate.count,
                total: response[0][operationConnection].aggregate.totalCount,
            };
        }
```
we will achieve the requested results: 
- removing the reliance on the REST interface
- reducing two network requests to one
- returning not only the total count of objects, but the count for the current operation as well

**Additional context**
Add any other context or screenshots about the feature request here.
As mentioned above, the above function represents modifications against the recently published refine-strapi-graphql@0.1.3.

I'd be happy to make the change and submit a PR, but I've never contributed to an open source project and I'm not that familiar with GitHub, so I'm not certain how to proceed. (fork, branch, commit, push, PR? - I just don't know, but I'll give it a shot.",,
1013108901,1126,[FEAT] Add redirectPath support for checkAuth method,"Add redirectPath support for checkAuth method.

example usage;
````
  checkAuth: () => {
        localStorage.getItem(""auth"") ? Promise.resolve() : Promise.reject({ redirectPath: ""/custom-login-page"" });
    },
````",,
1012498617,1124,Supabase keys exposed,"I was taking a look at the library and I ended up finding this reference to the supabase key, should this be [here](https://github.com/pankod/refine/blob/ab29a28d81eb453e68a7cab097e49639818ad549/examples/dataProvider/supabase/src/utility/supabaseClient.ts) ?",,
1010895978,1122,[BUG] Vite unable to resolve package - incorrect module exports,"**Describe the bug**
Vite is unable to resolve the package.

**To Reproduce**
Steps to reproduce the behavior:
1. Install @pankod/refine and vite
2. Import any component anywhere
3. Run `vite`
4. Sample error:
```node_modules/vite/dist/node/chunks/dep-36bf480c.js:43807:10: error: [plugin: vite:dep-scan] Failed to resolve entry for package ""@pankod/refine"". The package may have incorrect main/module/exports specified in its package.json: Failed to resolve entry for package ""@pankod/refine"". The package may have incorrect main/module/exports specified in its package.json```

**Expected behavior**
`vite` should serve the site

**Desktop (please complete the following information):**
 - MacOS Catalina
 - Safari
 - Refine v1.0.78
 - No dataProvider
",,
907957855,508,"list, edit, create, show, useMenu title standartlaştırma","// humanizeString(""waiting-invoices"") -> Waiting Invoices
// plurize.plural(""waiting-invoices"") -> Waiting Invoices
// plurize.singular(""waiting-invoices"") -> Waiting Invoice

definition -> userFriendlyResourceName.ts (resource: string, type: ""singular"" | ""plural"") - >
// humanizeString(""waiting-invoices"") -> Waiting Invoices

type === plural
// plurize.plural(""waiting-invoices"") -> Waiting Invoices
type === singular
// plurize.singular(""waiting-invoices"") -> Waiting Invoice


useMenu içerisinde -> userFriendlyResourceName(resourceName, ""plural"")
button/list içerisinde -> userFriendlyResourceName(resourceName, ""plural"")
list içerisinde -> userFriendlyResourceName(resourceName, ""plural"")
edit, create, show içerisinde -> userFriendlyResourceName(resourceName, ""singular"")",,
907160183,499,Fake rest içersinde category id bir obje içerisinde gelmesin direk categoryId şeklinde gelsin,"-Interface'ler düzenlenicek.
-Dökümanlar düzenlenicek.
-Superplate templatelerinde düzenlemeler yapılcak.

- **Docs**
`We wrap <Table> with <List> component from refine, which adds extra functionalities like a create button and title to the table view.`

Bu `tip` kaldırılsın.",,
897794050,470,custom data hook,"    custom: <TData extends BaseRecord = BaseRecord>(url: string, method: ""post"" | ""get"", params: {filters?: Identifier[], sorter?: sorter, payload?: {}}) => Promise<CustomResponse<TData>>;
",,
876523264,426,interface import refactor,,,
874277010,409,admin component interface consistency,,,
859708379,366,mini examples projects,"- [x] useModalForm - salih
- [x] useStepsForm - create/edit - umut
- [x] useDrawerForm - salih
- [x] useBase64Upload - umut
- [x] login - auth provider - salih
- [x] authorization with roles - salih
- [x] useSelect - salih
- [x] useRadio - salih
- [x] useCheckboxGroup - salih
- [x] useTable - umut
- [x] useEditableTable - umut
- [x] useForm - @necatiozmen , @mhrrmk 
- [x] multipart upload @yildirayunlu 
- [x] auth0 login @yildirayunlu 
- [x] top menu layout @umucorn  - https://ant.design/components/menu/#components-menu-demo-horizontal
- [x] custom menu @umucorn - mevcutun aynısı sadece dışarıdan vericez
- [x] custom footer @umucorn 
- [x] OffLayoutArea @umucorn  - ```<BackTop />```
- [x] custom login @salihozdemir 
- [x] custom pages @salihozdemir 
- [x] data hooks @necatiozmen , @mhrrmk 
- [x] translate (next-i18n) @salihozdemir 
- [x] advanced useTable - @salihozdemir 
- [x] custom validation - waiting useCustom hook @yildirayunlu 
- [x] custom theme less @umucorn - https://github.com/pankod/superplate-refine-core-plugins/tree/master/plugins/less
- [x] import - @umucorn 
- [x] export - @umucorn 
- [x] otp login @salihozdemir 
- [x] google login @salihozdemir 
- [x] javascript - base example'ın javascript versiyonu @salihozdemir 
- [x] profile page
- [x] integration tests @mhrrmk @necatiozmen  - https://www.cypress.io/
- [x] unit tests
- [x] mocking
- [x] responsive/mobile
- [x] useDrawer and useStepsForm mix
",,
858523931,355,typescript any types,,,
854477072,332,Documentation steps,"- Getting Started
> - Overview (https://react-query.tanstack.com/overview) - @mhrrmk @necatiozmen
> - Installation (https://react-query.tanstack.com/installation) - @mhrrmk @necatiozmen - with superplate and manual
> - Quick Start (https://react-query.tanstack.com/quick-start) - @mhrrmk @necatiozmen - with superplate and manual
> - Core Concept (https://redux.js.org/introduction/core-concepts) - @mhrrmk @necatiozmen - with superplate and manual
> - TypeScript (https://react-query.tanstack.com/typescript) - @mhrrmk @necatiozmen - with superplate and manual
> - Comparison (https://react-query.tanstack.com/comparison) - @mhrrmk @necatiozmen @yildirayunlu  - with superplate and manual

- Tutorial

- Guides & Concepts
> - Important Defaults (https://react-query.tanstack.com/guides/important-defaults) -- ????
> - Configure Admin  (https://docusaurus.io/docs/creating-pages) @necatiozmen @mhrrmk 
> - Providers
> - > - Auth Provider @necatiozmen @mhrrmk 
> - > - Data Provider @necatiozmen @mhrrmk 
> - i18n
> - Mutation Mode - @necatiozmen @mhrrmk 
> - Custom Layout - @necatiozmen @mhrrmk 
> - Creating Resource (https://docusaurus.io/docs/creating-pages) 
> - Basic Views @salihozdemir @biskuvit 
> - > - List Page
> - > - Create Page
> - > - Edit Page
> - > - Show Page
> - Hooks
> - > - useTable
> - > - useEditableTable
> - > - useForm (multipart/base64 upload detayına girmek lazım)
> - > - useModalForm
> - > - useStepsForm
> - > - useCloneForm&useCreateForm&useEditForm -- ????
> - > - data hooks (useCreate, useOne.........)
> - > - > - query hooks
> - > - > - mutation hooks
> - > - > - additional hooks -- ???? ismine emin değilim. @mhrrmk hoca yardım.
> - > - admin hooks @biskuvit @salihozdemir 
> - > - auth hooks @necatiozmen @mhrrmk 
> - > - useMenu @umucorn 
> - > - navigation @biskuvit 
> - > - resource hooks - @umucorn 
> - > - translate hooks - @salihozdemir 
> - > - useListResourceQueries hook -- ????? @omeraplak 
> - Components
> - > - Buttons - @umucorn 
> - > - Fields - @biskuvit @salihozdemir 
> - > - > - custom fields - @biskuvit @salihozdemir  - custom field mantığını anlatalım, örnek olarak markdown field ekleyelim
> - > - Inputs - @umucorn 
> - > - > - antd inputs
> - > - > - custom inputs - @umucorn - custom input mantığını anlatalım, örnek olarak markdown input ekleyelim

- Examples
- > - Modal Example
- > - Step Form Example
- > - Mutation Mode Example
- > - ......
- API References
- Interface References - Crud Filters, Sort etc @yildirayunlu 
- Advenced Tutorial
- FAQ
- Unit Testing
- Theme",,
854245290,329,import button useCreateMany support,,,
841737821,275,resource için custom path belirlediğimde export button yanlış resourcename'e gidiyor,"````
        <Resource
                name=""posts""
                list={PostList}
                create={PostCreate}
                edit={PostEdit}
                show={PostShow}
                options={{ label: ""Custom Post"", route: ""custom-post"" }}

                canDelete
            />

````

bu şekilde custom-post'a yönlendirdim.

export button içinde resource name alınırken,
````
 let { resource } = useParams<ResourceRouterParams>();

    if (resourceName) {
        resource = resourceName;
    }

````
bu şekilde alınmış. Aslında olması gereken resource kullanım şekli, edit form'da olduğu gibi
````
 let { resource: routeResourceName } = useParams<ResourceRouterParams>();

    const resource = useResourceWithRoute(routeResourceName);

aşağıda kullanırkende,
resource.name dememiz lazım

````",,
816170078,157,Theme desteği,"example app'ine less-loader eklemeliyiz.

eject etmeden böyle bir yöntem bulduk, daha iyisi varsa olabilir.
https://dev.to/joefstack/how-to-setup-less-with-react-without-ejecting-1nej
```
@import ""~/readmin/antd/dist/antd.less"";


// Base Scaffolding Variables
@font-family: ""Greycliff CF"", BlinkMacSystemFont, ""Segoe UI"", Roboto,
    ""Helvetica Neue"", Arial, ""Noto Sans"", sans-serif, ""Apple Color Emoji"",
    ""Segoe UI Emoji"", ""Segoe UI Symbol"", ""Noto Color Emoji"";

// Menu
@menu-bg: transparent;
@menu-item-color: #fff;
@menu-highlight-color: #fff;
@menu-item-active-bg: #18619c;
@menu-popup-bg: #0366eb;

// Layout
@layout-header-background: #fff;
@layout-header-padding: 0 25px;

// General
@font-variant-base: unset;
@font-feature-settings-base: unset;

```

https://ant.design/docs/react/customize-theme
https://ant.design/docs/react/use-with-create-react-app#Advanced-Guides",,
814198625,135,Data Display - Export,,,
814197734,134,Other - BackTop  - Anchor  -Export,,,
814197384,133,Feedback export,,,
814196147,131,Data Entry export,,,
805256916,59,CSV Import,"ImportButton -> Prop'ları
{
   resourceName?: string;
   mapData?(value: BaseRecord, index: number, array: BaseRecord[]): BaseRecord;
   csvProps?: CSVReaderProps; ????
}

mapData -> Gender, 1 : 2 => gender === 1 ? ""female"" : ""male""",,
